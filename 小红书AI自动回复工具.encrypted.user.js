// ==UserScript==
// @name         小红书AI自动回复工具
// @namespace    http://tampermonkey.net/
// @version      1.1.0
// @description  基于FastGPT API的小红书私信自动回复工具
// @author       迪迦
// @match        https://pro.xiaohongshu.com/im/multiCustomerService*
// @grant        GM_setValue
// @grant        GM_getValue
// @grant        GM_xmlhttpRequest
// @grant        GM_notification
// @grant        GM_download
// @grant        unsafeWindow
// @run-at       document-idle
// @updateURL
// @downloadURL
// ==/UserScript==

// 代码已Base64编码保护（UTF-8安全版本）
// Code protected with Base64 encoding (UTF-8 Safe version)


// UTF-8安全的Base64解密器
var _decode = function(encodedData) {
    try {
        // 使用现代浏览器的TextDecoder确保UTF-8正确解码
        if (typeof TextDecoder !== 'undefined') {
            // 现代方法：使用TextDecoder
            var binaryString = atob(encodedData);
            var bytes = new Uint8Array(binaryString.length);
            for (var i = 0; i < binaryString.length; i++) {
                bytes[i] = binaryString.charCodeAt(i);
            }
            var decoder = new TextDecoder('utf-8');
            return decoder.decode(bytes);
        } else {
            // 兼容方法：手动UTF-8解码
            var binaryString = atob(encodedData);
            var result = '';
            var i = 0;
            while (i < binaryString.length) {
                var byte1 = binaryString.charCodeAt(i++);
                if (byte1 < 0x80) {
                    // ASCII字符
                    result += String.fromCharCode(byte1);
                } else if ((byte1 & 0xE0) === 0xC0) {
                    // 2字节UTF-8字符
                    var byte2 = binaryString.charCodeAt(i++);
                    result += String.fromCharCode(((byte1 & 0x1F) << 6) | (byte2 & 0x3F));
                } else if ((byte1 & 0xF0) === 0xE0) {
                    // 3字节UTF-8字符
                    var byte2 = binaryString.charCodeAt(i++);
                    var byte3 = binaryString.charCodeAt(i++);
                    result += String.fromCharCode(((byte1 & 0x0F) << 12) | ((byte2 & 0x3F) << 6) | (byte3 & 0x3F));
                } else {
                    // 跳过不支持的字符
                    result += '?';
                }
            }
            return result;
        }
    } catch(e) {
        console.error('UTF-8解码失败:', e);
        return '';
    }
};

(function() {
    'use strict';
    
    // Base64编码数据（UTF-8安全）
    var encodedChunks = [
        "DQoNCihmdW5jdGlvbigpIHsNCiAgICAndXNlIHN0cmljdCc7DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOWFqOWxgOmFjee9ruWSjOW4uOmHjw0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgQ09ORklHID0gew0KICAgICAgICAvLyDlupTnlKjkv6Hmga8NCiAgICAgICAgQVBQX05BTUU6ICflsI/nuqLkuaZBSeiHquWKqOWbnuWkjeW3peWFtycsDQogICAgICAgIFZFUlNJT046ICcxLjEuMCcsDQoNCiAgICAgICAgLy8g5pyN5Yqh56uv6YWN572u77yI5byA5Y+R6ICF5o6n5Yi277yJDQogICAgICAgIFNFUlZFUjogew0KICAgICAgICAgICAgYmFzZVVybDogJ2h0dHBzOi8veGhzLnBlaS5lZScsDQogICAgICAgICAgICBjaGVja0ludGVydmFsOiAzMDAwMCwgLy8gMzDnp5Lmo4Dmn6XkuIDmrKENCiAgICAgICAgICAgIGhlYXJ0YmVhdEludGVydmFsOiA2MDAwMCwgLy8gNjDnp5Llv4Pot7PkuIDmrKENCiAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsIC8vIOacjeWKoeerr+WKn+iDveW8gOWFsw0KICAgICAgICAgICAgbWF4UmV0cmllczogMywNCiAgICAgICAgICAgIHRpbWVvdXQ6IDEwMDAwIC8vIDEw56eS6LaF5pe2DQogICAgICAgIH0sDQoNCiAgICAgICAgLy8g6buY6K6k6YWN572uDQogICAgICAgIERFRkFVTFRfU0VUVElOR1M6IHsNCiAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlLA0KICAgICAgICAgICAgYXBpS2V5OiAnJywNCiAgICAgICAgICAgIGFwaVVybDogJ2h0dHBzOi8vYXBpLmZhc3RncHQuaW4vYXBpL3YxL2NoYXQvY29tcGxldGlvbnMnLA0KICAgICAgICAgICAgcmVwbHlEZWxheTogMzAwMCwNCiAgICAgICAgICAgIG1heFJldHJpZXM6IDMsDQogICAgICAgICAgICBkZWJ1Z01vZGU6IGZhbHNlLA0KICAgICAgICAgICAgYXV0b1JlcGx5UHJvbXB0OiAn5L2g5piv5LiA5Liq5Y+L5aW955qE5a6i5pyN5Yqp5omL77yM6K+35qC55o2u55So5oi355qE5raI5oGv57uZ5Ye65ZCI6YCC55qE5Zue5aSN44CC5Zue5aSN6KaB566A5rSB44CB56S86LKM44CB5pyJ5biu5Yqp44CCJywNCg0KICAgICAgICAgICAgLy8g5pm66IO96I635a6i6YWN572uDQogICAgICAgICAgICBhY3F1aXNpdGlvbkVuYWJsZWQ6IGZhbHNlLA0KICAgICAgICAgICAgYWNxdWlzaXRpb25UcmlnZ2VyUm91bmQ6IDIsDQogICAgICAgICAgICBhY3F1aXNpdGlvbkZhbGxiYWNrUm91bmQ6IDMsDQogICAgICAgICAgICBhY3F1aXNpdGlvbktleXdvcmRzOiAn5Lu35qC8LOS6huinoyzotK3kubAs5ZKo6K+iLOivpue7hizmgI7kuYjmoLcs5aSa5bCR6ZKxLOiBlOezuyzlvq7kv6EnLA0KICAgICAgICAgICAgYWNxdWlzaXRpb25Ub29sVHlwZTogJ+eVmei1hOWNoScsDQogICAgICAgICAgICBhY3F1aXNpdGlvblRvb2xOYW1lOiAnJywNCiAgICAgICAgICAgIGFjcXVpc2l0aW9uRGVsYXk6IDIwMDAsDQogICAgICAgICAgICBhY3F1aXNpdGlvbkFsbG93UmVwZWF0OiBmYWxz",
        "ZSwNCg0KICAgICAgICAgICAgLy8g6buR5ZCN5Y2V6YWN572uDQogICAgICAgICAgICBibGFja2xpc3Q6IFtdLCAgICAgICAgICAgICAgICAvLyDpu5HlkI3ljZXliJfooagNCiAgICAgICAgICAgIGJsYWNrbGlzdEVuYWJsZWQ6IHRydWUsICAgICAgIC8vIOm7keWQjeWNleWKn+iDveW8gOWFsw0KICAgICAgICAgICAgYXV0b0RldGVjdEJsb2NrZWQ6IHRydWUsICAgICAgLy8g6Ieq5Yqo5qOA5rWL6KKr5ouJ6buR5Yqf6IO9DQoNCiAgICAgICAgICAgIC8vIOS8muivneiusOW/humFjee9rg0KICAgICAgICAgICAgc2Vzc2lvbk1lbW9yeUVuYWJsZWQ6IHRydWUsICAgLy8g5Lya6K+d6K6w5b+G5Yqf6IO95byA5YWzDQogICAgICAgICAgICBzZXNzaW9uRXhwaXJlRGF5czogNywgICAgICAgICAvLyDkvJror53ov4fmnJ/lpKnmlbANCiAgICAgICAgICAgIG1heFNlc3Npb25zOiAxMDAsICAgICAgICAgICAgIC8vIOacgOWkp+S8muivneaVsOmHjw0KDQogICAgICAgICAgICAvLyDoh6rliqjov73nsonphY3nva4NCiAgICAgICAgICAgIGZvbGxvd1VwRW5hYmxlZDogZmFsc2UsICAgICAgIC8vIOi/veeyieWKn+iDveW8gOWFsw0KICAgICAgICAgICAgZm9sbG93VXBTY2FuRGF5czogMywgICAgICAgICAvLyDmiavmj4/lh6DlpKnlhoXnmoTnlKjmiLcNCiAgICAgICAgICAgIGZvbGxvd1VwSW50ZXJ2YWw6IDI0LCAgICAgICAgLy8g5Zue6K6/6Ze06ZqU77yI5bCP5pe277yJDQogICAgICAgICAgICBmb2xsb3dVcE1heENvdW50OiAyLCAgICAgICAgIC8vIOacgOWkp+Wbnuiuv+asoeaVsA0KICAgICAgICAgICAgZm9sbG93VXBBdXRvUmVjb3JkOiB0cnVlLCAgICAvLyDoh6rliqjorrDlvZXmlrDnlKjmiLfvvIjml6DpnIDmiYvliqjmiavmj4/vvIkNCiAgICAgICAgICAgIGZvbGxvd1VwQXV0b1JlY29yZERlbGF5OiA1LCAgLy8g6Ieq5Yqo6K6w5b2V5bu26L+f77yI56eS77yJDQogICAgICAgICAgICBmb2xsb3dVcFRlbXBsYXRlOiAn5oKo5aW9e+eUqOaIt+WQjX3vvIzmiJHmmK/mgqjnmoTkuJPlsZ7pob7pl67vvIznnIvliLDmgqjkuYvliY3lr7nmiJHku6znmoTkuqflk4HmnInlhbTotqPjgIJcXG5cXG7miJHmg7Pkuobop6PkuIDkuIvmgqjnjrDlnKjnmoTpnIDmsYLmg4XlhrXvvIzmmK/lkKbov5jpnIDopoHov5vkuIDmraXnmoTlkqjor6LlkozmnI3liqHvvJ9cXG5cXG7lpoLmnpzmlrnkvr/nmoTor53vvIzlj6/ku6Xmt7vliqDmiJHnmoTlvq7kv6Hov5vooYzor6bnu4bmsp/pgJrvvIzmiJHkvJrkuLrmgqjmj5Dkvpvmm7TkuJPkuJrnmoTlu7rorq7lkozkvJjmg6Dkv6Hmga/jgILmnJ/lvoXmgqjnmoTlm57lpI3vvIHwn5iKJywNCiAgICAgICAgICAgIGZvbGxvd1VwVGVtcGxhdGVzOiBbDQogICAgICAgICAgICAgICAgJ+aCqOWlvXvnlKjmiLflkI1977yM5oiR5piv5oKo55qE5LiT5bGe6aG+6Zeu77yM55yL5Yiw5oKo5LmL5YmN5a+55oiR5Lus55qE5Lqn5ZOB5pyJ5YW06Laj44CCXFxuXFxu5oiR5oOz5LqG6Kej5LiA5LiL5oKo546w5Zyo",
        "55qE6ZyA5rGC5oOF5Ya177yM5piv5ZCm6L+Y6ZyA6KaB6L+b5LiA5q2l55qE5ZKo6K+i5ZKM5pyN5Yqh77yfXFxuXFxu5aaC5p6c5pa55L6/55qE6K+d77yM5Y+v5Lul5re75Yqg5oiR55qE5b6u5L+h6L+b6KGM6K+m57uG5rKf6YCa77yM5oiR5Lya5Li65oKo5o+Q5L6b5pu05LiT5Lia55qE5bu66K6u5ZKM5LyY5oOg5L+h5oGv44CC5pyf5b6F5oKo55qE5Zue5aSN77yB8J+YiicsDQogICAgICAgICAgICAgICAgJ+aCqOWlvXvnlKjmiLflkI1977yB5oSf6LCi5oKo5LmL5YmN5a+55oiR5Lus5Lqn5ZOB55qE5YWz5rOo44CCXFxuXFxu5oiR5rOo5oSP5Yiw5oKo5Y+v6IO96L+Y5Zyo6ICD6JmR5Lit77yM5oOz5YaN5qyh5Li65oKo5LuL57uN5LiA5LiL5oiR5Lus55qE5LyY5Yq/5ZKM5pyA5paw5LyY5oOg44CCXFxuXFxu5aaC5p6c5oKo5pyJ5Lu75L2V55aR6Zeu5oiW6ZyA6KaB5pu06K+m57uG55qE6LWE5paZ77yM6ZqP5pe25Y+v5Lul6IGU57O75oiR77yM5oiR5Lya56ys5LiA5pe26Ze05Li65oKo6Kej562U44CC5pyf5b6F5LiO5oKo6L+b5LiA5q2l5Lqk5rWB77yBJywNCiAgICAgICAgICAgICAgICAn5Lqy54ix55qEe+eUqOaIt+WQjX3vvIzluIzmnJvmgqjkuIDliIfpg73lpb3vvIFcXG5cXG7miJHmg7Pot5/ov5vkuIDkuIvmgqjkuYvliY3lkqjor6LnmoTkuqflk4HvvIznnIvnnIvmmK/lkKbov5jmnInku4DkuYjlj6/ku6XluK7liqnmgqjnmoTlnLDmlrnjgIJcXG5cXG7miJHku6zmnIDov5Hmjqjlh7rkuobkuIDkupvmlrDnmoTmnI3liqHlkozkvJjmg6DmlL/nrZbvvIznm7jkv6HkvJrlr7nmgqjmnInmiYDluK7liqnjgILlpoLmnpzmlrnkvr/nmoTor53vvIzmiJHku6zlj6/ku6XlronmjpLkuIDkuKrnroDnn63nmoTpgJror53or6bnu4bmsp/pgJrjgIInDQogICAgICAgICAgICBdLA0KICAgICAgICAgICAgZm9sbG93VXBUZW1wbGF0ZU1vZGU6ICdzZXF1ZW5jZScsIC8vIHNlcXVlbmNlOiDmjInmrKHluo8sIHJhbmRvbTog6ZqP5py6LCBhaTogQUnnlJ/miJANCiAgICAgICAgICAgIGZvbGxvd1VwRGVlcExlYWRzQ2hlY2s6IGZhbHNlLCAgICAvLyDmmK/lkKblkK/nlKjmt7HluqbnlZnlrqLotYTmo4Dmn6XvvIjovoPmhaLkvYbmm7Tlh4bnoa7vvIkNCiAgICAgICAgICAgIGZvbGxvd1VwQXBpTGVhZHNDaGVjazogdHJ1ZSwgICAgICAvLyDmmK/lkKblkK/nlKhBUEnnlZnlrqLotYTmo4Dmn6XvvIjlv6vpgJ/kuJTlh4bnoa7vvIkNCiAgICAgICAgICAgIGZvbGxvd1VwUmVhbHRpbWVMZWFkc0NoZWNrOiB0cnVlLCAvLyDmmK/lkKblkK/nlKjlvLrliLblrp7ml7bnlZnlrqLotYTmo4DmtYvvvIjkuI3kvp3otZbnvJPlrZjvvIkNCiAgICAgICAgICAgIGZvbGxvd1VwTGVhZHNDYWNoZVRpbWU6IDMwLCAgICAgICAvLyDnlZnlrqLotYTnirbmgIHnvJPlrZjml7bpl7TvvIjnp5LvvIww6KGo56S656aB55So57yT5a2Y77yJDQogICAgICAgICAgICBmb2xsb3dVcFNjaGVkdWxlSG91cnM6IFs5LCAxNCwgMThdLCAvLyDlm57orr/ml7bpl7Tn",
        "grnvvIgyNOWwj+aXtuWItu+8iQ0KICAgICAgICAgICAgZm9sbG93VXBSYW5kb21EZWxheTogdHJ1ZSwgICAvLyDlkK/nlKjpmo/mnLrlu7bov58NCiAgICAgICAgICAgIGZvbGxvd1VwTWluRGVsYXk6IDMwLCAgICAgICAgLy8g5pyA5bCP5bu26L+f77yI56eS77yJDQogICAgICAgICAgICBmb2xsb3dVcE1heERlbGF5OiAzMDAsICAgICAgIC8vIOacgOWkp+W7tui/n++8iOenku+8iQ0KICAgICAgICAgICAgZm9sbG93VXBEYWlseUxpbWl0OiAxMCwgICAgICAvLyDmr4/ml6Xlm57orr/kuIrpmZANCiAgICAgICAgICAgIGZvbGxvd1VwQmF0Y2hTaXplOiAxMCwgICAgICAgLy8g5Y2V5qyh5om56YeP5aSE55CG5pWw6YePDQogICAgICAgICAgICBmb2xsb3dVcE1hbnVhbEJhdGNoU2l6ZTogMjAsIC8vIOaJi+WKqOaooeW8j+aJuemHj+WkhOeQhuaVsOmHjw0KICAgICAgICAgICAgZm9sbG93VXBNYXhFbXB0eVNjYW5zOiAxMCwgICAvLyDomZrmi5/mu5rliqjmnIDlpKfnqbrmiavmj4/mrKHmlbANCiAgICAgICAgICAgIGZvbGxvd1VwTGVhZHNNb25pdG9yOiB0cnVlLCAgLy8g55uR5o6n55WZ5a6i6LWE54q25oCB5Y+Y5YyWDQogICAgICAgICAgICBmb2xsb3dVcExlYWRzQ2hlY2tJbnRlcnZhbDogMzAsIC8vIOeVmeWuoui1hOajgOafpemXtOmalO+8iOWIhumSn++8iQ0KDQogICAgICAgICAgICAvLyDogZrlhYnov5vnur/phY3nva4NCiAgICAgICAgICAgIHNwb3RsaWdodExlYWRFbmFibGVkOiBmYWxzZSwgIC8vIOiBmuWFiei/m+e6v+iHquWKqOWbnuWkjeW8gOWFsw0KICAgICAgICAgICAgc3BvdGxpZ2h0TGVhZFRlbXBsYXRlOiAn5oKo5aW9e+eUqOaIt+aYteensH3vvIzmhJ/osKLmgqjpgJrov4fjgIx76K++56iL5ZCN56ewfeOAjei/m+WFpeengeS/oe+8geaIkeaYr+S4k+S4mueahOivvueoi+mhvumXru+8jOW+iOmrmOWFtOS4uuaCqOacjeWKoeOAglxuXG7miJHms6jmhI/liLDmgqjlr7nmiJHku6znmoTor77nqIvmhJ/lhbTotqPvvIzmiJHlj6/ku6XkuLrmgqjor6bnu4bku4vnu43or77nqIvlhoXlrrnjgIHlrabkuaDmlrnlvI/lkozkvJjmg6DmlL/nrZbjgILor7fpl67mgqjluIzmnJvkuobop6Plk6rmlrnpnaLnmoTkv6Hmga/lkaLvvJ9cblxu5pyf5b6F5LiO5oKo6L+b5LiA5q2l5Lqk5rWB77yBIPCfmIonLA0KICAgICAgICAgICAgc3BvdGxpZ2h0QWN0aXZlV2VsY29tZUVuYWJsZWQ6IGZhbHNlLCAgLy8g5Li75Yqo6L+b57q/6K+d5pyv5byA5YWzDQogICAgICAgICAgICBzcG90bGlnaHRBY3RpdmVXZWxjb21lQ291cnNlTmFtZTogJ+aIkeS7rOeahOivvueoiycsICAvLyDkuLvliqjov5vnur/or53mnK/pu5jorqTor77nqIvlkI3np7ANCiAgICAgICAgICAgIHNwb3RsaWdodERlZmF1bHRDb3Vyc2VOYW1lOiAn5oiR5Lus55qE6K++56iLJywgIC8vIOiBmuWFiei/m+e6v+m7mOiupOivvueoi+WQjeensO+8iOivhuWIq+Wksei0peaXtuS9v+eUqO+8iQ0KDQogICAgICAgICAgICAvLyDplJnor6/mjqjpgIHphY3nva4NCiAgICAg",
        "ICAgICAgIGVycm9yTm90aWZpY2F0aW9uRW5hYmxlZDogZmFsc2UsICAgICAgLy8g6ZSZ6K+v5o6o6YCB5oC75byA5YWzDQogICAgICAgICAgICBlcnJvck5vdGlmaWNhdGlvbkFwaUtleTogJycsICAgICAgICAgIC8vIHh4dHVpLmNvbSBBUEnlr4bpkqUNCiAgICAgICAgICAgIGVycm9yTm90aWZpY2F0aW9uQ2hhbm5lbHM6ICdXWF9NUCcsICAgLy8g5o6o6YCB5rig6YGT77yI5aSa5Liq55So6YCX5Y+35YiG6ZqU77yJDQogICAgICAgICAgICBlcnJvck5vdGlmaWNhdGlvbkxldmVsczogJ2Vycm9yJywgICAgIC8vIOaOqOmAgemUmeivr+e6p+WIq++8iGVycm9yLHdhcm4saW5mb++8iQ0KICAgICAgICAgICAgZXJyb3JOb3RpZmljYXRpb25LZXl3b3JkczogJycsICAgICAgICAvLyDlhbPplK7or43ov4fmu6TvvIjljIXlkKvvvIzlpJrkuKrnlKjpgJflj7fliIbpmpTvvIkNCiAgICAgICAgICAgIGVycm9yTm90aWZpY2F0aW9uRXhjbHVkZUtleXdvcmRzOiAnJywgLy8g5o6S6Zmk5YWz6ZSu6K+N77yI5aSa5Liq55So6YCX5Y+35YiG6ZqU77yJDQogICAgICAgICAgICBlcnJvck5vdGlmaWNhdGlvblJhdGVMaW1pdDogNSwgICAgICAgIC8vIOaOqOmAgemikeeOh+mZkOWItu+8iOWIhumSn+WGheacgOWkp+aOqOmAgeasoeaVsO+8iQ0KICAgICAgICAgICAgZXJyb3JOb3RpZmljYXRpb25UZW1wbGF0ZTogJ/Cfmqgg5bCP57qi5LmmQUnoh6rliqjlm57lpI3lt6XlhbfplJnor6/miqXoraZcblxu4o+wIOaXtumXtO+8mnt0aW1lc3RhbXB9XG7wn5SNIOmUmeivr+exu+Wei++8mntsZXZlbH1cbvCfk50g6ZSZ6K+v5L+h5oGv77yae21lc3NhZ2V9XG7wn5GkIOeUqOaIt++8mnt1c2VyfVxu8J+UlyDor6bmg4XvvJp7ZGV0YWlsc30nLA0KICAgICAgICAgICAgZXJyb3JOb3RpZmljYXRpb25EZWR1cGxpY2F0aW9uOiB0cnVlLCAvLyDlkK/nlKjplJnor6/ljrvph40NCiAgICAgICAgICAgIGVycm9yTm90aWZpY2F0aW9uRGVkdXBsaWNhdGlvbldpbmRvdzogMTAsIC8vIOWOu+mHjeaXtumXtOeql+WPo++8iOWIhumSn++8iQ0KICAgICAgICAgICAgZXJyb3JOb3RpZmljYXRpb25UZXN0TW9kZTogZmFsc2UsICAgICAvLyDmtYvor5XmqKHlvI/vvIjku4XorrDlvZXml6Xlv5fkuI3lrp7pmYXmjqjpgIHvvIkNCg0KICAgICAgICAgICAgLy8g5YO15bC45pyq6K+75aSE55CG6YWN572uDQogICAgICAgICAgICB6b21iaWVVbnJlYWRFbmFibGVkOiB0cnVlLCAgICAgICAgICAgIC8vIOWDteWwuOacquivu+WkhOeQhuW8gOWFsw0KICAgICAgICAgICAgem9tYmllVW5yZWFkQ29vbGRvd25NaW51dGVzOiA2MCwgICAgICAvLyDlg7XlsLjmnKror7vlhrfljbTml7bpl7TvvIjliIbpkp/vvIkNCiAgICAgICAgICAgIHpvbWJpZVVucmVhZE1heFJldHJpZXM6IDMsICAgICAgICAgICAgLy8g5pyA5aSn6YeN6K+V5qyh5pWwDQogICAgICAgICAgICB6b21iaWVVbnJlYWREZWJ1Z01vZGU6IGZhbHNlLCAgICAgICAgIC8vIOWDteWwuOacquivu+iwg+ivleaooeW8jw0KICAg",
        "ICAgICAgICAgem9tYmllVW5yZWFkQXV0b0NsZWFudXA6IHRydWUsICAgICAgICAvLyDoh6rliqjmuIXnkIbov4fmnJ/orrDlvZUNCiAgICAgICAgICAgIHpvbWJpZVVucmVhZENsZWFudXBEYXlzOiA3ICAgICAgICAgICAgLy8g5riF55CG5aSp5pWwDQogICAgICAgIH0sDQoNCiAgICAgICAgLy8g5raI5oGv57G75Z6L5bi46YePDQogICAgICAgIE1FU1NBR0VfVFlQRVM6IHsNCiAgICAgICAgICAgIFRFWFQ6ICdURVhUJywNCiAgICAgICAgICAgIENBUkQ6ICdDQVJEJywNCiAgICAgICAgICAgIEVNT0pJOiAnRU1PSkknLA0KICAgICAgICAgICAgU1BPVExJR0hUX0xFQUQ6ICdTUE9UTElHSFRfTEVBRCcsDQogICAgICAgICAgICBVTktOT1dOOiAnVU5LTk9XTicNCiAgICAgICAgfSwNCg0KICAgICAgICAvLyDpobXpnaLlhYPntKDpgInmi6nlmaggLSDlt7Lmm7TmlrDku6XpgILphY3mnIDmlrDpobXpnaLnu5PmnoQNCiAgICAgICAgU0VMRUNUT1JTOiB7DQogICAgICAgICAgICAvLyDlt6bkvqfkvJrlkZjliJfooagNCiAgICAgICAgICAgIGNvbnRhY3RMaXN0OiAnLmNoYXQtbGlzdC1ib3ggLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyJywNCiAgICAgICAgICAgIGNvbnRhY3RJdGVtOiAnLnN4LWNvbnRhY3QtaXRlbScsDQogICAgICAgICAgICBhY3RpdmVDb250YWN0OiAnLnN4LWNvbnRhY3QtaXRlbS5hY3RpdmUnLA0KICAgICAgICAgICAgbmV3TWVzc2FnZUJhZGdlOiAnLmQtYmFkZ2UtZG90JywNCiAgICAgICAgICAgIHVzZXJOYW1lOiAnLnN4LWNvbnRhY3QtaXRlbSAubmljay1uYW1lJywgLy8g5pu05paw5Li65pyA5pawRE9N57uT5p6EDQogICAgICAgICAgICBsYXN0TWVzc2FnZTogJy5jb250ZW50JywNCiAgICAgICAgICAgIG1lc3NhZ2VUaW1lOiAnLnRpbWUnLA0KDQogICAgICAgICAgICAvLyDlr7nor53nqpflj6MgLSDmm7TmlrDkuLrmlrDnmoRET03nu5PmnoQNCiAgICAgICAgICAgIGNoYXRXaW5kb3c6ICcjcHJvLW1zZy1ib3gnLA0KICAgICAgICAgICAgY2hhdENvbnRhaW5lcjogJyNwcm8tbXNnLWJveCAudnVlLXJlY3ljbGUtc2Nyb2xsZXInLA0KICAgICAgICAgICAgbWVzc2FnZUxpc3Q6ICcudnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0td3JhcHBlcicsDQogICAgICAgICAgICBtZXNzYWdlSXRlbTogJy5pbS1tc2ctaXRlbScsDQogICAgICAgICAgICBtZXNzYWdlVmlldzogJy52dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3JywNCg0KICAgICAgICAgICAgLy8g5raI5oGv5YaF5a656YCJ5oup5ZmoDQogICAgICAgICAgICB0ZXh0TWVzc2FnZTogJy50ZXh0LW1lc3NhZ2UnLA0KICAgICAgICAgICAgbGVmdE1lc3NhZ2U6ICcubGVmdCAudGV4dC1tZXNzYWdlJywNCiAgICAgICAgICAgIHJpZ2h0TWVzc2FnZTogJy5yaWdodCAudGV4dC1tZXNzYWdlJywNCiAgICAgICAgICAgIGNlbnRlck1lc3NhZ2U6ICcuY2VudGVyIC5oaW50LW1lc3NhZ2UnLA0KDQogICAgICAgICAgICAvLyDovpPlhaXlkozlj5HpgIENCiAgICAgICAg",
        "ICAgIGlucHV0Qm94OiAndGV4dGFyZWEucmVwbHktdGV4dGFyZWEnLA0KICAgICAgICAgICAgc2VuZEJ1dHRvbjogJy5zZW5kX2J0bicsDQoNCiAgICAgICAgICAgIC8vIOWkh+mAiemAieaLqeWZqA0KICAgICAgICAgICAgZmFsbGJhY2tTZWxlY3RvcnM6IHsNCiAgICAgICAgICAgICAgICBjaGF0V2luZG93OiBbDQogICAgICAgICAgICAgICAgICAgICcjcHJvLW1zZy1ib3gnLA0KICAgICAgICAgICAgICAgICAgICAnLmNoYXQtd2luZG93JywNCiAgICAgICAgICAgICAgICAgICAgJy5tZXNzYWdlLWNvbnRhaW5lcicsDQogICAgICAgICAgICAgICAgICAgICcuY2hhdC1jb250YWluZXInDQogICAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICAgICBtZXNzYWdlTGlzdDogWw0KICAgICAgICAgICAgICAgICAgICAnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXdyYXBwZXInLA0KICAgICAgICAgICAgICAgICAgICAnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyJywNCiAgICAgICAgICAgICAgICAgICAgJy5tZXNzYWdlLWxpc3QnLA0KICAgICAgICAgICAgICAgICAgICAnLmNoYXQtY29udGVudCcNCiAgICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgICAgIG1lc3NhZ2VJdGVtOiBbDQogICAgICAgICAgICAgICAgICAgICcuaW0tbXNnLWl0ZW0nLA0KICAgICAgICAgICAgICAgICAgICAnLm1lc3NhZ2UtaXRlbScsDQogICAgICAgICAgICAgICAgICAgICcuY2hhdC1tZXNzYWdlJywNCiAgICAgICAgICAgICAgICAgICAgJy5tc2ctaXRlbScNCiAgICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgICAgIGlucHV0Qm94OiBbDQogICAgICAgICAgICAgICAgICAgICd0ZXh0YXJlYVtwbGFjZWhvbGRlcio9Iui+k+WFpSJdJywNCiAgICAgICAgICAgICAgICAgICAgJ3RleHRhcmVhW3BsYWNlaG9sZGVyKj0i6K+36L6T5YWlIl0nLA0KICAgICAgICAgICAgICAgICAgICAnLmlucHV0LWJveCB0ZXh0YXJlYScsDQogICAgICAgICAgICAgICAgICAgICdbY29udGVudGVkaXRhYmxlPSJ0cnVlIl0nLA0KICAgICAgICAgICAgICAgICAgICAnaW5wdXRbdHlwZT0idGV4dCJdJw0KICAgICAgICAgICAgICAgIF0sDQogICAgICAgICAgICAgICAgc2VuZEJ1dHRvbjogWw0KICAgICAgICAgICAgICAgICAgICAnLnNlbmRfYnRuJywNCiAgICAgICAgICAgICAgICAgICAgJ2J1dHRvbi5zZW5kX2J0bicsDQogICAgICAgICAgICAgICAgICAgICcuZC1idXR0b24uc2VuZF9idG4nLA0KICAgICAgICAgICAgICAgICAgICAnYnV0dG9uW2NsYXNzKj0ic2VuZCJdJywNCiAgICAgICAgICAgICAgICAgICAgJy5zZW5kLWJ1dHRvbicsDQogICAgICAgICAgICAgICAgICAgICdidXR0b25bdHlwZT0ic3VibWl0Il0nDQogICAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgfSwNCg0KICAgICAgICAgICAgLy8g5o6n5Yi26Z2i5p2/DQogICAgICAgICAgICBjb250cm9sUGFuZWw6ICcjeGhzLWFpLWNvbnRyb2wtcGFuZWwnDQogICAgICAgIH0sDQoNCiAgICAgICAg",
        "Ly8g5bu26L+f6YWN572uDQogICAgICAgIERFTEFZUzogew0KICAgICAgICAgICAgY2xpY2tEZWxheTogMTAwMCwNCiAgICAgICAgICAgIHR5cGVEZWxheTogNTAwLA0KICAgICAgICAgICAgc2VuZERlbGF5OiAxMDAwLA0KICAgICAgICAgICAgY2hlY2tJbnRlcnZhbDogMjAwMA0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g5bel5YW35Ye95pWw5bqTDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBVdGlscyA9IHsNCiAgICAgICAgLyoqDQogICAgICAgICAqIOW7tui/n+aJp+ihjA0KICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gbXMg5bu26L+f5q+r56eS5pWwDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlfQ0KICAgICAgICAgKi8NCiAgICAgICAgZGVsYXk6IChtcykgPT4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKSksDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWuieWFqOeahERPTeafpeivog0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3IgQ1NT6YCJ5oup5ZmoDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gcGFyZW50IOeItuWFg+e0oO+8jOm7mOiupOS4umRvY3VtZW50DQogICAgICAgICAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBxdWVyeVNlbGVjdG9yOiAoc2VsZWN0b3IsIHBhcmVudCA9IGRvY3VtZW50KSA9PiB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHJldHVybiBwYXJlbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcignRE9N5p+l6K+i5aSx6LSlJywgeyBzZWxlY3RvciwgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWuieWFqOeahERPTeafpeivou+8iOWkmuS4quWFg+e0oO+8iQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3IgQ1NT6YCJ5oup5ZmoDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gcGFyZW50IOeItuWFg+e0oO+8jOm7mOiupOS4umRvY3VtZW50DQogICAgICAgICAqIEByZXR1cm5zIHtOb2RlTGlzdH0NCiAgICAgICAgICovDQogICAgICAgIHF1ZXJ5U2VsZWN0b3JBbGw6IChzZWxlY3RvciwgcGFyZW50ID0gZG9jdW1lbnQpID0+IHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdET03mn6Xor6LlpLHotKUnLCB7IHNlbGVjdG9yLCBlcnJvcjogZXJyb3IubWVz",
        "c2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gW107DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOetieW+heWFg+e0oOWHuueOsA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3IgQ1NT6YCJ5oup5ZmoDQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lb3V0IOi2heaXtuaXtumXtO+8iOavq+enku+8iQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IHBhcmVudCDniLblhYPntKANCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8RWxlbWVudD59DQogICAgICAgICAqLw0KICAgICAgICB3YWl0Rm9yRWxlbWVudDogKHNlbGVjdG9yLCB0aW1lb3V0ID0gMTAwMDAsIHBhcmVudCA9IGRvY3VtZW50KSA9PiB7DQogICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gew0KICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yLCBwYXJlbnQpOw0KICAgICAgICAgICAgICAgIGlmIChlbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKChtdXRhdGlvbnMsIG9icykgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcihzZWxlY3RvciwgcGFyZW50KTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG9icy5kaXNjb25uZWN0KCk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKHBhcmVudCwgew0KICAgICAgICAgICAgICAgICAgICBjaGlsZExpc3Q6IHRydWUsDQogICAgICAgICAgICAgICAgICAgIHN1YnRyZWU6IHRydWUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7DQogICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYOWFg+e0oOacquaJvuWIsDogJHtzZWxlY3Rvcn1gKSk7DQogICAgICAgICAgICAgICAgfSwgdGltZW91dCk7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qih5ouf54K55Ye75LqL5Lu2DQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDnm67moIflhYPntKANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBzaW11bGF0ZUNsaWNrOiAoZWxlbWVudCkgPT4gew0KICAg",
        "ICAgICAgICAgaWYgKCFlbGVtZW50KSByZXR1cm4gZmFsc2U7DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5bCd6K+V5aSa56eN54K55Ye75pa55byP77yM56Gu5L+d5YW85a655oCnDQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Ux77ya5bCd6K+V5Y6f55SfY2xpY2vmlrnms5UNCiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGVsZW1lbnQuY2xpY2sgPT09ICdmdW5jdGlvbicpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xpY2soKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5L2/55So5Y6f55SfY2xpY2vmlrnms5XmiJDlip8nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChjbGlja0Vycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WOn+eUn2NsaWNr5pa55rOV5aSx6LSlJywgeyBlcnJvcjogY2xpY2tFcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMu+8muWwneivleWIm+W7uk1vdXNlRXZlbnTvvIjlpJrnp413aW5kb3flr7nosaHvvIkNCiAgICAgICAgICAgICAgICBjb25zdCBnZXRWYWxpZFdpbmRvdyA9ICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5bCd6K+V5LiN5ZCM55qEd2luZG935a+56LGhDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHdpbmRvd0NhbmRpZGF0ZXMgPSBbDQogICAgICAgICAgICAgICAgICAgICAgICBudWxsLCAvLyDkuI3kvKDpgJJ2aWV35Y+C5pWwDQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlb2YgdW5zYWZlV2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHVuc2FmZVdpbmRvdyA6IG51bGwsIC8vIFRhbXBlcm1vbmtleeeOr+Wigw0KICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZGVmYXVsdFZpZXcsIC8vIOagh+WHhuaWueW8jw0KICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LCAvLyDlvZPliY13aW5kb3cNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvcCwgLy8g6aG25bGCd2luZG93DQogICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQgLy8g54i257qnd2luZG93DQogICAgICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCB3aW4gb2Ygd2luZG93Q2FuZGlkYXRlcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmtYvor5XmmK/lkKblj6/ku6XliJvlu7pNb3VzZUV2ZW50DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGVzdEV2ZW50ID0gbmV3IE1vdXNlRXZlbnQoJ3Rlc3QnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXc6IHdpbiwNCiAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgYnViYmxlczogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB3aW47DQogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHZhbGlkV2luZG93ID0gZ2V0VmFsaWRXaW5kb3coKTsNCiAgICAgICAgICAgICAgICBjb25zdCBldmVudHMgPSBbJ21vdXNlZG93bicsICdtb3VzZXVwJywgJ2NsaWNrJ107DQoNCiAgICAgICAgICAgICAgICBldmVudHMuZm9yRWFjaChldmVudFR5cGUgPT4gew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXZlbnRPcHRpb25zID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wb3NlZDogdHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Y+q5pyJ5ZyodmFsaWRXaW5kb3flrZjlnKjml7bmiY3mt7vliqB2aWV35bGe5oCnDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsaWRXaW5kb3cgIT09IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudE9wdGlvbnMudmlldyA9IHZhbGlkV2luZG93Ow0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBldmVudCA9IG5ldyBNb3VzZUV2ZW50KGV2ZW50VHlwZSwgZXZlbnRPcHRpb25zKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV2ZW50RXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zyhg5Yib5bu6JHtldmVudFR5cGV95LqL5Lu25aSx6LSlYCwgeyBlcnJvcjogZXZlbnRFcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Uz77ya5bCd6K+V6Kem5Y+R5oyH6ZKI5LqL5Lu277yI546w5Luj5rWP6KeI5Zmo77yJDQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgcG9pbnRlckV2ZW50cyA9IFsncG9pbnRlcmRvd24nLCAncG9pbnRlcnVwJ107DQogICAgICAgICAgICAgICAgICAg",
        "IHBvaW50ZXJFdmVudHMuZm9yRWFjaChldmVudFR5cGUgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBuZXcgUG9pbnRlckV2ZW50KGV2ZW50VHlwZSwgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludGVySWQ6IDEsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNQcmltYXJ5OiB0cnVlDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKHBvaW50ZXJFcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aMh+mSiOS6i+S7tuWIm+W7uuWksei0pScsIHsgZXJyb3I6IHBvaW50ZXJFcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5qih5ouf54K55Ye75LqL5Lu25bey6Kem5Y+RJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmqKHmi5/ngrnlh7vlrozlhajlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qih5ouf6L6T5YWl5paH5pysDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDovpPlhaXmoYblhYPntKANCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQg6KaB6L6T5YWl55qE5paH5pysDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgc2ltdWxhdGVJbnB1dDogKGVsZW1lbnQsIHRleHQpID0+IHsNCiAgICAgICAgICAgIGlmICghZWxlbWVudCkgcmV0dXJuIGZhbHNlOw0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOiBmueEpuWFg+e0oA0KICAgICAgICAgICAgICAgIGVsZW1lbnQuZm9jdXMoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOa4heepuueOsOacieWGheWuuQ0KICAgICAgICAgICAgICAgIGVsZW1lbnQudmFsdWUgPSAnJzsNCg0KICAgICAgICAgICAgICAgIC8vIOiuvue9ruaWsOWGheWuuQ0KICAgICAgICAgICAgICAgIGVsZW1lbnQudmFsdWUgPSB0ZXh0Ow0KDQogICAgICAgICAgICAgICAgLy8g6Kem5Y+R6L6T5YWl5LqL5Lu2DQogICAgICAgICAgICAgICAgY29uc3QgZXZlbnRzID0gWydpbnB1dCcsICdjaGFuZ2UnXTsNCiAgICAgICAgICAgICAgICBldmVudHMuZm9yRWFjaChldmVudFR5cGUgPT4gew0KICAgICAgICAgICAg",
        "ICAgICAgICBjb25zdCBldmVudCA9IG5ldyBFdmVudChldmVudFR5cGUsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsDQogICAgICAgICAgICAgICAgICAgICAgICBjYW5jZWxhYmxlOiB0cnVlDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5qih5ouf6L6T5YWl5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOeUn+aIkOWUr+S4gElEDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBnZW5lcmF0ZUlkOiAoKSA9PiB7DQogICAgICAgICAgICByZXR1cm4gJ3hoc18nICsgRGF0ZS5ub3coKSArICdfJyArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qC85byP5YyW5pe26Ze0DQogICAgICAgICAqIEBwYXJhbSB7RGF0ZX0gZGF0ZSDml6XmnJ/lr7nosaENCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIGZvcm1hdFRpbWU6IChkYXRlID0gbmV3IERhdGUoKSkgPT4gew0KICAgICAgICAgICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVUaW1lU3RyaW5nKCd6aC1DTicsIHsNCiAgICAgICAgICAgICAgICBob3VyMTI6IGZhbHNlLA0KICAgICAgICAgICAgICAgIGhvdXI6ICcyLWRpZ2l0JywNCiAgICAgICAgICAgICAgICBtaW51dGU6ICcyLWRpZ2l0JywNCiAgICAgICAgICAgICAgICBzZWNvbmQ6ICcyLWRpZ2l0Jw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDml6Xlv5fns7vnu58NCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IExvZ2dlciA9IHsNCiAgICAgICAgbG9nczogW10sDQogICAgICAgIG1heExvZ3M6IDEwMDAsDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiusOW9leaXpeW/lw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGV2ZWwg5pel5b+X57qn5YirDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIOa2iOaBrw0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSDpmYTliqDmlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGxvZzogZnVuY3Rpb24obGV2ZWwsIG1lc3NhZ2UsIGRhdGEgPSB7fSkgew0KICAgICAgICAgICAgY29uc3QgbG9nRW50cnkgPSB7DQogICAgICAgICAgICAg",
        "ICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLA0KICAgICAgICAgICAgICAgIGxldmVsLA0KICAgICAgICAgICAgICAgIG1lc3NhZ2UsDQogICAgICAgICAgICAgICAgZGF0YQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgdGhpcy5sb2dzLnB1c2gobG9nRW50cnkpOw0KDQogICAgICAgICAgICAvLyDpmZDliLbml6Xlv5fmlbDph48NCiAgICAgICAgICAgIGlmICh0aGlzLmxvZ3MubGVuZ3RoID4gdGhpcy5tYXhMb2dzKSB7DQogICAgICAgICAgICAgICAgdGhpcy5sb2dzLnNoaWZ0KCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOaOp+WItuWPsOi+k+WHug0KICAgICAgICAgICAgY29uc3QgY29uc29sZU1ldGhvZCA9IGNvbnNvbGVbbGV2ZWxdIHx8IGNvbnNvbGUubG9nOw0KICAgICAgICAgICAgY29uc3QgdGltZVN0ciA9IFV0aWxzLmZvcm1hdFRpbWUobG9nRW50cnkudGltZXN0YW1wKTsNCiAgICAgICAgICAgIGNvbnNvbGVNZXRob2QoYFske0NPTkZJRy5BUFBfTkFNRX1dICR7dGltZVN0cn0gWyR7bGV2ZWwudG9VcHBlckNhc2UoKX1dICR7bWVzc2FnZX1gLCBkYXRhKTsNCg0KICAgICAgICAgICAgLy8g6YCa55+lVUnmm7TmlrANCiAgICAgICAgICAgIGlmICh3aW5kb3cuWEhTQXV0b1JlcGx5ICYmIHdpbmRvdy5YSFNBdXRvUmVwbHkudWkpIHsNCiAgICAgICAgICAgICAgICB3aW5kb3cuWEhTQXV0b1JlcGx5LnVpLnVwZGF0ZUxvZ3MoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICBpbmZvOiBmdW5jdGlvbihtZXNzYWdlLCBkYXRhKSB7DQogICAgICAgICAgICB0aGlzLmxvZygnaW5mbycsIG1lc3NhZ2UsIGRhdGEpOw0KICAgICAgICAgICAgLy8g5byC5q2l5Y+R6YCB5o6o6YCB6YCa55+l77yI5LiN6Zi75aGe5Li75rWB56iL77yJDQogICAgICAgICAgICBpZiAodHlwZW9mIEVycm9yTm90aWZpY2F0aW9uTWFuYWdlciAhPT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgRXJyb3JOb3RpZmljYXRpb25NYW5hZ2VyLnNlbmROb3RpZmljYXRpb24oJ2luZm8nLCBtZXNzYWdlLCBkYXRhKS5jYXRjaChlcnIgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCflj5HpgIFpbmZv5o6o6YCB5aSx6LSlOicsIGVycik7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0sIDApOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICB3YXJuOiBmdW5jdGlvbihtZXNzYWdlLCBkYXRhKSB7DQogICAgICAgICAgICB0aGlzLmxvZygnd2FybicsIG1lc3NhZ2UsIGRhdGEpOw0KICAgICAgICAgICAgLy8g5byC5q2l5Y+R6YCB5o6o6YCB6YCa55+l77yI5LiN6Zi75aGe5Li75rWB56iL77yJDQogICAgICAgICAgICBpZiAodHlwZW9mIEVycm9yTm90aWZpY2F0aW9uTWFuYWdlciAhPT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0",
        "KCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgRXJyb3JOb3RpZmljYXRpb25NYW5hZ2VyLnNlbmROb3RpZmljYXRpb24oJ3dhcm4nLCBtZXNzYWdlLCBkYXRhKS5jYXRjaChlcnIgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCflj5HpgIF3YXJu5o6o6YCB5aSx6LSlOicsIGVycik7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0sIDApOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBlcnJvcjogZnVuY3Rpb24obWVzc2FnZSwgZGF0YSkgew0KICAgICAgICAgICAgdGhpcy5sb2coJ2Vycm9yJywgbWVzc2FnZSwgZGF0YSk7DQogICAgICAgICAgICAvLyDlvILmraXlj5HpgIHmjqjpgIHpgJrnn6XvvIjkuI3pmLvloZ7kuLvmtYHnqIvvvIkNCiAgICAgICAgICAgIGlmICh0eXBlb2YgRXJyb3JOb3RpZmljYXRpb25NYW5hZ2VyICE9PSAndW5kZWZpbmVkJykgew0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBFcnJvck5vdGlmaWNhdGlvbk1hbmFnZXIuc2VuZE5vdGlmaWNhdGlvbignZXJyb3InLCBtZXNzYWdlLCBkYXRhKS5jYXRjaChlcnIgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCflj5HpgIFlcnJvcuaOqOmAgeWksei0pTonLCBlcnIpOw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9LCAwKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgZGVidWc6IGZ1bmN0aW9uKG1lc3NhZ2UsIGRhdGEpIHsNCiAgICAgICAgICAgIGlmIChDb25maWdNYW5hZ2VyLmdldCgnZGVidWdNb2RlJykpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmxvZygnZGVidWcnLCBtZXNzYWdlLCBkYXRhKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5pyA6L+R55qE5pel5b+XDQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBjb3VudCDmlbDph48NCiAgICAgICAgICogQHJldHVybnMge0FycmF5fQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0UmVjZW50TG9nczogZnVuY3Rpb24oY291bnQgPSA1MCkgew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMubG9ncy5zbGljZSgtY291bnQpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuIXnqbrml6Xlv5cNCiAgICAgICAgICovDQogICAgICAgIGNsZWFyOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIHRoaXMubG9ncyA9IFtdOw0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+aXpeW/l+W3sua4heepuicpOw0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g6YWN572u566h55CG5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBDb25maWdNYW5hZ2VyID0gew0KICAgICAgICAvKioNCiAg",
        "ICAgICAgICog6I635Y+W6YWN572uDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXkg6YWN572u6ZSuDQogICAgICAgICAqIEBwYXJhbSB7Kn0gZGVmYXVsdFZhbHVlIOm7mOiupOWAvA0KICAgICAgICAgKiBAcmV0dXJucyB7Kn0NCiAgICAgICAgICovDQogICAgICAgIGdldDogZnVuY3Rpb24oa2V5LCBkZWZhdWx0VmFsdWUgPSBudWxsKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gR01fZ2V0VmFsdWUoa2V5LCBkZWZhdWx0VmFsdWUpOw0KICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSAhPT0gbnVsbCA/IHZhbHVlIDogQ09ORklHLkRFRkFVTFRfU0VUVElOR1Nba2V5XTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfojrflj5bphY3nva7lpLHotKUnLCB7IGtleSwgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTW2tleV0gfHwgZGVmYXVsdFZhbHVlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorr7nva7phY3nva4NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGtleSDphY3nva7plK4NCiAgICAgICAgICogQHBhcmFtIHsqfSB2YWx1ZSDphY3nva7lgLwNCiAgICAgICAgICovDQogICAgICAgIHNldDogZnVuY3Rpb24oa2V5LCB2YWx1ZSkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZShrZXksIHZhbHVlKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mFjee9ruW3suabtOaWsCcsIHsga2V5LCB2YWx1ZSB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCforr7nva7phY3nva7lpLHotKUnLCB7IGtleSwgdmFsdWUsIGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmiYDmnInphY3nva4NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldEFsbDogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBjb25zdCBzZXR0aW5ncyA9IHt9Ow0KICAgICAgICAgICAgT2JqZWN0LmtleXMoQ09ORklHLkRFRkFVTFRfU0VUVElOR1MpLmZvckVhY2goa2V5ID0+IHsNCiAgICAgICAgICAgICAgICBzZXR0aW5nc1trZXldID0gdGhpcy5nZXQoa2V5KTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgcmV0dXJuIHNldHRpbmdzOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDph43nva7phY3nva4NCiAgICAgICAgICovDQogICAgICAgIHJlc2V0OiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIE9iamVjdC5rZXlzKENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTKS5mb3JFYWNoKGtleSA9PiB7DQogICAg",
        "ICAgICAgICAgICAgdGhpcy5zZXQoa2V5LCBDT05GSUcuREVGQVVMVF9TRVRUSU5HU1trZXldKTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+mFjee9ruW3sumHjee9ruS4uum7mOiupOWAvCcpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmiYDmnInphY3nva7lj4rlhYPmlbDmja4NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldEFsbENvbmZpZ1dpdGhNZXRhZGF0YTogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBjb25zdCBjb25maWcgPSB0aGlzLmdldEFsbCgpOw0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICBtZXRhZGF0YTogew0KICAgICAgICAgICAgICAgICAgICBleHBvcnRUaW1lOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksDQogICAgICAgICAgICAgICAgICAgIHZlcnNpb246IENPTkZJRy5WRVJTSU9OLA0KICAgICAgICAgICAgICAgICAgICBhcHBOYW1lOiBDT05GSUcuQVBQX05BTUUsDQogICAgICAgICAgICAgICAgICAgIGV4cG9ydFR5cGU6ICdjb25maWcnDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBjb25maWc6IGNvbmZpZw0KICAgICAgICAgICAgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5a6M5pW05pWw5o2u77yI6YWN572uK+eUqOaIt+aVsOaNru+8iQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0RnVsbERhdGFXaXRoTWV0YWRhdGE6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3QgY29uZmlnID0gdGhpcy5nZXRBbGwoKTsNCiAgICAgICAgICAgIGNvbnN0IHVzZXJEYXRhID0gdGhpcy5nZXRVc2VyRGF0YSgpOw0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICBtZXRhZGF0YTogew0KICAgICAgICAgICAgICAgICAgICBleHBvcnRUaW1lOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksDQogICAgICAgICAgICAgICAgICAgIHZlcnNpb246IENPTkZJRy5WRVJTSU9OLA0KICAgICAgICAgICAgICAgICAgICBhcHBOYW1lOiBDT05GSUcuQVBQX05BTUUsDQogICAgICAgICAgICAgICAgICAgIGV4cG9ydFR5cGU6ICdmdWxsJw0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgY29uZmlnOiBjb25maWcsDQogICAgICAgICAgICAgICAgdXNlckRhdGE6IHVzZXJEYXRhDQogICAgICAgICAgICB9Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bnlKjmiLfmlbDmja4NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldFVzZXJEYXRhOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgYmxhY2tsaXN0OiB0aGlzLmdldCgnYmxhY2tsaXN0JywgW10p",
        "LA0KICAgICAgICAgICAgICAgICAgICBzZXNzaW9uTWVtb3J5OiBHTV9nZXRWYWx1ZSgnc2Vzc2lvbk1lbW9yeScsIHt9KSwNCiAgICAgICAgICAgICAgICAgICAgc3BvdGxpZ2h0Q2FjaGU6IEdNX2dldFZhbHVlKCdzcG90bGlnaHRQcm9jZXNzZWRVc2VycycsIHt9KSwNCiAgICAgICAgICAgICAgICAgICAgYWNxdWlzaXRpb25TZW50VXNlcnM6IEdNX2dldFZhbHVlKCdhY3F1aXNpdGlvblNlbnRVc2VycycsIHt9KSwNCiAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBSZWNvcmRzOiBHTV9nZXRWYWx1ZSgneGhzX2ZvbGxvd3VwX3JlY29yZHMnLCB7fSksDQogICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwQmxhY2tsaXN0OiBHTV9nZXRWYWx1ZSgneGhzX2ZvbGxvd3VwX2JsYWNrbGlzdCcsIHt9KSwNCiAgICAgICAgICAgICAgICAgICAgem9tYmllVW5yZWFkUmVjb3JkczogR01fZ2V0VmFsdWUoJ3hoc196b21iaWVfdW5yZWFkX3JlY29yZHMnLCAne30nKQ0KICAgICAgICAgICAgICAgIH07DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6I635Y+W55So5oi35pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4ge307DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmqjOivgemFjee9ruaVsOaNrg0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gY29uZmlnRGF0YSDphY3nva7mlbDmja4NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g6aqM6K+B57uT5p6cDQogICAgICAgICAqLw0KICAgICAgICB2YWxpZGF0ZUNvbmZpZ0RhdGE6IGZ1bmN0aW9uKGNvbmZpZ0RhdGEpIHsNCiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHsNCiAgICAgICAgICAgICAgICB2YWxpZDogdHJ1ZSwNCiAgICAgICAgICAgICAgICBlcnJvcnM6IFtdLA0KICAgICAgICAgICAgICAgIHdhcm5pbmdzOiBbXQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgLy8g5qOA5p+l5Z+65pys57uT5p6EDQogICAgICAgICAgICBpZiAoIWNvbmZpZ0RhdGEgfHwgdHlwZW9mIGNvbmZpZ0RhdGEgIT09ICdvYmplY3QnKSB7DQogICAgICAgICAgICAgICAgcmVzdWx0LnZhbGlkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgcmVzdWx0LmVycm9ycy5wdXNoKCfphY3nva7mlbDmja7moLzlvI/ml6DmlYgnKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6XlhYPmlbDmja4NCiAgICAgICAgICAgIGlmICghY29uZmlnRGF0YS5tZXRhZGF0YSkgew0KICAgICAgICAgICAgICAgIHJlc3VsdC53YXJuaW5ncy5wdXNoKCfnvLrlsJHlhYPmlbDmja7kv6Hmga8nKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgaWYgKCFjb25maWdEYXRhLm1ldGFkYXRhLnZlcnNpb24pIHsNCiAgICAgICAgICAg",
        "ICAgICAgICAgcmVzdWx0Lndhcm5pbmdzLnB1c2goJ+e8uuWwkeeJiOacrOS/oeaBrycpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAoIWNvbmZpZ0RhdGEubWV0YWRhdGEuYXBwTmFtZSB8fCBjb25maWdEYXRhLm1ldGFkYXRhLmFwcE5hbWUgIT09IENPTkZJRy5BUFBfTkFNRSkgew0KICAgICAgICAgICAgICAgICAgICByZXN1bHQud2FybmluZ3MucHVzaCgn5bqU55So5ZCN56ew5LiN5Yy56YWNJyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6XphY3nva7pobkNCiAgICAgICAgICAgIGlmICghY29uZmlnRGF0YS5jb25maWcpIHsNCiAgICAgICAgICAgICAgICByZXN1bHQudmFsaWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICByZXN1bHQuZXJyb3JzLnB1c2goJ+e8uuWwkemFjee9ruaVsOaNricpOw0KICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOmqjOivgeWFs+mUrumFjee9rumhuQ0KICAgICAgICAgICAgY29uc3QgcmVxdWlyZWRDb25maWdzID0gWydhcGlVcmwnLCAncmVwbHlEZWxheScsICdtYXhSZXRyaWVzJ107DQogICAgICAgICAgICByZXF1aXJlZENvbmZpZ3MuZm9yRWFjaChrZXkgPT4gew0KICAgICAgICAgICAgICAgIGlmICghKGtleSBpbiBjb25maWdEYXRhLmNvbmZpZykpIHsNCiAgICAgICAgICAgICAgICAgICAgcmVzdWx0Lndhcm5pbmdzLnB1c2goYOe8uuWwkemFjee9rumhuTogJHtrZXl9YCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOmqjOivgeaVsOaNruexu+Weiw0KICAgICAgICAgICAgY29uc3QgdHlwZVZhbGlkYXRpb25zID0gew0KICAgICAgICAgICAgICAgICdyZXBseURlbGF5JzogJ251bWJlcicsDQogICAgICAgICAgICAgICAgJ21heFJldHJpZXMnOiAnbnVtYmVyJywNCiAgICAgICAgICAgICAgICAnZW5hYmxlZCc6ICdib29sZWFuJywNCiAgICAgICAgICAgICAgICAnZGVidWdNb2RlJzogJ2Jvb2xlYW4nLA0KICAgICAgICAgICAgICAgICdhY3F1aXNpdGlvbkVuYWJsZWQnOiAnYm9vbGVhbicsDQogICAgICAgICAgICAgICAgJ2JsYWNrbGlzdEVuYWJsZWQnOiAnYm9vbGVhbicNCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKHR5cGVWYWxpZGF0aW9ucykuZm9yRWFjaCgoW2tleSwgZXhwZWN0ZWRUeXBlXSkgPT4gew0KICAgICAgICAgICAgICAgIGlmIChrZXkgaW4gY29uZmlnRGF0YS5jb25maWcgJiYgdHlwZW9mIGNvbmZpZ0RhdGEuY29uZmlnW2tleV0gIT09IGV4cGVjdGVkVHlwZSkgew0KICAgICAgICAgICAgICAgICAgICByZXN1bHQuZXJyb3JzLnB1c2goYOmFjee9rumhuSAke2tleX0g57G75Z6L6ZSZ6K+v77yM5pyf5pybICR7ZXhwZWN0ZWRUeXBlfWApOw0KICAgICAgICAgICAgICAgICAgICByZXN1bHQudmFsaWQgPSBmYWxzZTsNCiAgICAgICAg",
        "ICAgICAgICB9DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g6aqM6K+B5pWw5YC86IyD5Zu0DQogICAgICAgICAgICBpZiAoY29uZmlnRGF0YS5jb25maWcucmVwbHlEZWxheSAmJiAoY29uZmlnRGF0YS5jb25maWcucmVwbHlEZWxheSA8IDEwMDAgfHwgY29uZmlnRGF0YS5jb25maWcucmVwbHlEZWxheSA+IDMwMDAwKSkgew0KICAgICAgICAgICAgICAgIHJlc3VsdC5lcnJvcnMucHVzaCgn5Zue5aSN5bu26L+f5b+F6aG75ZyoMTAwMC0zMDAwMG1z5LmL6Ze0Jyk7DQogICAgICAgICAgICAgICAgcmVzdWx0LnZhbGlkID0gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmIChjb25maWdEYXRhLmNvbmZpZy5tYXhSZXRyaWVzICYmIChjb25maWdEYXRhLmNvbmZpZy5tYXhSZXRyaWVzIDwgMSB8fCBjb25maWdEYXRhLmNvbmZpZy5tYXhSZXRyaWVzID4gMTApKSB7DQogICAgICAgICAgICAgICAgcmVzdWx0LmVycm9ycy5wdXNoKCfmnIDlpKfph43or5XmrKHmlbDlv4XpobvlnKgxLTEw5LmL6Ze0Jyk7DQogICAgICAgICAgICAgICAgcmVzdWx0LnZhbGlkID0gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOW6lOeUqOWvvOWFpeeahOmFjee9rg0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gY29uZmlnRGF0YSDphY3nva7mlbDmja4NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMg5a+85YWl6YCJ6aG5DQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOW6lOeUqOe7k+aenA0KICAgICAgICAgKi8NCiAgICAgICAgYXBwbHlJbXBvcnRlZENvbmZpZzogZnVuY3Rpb24oY29uZmlnRGF0YSwgb3B0aW9ucyA9IHt9KSB7DQogICAgICAgICAgICBjb25zdCByZXN1bHQgPSB7DQogICAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSwNCiAgICAgICAgICAgICAgICBhcHBsaWVkOiAwLA0KICAgICAgICAgICAgICAgIHNraXBwZWQ6IDAsDQogICAgICAgICAgICAgICAgZXJyb3JzOiBbXQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDpqozor4HmlbDmja4NCiAgICAgICAgICAgICAgICBjb25zdCB2YWxpZGF0aW9uID0gdGhpcy52YWxpZGF0ZUNvbmZpZ0RhdGEoY29uZmlnRGF0YSk7DQogICAgICAgICAgICAgICAgaWYgKCF2YWxpZGF0aW9uLnZhbGlkKSB7DQogICAgICAgICAgICAgICAgICAgIHJlc3VsdC5zdWNjZXNzID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIHJlc3VsdC5lcnJvcnMgPSB2YWxpZGF0aW9uLmVycm9yczsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlupTnlKjphY3nva7pobkNCiAgICAgICAgICAgICAgICBpZiAoY29uZmlnRGF0YS5jb25maWcpIHsNCiAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmVu",
        "dHJpZXMoY29uZmlnRGF0YS5jb25maWcpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblnKjpu5jorqTphY3nva7kuK0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoa2V5IGluIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0KGtleSwgdmFsdWUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQuYXBwbGllZCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5za2lwcGVkKys7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKGDot7Pov4fmnKrnn6XphY3nva7pobk6ICR7a2V5fWApOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmVycm9ycy5wdXNoKGDlupTnlKjphY3nva7pobkgJHtrZXl9IOWksei0pTogJHtlcnJvci5tZXNzYWdlfWApOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlupTnlKjnlKjmiLfmlbDmja7vvIjlpoLmnpzlrZjlnKjkuJTpgInmi6nlr7zlhaXvvIkNCiAgICAgICAgICAgICAgICBpZiAoY29uZmlnRGF0YS51c2VyRGF0YSAmJiBvcHRpb25zLmluY2x1ZGVVc2VyRGF0YSkgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbmZpZ0RhdGEudXNlckRhdGEuYmxhY2tsaXN0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXQoJ2JsYWNrbGlzdCcsIGNvbmZpZ0RhdGEudXNlckRhdGEuYmxhY2tsaXN0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb25maWdEYXRhLnVzZXJEYXRhLnNlc3Npb25NZW1vcnkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgnc2Vzc2lvbk1lbW9yeScsIGNvbmZpZ0RhdGEudXNlckRhdGEuc2Vzc2lvbk1lbW9yeSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29uZmlnRGF0YS51c2VyRGF0YS5zcG90bGlnaHRDYWNoZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCdzcG90bGlnaHRQcm9jZXNzZWRVc2VycycsIGNvbmZpZ0RhdGEudXNlckRhdGEuc3BvdGxpZ2h0Q2FjaGUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbmZpZ0Rh",
        "dGEudXNlckRhdGEuYWNxdWlzaXRpb25TZW50VXNlcnMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgnYWNxdWlzaXRpb25TZW50VXNlcnMnLCBjb25maWdEYXRhLnVzZXJEYXRhLmFjcXVpc2l0aW9uU2VudFVzZXJzKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWvvOWFpeWbnuiuv+m7keWQjeWNleaVsOaNrg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbmZpZ0RhdGEudXNlckRhdGEuZm9sbG93VXBCbGFja2xpc3QpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgnZm9sbG93VXBCbGFja2xpc3QnLCBjb25maWdEYXRhLnVzZXJEYXRhLmZvbGxvd1VwQmxhY2tsaXN0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Zue6K6/6buR5ZCN5Y2V5pWw5o2u5a+85YWl5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudDogT2JqZWN0LmtleXMoY29uZmlnRGF0YS51c2VyRGF0YS5mb2xsb3dVcEJsYWNrbGlzdCkubGVuZ3RoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlr7zlhaXlm57orr/ljoblj7LmlbDmja4NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb25maWdEYXRhLnVzZXJEYXRhLmZvbGxvd1VwSGlzdG9yeSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCdmb2xsb3dVcEhpc3RvcnknLCBjb25maWdEYXRhLnVzZXJEYXRhLmZvbGxvd1VwSGlzdG9yeSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+Wbnuiuv+WOhuWPsuaVsOaNruWvvOWFpeaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQ6IE9iamVjdC5rZXlzKGNvbmZpZ0RhdGEudXNlckRhdGEuZm9sbG93VXBIaXN0b3J5KS5sZW5ndGgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWvvOWFpeWDteWwuOacquivu+iusOW9leaVsOaNrg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbmZpZ0RhdGEudXNlckRhdGEuem9tYmllVW5yZWFkUmVjb3Jkcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCd4aHNfem9tYmllX3VucmVhZF9yZWNvcmRzJywgY29uZmlnRGF0YS51c2VyRGF0YS56b21iaWVVbnJlYWRSZWNvcmRzKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5YO15bC45pyq6K+76K6w5b2V5pWw5o2u5a+85YWl5oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAg",
        "ICAgICByZXN1bHQuZXJyb3JzLnB1c2goYOW6lOeUqOeUqOaIt+aVsOaNruWksei0pTogJHtlcnJvci5tZXNzYWdlfWApOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+mFjee9ruWvvOWFpeWujOaIkCcsIHsgYXBwbGllZDogcmVzdWx0LmFwcGxpZWQsIHNraXBwZWQ6IHJlc3VsdC5za2lwcGVkIH0pOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIHJlc3VsdC5zdWNjZXNzID0gZmFsc2U7DQogICAgICAgICAgICAgICAgcmVzdWx0LmVycm9ycy5wdXNoKGDlr7zlhaXov4fnqIvlj5HnlJ/plJnor686ICR7ZXJyb3IubWVzc2FnZX1gKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+mFjee9ruWvvOWFpeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDlg7XlsLjmnKror7vlpITnkIbnrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IFpvbWJpZVVucmVhZE1hbmFnZXIgPSB7DQogICAgICAgIC8vIOWtmOWCqOmUruWQjQ0KICAgICAgICBTVE9SQUdFX0tFWTogJ3hoc196b21iaWVfdW5yZWFkX3JlY29yZHMnLA0KDQogICAgICAgIC8vIOWGheWtmOe8k+WtmA0KICAgICAgICBjYWNoZTogbmV3IE1hcCgpLA0KDQogICAgICAgIC8vIOWIneWni+WMluagh+W/lw0KICAgICAgICBpbml0aWFsaXplZDogZmFsc2UsDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIneWni+WMluWDteWwuOacquivu+euoeeQhuWZqA0KICAgICAgICAgKi8NCiAgICAgICAgaW5pdCgpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmluaXRpYWxpemVkKSByZXR1cm47DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgdGhpcy5sb2FkRnJvbVN0b3JhZ2UoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0Q2xlYW51cFRpbWVyKCk7DQogICAgICAgICAgICAgICAgdGhpcy5pbml0aWFsaXplZCA9IHRydWU7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfp58g5YO15bC45pyq6K+7566h55CG5Zmo5bey5Yid5aeL5YyWJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5YO15bC45pyq6K+7566h55CG5Zmo5Yid5aeL5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5rWL5piv5ZCm5Li65YO15bC45pyq6K+754q25oCBDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtz",
        "dHJpbmd9IG1lc3NhZ2VDb250ZW50IOa2iOaBr+WGheWuue+8iOWPr+iDveS4um51bGzvvIkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGxhc3RNZXNzYWdlUHJldmlldyDkvJror53liJfooajkuK3nmoTmnIDlkI7mtojmga/pooTop4gNCiAgICAgICAgICogQHBhcmFtIHtib29sZWFufSBoYXNBY3RpdmVXZWxjb21lU2VudCDmmK/lkKblt7Llj5HpgIHkuLvliqjor53mnK8NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g5qOA5rWL57uT5p6cDQogICAgICAgICAqLw0KICAgICAgICBkZXRlY3Rab21iaWVVbnJlYWQodXNlck5hbWUsIG1lc3NhZ2VDb250ZW50LCBsYXN0TWVzc2FnZVByZXZpZXcsIGhhc0FjdGl2ZVdlbGNvbWVTZW50KSB7DQogICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCd6b21iaWVVbnJlYWRFbmFibGVkJywgdHJ1ZSkpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4geyBpc1pvbWJpZTogZmFsc2UsIHJlYXNvbjogJ+WKn+iDveacquWQr+eUqCcgfTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5rWL5p2h5Lu277yaDQogICAgICAgICAgICAvLyAxLiDml6Dms5Xmj5Dlj5bliLDnlKjmiLfmtojmga/lhoXlrrnvvIhtZXNzYWdlQ29udGVudOS4um51bGzvvIkNCiAgICAgICAgICAgIC8vIDIuIOW3suWPkemAgei/h+S4u+WKqOasoui/juivneacrw0KICAgICAgICAgICAgLy8gMy4g5Lya6K+d5YiX6KGo5pi+56S655qE5piv6IGa5YWJ6L+b57q/5o+Q56S65raI5oGvDQogICAgICAgICAgICBjb25zdCBpc1pvbWJpZSA9ICFtZXNzYWdlQ29udGVudCAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzQWN0aXZlV2VsY29tZVNlbnQgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaXNTcG90bGlnaHRMZWFkTWVzc2FnZShsYXN0TWVzc2FnZVByZXZpZXcpOw0KDQogICAgICAgICAgICBpZiAoaXNab21iaWUpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBmaW5nZXJwcmludCA9IHRoaXMuZ2VuZXJhdGVNZXNzYWdlRmluZ2VycHJpbnQodXNlck5hbWUsIGxhc3RNZXNzYWdlUHJldmlldyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgaXNab21iaWU6IHRydWUsDQogICAgICAgICAgICAgICAgICAgIGZpbmdlcnByaW50LA0KICAgICAgICAgICAgICAgICAgICByZWFzb246ICfmo4DmtYvliLDlg7XlsLjmnKror7vvvJrml6DnlKjmiLfmtojmga8r5bey5Y+R6YCB5Li75Yqo6K+d5pyvK+iBmuWFiei/m+e6vycNCiAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4geyBpc1pvbWJpZTogZmFsc2UsIHJlYXNvbjogJ+S4jeespuWQiOWDteWwuOacquivu+adoeS7ticgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l5piv5ZCm5Zyo5Ya35Y205pyf5YaFDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0N",
        "CiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGZpbmdlcnByaW50IOa2iOaBr+aMh+e6uQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDlhrfljbTnirbmgIENCiAgICAgICAgICovDQogICAgICAgIGNoZWNrQ29vbGRvd24odXNlck5hbWUsIGZpbmdlcnByaW50KSB7DQogICAgICAgICAgICBjb25zdCByZWNvcmQgPSB0aGlzLmdldFJlY29yZCh1c2VyTmFtZSk7DQogICAgICAgICAgICBpZiAoIXJlY29yZCkgew0KICAgICAgICAgICAgICAgIHJldHVybiB7IGluQ29vbGRvd246IGZhbHNlLCByZWFzb246ICfml6DlhrfljbTorrDlvZUnIH07DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBjb25zdCBjb29sZG93bk1zID0gQ29uZmlnTWFuYWdlci5nZXQoJ3pvbWJpZVVucmVhZENvb2xkb3duTWludXRlcycsIDYwKSAqIDYwICogMTAwMDsNCiAgICAgICAgICAgIGNvbnN0IHRpbWVTaW5jZUxhc3RQcm9jZXNzID0gbm93IC0gcmVjb3JkLmxhc3RQcm9jZXNzVGltZTsNCg0KICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm6LaF6L+H5Ya35Y205pe26Ze0DQogICAgICAgICAgICBpZiAodGltZVNpbmNlTGFzdFByb2Nlc3MgPiBjb29sZG93bk1zKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHsgaW5Db29sZG93bjogZmFsc2UsIHJlYXNvbjogJ+WGt+WNtOaXtumXtOW3sui/h+acnycgfTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5p+l5raI5oGv5oyH57q55piv5ZCm5Y+Y5YyW77yI6KGo56S65pyJ5paw5raI5oGv77yJDQogICAgICAgICAgICBpZiAocmVjb3JkLmZpbmdlcnByaW50ICE9PSBmaW5nZXJwcmludCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5SEIOajgOa1i+WIsOa2iOaBr+WGheWuueWPmOWMlu+8jOa4hemZpOWGt+WNtOeKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIG9sZEZpbmdlcnByaW50OiByZWNvcmQuZmluZ2VycHJpbnQ/LnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgbmV3RmluZ2VycHJpbnQ6IGZpbmdlcnByaW50Py5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLmNsZWFyUmVjb3JkKHVzZXJOYW1lKTsNCiAgICAgICAgICAgICAgICByZXR1cm4geyBpbkNvb2xkb3duOiBmYWxzZSwgcmVhc29uOiAn5raI5oGv5YaF5a655bey5Y+Y5YyWJyB9Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb25zdCByZW1haW5pbmdNcyA9IGNvb2xkb3duTXMgLSB0aW1lU2luY2VMYXN0UHJvY2VzczsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgaW5Db29sZG93bjogdHJ1ZSwNCiAgICAgICAgICAgICAgICByZW1haW5pbmdNcywNCiAgICAgICAgICAgICAgICByZW1haW5pbmdNaW51dGVzOiBNYXRoLmNl",
        "aWwocmVtYWluaW5nTXMgLyA2MDAwMCksDQogICAgICAgICAgICAgICAgcmVhc29uOiBg5Ya35Y205Lit77yM5Ymp5L2ZJHtNYXRoLmNlaWwocmVtYWluaW5nTXMgLyA2MDAwMCl95YiG6ZKfYA0KICAgICAgICAgICAgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K6w5b2V5YO15bC45pyq6K+75aSE55CGDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGZpbmdlcnByaW50IOa2iOaBr+aMh+e6uQ0KICAgICAgICAgKi8NCiAgICAgICAgcmVjb3JkWm9tYmllUHJvY2Vzcyh1c2VyTmFtZSwgZmluZ2VycHJpbnQpIHsNCiAgICAgICAgICAgIGNvbnN0IHJlY29yZCA9IHsNCiAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICBmaW5nZXJwcmludCwNCiAgICAgICAgICAgICAgICBsYXN0UHJvY2Vzc1RpbWU6IERhdGUubm93KCksDQogICAgICAgICAgICAgICAgcHJvY2Vzc0NvdW50OiAodGhpcy5nZXRSZWNvcmQodXNlck5hbWUpPy5wcm9jZXNzQ291bnQgfHwgMCkgKyAxLA0KICAgICAgICAgICAgICAgIGNyZWF0ZWRBdDogdGhpcy5nZXRSZWNvcmQodXNlck5hbWUpPy5jcmVhdGVkQXQgfHwgRGF0ZS5ub3coKQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgdGhpcy5jYWNoZS5zZXQodXNlck5hbWUsIHJlY29yZCk7DQogICAgICAgICAgICB0aGlzLnNhdmVUb1N0b3JhZ2UoKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfp58g6K6w5b2V5YO15bC45pyq6K+75aSE55CGJywgew0KICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgIHByb2Nlc3NDb3VudDogcmVjb3JkLnByb2Nlc3NDb3VudCwNCiAgICAgICAgICAgICAgICBmaW5nZXJwcmludDogZmluZ2VycHJpbnQ/LnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOeUn+aIkOa2iOaBr+aMh+e6uQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCNDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlUHJldmlldyDmtojmga/pooTop4gNCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30g5raI5oGv5oyH57q5DQogICAgICAgICAqLw0KICAgICAgICBnZW5lcmF0ZU1lc3NhZ2VGaW5nZXJwcmludCh1c2VyTmFtZSwgbWVzc2FnZVByZXZpZXcpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBgJHt1c2VyTmFtZX06JHttZXNzYWdlUHJldmlldyB8fCAnJ31gOw0KICAgICAgICAgICAgLy8g566A5Y2V55qE5ZOI5biM5Ye95pWwDQogICAgICAgICAgICBsZXQgaGFzaCA9IDA7DQogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbnRlbnQubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgICBjb25zdCBjaGFyID0gY29udGVudC5jaGFyQ29kZUF0KGkpOw0K",
        "ICAgICAgICAgICAgICAgIGhhc2ggPSAoKGhhc2ggPDwgNSkgLSBoYXNoKSArIGNoYXI7DQogICAgICAgICAgICAgICAgaGFzaCA9IGhhc2ggJiBoYXNoOyAvLyDovazmjaLkuLozMuS9jeaVtOaVsA0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIGhhc2gudG9TdHJpbmcoMzYpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XmmK/lkKbkuLrogZrlhYnov5vnur/mtojmga8NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VQcmV2aWV3IOa2iOaBr+mihOiniA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGlzU3BvdGxpZ2h0TGVhZE1lc3NhZ2UobWVzc2FnZVByZXZpZXcpIHsNCiAgICAgICAgICAgIGlmICghbWVzc2FnZVByZXZpZXcpIHJldHVybiBmYWxzZTsNCg0KICAgICAgICAgICAgY29uc3Qgc3BvdGxpZ2h0S2V5d29yZHMgPSBbDQogICAgICAgICAgICAgICAgJ+mAmui/h+OAjCcsDQogICAgICAgICAgICAgICAgJ+i/m+WFpeengeS/oScsDQogICAgICAgICAgICAgICAgJ+W/q+WOu+iBlOezu+WQpycsDQogICAgICAgICAgICAgICAgJ+iBmuWFieeBrycsDQogICAgICAgICAgICAgICAgJ+W5v+WRiui/m+WFpScNCiAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgIHJldHVybiBzcG90bGlnaHRLZXl3b3Jkcy5zb21lKGtleXdvcmQgPT4gbWVzc2FnZVByZXZpZXcuaW5jbHVkZXMoa2V5d29yZCkpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bnlKjmiLforrDlvZUNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBnZXRSZWNvcmQodXNlck5hbWUpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLmNhY2hlLmdldCh1c2VyTmFtZSkgfHwgbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF6Zmk55So5oi36K6w5b2VDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICovDQogICAgICAgIGNsZWFyUmVjb3JkKHVzZXJOYW1lKSB7DQogICAgICAgICAgICB0aGlzLmNhY2hlLmRlbGV0ZSh1c2VyTmFtZSk7DQogICAgICAgICAgICB0aGlzLnNhdmVUb1N0b3JhZ2UoKTsNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+nnyDmuIXpmaTlg7XlsLjmnKror7vorrDlvZUnLCB7IHVzZXJOYW1lIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDku47lrZjlgqjliqDovb3mlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGxvYWRGcm9tU3RvcmFnZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IEdNX2dldFZhbHVlKHRoaXMuU1RPUkFHRV9LRVksICd7fScpOw0KICAgICAgICAgICAgICAgIGNvbnN0",
        "IHJlY29yZHMgPSBKU09OLnBhcnNlKGRhdGEpOw0KDQogICAgICAgICAgICAgICAgdGhpcy5jYWNoZS5jbGVhcigpOw0KICAgICAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKHJlY29yZHMpLmZvckVhY2goKFt1c2VyTmFtZSwgcmVjb3JkXSkgPT4gew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNhY2hlLnNldCh1c2VyTmFtZSwgcmVjb3JkKTsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+nnyDku47lrZjlgqjliqDovb3lg7XlsLjmnKror7vorrDlvZUnLCB7IGNvdW50OiB0aGlzLmNhY2hlLnNpemUgfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Yqg6L295YO15bC45pyq6K+76K6w5b2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLmNhY2hlLmNsZWFyKCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS/neWtmOWIsOWtmOWCqA0KICAgICAgICAgKi8NCiAgICAgICAgc2F2ZVRvU3RvcmFnZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgcmVjb3JkcyA9IHt9Ow0KICAgICAgICAgICAgICAgIHRoaXMuY2FjaGUuZm9yRWFjaCgocmVjb3JkLCB1c2VyTmFtZSkgPT4gew0KICAgICAgICAgICAgICAgICAgICByZWNvcmRzW3VzZXJOYW1lXSA9IHJlY29yZDsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKHRoaXMuU1RPUkFHRV9LRVksIEpTT04uc3RyaW5naWZ5KHJlY29yZHMpKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/Cfp58g5L+d5a2Y5YO15bC45pyq6K+76K6w5b2V5Yiw5a2Y5YKoJywgeyBjb3VudDogdGhpcy5jYWNoZS5zaXplIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S/neWtmOWDteWwuOacquivu+iusOW9leWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWQr+WKqOa4heeQhuWumuaXtuWZqA0KICAgICAgICAgKi8NCiAgICAgICAgc3RhcnRDbGVhbnVwVGltZXIoKSB7DQogICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCd6b21iaWVVbnJlYWRBdXRvQ2xlYW51cCcsIHRydWUpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmr4/lsI/ml7bmuIXnkIbkuIDmrKHov4fmnJ/orrDlvZUNCiAgICAgICAgICAgIHNldEludGVydmFsKCgpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmNsZWFudXBFeHBpcmVkUmVjb3JkcygpOw0KICAgICAgICAgICAgfSwgNjAgKiA2MCAqIDEwMDApOw0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWco",
        "J/Cfp58g5YO15bC45pyq6K+75riF55CG5a6a5pe25Zmo5bey5ZCv5YqoJyk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heeQhui/h+acn+iusOW9lQ0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYW51cEV4cGlyZWRSZWNvcmRzKCkgew0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGNvbnN0IGV4cGlyZURheXMgPSBDb25maWdNYW5hZ2VyLmdldCgnem9tYmllVW5yZWFkQ2xlYW51cERheXMnLCA3KTsNCiAgICAgICAgICAgIGNvbnN0IGV4cGlyZU1zID0gZXhwaXJlRGF5cyAqIDI0ICogNjAgKiA2MCAqIDEwMDA7DQoNCiAgICAgICAgICAgIGxldCBjbGVhbmVkQ291bnQgPSAwOw0KDQogICAgICAgICAgICB0aGlzLmNhY2hlLmZvckVhY2goKHJlY29yZCwgdXNlck5hbWUpID0+IHsNCiAgICAgICAgICAgICAgICBpZiAobm93IC0gcmVjb3JkLmNyZWF0ZWRBdCA+IGV4cGlyZU1zKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuY2FjaGUuZGVsZXRlKHVzZXJOYW1lKTsNCiAgICAgICAgICAgICAgICAgICAgY2xlYW5lZENvdW50Kys7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIGlmIChjbGVhbmVkQ291bnQgPiAwKSB7DQogICAgICAgICAgICAgICAgdGhpcy5zYXZlVG9TdG9yYWdlKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfp58g5riF55CG6L+H5pyf5YO15bC45pyq6K+76K6w5b2VJywgew0KICAgICAgICAgICAgICAgICAgICBjbGVhbmVkQ291bnQsDQogICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ0NvdW50OiB0aGlzLmNhY2hlLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W57uf6K6h5L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0cygpIHsNCiAgICAgICAgICAgIGNvbnN0IHJlY29yZHMgPSBBcnJheS5mcm9tKHRoaXMuY2FjaGUudmFsdWVzKCkpOw0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGNvbnN0IGNvb2xkb3duTXMgPSBDb25maWdNYW5hZ2VyLmdldCgnem9tYmllVW5yZWFkQ29vbGRvd25NaW51dGVzJywgNjApICogNjAgKiAxMDAwOw0KDQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIHRvdGFsUmVjb3JkczogcmVjb3Jkcy5sZW5ndGgsDQogICAgICAgICAgICAgICAgaW5Db29sZG93bjogcmVjb3Jkcy5maWx0ZXIociA9PiBub3cgLSByLmxhc3RQcm9jZXNzVGltZSA8IGNvb2xkb3duTXMpLmxlbmd0aCwNCiAgICAgICAgICAgICAgICB0b3RhbFByb2Nlc3NlczogcmVjb3Jkcy5yZWR1Y2UoKHN1bSwgcikgPT4gc3VtICsgci5wcm9jZXNzQ291bnQsIDApLA0KICAgICAgICAgICAgICAgIG9sZGVzdFJlY29yZDogcmVjb3Jkcy5sZW5ndGgg",
        "PiAwID8gTWF0aC5taW4oLi4ucmVjb3Jkcy5tYXAociA9PiByLmNyZWF0ZWRBdCkpIDogbnVsbA0KICAgICAgICAgICAgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6YeN572u5omA5pyJ6K6w5b2V77yI6LCD6K+V55So77yJDQogICAgICAgICAqLw0KICAgICAgICByZXNldCgpIHsNCiAgICAgICAgICAgIHRoaXMuY2FjaGUuY2xlYXIoKTsNCiAgICAgICAgICAgIHRoaXMuc2F2ZVRvU3RvcmFnZSgpOw0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfp58g5bey6YeN572u5omA5pyJ5YO15bC45pyq6K+76K6w5b2VJyk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDmnI3liqHnq6/nrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IFNlcnZlck1hbmFnZXIgPSB7DQogICAgICAgIC8vIOeUqOaIt+WUr+S4gOagh+ivhg0KICAgICAgICB1c2VySWQ6IG51bGwsDQoNCiAgICAgICAgLy8g5a6a5pe25ZmoDQogICAgICAgIGNoZWNrVGltZXI6IG51bGwsDQogICAgICAgIGhlYXJ0YmVhdFRpbWVyOiBudWxsLA0KDQogICAgICAgIC8vIOeKtuaAgQ0KICAgICAgICBpc0Nvbm5lY3RlZDogZmFsc2UsDQogICAgICAgIGxhc3RDaGVja1RpbWU6IG51bGwsDQogICAgICAgIHJldHJ5Q291bnQ6IDAsDQoNCiAgICAgICAgLy8g5pyN5Yqh56uv5o6n5Yi254q25oCB77yI5YWz6ZSu77ya6L+Z5Liq5Yaz5a6a6ISa5pys5piv5ZCm5Y+v5Lul6L+Q6KGM77yJDQogICAgICAgIHNlcnZlckVuYWJsZWQ6IHRydWUsDQogICAgICAgIGxhc3RTZXJ2ZXJDaGVjazogbnVsbCwNCg0KICAgICAgICAvLyDlhazlkYrmlbDmja4NCiAgICAgICAgbGF0ZXN0QW5ub3VuY2VtZW50OiBudWxsLA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliJ3lp4vljJbmnI3liqHnq6/nrqHnkIblmagNCiAgICAgICAgICovDQogICAgICAgIGluaXQoKSB7DQogICAgICAgICAgICBpZiAoIUNPTkZJRy5TRVJWRVIuZW5hYmxlZCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+MkCDmnI3liqHnq6/lip/og73lt7LnpoHnlKgnKTsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g55Sf5oiQ5oiW6I635Y+W55So5oi3SUQNCiAgICAgICAgICAgICAgICB0aGlzLnVzZXJJZCA9IHRoaXMuZ2V0VXNlcklkKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDnq4vljbPmo4Dmn6XkuIDmrKENCiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrU2VydmVyU3RhdHVzKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDlkK/liqjlrprml7bmo4Dmn6UNCiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0VGltZXJzKCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+MkCDmnI3liqHnq6/nrqHnkIblmajlt7LliJ3lp4vljJYn",
        "LCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdGhpcy51c2VySWQsDQogICAgICAgICAgICAgICAgICAgIHNlcnZlclVybDogQ09ORklHLlNFUlZFUi5iYXNlVXJsDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pyN5Yqh56uv566h55CG5Zmo5Yid5aeL5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5oiW55Sf5oiQ55So5oi3SUQNCiAgICAgICAgICovDQogICAgICAgIGdldFVzZXJJZCgpIHsNCiAgICAgICAgICAgIGxldCB1c2VySWQgPSBHTV9nZXRWYWx1ZSgnc2VydmVyX3VzZXJfaWQnKTsNCiAgICAgICAgICAgIGlmICghdXNlcklkKSB7DQogICAgICAgICAgICAgICAgdXNlcklkID0gJ3VzZXJfJyArIERhdGUubm93KCkgKyAnXycgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSk7DQogICAgICAgICAgICAgICAgR01fc2V0VmFsdWUoJ3NlcnZlcl91c2VyX2lkJywgdXNlcklkKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+GlCDnlJ/miJDmlrDnlKjmiLdJRCcsIHsgdXNlcklkIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIHVzZXJJZDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5ZCv5Yqo5a6a5pe25ZmoDQogICAgICAgICAqLw0KICAgICAgICBzdGFydFRpbWVycygpIHsNCiAgICAgICAgICAgIC8vIOeKtuaAgeajgOafpeWumuaXtuWZqA0KICAgICAgICAgICAgaWYgKHRoaXMuY2hlY2tUaW1lcikgew0KICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5jaGVja1RpbWVyKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMuY2hlY2tUaW1lciA9IHNldEludGVydmFsKCgpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrU2VydmVyU3RhdHVzKCk7DQogICAgICAgICAgICB9LCBDT05GSUcuU0VSVkVSLmNoZWNrSW50ZXJ2YWwpOw0KDQogICAgICAgICAgICAvLyDlv4Pot7Plrprml7blmagNCiAgICAgICAgICAgIGlmICh0aGlzLmhlYXJ0YmVhdFRpbWVyKSB7DQogICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmhlYXJ0YmVhdFRpbWVyKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMuaGVhcnRiZWF0VGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5zZW5kSGVhcnRiZWF0KCk7DQogICAgICAgICAgICB9LCBDT05GSUcuU0VSVkVSLmhlYXJ0YmVhdEludGVydmFsKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5YGc5q2i5a6a5pe25ZmoDQogICAgICAgICAqLw0KICAgICAgICBzdG9wVGltZXJzKCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuY2hlY2tUaW1lcikgew0KICAgICAg",
        "ICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5jaGVja1RpbWVyKTsNCiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrVGltZXIgPSBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYgKHRoaXMuaGVhcnRiZWF0VGltZXIpIHsNCiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaGVhcnRiZWF0VGltZXIpOw0KICAgICAgICAgICAgICAgIHRoaXMuaGVhcnRiZWF0VGltZXIgPSBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlj5HpgIFIVFRQ6K+35rGC5Yiw5pyN5Yqh56uvDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzZW5kUmVxdWVzdChlbmRwb2ludCwgZGF0YSA9IG51bGwsIG1ldGhvZCA9ICdHRVQnKSB7DQogICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gew0KICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IGAke0NPTkZJRy5TRVJWRVIuYmFzZVVybH0vYXBpL3YxJHtlbmRwb2ludH1gOw0KICAgICAgICAgICAgICAgIGNvbnN0IHJlcXVlc3REYXRhID0gew0KICAgICAgICAgICAgICAgICAgICBtZXRob2Q6IG1ldGhvZCwNCiAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwsDQogICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IENPTkZJRy5TRVJWRVIudGltZW91dCwNCiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogew0KICAgICAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICdVc2VyLUFnZW50JzogYCR7Q09ORklHLkFQUF9OQU1FfS8ke0NPTkZJRy5WRVJTSU9OfWANCiAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgb25sb2FkOiAocmVzcG9uc2UpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA+PSAyMDAgJiYgcmVzcG9uc2Uuc3RhdHVzIDwgMzAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IEpTT04ucGFyc2UocmVzcG9uc2UucmVzcG9uc2VUZXh0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShyZXN1bHQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYEhUVFAgJHtyZXNwb25zZS5zdGF0dXN9OiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCkpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihg6Kej5p6Q5ZON5bqU5aSx6LSlOiAke2Vycm9yLm1lc3NhZ2V9YCkpOw0KICAgICAgICAgICAgICAgICAg",
        "ICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICBvbmVycm9yOiAoZXJyb3IpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYOe9kee7nOivt+axguWksei0pTogJHtlcnJvci5tZXNzYWdlIHx8ICfmnKrnn6XplJnor68nfWApKTsNCiAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgb250aW1lb3V0OiAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCfor7fmsYLotoXml7YnKSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgaWYgKGRhdGEgJiYgKG1ldGhvZCA9PT0gJ1BPU1QnIHx8IG1ldGhvZCA9PT0gJ1BVVCcpKSB7DQogICAgICAgICAgICAgICAgICAgIHJlcXVlc3REYXRhLmRhdGEgPSBKU09OLnN0cmluZ2lmeShkYXRhKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBHTV94bWxodHRwUmVxdWVzdChyZXF1ZXN0RGF0YSk7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l5pyN5Yqh56uv54q25oCB5ZKM5pu05pawDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBjaGVja1NlcnZlclN0YXR1cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgdGhpcy5sYXN0Q2hlY2tUaW1lID0gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zZW5kUmVxdWVzdCgnL3NjcmlwdC9jaGVjay11cGRhdGUnLCB7DQogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWZXJzaW9uOiBDT05GSUcuVkVSU0lPTiwNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB0aGlzLnVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgdXNlckFnZW50OiBuYXZpZ2F0b3IudXNlckFnZW50LA0KICAgICAgICAgICAgICAgICAgICBsYXN0Q2hlY2tUaW1lOiB0aGlzLmxhc3RDaGVja1RpbWUgPyBuZXcgRGF0ZSh0aGlzLmxhc3RDaGVja1RpbWUpLnRvSVNPU3RyaW5nKCkgOiBudWxsDQogICAgICAgICAgICAgICAgfSwgJ1BPU1QnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuaXNDb25uZWN0ZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnJldHJ5Q291bnQgPSAwOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmxhc3RTZXJ2ZXJDaGVjayA9IERhdGUubm93KCk7DQoNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlc3BvbnNlLmRhdGE7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5re75Yqg6LCD6K+V5pel5b+XDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+UjSDmnI3liqHnq6/lk43lupTmlbDmja4nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBo",
        "YXNVcGRhdGU6IGRhdGEuaGFzVXBkYXRlLA0KICAgICAgICAgICAgICAgICAgICAgICAgbGF0ZXN0VmVyc2lvbjogZGF0YS5sYXRlc3RWZXJzaW9uLA0KICAgICAgICAgICAgICAgICAgICAgICAgdmVyc2lvbjogZGF0YS52ZXJzaW9uLA0KICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFZlcnNpb246IGRhdGEuY3VycmVudFZlcnNpb24sDQogICAgICAgICAgICAgICAgICAgICAgICBmb3JjZVVwZGF0ZTogZGF0YS5mb3JjZVVwZGF0ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IGRhdGEuZW5hYmxlZCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZVVybDogZGF0YS51cGRhdGVVcmwsDQogICAgICAgICAgICAgICAgICAgICAgICB2ZXJzaW9uSW5mbzogZGF0YS52ZXJzaW9uSW5mbywNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckNvbmZpZzogZGF0YS5zZXJ2ZXJDb25maWcNCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l6ISa5pys5piv5ZCm6KKr56aB55SoDQogICAgICAgICAgICAgICAgICAgIGlmICghZGF0YS5lbmFibGVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign8J+aqyDohJrmnKzlt7LooqvlvIDlj5HogIXnpoHnlKgnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VydmVyRW5hYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVTY3JpcHREaXNhYmxlZCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6ISa5pys6KKr6YeN5paw5ZCv55SoDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuc2VydmVyRW5hYmxlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg6ISa5pys5bey6KKr5byA5Y+R6ICF6YeN5paw5ZCv55SoJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXJ2ZXJFbmFibGVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZVNjcmlwdEVuYWJsZWQoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWFvOWuueaWsOaXp0FQSeagvOW8jw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBsYXRlc3RWZXJzaW9uID0gZGF0YS5sYXRlc3RWZXJzaW9uIHx8IGRhdGEudmVyc2lvbiB8fCAndW5rbm93bic7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5by65Yi25pu05pawDQogICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmhhc1VwZGF0ZSAmJiBkYXRhLmZvcmNlVXBkYXRlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign8J+UhCDmo4DmtYvliLDlvLrliLbmm7TmlrAnLCB7DQogICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFZlcnNpb246IENPTkZJRy5WRVJTSU9OLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhdGVzdFZlcnNpb246IGxhdGVzdFZlcnNpb24sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyUmVzcG9uc2U6IGRhdGENCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVGb3JjZVVwZGF0ZShkYXRhKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeaZrumAmuabtOaWsA0KICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5oYXNVcGRhdGUgJiYgIWRhdGEuZm9yY2VVcGRhdGUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5OmIOajgOa1i+WIsOWPr+mAieabtOaWsCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50VmVyc2lvbjogQ09ORklHLlZFUlNJT04sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGF0ZXN0VmVyc2lvbjogbGF0ZXN0VmVyc2lvbiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJSZXNwb25zZTogZGF0YQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZU9wdGlvbmFsVXBkYXRlKGRhdGEpOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfinIUg5pyN5Yqh56uv54q25oCB5qOA5p+l5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogZGF0YS5lbmFibGVkLA0KICAgICAgICAgICAgICAgICAgICAgICAgaGFzVXBkYXRlOiBkYXRhLmhhc1VwZGF0ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHZlcnNpb246IGxhdGVzdFZlcnNpb24sDQogICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVTdHJhdGVneTogZGF0YS5zZXJ2ZXJDb25maWc/LnVwZGF0ZVN0cmF0ZWd5LA0KICAgICAgICAgICAgICAgICAgICAgICAgbmV4dENoZWNrVGltZTogZGF0YS5uZXh0Q2hlY2tUaW1lDQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOmAmuefpVVJ5pu05paw54q25oCBDQogICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5VUlVcGRhdGUoKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IocmVzcG9uc2UuZXJyb3IgfHwgJ+acjeWKoeerr+i/lOWbnumUmeivrycpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmlzQ29ubmVjdGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgdGhpcy5yZXRyeUNvdW50Kys7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIu",
        "ZGVidWcoJ+KdjCDmnI3liqHnq6/nirbmgIHmo4Dmn6XlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICByZXRyeUNvdW50OiB0aGlzLnJldHJ5Q291bnQNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOmAmuefpVVJ5pu05paw54q25oCBDQogICAgICAgICAgICAgICAgdGhpcy5ub3RpZnlVSVVwZGF0ZSgpOw0KDQogICAgICAgICAgICAgICAgLy8g6L6+5Yiw5pyA5aSn6YeN6K+V5qyh5pWw5ZCO6ZmN5L2O5qOA5p+l6aKR546HDQogICAgICAgICAgICAgICAgaWYgKHRoaXMucmV0cnlDb3VudCA+PSBDT05GSUcuU0VSVkVSLm1heFJldHJpZXMpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ/CflIQg5pyN5Yqh56uv6L+e5o6l5aSx6LSl77yM6ZmN5L2O5qOA5p+l6aKR546HJyk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuYWRqdXN0Q2hlY2tJbnRlcnZhbCh0cnVlKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWPkemAgeW/g+i3sw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgc2VuZEhlYXJ0YmVhdCgpIHsNCiAgICAgICAgICAgIGlmICghdGhpcy5pc0Nvbm5lY3RlZCkgcmV0dXJuOw0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zZW5kUmVxdWVzdCgnL3NjcmlwdC9oZWFydGJlYXQnLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdGhpcy51c2VySWQsDQogICAgICAgICAgICAgICAgICAgIHZlcnNpb246IENPTkZJRy5WRVJTSU9OLA0KICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksDQogICAgICAgICAgICAgICAgICAgIHN0YXR1czogew0KICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogQ29uZmlnTWFuYWdlci5nZXQoJ2VuYWJsZWQnKSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHJ1bm5pbmc6IHdpbmRvdy5YSFNBdXRvUmVwbHk/LmlzUnVubmluZyB8fCBmYWxzZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogd2luZG93LmxvY2F0aW9uLmhyZWYNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0sICdQT1NUJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/CfkpMg5b+D6Lez5Y+R6YCB5oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfwn5KUIOW/g+i3s+WPkemAgeWksei0pScsIHsgZXJyb3I6IHJlc3BvbnNlLmVycm9yIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfwn5KU",
        "IOW/g+i3s+WPkemAgeW8guW4uCcsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuiEmuacrOiiq+emgeeUqA0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlU2NyaXB0RGlzYWJsZWQoKSB7DQogICAgICAgICAgICAvLyDlgZzmraLohJrmnKzov5DooYwNCiAgICAgICAgICAgIGlmICh3aW5kb3cuWEhTQXV0b1JlcGx5ICYmIHdpbmRvdy5YSFNBdXRvUmVwbHkuaXNSdW5uaW5nKSB7DQogICAgICAgICAgICAgICAgd2luZG93LlhIU0F1dG9SZXBseS5zdG9wKCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOaYvuekuumAmuefpQ0KICAgICAgICAgICAgR01fbm90aWZpY2F0aW9uKHsNCiAgICAgICAgICAgICAgICB0aXRsZTogQ09ORklHLkFQUF9OQU1FLA0KICAgICAgICAgICAgICAgIHRleHQ6ICfohJrmnKzlt7LooqvlvIDlj5HogIXnpoHnlKjvvIzor7fogZTns7vlvIDlj5HogIXkuobop6Por6bmg4UnLA0KICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDEwMDAwDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g56aB55So5pys5Zyw6YWN572uDQogICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZW5hYmxlZCcsIGZhbHNlKTsNCg0KICAgICAgICAgICAgLy8g6K6+572u5pyN5Yqh56uv56aB55So5qCH6K6wDQogICAgICAgICAgICB0aGlzLmxhc3RTZXJ2ZXJDaGVjayA9IERhdGUubm93KCk7DQoNCiAgICAgICAgICAgIExvZ2dlci53YXJuKCfwn5qrIOiEmuacrOW3suiiq+acjeWKoeerr+emgeeUqCcpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbohJrmnKzooqvph43mlrDlkK/nlKgNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVNjcmlwdEVuYWJsZWQoKSB7DQogICAgICAgICAgICAvLyDmmL7npLrpgJrnn6UNCiAgICAgICAgICAgIEdNX25vdGlmaWNhdGlvbih7DQogICAgICAgICAgICAgICAgdGl0bGU6IENPTkZJRy5BUFBfTkFNRSwNCiAgICAgICAgICAgICAgICB0ZXh0OiAn6ISa5pys5bey6KKr5byA5Y+R6ICF6YeN5paw5ZCv55SoJywNCiAgICAgICAgICAgICAgICB0aW1lb3V0OiA1MDAwDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g6YeN5paw5ZCv55So5pys5Zyw6YWN572uDQogICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZW5hYmxlZCcsIHRydWUpOw0KDQogICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOiEmuacrOW3suiiq+acjeWKoeerr+mHjeaWsOWQr+eUqCcpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIblvLrliLbmm7TmlrANCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUZvcmNlVXBkYXRlKHVwZGF0ZURhdGEpIHsNCiAgICAgICAgICAgIC8vIOWFvOWuueaWsOaXp0FQSeagvOW8jw0KICAgICAgICAgICAgY29uc3QgbGF0ZXN0VmVyc2lvbiA9IHVwZGF0ZURh",
        "dGEubGF0ZXN0VmVyc2lvbiB8fCB1cGRhdGVEYXRhLnZlcnNpb24gfHwgJ3Vua25vd24nOw0KICAgICAgICAgICAgY29uc3QgY2hhbmdlbG9nID0gdXBkYXRlRGF0YS5jaGFuZ2Vsb2cgfHwgdXBkYXRlRGF0YS52ZXJzaW9uSW5mbz8uY2hhbmdlbG9nIHx8ICfor7fmm7TmlrDliLDmnIDmlrDniYjmnKwnOw0KICAgICAgICAgICAgY29uc3QgdXBkYXRlVXJsID0gdXBkYXRlRGF0YS51cGRhdGVVcmwgfHwgdXBkYXRlRGF0YS52ZXJzaW9uSW5mbz8udXBkYXRlVXJsIHx8ICcnOw0KDQogICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gYOajgOa1i+WIsOW8uuWItuabtOaWsO+8gVxuXG7lvZPliY3niYjmnKzvvJoke0NPTkZJRy5WRVJTSU9OfVxu5pyA5paw54mI5pys77yaJHtsYXRlc3RWZXJzaW9ufVxuXG4ke2NoYW5nZWxvZ31cblxu54K55Ye756Gu5a6a6Lez6L2s5Yiw5pu05paw6aG16Z2iYDsNCg0KICAgICAgICAgICAgR01fbm90aWZpY2F0aW9uKHsNCiAgICAgICAgICAgICAgICB0aXRsZTogJ+W8uuWItuabtOaWsOmAmuefpScsDQogICAgICAgICAgICAgICAgdGV4dDogYOWPkeeOsOaWsOeJiOacrCAke2xhdGVzdFZlcnNpb25977yM5Y2z5bCG6Ieq5Yqo5pu05pawLi4uYCwNCiAgICAgICAgICAgICAgICB0aW1lb3V0OiA1MDAwDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8gM+enkuWQjuiHquWKqOi3s+i9rA0KICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgICAgICAgICAgaWYgKHVwZGF0ZVVybCkgew0KICAgICAgICAgICAgICAgICAgICB3aW5kb3cub3Blbih1cGRhdGVVcmwsICdfYmxhbmsnKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBhbGVydCgn6K+35omL5Yqo5pu05paw6ISa5pys5Yiw5pyA5paw54mI5pys77yaJyArIGxhdGVzdFZlcnNpb24pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sIDMwMDApOw0KDQogICAgICAgICAgICBMb2dnZXIud2Fybign8J+UhCDlvLrliLbmm7TmlrDop6blj5EnLCB7DQogICAgICAgICAgICAgICAgLi4udXBkYXRlRGF0YSwNCiAgICAgICAgICAgICAgICBwYXJzZWRWZXJzaW9uOiBsYXRlc3RWZXJzaW9uLA0KICAgICAgICAgICAgICAgIHBhcnNlZFVybDogdXBkYXRlVXJsDQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5Y+v6YCJ5pu05pawDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVPcHRpb25hbFVwZGF0ZSh1cGRhdGVEYXRhKSB7DQogICAgICAgICAgICAvLyDlhbzlrrnmlrDml6dBUEnmoLzlvI8NCiAgICAgICAgICAgIGNvbnN0IGxhdGVzdFZlcnNpb24gPSB1cGRhdGVEYXRhLmxhdGVzdFZlcnNpb24gfHwgdXBkYXRlRGF0YS52ZXJzaW9uIHx8ICd1bmtub3duJzsNCiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZVVybCA9IHVwZGF0ZURhdGEudXBkYXRlVXJsIHx8IHVwZGF0ZURhdGEudmVyc2lvbkluZm8/LnVwZGF0ZVVy",
        "bCB8fCAnJzsNCg0KICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5bey57uP5o+Q56S66L+H6L+Z5Liq54mI5pysDQogICAgICAgICAgICBjb25zdCBsYXN0Tm90aWZpZWRWZXJzaW9uID0gR01fZ2V0VmFsdWUoJ2xhc3Rfbm90aWZpZWRfdmVyc2lvbicpOw0KICAgICAgICAgICAgaWYgKGxhc3ROb3RpZmllZFZlcnNpb24gPT09IGxhdGVzdFZlcnNpb24pIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIEdNX25vdGlmaWNhdGlvbih7DQogICAgICAgICAgICAgICAgdGl0bGU6ICflj5HnjrDmlrDniYjmnKwnLA0KICAgICAgICAgICAgICAgIHRleHQ6IGDlj5HnjrDmlrDniYjmnKwgJHtsYXRlc3RWZXJzaW9ufe+8jOeCueWHu+afpeeci+abtOaWsGAsDQogICAgICAgICAgICAgICAgdGltZW91dDogODAwMCwNCiAgICAgICAgICAgICAgICBvbmNsaWNrOiAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGlmICh1cGRhdGVVcmwpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKHVwZGF0ZVVybCwgJ19ibGFuaycpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOiusOW9leW3suaPkOekuueahOeJiOacrA0KICAgICAgICAgICAgR01fc2V0VmFsdWUoJ2xhc3Rfbm90aWZpZWRfdmVyc2lvbicsIGxhdGVzdFZlcnNpb24pOw0KDQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+TpiDlj6/pgInmm7TmlrDpgJrnn6Xlt7LmmL7npLonLCB7DQogICAgICAgICAgICAgICAgLi4udXBkYXRlRGF0YSwNCiAgICAgICAgICAgICAgICBwYXJzZWRWZXJzaW9uOiBsYXRlc3RWZXJzaW9uLA0KICAgICAgICAgICAgICAgIHBhcnNlZFVybDogdXBkYXRlVXJsDQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6LCD5pW05qOA5p+l6Ze06ZqUDQogICAgICAgICAqLw0KICAgICAgICBhZGp1c3RDaGVja0ludGVydmFsKGluY3JlYXNlID0gZmFsc2UpIHsNCiAgICAgICAgICAgIGlmIChpbmNyZWFzZSkgew0KICAgICAgICAgICAgICAgIC8vIOWinuWKoOajgOafpemXtOmalOWIsDXliIbpkp8NCiAgICAgICAgICAgICAgICBpZiAodGhpcy5jaGVja1RpbWVyKSB7DQogICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5jaGVja1RpbWVyKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGVja1RpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGVja1NlcnZlclN0YXR1cygpOw0KICAgICAgICAgICAgICAgICAgICB9LCAzMDAwMDApOyAvLyA15YiG6ZKfDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAvLyDmgaLlpI3mraPluLjmo4Dmn6Xpl7TpmpQNCiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0VGltZXJzKCk7DQog",
        "ICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluWFrOWRig0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgZ2V0QW5ub3VuY2VtZW50cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnNlbmRSZXF1ZXN0KCcvYW5ub3VuY2VtZW50cy9wdWJsaWMnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdWNjZXNzICYmIHJlc3BvbnNlLmRhdGEubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAgICAgICAvLyDkv53lrZjmnIDmlrDlhazlkYrnlKjkuo5VSeaYvuekug0KICAgICAgICAgICAgICAgICAgICB0aGlzLmxhdGVzdEFubm91bmNlbWVudCA9IHJlc3BvbnNlLmRhdGFbMF07DQoNCiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UuZGF0YS5mb3JFYWNoKGFubm91bmNlbWVudCA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dBbm5vdW5jZW1lbnQoYW5ub3VuY2VtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g6YCa55+lVUnmm7TmlrDlhazlkYrmmL7npLoNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3RpZnlVSVVwZGF0ZSgpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfojrflj5blhazlkYrlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmnIDmlrDlhazlkYrvvIjnlKjkuo5VSeaYvuekuu+8iQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0TGF0ZXN0QW5ub3VuY2VtZW50KCkgew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMubGF0ZXN0QW5ub3VuY2VtZW50Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmmL7npLrlhazlkYoNCiAgICAgICAgICovDQogICAgICAgIHNob3dBbm5vdW5jZW1lbnQoYW5ub3VuY2VtZW50KSB7DQogICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblt7Lnu4/mmL7npLrov4fov5nkuKrlhazlkYoNCiAgICAgICAgICAgIGNvbnN0IHNob3duQW5ub3VuY2VtZW50cyA9IEdNX2dldFZhbHVlKCdzaG93bl9hbm5vdW5jZW1lbnRzJywgW10pOw0KICAgICAgICAgICAgaWYgKHNob3duQW5ub3VuY2VtZW50cy5pbmNsdWRlcyhhbm5vdW5jZW1lbnQuaWQpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmoLnmja7lhazlkYrnsbvlnovpgInmi6npgJrnn6XmoLflvI8NCiAgICAgICAgICAgIGxldCB0aXRsZSA9ICfwn5OiIOezu+e7n+WFrOWRiic7DQogICAgICAgICAgICBzd2l0Y2ggKGFubm91bmNlbWVudC50eXBlKSB7DQogICAgICAgICAgICAgICAgY2FzZSAnd2FybmluZyc6DQogICAg",
        "ICAgICAgICAgICAgICAgIHRpdGxlID0gJ+KaoO+4jyDph43opoHmj5DphpInOw0KICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICBjYXNlICdlcnJvcic6DQogICAgICAgICAgICAgICAgICAgIHRpdGxlID0gJ/Cfmqgg57Sn5oCl6YCa55+lJzsNCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgY2FzZSAnc3VjY2Vzcyc6DQogICAgICAgICAgICAgICAgICAgIHRpdGxlID0gJ+KchSDlpb3mtojmga8nOw0KICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgR01fbm90aWZpY2F0aW9uKHsNCiAgICAgICAgICAgICAgICB0aXRsZTogdGl0bGUsDQogICAgICAgICAgICAgICAgdGV4dDogYCR7YW5ub3VuY2VtZW50LnRpdGxlfVxuXG4ke2Fubm91bmNlbWVudC5jb250ZW50fWAsDQogICAgICAgICAgICAgICAgdGltZW91dDogMTAwMDANCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAvLyDorrDlvZXlt7LmmL7npLrnmoTlhazlkYoNCiAgICAgICAgICAgIHNob3duQW5ub3VuY2VtZW50cy5wdXNoKGFubm91bmNlbWVudC5pZCk7DQogICAgICAgICAgICBHTV9zZXRWYWx1ZSgnc2hvd25fYW5ub3VuY2VtZW50cycsIHNob3duQW5ub3VuY2VtZW50cyk7DQoNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5OiIOWFrOWRiuW3suaYvuekuicsIHsNCiAgICAgICAgICAgICAgICBpZDogYW5ub3VuY2VtZW50LmlkLA0KICAgICAgICAgICAgICAgIHRpdGxlOiBhbm5vdW5jZW1lbnQudGl0bGUNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XmnI3liqHnq6/mmK/lkKblhYHorrjohJrmnKzov5DooYwNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuWFgeiuuOi/kOihjA0KICAgICAgICAgKi8NCiAgICAgICAgaXNTY3JpcHRBbGxvd2VkKCkgew0KICAgICAgICAgICAgaWYgKCFDT05GSUcuU0VSVkVSLmVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsgLy8g5aaC5p6c5pyN5Yqh56uv5Yqf6IO96KKr56aB55So77yM5YiZ5YWB6K646L+Q6KGMDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOWmguaenOS7juacqui/nuaOpei/h+acjeWKoeerr++8jOWFgeiuuOi/kOihjO+8iOmBv+WFjee9kee7nOmXrumimOWvvOiHtOiEmuacrOaXoOazleS9v+eUqO+8iQ0KICAgICAgICAgICAgaWYgKHRoaXMubGFzdFNlcnZlckNoZWNrID09PSBudWxsKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOWmguaenOacgOi/keajgOafpei/h+S4lOiiq+emgeeUqO+8jOWImeS4jeWFgeiuuOi/kOihjA0KICAgICAgICAgICAgaWYgKCF0aGlzLnNlcnZlckVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICBjb25zdCB0aW1lU2luY2VMYXN0Q2hlY2sgPSBEYXRlLm5vdygpIC0g",
        "dGhpcy5sYXN0U2VydmVyQ2hlY2s7DQogICAgICAgICAgICAgICAgLy8g5aaC5p6c6LaF6L+HNeWIhumSn+ayoeacieajgOafpe+8jOWFgeiuuOi/kOihjO+8iOmBv+WFjee9kee7nOmXrumimO+8iQ0KICAgICAgICAgICAgICAgIGlmICh0aW1lU2luY2VMYXN0Q2hlY2sgPiA1ICogNjAgKiAxMDAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfimqDvuI8g5pyN5Yqh56uv5qOA5p+l6LaF5pe277yM5YWB6K646ISa5pys6L+Q6KGMJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpgJrnn6VVSeabtOaWsOeKtuaAgQ0KICAgICAgICAgKi8NCiAgICAgICAgbm90aWZ5VUlVcGRhdGUoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuVUlNYW5hZ2VyICYmIHR5cGVvZiB3aW5kb3cuVUlNYW5hZ2VyLnVwZGF0ZVNlcnZlclN0YXR1cyA9PT0gJ2Z1bmN0aW9uJykgew0KICAgICAgICAgICAgICAgICAgICB3aW5kb3cuVUlNYW5hZ2VyLnVwZGF0ZVNlcnZlclN0YXR1cygpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpgJrnn6VVSeabtOaWsOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmUgOavgeacjeWKoeerr+euoeeQhuWZqA0KICAgICAgICAgKi8NCiAgICAgICAgZGVzdHJveSgpIHsNCiAgICAgICAgICAgIHRoaXMuc3RvcFRpbWVycygpOw0KICAgICAgICAgICAgdGhpcy5pc0Nvbm5lY3RlZCA9IGZhbHNlOw0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CfjJAg5pyN5Yqh56uv566h55CG5Zmo5bey6ZSA5q+BJyk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDphY3nva7lr7zlh7rnrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IENvbmZpZ0V4cG9ydE1hbmFnZXIgPSB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiDlr7zlh7rku4XphY3nva7mlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGV4cG9ydENvbmZpZ09ubHk6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5byA5aeL5a+85Ye66YWN572u5pWw5o2uJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IENvbmZpZ01hbmFnZXIuZ2V0QWxsQ29uZmlnV2l0aE1ldGFkYXRhKCk7DQogICAgICAgICAgICAgICAgdGhpcy5kb3dubG9hZEZpbGUoZGF0",
        "YSwgJ2NvbmZpZycpOw0KICAgICAgICAgICAgICAgIFVJTWFuYWdlci5zaG93Tm90aWZpY2F0aW9uKCfphY3nva7lt7Llr7zlh7onLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WvvOWHuumFjee9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24oJ+WvvOWHuumFjee9ruWksei0pTogJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlr7zlh7rlrozmlbTmlbDmja7vvIjphY3nva4r55So5oi35pWw5o2u77yJDQogICAgICAgICAqLw0KICAgICAgICBleHBvcnRGdWxsRGF0YTogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOehruiupOWvueivneahhg0KICAgICAgICAgICAgICAgIGlmICghY29uZmlybSgn5a+85Ye65a6M5pW05pWw5o2u5bCG5YyF5ZCr6buR5ZCN5Y2V44CB5Lya6K+d6K6w5b+G562J55So5oi35pWw5o2u44CCXG7noa7lrpropoHnu6fnu63lkJfvvJ8nKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W8gOWni+WvvOWHuuWujOaVtOaVsOaNricpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBDb25maWdNYW5hZ2VyLmdldEZ1bGxEYXRhV2l0aE1ldGFkYXRhKCk7DQogICAgICAgICAgICAgICAgdGhpcy5kb3dubG9hZEZpbGUoZGF0YSwgJ2Z1bGwnKTsNCiAgICAgICAgICAgICAgICBVSU1hbmFnZXIuc2hvd05vdGlmaWNhdGlvbign5a6M5pW05pWw5o2u5bey5a+85Ye6JywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflr7zlh7rlrozmlbTmlbDmja7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIFVJTWFuYWdlci5zaG93Tm90aWZpY2F0aW9uKCflr7zlh7rlrozmlbTmlbDmja7lpLHotKU6ICcgKyBlcnJvci5tZXNzYWdlLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog55Sf5oiQ5paH5Lu25ZCNDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlIOWvvOWHuuexu+Weiw0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2VuZXJhdGVGaWxlTmFtZTogZnVuY3Rpb24odHlwZSkgew0KICAgICAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTsNCiAgICAgICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IG5vdy5nZXRGdWxsWWVhcigpICsNCiAgICAgICAgICAgICAgICBTdHJpbmcobm93LmdldE1vbnRoKCkgKyAxKS5wYWRTdGFydCgyLCAn",
        "MCcpICsNCiAgICAgICAgICAgICAgICBTdHJpbmcobm93LmdldERhdGUoKSkucGFkU3RhcnQoMiwgJzAnKSArICctJyArDQogICAgICAgICAgICAgICAgU3RyaW5nKG5vdy5nZXRIb3VycygpKS5wYWRTdGFydCgyLCAnMCcpICsNCiAgICAgICAgICAgICAgICBTdHJpbmcobm93LmdldE1pbnV0ZXMoKSkucGFkU3RhcnQoMiwgJzAnKSArDQogICAgICAgICAgICAgICAgU3RyaW5nKG5vdy5nZXRTZWNvbmRzKCkpLnBhZFN0YXJ0KDIsICcwJyk7DQoNCiAgICAgICAgICAgIGNvbnN0IHByZWZpeCA9IHR5cGUgPT09ICdmdWxsJyA/ICd4aHMtYXV0by1yZXBseS1mdWxsJyA6ICd4aHMtYXV0by1yZXBseS1jb25maWcnOw0KICAgICAgICAgICAgcmV0dXJuIGAke3ByZWZpeH0tJHt0aW1lc3RhbXB9Lmpzb25gOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDkuIvovb3mlofku7YNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEg5pWw5o2uDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0eXBlIOexu+Weiw0KICAgICAgICAgKi8NCiAgICAgICAgZG93bmxvYWRGaWxlOiBmdW5jdGlvbihkYXRhLCB0eXBlKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGpzb25TdHJpbmcgPSBKU09OLnN0cmluZ2lmeShkYXRhLCBudWxsLCAyKTsNCiAgICAgICAgICAgICAgICBjb25zdCBmaWxlTmFtZSA9IHRoaXMuZ2VuZXJhdGVGaWxlTmFtZSh0eXBlKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTE6IOWwneivleS9v+eUqEdNX2Rvd25sb2FkICjlpoLmnpzlj6/nlKgpDQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBHTV9kb3dubG9hZCAhPT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbanNvblN0cmluZ10sIHsgdHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIEdNX2Rvd25sb2FkKHVybCwgZmlsZU5hbWUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiBVUkwucmV2b2tlT2JqZWN0VVJMKHVybCksIDEwMDApOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+S9v+eUqEdNX2Rvd25sb2Fk5LiL6L295paH5Lu2JywgeyBmaWxlTmFtZSwgc2l6ZToganNvblN0cmluZy5sZW5ndGggfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGdtRXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdHTV9kb3dubG9hZOWksei0pe+8jOWwneivleWFtuS7luaWueazlScsIHsgZXJyb3I6IGdtRXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAg",
        "ICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTI6IOS9v+eUqOS8oOe7n+eahOmTvuaOpeS4i+i9veaWueW8jw0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbanNvblN0cmluZ10sIHsgdHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nIH0pOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOw0KDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7DQogICAgICAgICAgICAgICAgICAgIGxpbmsuaHJlZiA9IHVybDsNCiAgICAgICAgICAgICAgICAgICAgbGluay5kb3dubG9hZCA9IGZpbGVOYW1lOw0KICAgICAgICAgICAgICAgICAgICBsaW5rLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g56Gu5L+d6ZO+5o6l6KKr5re75Yqg5YiwRE9N5LitDQogICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobGluayk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g6Kem5Y+R54K55Ye75LqL5Lu2DQogICAgICAgICAgICAgICAgICAgIGlmIChsaW5rLmNsaWNrKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBsaW5rLmNsaWNrKCk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlhbzlrrnmgKflpITnkIYNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IE1vdXNlRXZlbnQoJ2NsaWNrJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXc6IHdpbmRvdywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWJibGVzOiB0cnVlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbmNlbGFibGU6IHRydWUNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgbGluay5kaXNwYXRjaEV2ZW50KGV2ZW50KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIC8vIOW7tui/n+a4heeQhg0KICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQobGluayk7DQogICAgICAgICAgICAgICAgICAgICAgICBVUkwucmV2b2tlT2JqZWN0VVJMKHVybCk7DQogICAgICAgICAgICAgICAgICAgIH0sIDEwMCk7DQoNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+S9v+eUqOmTvuaOpeS4i+i9veaWh+S7ticsIHsgZmlsZU5hbWUsIHNpemU6IGpzb25TdHJpbmcubGVuZ3RoIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfSBjYXRjaCAobGlua0Vycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfpk77mjqXkuIvovb3lpLHotKXv",
        "vIzlsJ3or5XlpI3liLbliLDliarotLTmnb8nLCB7IGVycm9yOiBsaW5rRXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5UzOiDpmY3nuqfliLDlpI3liLbliLDliarotLTmnb8NCiAgICAgICAgICAgICAgICBpZiAobmF2aWdhdG9yLmNsaXBib2FyZCAmJiBuYXZpZ2F0b3IuY2xpcGJvYXJkLndyaXRlVGV4dCkgew0KICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0b3IuY2xpcGJvYXJkLndyaXRlVGV4dChqc29uU3RyaW5nKS50aGVuKCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KGDmlofku7bkuIvovb3lpLHotKXvvIzphY3nva7mlbDmja7lt7LlpI3liLbliLDliarotLTmnb/jgIJcblxu6K+35omL5Yqo5Yib5bu65paH5Lu2ICIke2ZpbGVOYW1lfSIg5bm257KY6LS05YaF5a6544CCYCk7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6YWN572u5pWw5o2u5bey5aSN5Yi25Yiw5Ymq6LS05p2/JywgeyBmaWxlTmFtZSwgc2l6ZToganNvblN0cmluZy5sZW5ndGggfSk7DQogICAgICAgICAgICAgICAgICAgIH0pLmNhdGNoKCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZmFsbGJhY2tDb3B5TWV0aG9kKGpzb25TdHJpbmcsIGZpbGVOYW1lKTsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5mYWxsYmFja0NvcHlNZXRob2QoanNvblN0cmluZywgZmlsZU5hbWUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+aWh+S7tuS4i+i9veWksei0pTogJyArIGVycm9yLm1lc3NhZ2UpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpmY3nuqflpI3liLbmlrnms5UNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRlbnQg5YaF5a65DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBmaWxlTmFtZSDmlofku7blkI0NCiAgICAgICAgICovDQogICAgICAgIGZhbGxiYWNrQ29weU1ldGhvZDogZnVuY3Rpb24oY29udGVudCwgZmlsZU5hbWUpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5Yib5bu65Li05pe25paH5pys5Yy65Z+fDQogICAgICAgICAgICAgICAgY29uc3QgdGV4dEFyZWEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZXh0YXJlYScpOw0KICAgICAgICAgICAgICAgIHRleHRBcmVhLnZhbHVlID0gY29udGVudDsNCiAgICAgICAgICAgICAgICB0ZXh0QXJlYS5zdHlsZS5wb3NpdGlvbiA9ICdmaXhlZCc7DQogICAgICAgICAgICAgICAgdGV4dEFyZWEuc3R5bGUubGVmdCA9ICctOTk5OTk5cHgnOw0KICAgICAgICAgICAgICAgIHRleHRBcmVhLnN0eWxlLnRvcCA9ICctOTk5OTk5cHgnOw0KICAgICAgICAgICAgICAgIGRvY3Vt",
        "ZW50LmJvZHkuYXBwZW5kQ2hpbGQodGV4dEFyZWEpOw0KICAgICAgICAgICAgICAgIHRleHRBcmVhLmZvY3VzKCk7DQogICAgICAgICAgICAgICAgdGV4dEFyZWEuc2VsZWN0KCk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBzdWNjZXNzZnVsID0gZG9jdW1lbnQuZXhlY0NvbW1hbmQoJ2NvcHknKTsNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHRleHRBcmVhKTsNCg0KICAgICAgICAgICAgICAgIGlmIChzdWNjZXNzZnVsKSB7DQogICAgICAgICAgICAgICAgICAgIGFsZXJ0KGDmlofku7bkuIvovb3lpLHotKXvvIzphY3nva7mlbDmja7lt7LlpI3liLbliLDliarotLTmnb/jgIJcblxu6K+35omL5Yqo5Yib5bu65paH5Lu2ICIke2ZpbGVOYW1lfSIg5bm257KY6LS05YaF5a6544CCYCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfkvb/nlKjpmY3nuqfmlrnms5XlpI3liLbliLDliarotLTmnb8nLCB7IGZpbGVOYW1lIH0pOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOacgOWQjueahOmZjee6p+aWueahiO+8muaYvuekuuWGheWuuQ0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dDb25maWdJbk1vZGFsKGNvbnRlbnQsIGZpbGVOYW1lKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6ZmN57qn5aSN5Yi25aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dDb25maWdJbk1vZGFsKGNvbnRlbnQsIGZpbGVOYW1lKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Zyo5qih5oCB5qGG5Lit5pi+56S66YWN572u5YaF5a65DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb250ZW50IOWGheWuuQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gZmlsZU5hbWUg5paH5Lu25ZCNDQogICAgICAgICAqLw0KICAgICAgICBzaG93Q29uZmlnSW5Nb2RhbDogZnVuY3Rpb24oY29udGVudCwgZmlsZU5hbWUpIHsNCiAgICAgICAgICAgIGNvbnN0IG1vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7DQogICAgICAgICAgICBtb2RhbC5zdHlsZS5jc3NUZXh0ID0gYA0KICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDsNCiAgICAgICAgICAgICAgICB0b3A6IDA7DQogICAgICAgICAgICAgICAgbGVmdDogMDsNCiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwwLjgpOw0KICAgICAgICAgICAgICAgIHotaW5kZXg6IDk5OTk5OTsNCiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAganVzdGlm",
        "eS1jb250ZW50OiBjZW50ZXI7DQogICAgICAgICAgICBgOw0KDQogICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsNCiAgICAgICAgICAgIGNvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gYA0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlOw0KICAgICAgICAgICAgICAgIHBhZGRpbmc6IDIwcHg7DQogICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4Ow0KICAgICAgICAgICAgICAgIG1heC13aWR0aDogODAlOw0KICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDgwJTsNCiAgICAgICAgICAgICAgICBvdmVyZmxvdzogYXV0bzsNCiAgICAgICAgICAgIGA7DQoNCiAgICAgICAgICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSBgDQogICAgICAgICAgICAgICAgPGgzPumFjee9ruWvvOWHuiAtICR7ZmlsZU5hbWV9PC9oMz4NCiAgICAgICAgICAgICAgICA8cD7or7flpI3liLbku6XkuIvlhoXlrrnlubbkv53lrZjkuLogJHtmaWxlTmFtZX0g5paH5Lu277yaPC9wPg0KICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSByZWFkb25seSBzdHlsZT0id2lkdGg6IDEwMCU7IGhlaWdodDogMzAwcHg7IGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7Ij4ke2NvbnRlbnR9PC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICA8YnI+PGJyPg0KICAgICAgICAgICAgICAgIDxidXR0b24gb25jbGljaz0idGhpcy5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQucmVtb3ZlKCkiIHN0eWxlPSJwYWRkaW5nOiA4cHggMTZweDsiPuWFs+mXrTwvYnV0dG9uPg0KICAgICAgICAgICAgYDsNCg0KICAgICAgICAgICAgbW9kYWwuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTsNCiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobW9kYWwpOw0KDQogICAgICAgICAgICAvLyDoh6rliqjpgInmi6nmlofmnKwNCiAgICAgICAgICAgIGNvbnN0IHRleHRhcmVhID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJ3RleHRhcmVhJyk7DQogICAgICAgICAgICB0ZXh0YXJlYS5mb2N1cygpOw0KICAgICAgICAgICAgdGV4dGFyZWEuc2VsZWN0KCk7DQoNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCflnKjmqKHmgIHmoYbkuK3mmL7npLrphY3nva7lhoXlrrknLCB7IGZpbGVOYW1lIH0pOw0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g6ZSZ6K+v5o6o6YCB566h55CG5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBFcnJvck5vdGlmaWNhdGlvbk1hbmFnZXIgPSB7DQogICAgICAgIC8vIOaOqOmAgeWOhuWPsuiusOW9lQ0KICAgICAgICBwdXNoSGlzdG9yeTogW10sDQogICAgICAgIG1heEhpc3RvcnlTaXplOiAxMDAsDQoNCiAgICAgICAgLy8g6ZSZ6K+v5Y676YeN57yT5a2YDQogICAgICAgIGRlZHVwbGljYXRpb25DYWNoZTogbmV3IE1hcCgpLA0KDQogICAgICAgIC8vIOaO",
        "qOmAgemikeeOh+mZkOWItg0KICAgICAgICByYXRlTGltaXRDYWNoZTogW10sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIneWni+WMlumUmeivr+aOqOmAgeeuoeeQhuWZqA0KICAgICAgICAgKi8NCiAgICAgICAgaW5pdDogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOa4heeQhui/h+acn+eahOWOu+mHjee8k+WtmA0KICAgICAgICAgICAgICAgIHRoaXMuY2xlYW51cERlZHVwbGljYXRpb25DYWNoZSgpOw0KDQogICAgICAgICAgICAgICAgLy8g6K6+572u5a6a5pyf5riF55CG5Lu75YqhDQogICAgICAgICAgICAgICAgc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNsZWFudXBEZWR1cGxpY2F0aW9uQ2FjaGUoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhbnVwUmF0ZUxpbWl0Q2FjaGUoKTsNCiAgICAgICAgICAgICAgICB9LCA2MDAwMCk7IC8vIOavj+WIhumSn+a4heeQhuS4gOasoQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfplJnor6/mjqjpgIHnrqHnkIblmajlt7LliJ3lp4vljJYnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfplJnor6/mjqjpgIHnrqHnkIblmajliJ3lp4vljJblpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlj5HpgIHplJnor6/mjqjpgIHpgJrnn6UNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGxldmVsIOmUmeivr+e6p+WIqyAoZXJyb3IsIHdhcm4sIGluZm8pDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIOmUmeivr+a2iOaBrw0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSDpmYTliqDmlbDmja4NCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzZW5kTm90aWZpY2F0aW9uKGxldmVsLCBtZXNzYWdlLCBkYXRhID0ge30pIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5ZCv55So5o6o6YCBDQogICAgICAgICAgICAgICAgaWYgKCFDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25FbmFibGVkJykpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfplJnor6/mjqjpgIHlip/og73mnKrlkK/nlKjvvIzot7Pov4fmjqjpgIEnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpemUmeivr+e6p+WIq+i/h+a7pA0KICAgICAgICAgICAgICAgIGlmICghdGhpcy5zaG91bGRQdXNoTGV2ZWwobGV2ZWwpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6ZSZ6K+v57qn5Yir5LiN5Zyo5o6o6YCB6IyD5Zu05YaFJywg",
        "eyBsZXZlbCB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWFs+mUruivjei/h+a7pA0KICAgICAgICAgICAgICAgIGlmICghdGhpcy5zaG91bGRQdXNoQnlLZXl3b3JkcyhtZXNzYWdlLCBkYXRhKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mUmeivr+a2iOaBr+iiq+WFs+mUruivjei/h+a7pCcsIHsgbWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpemUmeivr+WOu+mHjQ0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzRHVwbGljYXRlRXJyb3IobGV2ZWwsIG1lc3NhZ2UsIGRhdGEpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6YeN5aSN6ZSZ6K+v77yM6Lez6L+H5o6o6YCBJywgeyBsZXZlbCwgbWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaOqOmAgemikeeOh+mZkOWItg0KICAgICAgICAgICAgICAgIGlmICghdGhpcy5jaGVja1JhdGVMaW1pdCgpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmjqjpgIHpopHnjofotoXpmZDvvIzot7Pov4fmjqjpgIEnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaehOW7uuaOqOmAgeWGheWuuQ0KICAgICAgICAgICAgICAgIGNvbnN0IHB1c2hDb250ZW50ID0gdGhpcy5idWlsZFB1c2hDb250ZW50KGxldmVsLCBtZXNzYWdlLCBkYXRhKTsNCg0KICAgICAgICAgICAgICAgIC8vIOa1i+ivleaooeW8j+WPquiusOW9leaXpeW/lw0KICAgICAgICAgICAgICAgIGlmIChDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25UZXN0TW9kZScpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn6eqIOa1i+ivleaooeW8j+aOqOmAgScsIHsgY29udGVudDogcHVzaENvbnRlbnQgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWPkemAgeaOqOmAge+8iOWFiOWwneivlVBPU1TvvIzlpLHotKXlkI7lsJ3or5VHRVTvvIkNCiAgICAgICAgICAgICAgICBsZXQgc3VjY2VzcyA9IGF3YWl0IHRoaXMuc2VuZFB1c2hSZXF1ZXN0KHB1c2hDb250ZW50KTsNCg0KICAgICAgICAgICAgICAgIGlmICghc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+UhCBQT1NU5o6o6YCB5aSx6LSl77yM5bCd6K+VR0VU5pa55byPJyk7DQogICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3MgPSBhd2FpdCB0aGlzLnNlbmRQdXNoUmVxdWVzdFZpYUdldChwdXNoQ29udGVudCk7",
        "DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g6K6w5b2V5o6o6YCB5Y6G5Y+yDQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVjb3JkUHVzaEhpc3RvcnkobGV2ZWwsIG1lc3NhZ2UsIGRhdGEsIHB1c2hDb250ZW50KTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDmt7vliqDliLDljrvph43nvJPlrZgNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRUb0RlZHVwbGljYXRpb25DYWNoZShsZXZlbCwgbWVzc2FnZSwgZGF0YSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g6K6w5b2V5Yiw6aKR546H6ZmQ5Yi257yT5a2YDQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVjb3JkUmF0ZUxpbWl0KCk7DQoNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDplJnor6/mjqjpgIHlj5HpgIHmiJDlip8nLCB7IGxldmVsLCBtZXNzYWdlOiBtZXNzYWdlLnN1YnN0cmluZygwLCA1MCkgfSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfinYwg6ZSZ6K+v5o6o6YCB5Y+R6YCB5aSx6LSlJywgeyBsZXZlbCwgbWVzc2FnZTogbWVzc2FnZS5zdWJzdHJpbmcoMCwgNTApIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiBzdWNjZXNzOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Y+R6YCB6ZSZ6K+v5o6o6YCB5pe25Ye66ZSZJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSwgbGV2ZWwsIG1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XplJnor6/nuqfliKvmmK/lkKblupTor6XmjqjpgIENCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGxldmVsIOmUmeivr+e6p+WIqw0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIHNob3VsZFB1c2hMZXZlbChsZXZlbCkgew0KICAgICAgICAgICAgY29uc3QgZW5hYmxlZExldmVscyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkxldmVscycsICdlcnJvcicpLnNwbGl0KCcsJykubWFwKGwgPT4gbC50cmltKCkpOw0KICAgICAgICAgICAgcmV0dXJuIGVuYWJsZWRMZXZlbHMuaW5jbHVkZXMobGV2ZWwpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XlhbPplK7or43ov4fmu6QNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2Ug6ZSZ6K+v5raI5oGvDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIOmZhOWKoOaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIHNob3VsZFB1c2hCeUtleXdvcmRzKG1lc3NhZ2UsIGRh",
        "dGEpIHsNCiAgICAgICAgICAgIGNvbnN0IGluY2x1ZGVLZXl3b3JkcyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbktleXdvcmRzJywgJycpLnNwbGl0KCcsJykubWFwKGsgPT4gay50cmltKCkpLmZpbHRlcihrID0+IGspOw0KICAgICAgICAgICAgY29uc3QgZXhjbHVkZUtleXdvcmRzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uRXhjbHVkZUtleXdvcmRzJywgJycpLnNwbGl0KCcsJykubWFwKGsgPT4gay50cmltKCkpLmZpbHRlcihrID0+IGspOw0KDQogICAgICAgICAgICBjb25zdCBmdWxsVGV4dCA9IG1lc3NhZ2UgKyAnICcgKyBKU09OLnN0cmluZ2lmeShkYXRhKTsNCg0KICAgICAgICAgICAgLy8g5qOA5p+l5o6S6Zmk5YWz6ZSu6K+NDQogICAgICAgICAgICBpZiAoZXhjbHVkZUtleXdvcmRzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGtleXdvcmQgb2YgZXhjbHVkZUtleXdvcmRzKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChmdWxsVGV4dC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGtleXdvcmQudG9Mb3dlckNhc2UoKSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5p+l5YyF5ZCr5YWz6ZSu6K+N77yI5aaC5p6c6YWN572u5LqG77yJDQogICAgICAgICAgICBpZiAoaW5jbHVkZUtleXdvcmRzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGtleXdvcmQgb2YgaW5jbHVkZUtleXdvcmRzKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChmdWxsVGV4dC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKGtleXdvcmQudG9Mb3dlckNhc2UoKSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8g6YWN572u5LqG5YyF5ZCr5YWz6ZSu6K+N5L2G6YO95LiN5Yy56YWNDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiB0cnVlOyAvLyDmsqHmnInphY3nva7ljIXlkKvlhbPplK7or43vvIzpgJrov4fmjpLpmaTlhbPplK7or43mo4Dmn6XljbPlj68NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l5piv5ZCm5Li66YeN5aSN6ZSZ6K+vDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbCDplJnor6/nuqfliKsNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2Ug6ZSZ6K+v5raI5oGvDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIOmZhOWKoOaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGlzRHVwbGljYXRlRXJyb3IobGV2ZWwsIG1lc3NhZ2UsIGRhdGEpIHsNCiAgICAgICAg",
        "ICAgIGlmICghQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uRGVkdXBsaWNhdGlvbicpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb25zdCBlcnJvcktleSA9IHRoaXMuZ2VuZXJhdGVFcnJvcktleShsZXZlbCwgbWVzc2FnZSwgZGF0YSk7DQogICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgY29uc3Qgd2luZG93TXMgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25EZWR1cGxpY2F0aW9uV2luZG93JywgMTApICogNjAgKiAxMDAwOw0KDQogICAgICAgICAgICBpZiAodGhpcy5kZWR1cGxpY2F0aW9uQ2FjaGUuaGFzKGVycm9yS2V5KSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGxhc3RUaW1lID0gdGhpcy5kZWR1cGxpY2F0aW9uQ2FjaGUuZ2V0KGVycm9yS2V5KTsNCiAgICAgICAgICAgICAgICBpZiAobm93IC0gbGFzdFRpbWUgPCB3aW5kb3dNcykgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsgLy8g6YeN5aSN6ZSZ6K+vDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOeUn+aIkOmUmeivr+WUr+S4gOmUrg0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGV2ZWwg6ZSZ6K+v57qn5YirDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIOmUmeivr+a2iOaBrw0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSDpmYTliqDmlbDmja4NCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIGdlbmVyYXRlRXJyb3JLZXkobGV2ZWwsIG1lc3NhZ2UsIGRhdGEpIHsNCiAgICAgICAgICAgIC8vIOeugOWMlua2iOaBr+WGheWuue+8jOWOu+mZpOaXtumXtOaIs+etieWPmOWMlumDqOWIhg0KICAgICAgICAgICAgY29uc3Qgc2ltcGxpZmllZE1lc3NhZ2UgPSBtZXNzYWdlDQogICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xkezR9LVxkezJ9LVxkezJ9VFxkezJ9OlxkezJ9OlxkezJ9L2csICdUSU1FU1RBTVAnKSAvLyBJU0/ml7bpl7TmiLMNCiAgICAgICAgICAgICAgICAucmVwbGFjZSgvXGR7Mn06XGR7Mn06XGR7Mn0vZywgJ1RJTUUnKSAvLyDml7bpl7QNCiAgICAgICAgICAgICAgICAucmVwbGFjZSgvXGQrbXMvZywgJ0RVUkFUSU9OJykgLy8g5oyB57ut5pe26Ze0DQogICAgICAgICAgICAgICAgLnJlcGxhY2UoL2F0dGVtcHQgXGQrL2csICdhdHRlbXB0IE4nKSAvLyDlsJ3or5XmrKHmlbANCiAgICAgICAgICAgICAgICAuc3Vic3RyaW5nKDAsIDEwMCk7IC8vIOmZkOWItumVv+W6pg0KDQogICAgICAgICAgICByZXR1cm4gYCR7bGV2ZWx9OiR7c2ltcGxpZmllZE1lc3NhZ2V9YDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5re75Yqg5Yiw5Y676YeN57yT5a2Y",
        "DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbCDplJnor6/nuqfliKsNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2Ug6ZSZ6K+v5raI5oGvDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIOmZhOWKoOaVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgYWRkVG9EZWR1cGxpY2F0aW9uQ2FjaGUobGV2ZWwsIG1lc3NhZ2UsIGRhdGEpIHsNCiAgICAgICAgICAgIGNvbnN0IGVycm9yS2V5ID0gdGhpcy5nZW5lcmF0ZUVycm9yS2V5KGxldmVsLCBtZXNzYWdlLCBkYXRhKTsNCiAgICAgICAgICAgIHRoaXMuZGVkdXBsaWNhdGlvbkNhY2hlLnNldChlcnJvcktleSwgRGF0ZS5ub3coKSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heeQhui/h+acn+eahOWOu+mHjee8k+WtmA0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYW51cERlZHVwbGljYXRpb25DYWNoZSgpIHsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBjb25zdCB3aW5kb3dNcyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkRlZHVwbGljYXRpb25XaW5kb3cnLCAxMCkgKiA2MCAqIDEwMDA7DQoNCiAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdGltZXN0YW1wXSBvZiB0aGlzLmRlZHVwbGljYXRpb25DYWNoZS5lbnRyaWVzKCkpIHsNCiAgICAgICAgICAgICAgICBpZiAobm93IC0gdGltZXN0YW1wID4gd2luZG93TXMpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5kZWR1cGxpY2F0aW9uQ2FjaGUuZGVsZXRlKGtleSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XmjqjpgIHpopHnjofpmZDliLYNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBjaGVja1JhdGVMaW1pdCgpIHsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBjb25zdCBsaW1pdE1pbnV0ZXMgPSAxOyAvLyAx5YiG6ZKf5YaF55qE6ZmQ5Yi2DQogICAgICAgICAgICBjb25zdCBtYXhQdXNoZXMgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25SYXRlTGltaXQnLCA1KTsNCg0KICAgICAgICAgICAgLy8g5riF55CG6L+H5pyf6K6w5b2VDQogICAgICAgICAgICB0aGlzLnJhdGVMaW1pdENhY2hlID0gdGhpcy5yYXRlTGltaXRDYWNoZS5maWx0ZXIodGltZSA9PiBub3cgLSB0aW1lIDwgbGltaXRNaW51dGVzICogNjAgKiAxMDAwKTsNCg0KICAgICAgICAgICAgcmV0dXJuIHRoaXMucmF0ZUxpbWl0Q2FjaGUubGVuZ3RoIDwgbWF4UHVzaGVzOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorrDlvZXmjqjpgIHliLDpopHnjofpmZDliLbnvJPlrZgNCiAgICAgICAgICovDQogICAgICAgIHJlY29yZFJhdGVMaW1pdCgpIHsNCiAgICAgICAgICAgIHRoaXMucmF0",
        "ZUxpbWl0Q2FjaGUucHVzaChEYXRlLm5vdygpKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF55CG6aKR546H6ZmQ5Yi257yT5a2YDQogICAgICAgICAqLw0KICAgICAgICBjbGVhbnVwUmF0ZUxpbWl0Q2FjaGUoKSB7DQogICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgY29uc3QgbGltaXRNaW51dGVzID0gMTsNCiAgICAgICAgICAgIHRoaXMucmF0ZUxpbWl0Q2FjaGUgPSB0aGlzLnJhdGVMaW1pdENhY2hlLmZpbHRlcih0aW1lID0+IG5vdyAtIHRpbWUgPCBsaW1pdE1pbnV0ZXMgKiA2MCAqIDEwMDApOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmnoTlu7rmjqjpgIHlhoXlrrkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGxldmVsIOmUmeivr+e6p+WIqw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSDplJnor6/mtojmga8NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEg6ZmE5Yqg5pWw5o2uDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBidWlsZFB1c2hDb250ZW50KGxldmVsLCBtZXNzYWdlLCBkYXRhKSB7DQogICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvblRlbXBsYXRlJywNCiAgICAgICAgICAgICAgICAn8J+aqCDlsI/nuqLkuaZBSeiHquWKqOWbnuWkjeW3peWFt+mUmeivr+aKpeitplxuXG7ij7Ag5pe26Ze077yae3RpbWVzdGFtcH1cbvCflI0g6ZSZ6K+v57G75Z6L77yae2xldmVsfVxu8J+TnSDplJnor6/kv6Hmga/vvJp7bWVzc2FnZX1cbvCfkaQg55So5oi377yae3VzZXJ9XG7wn5SXIOivpuaDhe+8mntkZXRhaWxzfScpOw0KDQogICAgICAgICAgICAvLyDojrflj5blvZPliY3nlKjmiLfkv6Hmga8NCiAgICAgICAgICAgIGxldCBjdXJyZW50VXNlciA9ICfmnKrnn6UnOw0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAod2luZG93LlhIU0F1dG9SZXBseSAmJiB3aW5kb3cuWEhTQXV0b1JlcGx5LmN1cnJlbnRVc2VyKSB7DQogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRVc2VyID0gd2luZG93LlhIU0F1dG9SZXBseS5jdXJyZW50VXNlci51c2VyTmFtZSB8fCB3aW5kb3cuWEhTQXV0b1JlcGx5LmN1cnJlbnRVc2VyLnVzZXJJZCB8fCAn5pyq55+lJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlKSB7DQogICAgICAgICAgICAgICAgLy8g5b+955Wl6I635Y+W55So5oi35L+h5oGv55qE6ZSZ6K+vDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOaehOW7uuivpuaDheS/oeaBrw0KICAgICAgICAgICAgbGV0IGRldGFpbHMgPSAnJzsNCiAgICAgICAgICAgIGlmIChkYXRhICYmIE9iamVjdC5rZXlzKGRhdGEpLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICBjb25zdCBmaWx0ZXJlZERhdGEgPSB7IC4uLmRhdGEg",
        "fTsNCiAgICAgICAgICAgICAgICAvLyDnp7vpmaTmlY/mhJ/kv6Hmga8NCiAgICAgICAgICAgICAgICBkZWxldGUgZmlsdGVyZWREYXRhLmFwaUtleTsNCiAgICAgICAgICAgICAgICBkZWxldGUgZmlsdGVyZWREYXRhLnBhc3N3b3JkOw0KICAgICAgICAgICAgICAgIGRlbGV0ZSBmaWx0ZXJlZERhdGEudG9rZW47DQoNCiAgICAgICAgICAgICAgICBkZXRhaWxzID0gSlNPTi5zdHJpbmdpZnkoZmlsdGVyZWREYXRhLCBudWxsLCAyKS5zdWJzdHJpbmcoMCwgNTAwKTsNCiAgICAgICAgICAgICAgICBpZiAoZGV0YWlscy5sZW5ndGggPj0gNTAwKSB7DQogICAgICAgICAgICAgICAgICAgIGRldGFpbHMgKz0gJy4uLic7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmm7/mjaLmqKHmnb/lj5jph48NCiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSB0ZW1wbGF0ZQ0KICAgICAgICAgICAgICAgIC5yZXBsYWNlKC97dGltZXN0YW1wfS9nLCBuZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCd6aC1DTicpKQ0KICAgICAgICAgICAgICAgIC5yZXBsYWNlKC97bGV2ZWx9L2csIGxldmVsLnRvVXBwZXJDYXNlKCkpDQogICAgICAgICAgICAgICAgLnJlcGxhY2UoL3ttZXNzYWdlfS9nLCBtZXNzYWdlLnN1YnN0cmluZygwLCAyMDApKQ0KICAgICAgICAgICAgICAgIC5yZXBsYWNlKC97dXNlcn0vZywgY3VycmVudFVzZXIpDQogICAgICAgICAgICAgICAgLnJlcGxhY2UoL3tkZXRhaWxzfS9nLCBkZXRhaWxzIHx8ICfml6AnKTsNCg0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICBjb250ZW50OiBjb250ZW50LA0KICAgICAgICAgICAgICAgIHRpdGxlOiBgJHtsZXZlbC50b1VwcGVyQ2FzZSgpfemUmeivr+aKpeitpmAsDQogICAgICAgICAgICAgICAgZnJvbTogJ+Wwj+e6ouS5pkFJ6Ieq5Yqo5Zue5aSN5bel5YW3Jw0KICAgICAgICAgICAgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Y+R6YCB5o6o6YCB6K+35rGCDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwdXNoQ29udGVudCDmjqjpgIHlhoXlrrkNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzZW5kUHVzaFJlcXVlc3QocHVzaENvbnRlbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYXBpS2V5ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uQXBpS2V5JywgJycpOw0KICAgICAgICAgICAgICAgIGlmICghYXBpS2V5KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmnKrphY3nva7mjqjpgIFBUEnlr4bpkqXvvIzml6Dms5Xlj5HpgIHmjqjpgIEnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGNoYW5uZWxzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vy",
        "cm9yTm90aWZpY2F0aW9uQ2hhbm5lbHMnLCAnV1hfTVAnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOagueaNrnh4dHVpLmNvbSBBUEnmlofmoaPvvIzmlK/mjIFHRVTlkoxQT1NU5Lik56eN5pa55byPDQogICAgICAgICAgICAgICAgLy8g5LyY5YWI5L2/55SoUE9TVOaWueW8j++8jOWPguaVsOaUvuWcqGJvZHnkuK0NCiAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly93d3cueHh0dWkuY29tL3h4dHVpLyR7YXBpS2V5fWA7DQoNCiAgICAgICAgICAgICAgICBjb25zdCByZXF1ZXN0RGF0YSA9IHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudDogcHVzaENvbnRlbnQuY29udGVudCwNCiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHB1c2hDb250ZW50LnRpdGxlIHx8ICfmjqjpgIHpgJrnn6UnLA0KICAgICAgICAgICAgICAgICAgICBmcm9tOiBwdXNoQ29udGVudC5mcm9tIHx8ICdYSFMtQUktVG9vbCcsDQogICAgICAgICAgICAgICAgICAgIGNoYW5uZWw6IGNoYW5uZWxzDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5Y+R6YCB5o6o6YCB6K+35rGCJywgeyB1cmwsIGRhdGE6IHJlcXVlc3REYXRhIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5L2/55SoR01feG1saHR0cFJlcXVlc3Tlj5HpgIHor7fmsYINCiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgR01feG1saHR0cFJlcXVlc3Qoew0KICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsDQogICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHVybCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBuZXcgVVJMU2VhcmNoUGFyYW1zKHJlcXVlc3REYXRhKS50b1N0cmluZygpLA0KICAgICAgICAgICAgICAgICAgICAgICAgdGltZW91dDogMTAwMDAsDQogICAgICAgICAgICAgICAgICAgICAgICBvbmxvYWQ6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmlLbliLDmjqjpgIHlk43lupQnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHJlc3BvbnNlLnN0YXR1cywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6IHJlc3BvbnNlLnN0YXR1c1RleHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVRleHQ6IHJlc3BvbnNlLnJlc3BvbnNlVGV4dC5zdWJzdHJpbmcoMCwgNTAwKQ0KICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCByZXN1bHQ7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IEpTT04ucGFyc2UocmVzcG9uc2UucmVzcG9uc2VUZXh0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKHBhcnNlRXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aOqOmAgeWTjeW6lEpTT07op6PmnpDlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBwYXJzZUVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVGV4dDogcmVzcG9uc2UucmVzcG9uc2VUZXh0LnN1YnN0cmluZygwLCAyMDApDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlpJrnp43lj6/og73nmoTmiJDlip/moIfor4YNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzU3VjY2VzcyA9IHJlc3VsdC5zdWNjZXNzID09PSB0cnVlIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmNvZGUgPT09IDAgfHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQuc3RhdHVzID09PSAnc3VjY2VzcycgfHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQubWVzc2FnZSA9PT0gJ+aOqOmAgeaIkOWKnycgfHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAocmVzdWx0LmRhdGEgJiYgcmVzdWx0LmRhdGEuc3VjY2VzcyA9PT0gdHJ1ZSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1N1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOaOqOmAgeivt+axguaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2U6IHJlc3VsdCwNCiAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgY2hhbm5lbHM6IGNoYW5uZWxzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogcHVzaENvbnRlbnQudGl0bGUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4p2MIOaOqOmAgeivt+axguiiq+aLkue7nScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2U6IHJlc3VsdCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbm5lbHM6IGNoYW5uZWxzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NzaWJsZUlzc3VlczogWw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0FQSeWvhumSpeaXoOaViCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAn5o6o6YCB5rig6YGT5pyq6YWN572uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICfmjqjpgIHlhoXlrrnmoLzlvI/plJnor68nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ+aOqOmAgemikeeOh+i2hemZkCcNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZmFsc2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfinYwg5o6o6YCB6K+35rGCSFRUUOmUmeivrycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHJlc3BvbnNlLnN0YXR1cywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiByZXNwb25zZS5zdGF0dXNUZXh0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVGV4dDogcmVzcG9uc2UucmVzcG9uc2VUZXh0LnN1YnN0cmluZygwLCAyMDApLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5uZWxzOiBjaGFubmVscw0KICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGZhbHNlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign4p2MIOWkhOeQhuaOqOmAgeWTjeW6lOaXtuWHuumUmScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhY2s6IGVycm9yLnN0YWNrPy5zdWJzdHJpbmcoMCwgMjAwKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlU3RhdHVzOiByZXNwb25zZS5zdGF0dXMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVRleHQ6IHJlc3BvbnNlLnJlc3BvbnNlVGV4dD8uc3Vic3RyaW5nKDAsIDIwMCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZmFsc2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBvbmVycm9yOiBmdW5jdGlvbihlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign4p2MIOaOqOmAgeivt+axgue9kee7nOmUmeivrycsIHsgZXJyb3I6IGVycm9yLCB1cmw6IHVybCB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlsJ3or5VHRVTmlrnlvI/kvZzkuLrlpIfnlKgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+UhCDlsJ3or5Xkvb/nlKhHRVTmlrnlvI/ph43mlrDlj5HpgIHmjqjpgIEnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGZhbHNlKTsgLy8g5YWI6L+U5ZueZmFsc2XvvIzlkI7nu63lj6/ku6Xmt7vliqBHRVTph43or5XpgLvovpENCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBvbnRpbWVvdXQ6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfinYwg5o6o6YCB6K+35rGC6LaF5pe2JywgeyB1cmw6IHVybCwgdGltZW91dDogMTAwMDAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Y+R6YCB5o6o6YCB6K+35rGC5pe25Ye66ZSZJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsN",
        "CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS9v+eUqEdFVOaWueW8j+WPkemAgeaOqOmAgeivt+axgu+8iOWkh+eUqOaWueazle+8iQ0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gcHVzaENvbnRlbnQg5o6o6YCB5YaF5a65DQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgc2VuZFB1c2hSZXF1ZXN0VmlhR2V0KHB1c2hDb250ZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGFwaUtleSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkFwaUtleScsICcnKTsNCiAgICAgICAgICAgICAgICBpZiAoIWFwaUtleSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5pyq6YWN572u5o6o6YCBQVBJ5a+G6ZKl77yM5peg5rOV5Y+R6YCB5o6o6YCBJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBjaGFubmVscyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkNoYW5uZWxzJywgJ1dYX01QJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDmnoTlu7pHRVTor7fmsYJVUkwNCiAgICAgICAgICAgICAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudDogcHVzaENvbnRlbnQuY29udGVudCwNCiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHB1c2hDb250ZW50LnRpdGxlIHx8ICfmjqjpgIHpgJrnn6UnLA0KICAgICAgICAgICAgICAgICAgICBmcm9tOiBwdXNoQ29udGVudC5mcm9tIHx8ICdYSFMtQUktVG9vbCcsDQogICAgICAgICAgICAgICAgICAgIGNoYW5uZWw6IGNoYW5uZWxzDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly93d3cueHh0dWkuY29tL3h4dHVpLyR7YXBpS2V5fT8ke3BhcmFtcy50b1N0cmluZygpfWA7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WPkemAgUdFVOaOqOmAgeivt+axgicsIHsgdXJsOiB1cmwuc3Vic3RyaW5nKDAsIDEwMCkgKyAnLi4uJyB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gew0KICAgICAgICAgICAgICAgICAgICBHTV94bWxodHRwUmVxdWVzdCh7DQogICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwsDQogICAgICAgICAgICAgICAgICAgICAgICB0aW1lb3V0OiAxMDAwMCwNCiAgICAgICAgICAgICAgICAgICAgICAgIG9ubG9hZDogZnVuY3Rpb24ocmVzcG9uc2UpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aUtuWIsEdFVOaOqOmAgeWTjeW6lCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUZXh0OiByZXNwb25zZS5yZXNwb25zZVRleHQuc3Vic3RyaW5nKDAsIDIwMCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgcmVzdWx0Ow0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBKU09OLnBhcnNlKHJlc3BvbnNlLnJlc3BvbnNlVGV4dCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChwYXJzZUVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdHRVTmjqjpgIHlk43lupRKU09O6Kej5p6Q5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogcGFyc2VFcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVRleHQ6IHJlc3BvbnNlLnJlc3BvbnNlVGV4dC5zdWJzdHJpbmcoMCwgMjAwKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZmFsc2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNTdWNjZXNzID0gcmVzdWx0LnN1Y2Nlc3MgPT09IHRydWUgfHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQuY29kZSA9PT0gMCB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5zdGF0dXMgPT09ICdzdWNjZXNzJyB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5tZXNzYWdlID09PSAn5o6o6YCB5oiQ5YqfJzsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzU3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUgR0VU5o6o6YCB6K+35rGC5oiQ5YqfJywgeyByZXNwb25zZTogcmVzdWx0IH0pOw0KICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfinYwgR0VU5o6o6YCB6K+35rGC6KKr5ouS57udJywgeyByZXNwb25zZTogcmVzdWx0IH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZmFsc2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfinYwgR0VU5o6o6YCB6K+35rGCSFRUUOmUmeivrycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHJlc3BvbnNlLnN0YXR1cywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVRleHQ6IHJlc3BvbnNlLnJlc3BvbnNlVGV4dC5zdWJzdHJpbmcoMCwgMjAwKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGZhbHNlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign4p2MIOWkhOeQhkdFVOaOqOmAgeWTjeW6lOaXtuWHuumUmScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZmFsc2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBvbmVycm9yOiBmdW5jdGlvbihlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign4p2MIEdFVOaOqOmAgeivt+axgue9kee7nOmUmeivrycsIHsgZXJyb3I6IGVycm9yIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZmFsc2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG9udGltZW91dDogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KdjCBHRVTmjqjpgIHor7fmsYLotoXml7YnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGZhbHNlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9y",
        "KCflj5HpgIFHRVTmjqjpgIHor7fmsYLml7blh7rplJknLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K6w5b2V5o6o6YCB5Y6G5Y+yDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbCDplJnor6/nuqfliKsNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2Ug6ZSZ6K+v5raI5oGvDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIOmZhOWKoOaVsOaNrg0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gcHVzaENvbnRlbnQg5o6o6YCB5YaF5a65DQogICAgICAgICAqLw0KICAgICAgICByZWNvcmRQdXNoSGlzdG9yeShsZXZlbCwgbWVzc2FnZSwgZGF0YSwgcHVzaENvbnRlbnQpIHsNCiAgICAgICAgICAgIGNvbnN0IHJlY29yZCA9IHsNCiAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCksDQogICAgICAgICAgICAgICAgbGV2ZWw6IGxldmVsLA0KICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2Uuc3Vic3RyaW5nKDAsIDEwMCksDQogICAgICAgICAgICAgICAgZGF0YTogZGF0YSwNCiAgICAgICAgICAgICAgICBwdXNoQ29udGVudDogcHVzaENvbnRlbnQsDQogICAgICAgICAgICAgICAgaWQ6IFV0aWxzLmdlbmVyYXRlSWQoKQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgdGhpcy5wdXNoSGlzdG9yeS51bnNoaWZ0KHJlY29yZCk7DQoNCiAgICAgICAgICAgIC8vIOmZkOWItuWOhuWPsuiusOW9leaVsOmHjw0KICAgICAgICAgICAgaWYgKHRoaXMucHVzaEhpc3RvcnkubGVuZ3RoID4gdGhpcy5tYXhIaXN0b3J5U2l6ZSkgew0KICAgICAgICAgICAgICAgIHRoaXMucHVzaEhpc3RvcnkgPSB0aGlzLnB1c2hIaXN0b3J5LnNsaWNlKDAsIHRoaXMubWF4SGlzdG9yeVNpemUpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmjqjpgIHljoblj7INCiAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IGNvdW50IOiOt+WPluaVsOmHjw0KICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9DQogICAgICAgICAqLw0KICAgICAgICBnZXRQdXNoSGlzdG9yeShjb3VudCA9IDIwKSB7DQogICAgICAgICAgICByZXR1cm4gdGhpcy5wdXNoSGlzdG9yeS5zbGljZSgwLCBjb3VudCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heepuuaOqOmAgeWOhuWPsg0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYXJQdXNoSGlzdG9yeSgpIHsNCiAgICAgICAgICAgIHRoaXMucHVzaEhpc3RvcnkgPSBbXTsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmjqjpgIHljoblj7Llt7LmuIXnqbonKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5o6o6YCB57uf6K6h5L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQog",
        "ICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0cygpIHsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBjb25zdCBsYXN0MjRoID0gdGhpcy5wdXNoSGlzdG9yeS5maWx0ZXIocmVjb3JkID0+IG5vdyAtIHJlY29yZC50aW1lc3RhbXAuZ2V0VGltZSgpIDwgMjQgKiA2MCAqIDYwICogMTAwMCk7DQogICAgICAgICAgICBjb25zdCBsYXN0SG91ciA9IHRoaXMucHVzaEhpc3RvcnkuZmlsdGVyKHJlY29yZCA9PiBub3cgLSByZWNvcmQudGltZXN0YW1wLmdldFRpbWUoKSA8IDYwICogNjAgKiAxMDAwKTsNCg0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICB0b3RhbFB1c2hlczogdGhpcy5wdXNoSGlzdG9yeS5sZW5ndGgsDQogICAgICAgICAgICAgICAgcHVzaGVzTGFzdDI0aDogbGFzdDI0aC5sZW5ndGgsDQogICAgICAgICAgICAgICAgcHVzaGVzTGFzdEhvdXI6IGxhc3RIb3VyLmxlbmd0aCwNCiAgICAgICAgICAgICAgICBkZWR1cGxpY2F0aW9uQ2FjaGVTaXplOiB0aGlzLmRlZHVwbGljYXRpb25DYWNoZS5zaXplLA0KICAgICAgICAgICAgICAgIHJhdGVMaW1pdENhY2hlU2l6ZTogdGhpcy5yYXRlTGltaXRDYWNoZS5sZW5ndGgsDQogICAgICAgICAgICAgICAgZW5hYmxlZDogQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uRW5hYmxlZCcsIGZhbHNlKSwNCiAgICAgICAgICAgICAgICB0ZXN0TW9kZTogQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uVGVzdE1vZGUnLCBmYWxzZSkNCiAgICAgICAgICAgIH07DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa1i+ivleaOqOmAgeWKn+iDvQ0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHRlc3RQdXNoKCkgew0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W8gOWni+a1i+ivleaOqOmAgeWKn+iDvS4uLicpOw0KDQogICAgICAgICAgICAvLyDlhYjov5vooYzphY3nva7or4rmlq0NCiAgICAgICAgICAgIGNvbnN0IGRpYWdub3NpcyA9IHRoaXMuZGlhZ25vc2VDb25maWd1cmF0aW9uKCk7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+TiyDmjqjpgIHphY3nva7or4rmlq3nu5PmnpwnLCBkaWFnbm9zaXMpOw0KDQogICAgICAgICAgICBpZiAoZGlhZ25vc2lzLmlzc3Vlcy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KaoO+4jyDlj5HnjrDphY3nva7pl67popgnLCB7IGlzc3VlczogZGlhZ25vc2lzLmlzc3VlcyB9KTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgdGVzdERhdGEgPSB7DQogICAgICAgICAgICAgICAgdGVzdFR5cGU6ICdtYW51YWwnLA0KICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLA0KICAgICAgICAgICAgICAgIHZlcnNpb246IENPTkZJRy5WRVJTSU9OLA0KICAgICAgICAgICAgICAg",
        "IGRpYWdub3NpczogZGlhZ25vc2lzDQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5zZW5kTm90aWZpY2F0aW9uKCdpbmZvJywgJ+i/meaYr+S4gOadoea1i+ivleaOqOmAgea2iOaBr++8jOeUqOS6jumqjOivgeaOqOmAgeWKn+iDveaYr+WQpuato+W4uOW3peS9nOOAgicsIHRlc3REYXRhKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K+K5pat5o6o6YCB6YWN572uDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBkaWFnbm9zZUNvbmZpZ3VyYXRpb24oKSB7DQogICAgICAgICAgICBjb25zdCBpc3N1ZXMgPSBbXTsNCiAgICAgICAgICAgIGNvbnN0IHdhcm5pbmdzID0gW107DQogICAgICAgICAgICBjb25zdCBpbmZvID0gW107DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5Z+65pys6YWN572uDQogICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkVuYWJsZWQnLCBmYWxzZSk7DQogICAgICAgICAgICAgICAgY29uc3QgYXBpS2V5ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uQXBpS2V5JywgJycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNoYW5uZWxzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uQ2hhbm5lbHMnLCAnJyk7DQogICAgICAgICAgICAgICAgY29uc3QgbGV2ZWxzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uTGV2ZWxzJywgJycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRlc3RNb2RlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uVGVzdE1vZGUnLCBmYWxzZSk7DQoNCiAgICAgICAgICAgICAgICBpbmZvLnB1c2goYOWKn+iDveeKtuaAgTogJHtlbmFibGVkID8gJ+W3suWQr+eUqCcgOiAn5bey56aB55SoJ31gKTsNCiAgICAgICAgICAgICAgICBpbmZvLnB1c2goYOa1i+ivleaooeW8jzogJHt0ZXN0TW9kZSA/ICfmmK8nIDogJ+WQpid9YCk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgd2FybmluZ3MucHVzaCgn5o6o6YCB5Yqf6IO95pyq5ZCv55SoJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKCFhcGlLZXkgfHwgYXBpS2V5LnRyaW0oKS5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgaXNzdWVzLnB1c2goJ0FQSeWvhumSpeacqumFjee9ruaIluS4uuepuicpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGluZm8ucHVzaChgQVBJ5a+G6ZKlOiAke2FwaUtleS5zdWJzdHJpbmcoMCwgOCl9Li4uYCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKCFjaGFubmVscyB8fCBjaGFubmVscy50cmltKCkubGVuZ3RoID09PSAwKSB7DQog",
        "ICAgICAgICAgICAgICAgICAgIGlzc3Vlcy5wdXNoKCfmjqjpgIHmuKDpgZPmnKrphY3nva4nKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBpbmZvLnB1c2goYOaOqOmAgea4oOmBkzogJHtjaGFubmVsc31gKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoIWxldmVscyB8fCBsZXZlbHMudHJpbSgpLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICBpc3N1ZXMucHVzaCgn6ZSZ6K+v57qn5Yir5pyq6YWN572uJyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgaW5mby5wdXNoKGDplJnor6/nuqfliKs6ICR7bGV2ZWxzfWApOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpemikeeOh+mZkOWItg0KICAgICAgICAgICAgICAgIGNvbnN0IHJhdGVMaW1pdCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvblJhdGVMaW1pdCcsIDUpOw0KICAgICAgICAgICAgICAgIGlmIChyYXRlTGltaXQgPCAxIHx8IHJhdGVMaW1pdCA+IDIwKSB7DQogICAgICAgICAgICAgICAgICAgIGlzc3Vlcy5wdXNoKGDmjqjpgIHpopHnjofpmZDliLbphY3nva7lvILluLg6ICR7cmF0ZUxpbWl0fWApOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGluZm8ucHVzaChg6aKR546H6ZmQ5Yi2OiAke3JhdGVMaW1pdH3mrKEv5YiG6ZKfYCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5Y676YeN6YWN572uDQogICAgICAgICAgICAgICAgY29uc3QgZGVkdXBsaWNhdGlvbiA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkRlZHVwbGljYXRpb24nLCB0cnVlKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkZWR1cGxpY2F0aW9uV2luZG93ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uRGVkdXBsaWNhdGlvbldpbmRvdycsIDEwKTsNCiAgICAgICAgICAgICAgICBpbmZvLnB1c2goYOmUmeivr+WOu+mHjTogJHtkZWR1cGxpY2F0aW9uID8gJ+WQr+eUqCcgOiAn56aB55SoJ31gKTsNCiAgICAgICAgICAgICAgICBpZiAoZGVkdXBsaWNhdGlvbikgew0KICAgICAgICAgICAgICAgICAgICBpbmZvLnB1c2goYOWOu+mHjeeql+WPozogJHtkZWR1cGxpY2F0aW9uV2luZG93feWIhumSn2ApOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaooeadvw0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uVGVtcGxhdGUnLCAnJyk7DQogICAgICAgICAgICAgICAgaWYgKCF0ZW1wbGF0ZSB8fCB0ZW1wbGF0ZS50cmltKCkubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIHdhcm5pbmdzLnB1c2goJ+aOqOmAgeaooeadv+S4uuepuu+8jOWwhuS9v+eUqOm7mOiupOao",
        "oeadvycpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGluZm8ucHVzaChg5qih5p2/6ZW/5bqmOiAke3RlbXBsYXRlLmxlbmd0aH3lrZfnrKZgKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlhbPplK7or43ov4fmu6QNCiAgICAgICAgICAgICAgICBjb25zdCBpbmNsdWRlS2V5d29yZHMgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25LZXl3b3JkcycsICcnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBleGNsdWRlS2V5d29yZHMgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25FeGNsdWRlS2V5d29yZHMnLCAnJyk7DQogICAgICAgICAgICAgICAgaWYgKGluY2x1ZGVLZXl3b3Jkcykgew0KICAgICAgICAgICAgICAgICAgICBpbmZvLnB1c2goYOWMheWQq+WFs+mUruivjTogJHtpbmNsdWRlS2V5d29yZHN9YCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmIChleGNsdWRlS2V5d29yZHMpIHsNCiAgICAgICAgICAgICAgICAgICAgaW5mby5wdXNoKGDmjpLpmaTlhbPplK7or406ICR7ZXhjbHVkZUtleXdvcmRzfWApOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgICAgIHN0YXR1czogaXNzdWVzLmxlbmd0aCA9PT0gMCA/ICdoZWFsdGh5JyA6ICdpc3N1ZXMnLA0KICAgICAgICAgICAgICAgICAgICBpc3N1ZXM6IGlzc3VlcywNCiAgICAgICAgICAgICAgICAgICAgd2FybmluZ3M6IHdhcm5pbmdzLA0KICAgICAgICAgICAgICAgICAgICBpbmZvOiBpbmZvLA0KICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKQ0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAnZXJyb3InLA0KICAgICAgICAgICAgICAgICAgICBpc3N1ZXM6IFtg6YWN572u6K+K5pat5aSx6LSlOiAke2Vycm9yLm1lc3NhZ2V9YF0sDQogICAgICAgICAgICAgICAgICAgIHdhcm5pbmdzOiBbXSwNCiAgICAgICAgICAgICAgICAgICAgaW5mbzogW10sDQogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpDQogICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOmFjee9ruWvvOWFpeeuoeeQhuWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgQ29uZmlnSW1wb3J0TWFuYWdlciA9IHsNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuaWh+S7tumAieaLqQ0KICAgICAgICAgKiBAcGFyYW0ge0V2ZW50fSBldmVudCDmlofku7bpgInmi6nkuovk",
        "u7YNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUZpbGVTZWxlY3Q6IGZ1bmN0aW9uKGV2ZW50KSB7DQogICAgICAgICAgICBjb25zdCBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOw0KICAgICAgICAgICAgaWYgKCFmaWxlKSByZXR1cm47DQoNCiAgICAgICAgICAgIC8vIOmHjee9ruaWh+S7tui+k+WFpeahhg0KICAgICAgICAgICAgZXZlbnQudGFyZ2V0LnZhbHVlID0gJyc7DQoNCiAgICAgICAgICAgIC8vIOmqjOivgeaWh+S7tuexu+Weiw0KICAgICAgICAgICAgaWYgKCFmaWxlLm5hbWUudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCgnLmpzb24nKSkgew0KICAgICAgICAgICAgICAgIFVJTWFuYWdlci5zaG93Tm90aWZpY2F0aW9uKCfor7fpgInmi6lKU09O5qC85byP55qE6YWN572u5paH5Lu2JywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDpqozor4Hmlofku7blpKflsI/vvIjpmZDliLYxME1C77yJDQogICAgICAgICAgICBpZiAoZmlsZS5zaXplID4gMTAgKiAxMDI0ICogMTAyNCkgew0KICAgICAgICAgICAgICAgIFVJTWFuYWdlci5zaG93Tm90aWZpY2F0aW9uKCfmlofku7blpKflsI/kuI3og73otoXov4cxME1CJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0aGlzLnJlYWRBbmRJbXBvcnRGaWxlKGZpbGUpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDor7vlj5blubblr7zlhaXmlofku7YNCiAgICAgICAgICogQHBhcmFtIHtGaWxlfSBmaWxlIOaWh+S7tuWvueixoQ0KICAgICAgICAgKi8NCiAgICAgICAgcmVhZEFuZEltcG9ydEZpbGU6IGZ1bmN0aW9uKGZpbGUpIHsNCiAgICAgICAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7DQoNCiAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gew0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpZ0RhdGEgPSBKU09OLnBhcnNlKGUudGFyZ2V0LnJlc3VsdCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc0ltcG9ydChjb25maWdEYXRhKTsNCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aWh+S7tuino+aekOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgIFVJTWFuYWdlci5zaG93Tm90aWZpY2F0aW9uKCfmlofku7bmoLzlvI/plJnor6/vvIzor7fmo4Dmn6VKU09O5qC85byPJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgcmVhZGVyLm9uZXJyb3IgPSAoKSA9PiB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmlofku7bor7vlj5blpLHotKUnKTsNCiAgICAgICAgICAgICAgICBVSU1hbmFnZXIuc2hvd05v",
        "dGlmaWNhdGlvbign5paH5Lu26K+75Y+W5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5a+85YWlDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWdEYXRhIOmFjee9ruaVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgcHJvY2Vzc0ltcG9ydDogZnVuY3Rpb24oY29uZmlnRGF0YSkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDpqozor4HphY3nva7mlbDmja4NCiAgICAgICAgICAgICAgICBjb25zdCB2YWxpZGF0aW9uID0gQ29uZmlnTWFuYWdlci52YWxpZGF0ZUNvbmZpZ0RhdGEoY29uZmlnRGF0YSk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIXZhbGlkYXRpb24udmFsaWQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXJyb3JNc2cgPSAn6YWN572u6aqM6K+B5aSx6LSlOlxuJyArIHZhbGlkYXRpb24uZXJyb3JzLmpvaW4oJ1xuJyk7DQogICAgICAgICAgICAgICAgICAgIFVJTWFuYWdlci5zaG93Tm90aWZpY2F0aW9uKGVycm9yTXNnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaYvuekuuitpuWRiuS/oeaBr++8iOWmguaenOacie+8iQ0KICAgICAgICAgICAgICAgIGlmICh2YWxpZGF0aW9uLndhcm5pbmdzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgd2FybmluZ01zZyA9ICflr7zlhaXorablkYo6XG4nICsgdmFsaWRhdGlvbi53YXJuaW5ncy5qb2luKCdcbicpOw0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4od2FybmluZ01zZyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g56Gu6K6k5a+85YWlDQogICAgICAgICAgICAgICAgY29uc3QgaGFzVXNlckRhdGEgPSBjb25maWdEYXRhLnVzZXJEYXRhICYmIE9iamVjdC5rZXlzKGNvbmZpZ0RhdGEudXNlckRhdGEpLmxlbmd0aCA+IDA7DQogICAgICAgICAgICAgICAgbGV0IGNvbmZpcm1Nc2cgPSBg56Gu5a6a6KaB5a+85YWl6YWN572u5ZCX77yfXG5cbuWwhuWvvOWFpSAke09iamVjdC5rZXlzKGNvbmZpZ0RhdGEuY29uZmlnIHx8IHt9KS5sZW5ndGh9IOmhuemFjee9rmA7DQoNCiAgICAgICAgICAgICAgICBpZiAoaGFzVXNlckRhdGEpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uZmlybU1zZyArPSAnXG5cbuKaoO+4jyDmraTmlofku7bljIXlkKvnlKjmiLfmlbDmja7vvIjpu5HlkI3ljZXjgIHkvJror53orrDlv4bnrYnvvInvvIzlr7zlhaXlkI7lsIbopobnm5bnjrDmnInmlbDmja7jgIInOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICghY29uZmlybShjb25maXJtTXNnKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0K",
        "DQogICAgICAgICAgICAgICAgLy8g5bqU55So6YWN572uDQogICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHsNCiAgICAgICAgICAgICAgICAgICAgaW5jbHVkZVVzZXJEYXRhOiBoYXNVc2VyRGF0YSAmJiBjb25maXJtKCfmmK/lkKblkIzml7blr7zlhaXnlKjmiLfmlbDmja7vvJ9cbu+8iOWMheaLrOm7keWQjeWNleOAgeS8muivneiusOW/huetie+8iScpDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IENvbmZpZ01hbmFnZXIuYXBwbHlJbXBvcnRlZENvbmZpZyhjb25maWdEYXRhLCBvcHRpb25zKTsNCg0KICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICBsZXQgc3VjY2Vzc01zZyA9IGDphY3nva7lr7zlhaXmiJDlip/vvIFcbuW3suW6lOeUqCAke3Jlc3VsdC5hcHBsaWVkfSDpobnphY3nva5gOw0KICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnNraXBwZWQgPiAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzTXNnICs9IGBcbui3s+i/hyAke3Jlc3VsdC5za2lwcGVkfSDpobnmnKrnn6XphY3nva5gOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24oc3VjY2Vzc01zZywgJ3N1Y2Nlc3MnKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDliLfmlrBVSQ0KICAgICAgICAgICAgICAgICAgICBVSU1hbmFnZXIubG9hZENvbmZpZygpOw0KICAgICAgICAgICAgICAgICAgICBVSU1hbmFnZXIudXBkYXRlVUkoKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzlr7zlhaXkuobnlKjmiLfmlbDmja7vvIzliLfmlrDnm7jlhbNVSee7hOS7tg0KICAgICAgICAgICAgICAgICAgICBpZiAob3B0aW9ucy5pbmNsdWRlVXNlckRhdGEpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWIt+aWsOWbnuiuv+WKn+iDveebuOWFs1VJDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIFVJTWFuYWdlci51cGRhdGVGb2xsb3dVcFN0YXRzID09PSAnZnVuY3Rpb24nKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnVwZGF0ZUZvbGxvd1VwU3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgVUlNYW5hZ2VyLnJlbmRlckZvbGxvd1VwQmxhY2tsaXN0ID09PSAnZnVuY3Rpb24nKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnJlbmRlckZvbGxvd1VwQmxhY2tsaXN0KCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIFVJTWFuYWdlci5yZW5kZXJGb2xsb3dVcExpc3QgPT09ICdmdW5jdGlvbicpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBVSU1hbmFnZXIucmVuZGVyRm9sbG93VXBMaXN0KCk7DQogICAg",
        "ICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfnlKjmiLfmlbDmja7lr7zlhaXlkI5VSeWIt+aWsOWujOaIkCcpOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+mFjee9ruWvvOWFpeaIkOWKnycsIHJlc3VsdCk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXJyb3JNc2cgPSAn6YWN572u5a+85YWl5aSx6LSlOlxuJyArIHJlc3VsdC5lcnJvcnMuam9pbignXG4nKTsNCiAgICAgICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24oZXJyb3JNc2csICdlcnJvcicpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WvvOWFpeWkhOeQhuWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24oJ+WvvOWFpeWkhOeQhuWksei0pTogJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8gRE9N56iz5a6a5oCn566h55CG5ZmoIC0g6Kej5YazVnVlLmpzIERPTeabtOaWsOernuaAgeadoeS7tg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgRE9NU3RhYmlsaXR5TWFuYWdlciA9IHsNCiAgICAgICAgLy8g56iz5a6a5oCn5qOA5rWL6YWN572uDQogICAgICAgIG1heFdhaXRUaW1lOiAzMDAwLCAgICAgICAgLy8g5pyA5aSn562J5b6F5pe26Ze0DQogICAgICAgIGNoZWNrSW50ZXJ2YWw6IDUwLCAgICAgICAgLy8g5qOA5p+l6Ze06ZqUDQogICAgICAgIHN0YWJpbGl0eVRocmVzaG9sZDogMjAwLCAgLy8g56iz5a6a5oCn6ZiI5YC877yIbXPvvIkNCg0KICAgICAgICAvKioNCiAgICAgICAgICog562J5b6FRE9N56iz5a6aIC0g5qC45b+D5pa55rOVDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gdGFyZ2V0RWxlbWVudCDnm67moIflhYPntKDvvIjlj6/pgInvvIkNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMg6YCJ6aG5DQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgd2FpdEZvckRPTVN0YWJpbGl0eSh0YXJnZXRFbGVtZW50ID0gbnVsbCwgb3B0aW9ucyA9IHt9KSB7DQogICAgICAgICAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgY29uc3QgbWF4V2FpdCA9IG9wdGlvbnMubWF4V2FpdFRpbWUgfHwgdGhpcy5tYXhXYWl0VGltZTsNCiAgICAgICAgICAgIGNvbnN0IGNoZWNrSW50ZXJ2YWwgPSBvcHRpb25zLmNoZWNrSW50ZXJ2YWwgfHwgdGhpcy5jaGVj",
        "a0ludGVydmFsOw0KICAgICAgICAgICAgY29uc3Qgc3RhYmlsaXR5VGhyZXNob2xkID0gb3B0aW9ucy5zdGFiaWxpdHlUaHJlc2hvbGQgfHwgdGhpcy5zdGFiaWxpdHlUaHJlc2hvbGQ7DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5byA5aeL562J5b6FRE9N56iz5a6aJywgew0KICAgICAgICAgICAgICAgIGhhc1RhcmdldEVsZW1lbnQ6ICEhdGFyZ2V0RWxlbWVudCwNCiAgICAgICAgICAgICAgICBtYXhXYWl0LA0KICAgICAgICAgICAgICAgIGNoZWNrSW50ZXJ2YWwsDQogICAgICAgICAgICAgICAgc3RhYmlsaXR5VGhyZXNob2xkDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgbGV0IGxhc3RDaGFuZ2VUaW1lID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGxldCBpc1N0YWJsZSA9IGZhbHNlOw0KICAgICAgICAgICAgbGV0IGNoZWNrQ291bnQgPSAwOw0KDQogICAgICAgICAgICAvLyDliJvlu7pNdXRhdGlvbk9ic2VydmVy5p2l55uR5ZCsRE9N5Y+Y5YyWDQogICAgICAgICAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKChtdXRhdGlvbnMpID0+IHsNCiAgICAgICAgICAgICAgICAvLyDov4fmu6TmjonkuI3ph43opoHnmoTlj5jljJYNCiAgICAgICAgICAgICAgICBjb25zdCBzaWduaWZpY2FudE11dGF0aW9ucyA9IG11dGF0aW9ucy5maWx0ZXIobXV0YXRpb24gPT4NCiAgICAgICAgICAgICAgICAgICAgdGhpcy5pc1NpZ25pZmljYW50TXV0YXRpb24obXV0YXRpb24sIHRhcmdldEVsZW1lbnQpDQogICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgIGlmIChzaWduaWZpY2FudE11dGF0aW9ucy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIGxhc3RDaGFuZ2VUaW1lID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmo4DmtYvliLDph43opoFET03lj5jljJYnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBtdXRhdGlvbkNvdW50OiBzaWduaWZpY2FudE11dGF0aW9ucy5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgICAgICBjaGVja0NvdW50DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAvLyDlvIDlp4vop4Llr58NCiAgICAgICAgICAgIGNvbnN0IG9ic2VydmVUYXJnZXQgPSB0YXJnZXRFbGVtZW50IHx8IGRvY3VtZW50LmJvZHk7DQogICAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKG9ic2VydmVUYXJnZXQsIHsNCiAgICAgICAgICAgICAgICBjaGlsZExpc3Q6IHRydWUsDQogICAgICAgICAgICAgICAgc3VidHJlZTogdHJ1ZSwNCiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB0cnVlLA0KICAgICAgICAgICAgICAgIGF0dHJpYnV0ZUZpbHRlcjogWydjbGFzcycsICdzdHlsZScsICdkYXRhLWtleSddLA0KICAgICAgICAgICAgICAgIGNoYXJhY3RlckRhdGE6IGZhbHNlDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAg",
        "ICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDnrYnlvoXnqLPlrprmgKcNCiAgICAgICAgICAgICAgICB3aGlsZSAoRGF0ZS5ub3coKSAtIHN0YXJ0VGltZSA8IG1heFdhaXQpIHsNCiAgICAgICAgICAgICAgICAgICAgY2hlY2tDb3VudCsrOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuW3sue7j+eos+Wumg0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0aW1lU2luY2VMYXN0Q2hhbmdlID0gRGF0ZS5ub3coKSAtIGxhc3RDaGFuZ2VUaW1lOw0KICAgICAgICAgICAgICAgICAgICBpZiAodGltZVNpbmNlTGFzdENoYW5nZSA+PSBzdGFiaWxpdHlUaHJlc2hvbGQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOmineWklumqjOivge+8muajgOafpeebruagh+WFg+e0oOeKtuaAgQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRhcmdldEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50U3RhYmxlID0gYXdhaXQgdGhpcy52ZXJpZnlFbGVtZW50U3RhYmlsaXR5KHRhcmdldEVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50U3RhYmxlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzU3RhYmxlID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdENoYW5nZVRpbWUgPSBEYXRlLm5vdygpOyAvLyDph43nva7nrYnlvoUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzU3RhYmxlID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIC8vIOetieW+heS4i+S4gOasoeajgOafpQ0KICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheShjaGVja0ludGVydmFsKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCB0b3RhbFdhaXRUaW1lID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTsNCg0KICAgICAgICAgICAgICAgIGlmIChpc1N0YWJsZSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygnRE9N5bey56iz5a6aJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgd2FpdFRpbWU6IGAke3RvdGFsV2FpdFRpbWV9bXNgLA0KICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc1RhcmdldEVsZW1lbnQ6ICEhdGFyZ2V0RWxlbWVudA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAg",
        "ICAgICBMb2dnZXIud2FybignRE9N56iz5a6a5oCn562J5b6F6LaF5pe2Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgd2FpdFRpbWU6IGAke3RvdGFsV2FpdFRpbWV9bXNgLA0KICAgICAgICAgICAgICAgICAgICAgICAgbWF4V2FpdCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrQ291bnQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGlzU3RhYmxlOw0KDQogICAgICAgICAgICB9IGZpbmFsbHkgew0KICAgICAgICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yik5pat5piv5ZCm5Li66YeN6KaB55qERE9N5Y+Y5YyWDQogICAgICAgICAqIEBwYXJhbSB7TXV0YXRpb25SZWNvcmR9IG11dGF0aW9uIOWPmOWMluiusOW9lQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IHRhcmdldEVsZW1lbnQg55uu5qCH5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgaXNTaWduaWZpY2FudE11dGF0aW9uKG11dGF0aW9uLCB0YXJnZXRFbGVtZW50KSB7DQogICAgICAgICAgICAvLyDlv73nlaXkuI3ph43opoHnmoTlsZ7mgKflj5jljJYNCiAgICAgICAgICAgIGlmIChtdXRhdGlvbi50eXBlID09PSAnYXR0cmlidXRlcycpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBpZ25vcmVkQXR0cmlidXRlcyA9IFsndGl0bGUnLCAnYXJpYS1sYWJlbCcsICdkYXRhLXRvb2x0aXAnXTsNCiAgICAgICAgICAgICAgICBpZiAoaWdub3JlZEF0dHJpYnV0ZXMuaW5jbHVkZXMobXV0YXRpb24uYXR0cmlidXRlTmFtZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5aaC5p6c5pyJ55uu5qCH5YWD57Sg77yM5Y+q5YWz5rOo55u45YWz55qE5Y+Y5YyWDQogICAgICAgICAgICBpZiAodGFyZ2V0RWxlbWVudCkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IG11dGF0aW9uLnRhcmdldDsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWPmOWMluaYr+WQpuW9seWTjeebruagh+WFg+e0oOaIluWFtuelluWFiC/lkI7ku6MNCiAgICAgICAgICAgICAgICBpZiAodGFyZ2V0ID09PSB0YXJnZXRFbGVtZW50IHx8DQogICAgICAgICAgICAgICAgICAgIHRhcmdldEVsZW1lbnQuY29udGFpbnModGFyZ2V0KSB8fA0KICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY29udGFpbnModGFyZ2V0RWxlbWVudCkpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5piv5Lya6K+d5YiX6KGo55qE6YeN6KaB5Y+Y5YyWDQogICAgICAgICAgICAgICAgaWYgKHRhcmdldC5jbGFzc0xpc3QgJiYgKA0K",
        "ICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzeC1jb250YWN0LWl0ZW0nKSB8fA0KICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCd2dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3JykgfHwNCiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnZC1iYWRnZS1kb3QnKQ0KICAgICAgICAgICAgICAgICkpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmsqHmnInnm67moIflhYPntKDml7bvvIzmo4Dmn6XmmK/lkKbmmK/ph43opoHnmoTlhajlsYDlj5jljJYNCiAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IG11dGF0aW9uLnRhcmdldDsNCiAgICAgICAgICAgIGlmICh0YXJnZXQuY2xhc3NMaXN0ICYmICgNCiAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzeC1jb250YWN0LWl0ZW0nKSB8fA0KICAgICAgICAgICAgICAgIHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3Z1ZS1yZWN5Y2xlLXNjcm9sbGVyJykgfHwNCiAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdjaGF0LWxpc3QtYm94JykNCiAgICAgICAgICAgICkpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpqozor4HlhYPntKDnqLPlrprmgKcNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOimgemqjOivgeeahOWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHZlcmlmeUVsZW1lbnRTdGFiaWxpdHkoZWxlbWVudCkgew0KICAgICAgICAgICAgaWYgKCFlbGVtZW50IHx8ICFlbGVtZW50LmlzQ29ubmVjdGVkKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOiusOW9leWIneWni+eKtuaAgQ0KICAgICAgICAgICAgICAgIGNvbnN0IGluaXRpYWxSZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBpbml0aWFsQ2xhc3MgPSBlbGVtZW50LmNsYXNzTmFtZTsNCiAgICAgICAgICAgICAgICBjb25zdCBpbml0aWFsU3R5bGUgPSBlbGVtZW50LnN0eWxlLmNzc1RleHQ7DQoNCiAgICAgICAgICAgICAgICAvLyDnrYnlvoXkuIDlsI/mrrXml7bpl7QNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgxMDApOw0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l54q25oCB5piv5ZCm5Y+R55Sf5Y+Y5YyWDQogICAgICAg",
        "ICAgICAgICAgY29uc3QgY3VycmVudFJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRDbGFzcyA9IGVsZW1lbnQuY2xhc3NOYW1lOw0KICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRTdHlsZSA9IGVsZW1lbnQuc3R5bGUuY3NzVGV4dDsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IGlzU3RhYmxlID0gKA0KICAgICAgICAgICAgICAgICAgICBNYXRoLmFicyhpbml0aWFsUmVjdC50b3AgLSBjdXJyZW50UmVjdC50b3ApIDwgMSAmJg0KICAgICAgICAgICAgICAgICAgICBNYXRoLmFicyhpbml0aWFsUmVjdC5sZWZ0IC0gY3VycmVudFJlY3QubGVmdCkgPCAxICYmDQogICAgICAgICAgICAgICAgICAgIGluaXRpYWxDbGFzcyA9PT0gY3VycmVudENsYXNzICYmDQogICAgICAgICAgICAgICAgICAgIGluaXRpYWxTdHlsZSA9PT0gY3VycmVudFN0eWxlDQogICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5YWD57Sg56iz5a6a5oCn6aqM6K+BJywgew0KICAgICAgICAgICAgICAgICAgICBpc1N0YWJsZSwNCiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb25DaGFuZ2VkOiBNYXRoLmFicyhpbml0aWFsUmVjdC50b3AgLSBjdXJyZW50UmVjdC50b3ApID49IDEsDQogICAgICAgICAgICAgICAgICAgIGNsYXNzQ2hhbmdlZDogaW5pdGlhbENsYXNzICE9PSBjdXJyZW50Q2xhc3MsDQogICAgICAgICAgICAgICAgICAgIHN0eWxlQ2hhbmdlZDogaW5pdGlhbFN0eWxlICE9PSBjdXJyZW50U3R5bGUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBpc1N0YWJsZTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5YWD57Sg56iz5a6a5oCn6aqM6K+B5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOetieW+heWFg+e0oOWHuueOsOW5tueos+Wumg0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3Ig6YCJ5oup5ZmoDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gcGFyZW50IOeItuWFg+e0oA0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyDpgInpobkNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8RWxlbWVudHxudWxsPn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHdhaXRGb3JFbGVtZW50U3RhYmlsaXR5KHNlbGVjdG9yLCBwYXJlbnQgPSBkb2N1bWVudCwgb3B0aW9ucyA9IHt9KSB7DQogICAgICAgICAgICBjb25zdCBtYXhXYWl0ID0gb3B0aW9ucy5tYXhXYWl0VGltZSB8fCB0aGlzLm1heFdhaXRUaW1lOw0KICAgICAgICAgICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgTG9nZ2Vy",
        "LmRlYnVnKCfnrYnlvoXlhYPntKDlh7rnjrDlubbnqLPlrponLCB7IHNlbGVjdG9yIH0pOw0KDQogICAgICAgICAgICB3aGlsZSAoRGF0ZS5ub3coKSAtIHN0YXJ0VGltZSA8IG1heFdhaXQpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcihzZWxlY3RvciwgcGFyZW50KTsNCiAgICAgICAgICAgICAgICBpZiAoZWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAvLyDlhYPntKDlrZjlnKjvvIznrYnlvoXlhbbnqLPlrpoNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNTdGFibGUgPSBhd2FpdCB0aGlzLndhaXRGb3JET01TdGFiaWxpdHkoZWxlbWVudCwgew0KICAgICAgICAgICAgICAgICAgICAgICAgbWF4V2FpdFRpbWU6IE1hdGgubWluKDEwMDAsIG1heFdhaXQgLSAoRGF0ZS5ub3coKSAtIHN0YXJ0VGltZSkpDQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChpc1N0YWJsZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflhYPntKDlt7Llh7rnjrDlubbnqLPlrponLCB7IHNlbGVjdG9yIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQ7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSh0aGlzLmNoZWNrSW50ZXJ2YWwpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIud2Fybign562J5b6F5YWD57Sg56iz5a6a6LaF5pe2JywgeyBzZWxlY3RvciwgbWF4V2FpdCB9KTsNCiAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g5YWD57Sg566h55CG5ZmoIC0g566A5YyW54mI77yM5LiT5rOo5LqO5YWD57Sg5p+l5om+5ZKM5r+A5rS7DQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBFbGVtZW50TWFuYWdlciA9IHsNCiAgICAgICAgLy8g57yT5a2Y5a655Zmo5byV55SoDQogICAgICAgIGNvbnRhY3RMaXN0Q29udGFpbmVyOiBudWxsLA0KICAgICAgICBsYXN0Q2hlY2s6IDAsDQogICAgICAgIGNoZWNrSW50ZXJ2YWw6IDEwMCwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yid5aeL5YyW5YWD57Sg566h55CG5ZmoDQogICAgICAgICAqLw0KICAgICAgICBpbml0OiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIHRoaXMuY29udGFjdExpc3RDb250YWluZXIgPSB0aGlzLmZpbmRDb250YWN0TGlzdENvbnRhaW5lcigpOw0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflhYPntKDnrqHnkIblmajliJ3lp4vljJYnLCB7DQogICAgICAgICAgICAgICAgaGFzQ29udGFpbmVyOiAhIXRoaXMuY29udGFjdExpc3RDb250YWluZXIsDQogICAgICAgICAgICAgICAgY29udGFpbmVyQ2xhc3M6IHRoaXMuY29udGFjdExpc3RD",
        "b250YWluZXI/LmNsYXNzTmFtZQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOafpeaJvuS8muivneWIl+ihqOWuueWZqA0KICAgICAgICAgKiBAcmV0dXJucyB7RWxlbWVudHxudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZmluZENvbnRhY3RMaXN0Q29udGFpbmVyOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IHNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICAnLmNoYXQtbGlzdC1ib3gnLA0KICAgICAgICAgICAgICAgICcudnVlLXJlY3ljbGUtc2Nyb2xsZXInLA0KICAgICAgICAgICAgICAgICdbZGF0YS12LTViMmRkZDJlXSAudnVlLXJlY3ljbGUtc2Nyb2xsZXInLA0KICAgICAgICAgICAgICAgICcuY29udGFjdC1saXN0Jw0KICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiBzZWxlY3RvcnMpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSBVdGlscy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsNCiAgICAgICAgICAgICAgICBpZiAoY29udGFpbmVyKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5om+5Yiw5Lya6K+d5YiX6KGo5a655ZmoJywgeyBzZWxlY3RvciB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbnRhaW5lcjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci53YXJuKCfmnKrmib7liLDkvJror53liJfooajlrrnlmagnKTsNCiAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDor4rmlq3lhYPntKDnirbmgIENCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOimgeiviuaWreeahOWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fQ0KICAgICAgICAgKi8NCiAgICAgICAgZGlhZ25vc2VFbGVtZW50U3RhdGU6IGZ1bmN0aW9uKGVsZW1lbnQpIHsNCiAgICAgICAgICAgIGNvbnN0IGRpYWdub3NpcyA9IHsNCiAgICAgICAgICAgICAgICBpc0Nvbm5lY3RlZDogZmFsc2UsDQogICAgICAgICAgICAgICAgaGFzT2Zmc2V0UGFyZW50OiBmYWxzZSwNCiAgICAgICAgICAgICAgICBjc3NWaXNpYmxlOiBmYWxzZSwNCiAgICAgICAgICAgICAgICBpblZpZXdwb3J0OiBmYWxzZSwNCiAgICAgICAgICAgICAgICBoYXNWYWxpZFJlY3Q6IGZhbHNlLA0KICAgICAgICAgICAgICAgIGlzSW50ZXJhY3RhYmxlOiBmYWxzZSwNCiAgICAgICAgICAgICAgICBkZXRhaWxzOiB7fQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgaWYgKCFlbGVtZW50KSB7DQogICAgICAgICAgICAgICAgZGlhZ25vc2lzLmRldGFpbHMuZXJyb3IgPSAn5YWD57Sg5Li656m6JzsNCiAgICAgICAgICAgICAgICByZXR1cm4gZGlhZ25vc2lzOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOWf",
        "uuehgOi/nuaOpeeKtuaAgQ0KICAgICAgICAgICAgICAgIGRpYWdub3Npcy5pc0Nvbm5lY3RlZCA9IGVsZW1lbnQuaXNDb25uZWN0ZWQ7DQoNCiAgICAgICAgICAgICAgICAvLyBvZmZzZXRQYXJlbnTmo4Dmn6UNCiAgICAgICAgICAgICAgICBkaWFnbm9zaXMuaGFzT2Zmc2V0UGFyZW50ID0gISFlbGVtZW50Lm9mZnNldFBhcmVudDsNCg0KICAgICAgICAgICAgICAgIC8vIENTU+WPr+ingeaAp+ajgOafpQ0KICAgICAgICAgICAgICAgIGNvbnN0IHN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7DQogICAgICAgICAgICAgICAgZGlhZ25vc2lzLmNzc1Zpc2libGUgPSAhKA0KICAgICAgICAgICAgICAgICAgICBzdHlsZS5kaXNwbGF5ID09PSAnbm9uZScgfHwNCiAgICAgICAgICAgICAgICAgICAgc3R5bGUudmlzaWJpbGl0eSA9PT0gJ2hpZGRlbicgfHwNCiAgICAgICAgICAgICAgICAgICAgcGFyc2VGbG9hdChzdHlsZS5vcGFjaXR5KSA9PT0gMA0KICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICBkaWFnbm9zaXMuZGV0YWlscy5jc3MgPSB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IHN0eWxlLmRpc3BsYXksDQogICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IHN0eWxlLnZpc2liaWxpdHksDQogICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IHN0eWxlLm9wYWNpdHksDQogICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBzdHlsZS5wb3NpdGlvbiwNCiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzdHlsZS50cmFuc2Zvcm0NCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgLy8g5L2N572u5ZKM5bC65a+45qOA5p+lDQogICAgICAgICAgICAgICAgY29uc3QgcmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7DQogICAgICAgICAgICAgICAgZGlhZ25vc2lzLmhhc1ZhbGlkUmVjdCA9IHJlY3Qud2lkdGggPiAwICYmIHJlY3QuaGVpZ2h0ID4gMDsNCiAgICAgICAgICAgICAgICBkaWFnbm9zaXMuZGV0YWlscy5yZWN0ID0gew0KICAgICAgICAgICAgICAgICAgICB0b3A6IHJlY3QudG9wLA0KICAgICAgICAgICAgICAgICAgICBsZWZ0OiByZWN0LmxlZnQsDQogICAgICAgICAgICAgICAgICAgIHdpZHRoOiByZWN0LndpZHRoLA0KICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0LA0KICAgICAgICAgICAgICAgICAgICBib3R0b206IHJlY3QuYm90dG9tLA0KICAgICAgICAgICAgICAgICAgICByaWdodDogcmVjdC5yaWdodA0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAvLyDop4blj6Pmo4Dmn6XvvIjmlL7lrr3ovrnnlYzvvIkNCiAgICAgICAgICAgICAgICBkaWFnbm9zaXMuaW5WaWV3cG9ydCA9ICgNCiAgICAgICAgICAgICAgICAgICAgcmVjdC50b3AgPj0gLTEwMCAmJg0KICAgICAgICAgICAgICAgICAgICByZWN0LmJvdHRvbSA8PSB3aW5kb3cuaW5uZXJIZWlnaHQgKyAxMDAgJiYN",
        "CiAgICAgICAgICAgICAgICAgICAgcmVjdC5sZWZ0ID49IC0xMDAgJiYNCiAgICAgICAgICAgICAgICAgICAgcmVjdC5yaWdodCA8PSB3aW5kb3cuaW5uZXJXaWR0aCArIDEwMA0KICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICAvLyDkuqTkupLmgKfmo4Dmn6UNCiAgICAgICAgICAgICAgICBkaWFnbm9zaXMuaXNJbnRlcmFjdGFibGUgPSAoDQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5pc0Nvbm5lY3RlZCAmJg0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuY3NzVmlzaWJsZSAmJg0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuaGFzVmFsaWRSZWN0ICYmDQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5pblZpZXdwb3J0DQogICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgIGRpYWdub3Npcy5kZXRhaWxzLnZpZXdwb3J0ID0gew0KICAgICAgICAgICAgICAgICAgICB3aWR0aDogd2luZG93LmlubmVyV2lkdGgsDQogICAgICAgICAgICAgICAgICAgIGhlaWdodDogd2luZG93LmlubmVySGVpZ2h0DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBkaWFnbm9zaXMuZGV0YWlscy5lcnJvciA9IGVycm9yLm1lc3NhZ2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBkaWFnbm9zaXM7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpeWFg+e0oOaYr+WQpuWPr+ingeWSjOWPr+S6pOS6ku+8iOWinuW8uueJiO+8iQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQg6KaB5qOA5p+l55qE5YWD57SgDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIOmAiemhuQ0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGlzRWxlbWVudFZpc2libGU6IGZ1bmN0aW9uKGVsZW1lbnQsIG9wdGlvbnMgPSB7fSkgew0KICAgICAgICAgICAgY29uc3Qgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3QgIT09IGZhbHNlOyAvLyDpu5jorqTkuKXmoLzmqKHlvI8NCiAgICAgICAgICAgIGNvbnN0IGxvZ0RldGFpbHMgPSBvcHRpb25zLmxvZ0RldGFpbHMgfHwgZmFsc2U7DQoNCiAgICAgICAgICAgIGlmICghZWxlbWVudCB8fCAhZWxlbWVudC5pc0Nvbm5lY3RlZCkgew0KICAgICAgICAgICAgICAgIGlmIChsb2dEZXRhaWxzKSBMb2dnZXIuZGVidWcoJ+WFg+e0oOS4jeWtmOWcqOaIluacqui/nuaOpeWIsERPTScpOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDnibnmrormo4Dmn6XvvJromZrmi5/mu5rliqhET03lm57mlLbnirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBpdGVtVmlldyA9IGVsZW1lbnQuY2xvc2VzdCgnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcnKTsNCiAg",
        "ICAgICAgICAgICAgICBpZiAoaXRlbVZpZXcpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdHJhbnNmb3JtID0gaXRlbVZpZXcuc3R5bGUudHJhbnNmb3JtOw0KICAgICAgICAgICAgICAgICAgICBpZiAodHJhbnNmb3JtICYmIHRyYW5zZm9ybS5pbmNsdWRlcygndHJhbnNsYXRlWSgtOTk5OXB4KScpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAobG9nRGV0YWlscykgTG9nZ2VyLmRlYnVnKCflhYPntKDlnKjomZrmi5/mu5rliqhET03lm57mlLbnirbmgIEgKHRyYW5zbGF0ZVkoLTk5OTlweCkpJyk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7IC8vIOaYjuehruagh+iusOS4uuS4jeWPr+ingQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgZGlhZ25vc2lzID0gdGhpcy5kaWFnbm9zZUVsZW1lbnRTdGF0ZShlbGVtZW50KTsNCg0KICAgICAgICAgICAgICAgIGlmIChsb2dEZXRhaWxzKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5YWD57Sg54q25oCB6K+K5patJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgaXNDb25uZWN0ZWQ6IGRpYWdub3Npcy5pc0Nvbm5lY3RlZCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc09mZnNldFBhcmVudDogZGlhZ25vc2lzLmhhc09mZnNldFBhcmVudCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNzc1Zpc2libGU6IGRpYWdub3Npcy5jc3NWaXNpYmxlLA0KICAgICAgICAgICAgICAgICAgICAgICAgaW5WaWV3cG9ydDogZGlhZ25vc2lzLmluVmlld3BvcnQsDQogICAgICAgICAgICAgICAgICAgICAgICBoYXNWYWxpZFJlY3Q6IGRpYWdub3Npcy5oYXNWYWxpZFJlY3QsDQogICAgICAgICAgICAgICAgICAgICAgICBpc0ludGVyYWN0YWJsZTogZGlhZ25vc2lzLmlzSW50ZXJhY3RhYmxlLA0KICAgICAgICAgICAgICAgICAgICAgICAgZGV0YWlsczogZGlhZ25vc2lzLmRldGFpbHMsDQogICAgICAgICAgICAgICAgICAgICAgICB2aXJ0dWFsU2Nyb2xsUmVjeWNsZWQ6IGl0ZW1WaWV3ICYmIGl0ZW1WaWV3LnN0eWxlLnRyYW5zZm9ybT8uaW5jbHVkZXMoJ3RyYW5zbGF0ZVkoLTk5OTlweCknKQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkuKXmoLzmqKHlvI/vvJrmiYDmnInmnaHku7bpg73lv4Xpobvmu6HotrMNCiAgICAgICAgICAgICAgICBpZiAoc3RyaWN0KSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBkaWFnbm9zaXMuaXNJbnRlcmFjdGFibGU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5a695p2+5qih5byP77ya5pS+5a695p+Q5Lqb5p2h5Lu2DQogICAgICAgICAgICAgICAgY29uc3QgcmVsYXhlZFZpc2libGUgPSAoDQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5pc0Nvbm5lY3RlZCAmJg0KICAgICAgICAgICAgICAgICAgICBk",
        "aWFnbm9zaXMuY3NzVmlzaWJsZSAmJg0KICAgICAgICAgICAgICAgICAgICAoZGlhZ25vc2lzLmhhc09mZnNldFBhcmVudCB8fCBkaWFnbm9zaXMuaGFzVmFsaWRSZWN0KSAmJiAvLyDmlL7lrr1vZmZzZXRQYXJlbnTopoHmsYINCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmluVmlld3BvcnQNCiAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgaWYgKGxvZ0RldGFpbHMgJiYgIXJlbGF4ZWRWaXNpYmxlKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5a695p2+5qih5byP5qOA5p+l5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgaXNDb25uZWN0ZWQ6IGRpYWdub3Npcy5pc0Nvbm5lY3RlZCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNzc1Zpc2libGU6IGRpYWdub3Npcy5jc3NWaXNpYmxlLA0KICAgICAgICAgICAgICAgICAgICAgICAgaGFzT2Zmc2V0UGFyZW50T3JWYWxpZFJlY3Q6IGRpYWdub3Npcy5oYXNPZmZzZXRQYXJlbnQgfHwgZGlhZ25vc2lzLmhhc1ZhbGlkUmVjdCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGluVmlld3BvcnQ6IGRpYWdub3Npcy5pblZpZXdwb3J0DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiByZWxheGVkVmlzaWJsZTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+ajgOafpeWFg+e0oOWPr+ingeaAp+aXtuWHuumUmScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmn6Xmib7lhYPntKDnmoTniLbnuqfomZrmi5/mu5rliqjpobnop4blm74gLSDlop7lvLrniYgNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50DQogICAgICAgICAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBmaW5kUGFyZW50SXRlbVZpZXc6IGZ1bmN0aW9uKGVsZW1lbnQpIHsNCiAgICAgICAgICAgIGlmICghZWxlbWVudCkgew0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBsZXQgY3VycmVudCA9IGVsZW1lbnQ7DQogICAgICAgICAgICBsZXQgYXR0ZW1wdHMgPSAwOw0KICAgICAgICAgICAgY29uc3QgbWF4QXR0ZW1wdHMgPSAxMDsgLy8g6Ziy5q2i5peg6ZmQ5b6q546vDQoNCiAgICAgICAgICAgIHdoaWxlIChjdXJyZW50ICYmIGN1cnJlbnQgIT09IGRvY3VtZW50LmJvZHkgJiYgYXR0ZW1wdHMgPCBtYXhBdHRlbXB0cykgew0KICAgICAgICAgICAgICAgIGF0dGVtcHRzKys7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlvZPliY3lhYPntKDmmK/lkKbmmK92dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3DQogICAgICAgICAgICAgICAgaWYg",
        "KGN1cnJlbnQuY2xhc3NMaXN0ICYmIGN1cnJlbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCd2dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3JykpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmib7liLB2dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgYXR0ZW1wdHMsDQogICAgICAgICAgICAgICAgICAgICAgICBoYXNEYXRhSW5kZXg6IHR5cGVvZiBjdXJyZW50LmRhdGFzZXQuaW5kZXggIT09ICd1bmRlZmluZWQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgZGF0YUluZGV4OiBjdXJyZW50LmRhdGFzZXQuaW5kZXgsDQogICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IGN1cnJlbnQuc3R5bGUudHJhbnNmb3JtDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbmmK/kvJror53pobnlrrnlmagNCiAgICAgICAgICAgICAgICBpZiAoY3VycmVudC5jbGFzc0xpc3QgJiYgKA0KICAgICAgICAgICAgICAgICAgICBjdXJyZW50LmNsYXNzTGlzdC5jb250YWlucygnc3gtY29udGFjdC1pdGVtJykgfHwNCiAgICAgICAgICAgICAgICAgICAgY3VycmVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2NvbnRhY3QtaXRlbScpIHx8DQogICAgICAgICAgICAgICAgICAgIGN1cnJlbnQuaGFzQXR0cmlidXRlKCdkYXRhLWtleScpDQogICAgICAgICAgICAgICAgKSkgew0KICAgICAgICAgICAgICAgICAgICAvLyDku47kvJror53pobnlkJHkuIrmn6Xmib52dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1WaWV3ID0gY3VycmVudC5jbG9zZXN0KCcudnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0tdmlldycpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbVZpZXcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6YCa6L+H5Lya6K+d6aG55om+5YiwdnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0tdmlldycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRlbXB0cywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNEYXRhSW5kZXg6IHR5cGVvZiBpdGVtVmlldy5kYXRhc2V0LmluZGV4ICE9PSAndW5kZWZpbmVkJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhSW5kZXg6IGl0ZW1WaWV3LmRhdGFzZXQuaW5kZXgNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW1WaWV3Ow0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY3VycmVudCA9IGN1cnJlbnQucGFyZW50RWxlbWVudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+ac",
        "quaJvuWIsHZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcnLCB7IGF0dGVtcHRzLCBtYXhBdHRlbXB0cyB9KTsNCiAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5blhYPntKDlnKjomZrmi5/mu5rliqjkuK3nmoTntKLlvJUgLSDlpJrnrZbnlaXojrflj5YNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50DQogICAgICAgICAqIEByZXR1cm5zIHtudW1iZXJ8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIGdldEVsZW1lbnRJbmRleDogZnVuY3Rpb24oZWxlbWVudCkgew0KICAgICAgICAgICAgaWYgKCFlbGVtZW50KSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOetlueVpTHvvJrnm7TmjqXku45kYXRhLWluZGV46I635Y+WDQogICAgICAgICAgICBjb25zdCBpdGVtVmlldyA9IHRoaXMuZmluZFBhcmVudEl0ZW1WaWV3KGVsZW1lbnQpOw0KICAgICAgICAgICAgaWYgKGl0ZW1WaWV3ICYmIHR5cGVvZiBpdGVtVmlldy5kYXRhc2V0LmluZGV4ICE9PSAndW5kZWZpbmVkJykgew0KICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gcGFyc2VJbnQoaXRlbVZpZXcuZGF0YXNldC5pbmRleCwgMTApOw0KICAgICAgICAgICAgICAgIGlmICghaXNOYU4oaW5kZXgpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6YCa6L+HZGF0YS1pbmRleOiOt+WPlue0ouW8lScsIHsgaW5kZXggfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBpbmRleDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOetlueVpTLvvJrpgJrov4fkvJror53pobnnmoRkYXRhLWtleeaOqOeulw0KICAgICAgICAgICAgY29uc3QgY29udGFjdEl0ZW0gPSBlbGVtZW50LmNsb3Nlc3QoJy5zeC1jb250YWN0LWl0ZW0nKSB8fCBlbGVtZW50LmNsb3Nlc3QoJ1tkYXRhLWtleV0nKTsNCiAgICAgICAgICAgIGlmIChjb250YWN0SXRlbSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGRhdGFLZXkgPSBjb250YWN0SXRlbS5kYXRhc2V0LmtleTsNCiAgICAgICAgICAgICAgICBpZiAoZGF0YUtleSkgew0KICAgICAgICAgICAgICAgICAgICAvLyDlsJ3or5XlnKjmiYDmnInkvJror53pobnkuK3mib7liLDljLnphY3nmoTlhYPntKDlubborqHnrpfntKLlvJUNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgYWxsQ29udGFjdEl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnN4LWNvbnRhY3QtaXRlbVtkYXRhLWtleV0nKTsNCiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbGxDb250YWN0SXRlbXMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhbGxDb250YWN0SXRlbXNbaV0uZGF0YXNldC5rZXkgPT09IGRhdGFLZXkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBM",
        "b2dnZXIuZGVidWcoJ+mAmui/h2RhdGEta2V55o6o566X57Si5byVJywgeyBpbmRleDogaSwgZGF0YUtleSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g562W55WlM++8mumAmui/h0RPTeS9jee9ruaOqOeul++8iOacgOWQjueahOWkh+eUqOaWueahiO+8iQ0KICAgICAgICAgICAgaWYgKGl0ZW1WaWV3KSB7DQogICAgICAgICAgICAgICAgY29uc3QgYWxsSXRlbVZpZXdzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcnKTsNCiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFsbEl0ZW1WaWV3cy5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgICAgICAgICBpZiAoYWxsSXRlbVZpZXdzW2ldID09PSBpdGVtVmlldykgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpgJrov4dET03kvY3nva7mjqjnrpfntKLlvJUnLCB7IGluZGV4OiBpIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci53YXJuKCfmiYDmnInntKLlvJXojrflj5bnrZbnlaXpg73lpLHotKUnKTsNCiAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICB9LA0KDQoNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6YCa6L+H5rua5Yqo5p+l5om+5bm25r+A5rS75oyH5a6a5pi156ew55qE55So5oi35Lya6K+dDQogICAgICAgICAqIOWfuuS6jueUqOaIt+aPkOS+m+eahOa7muWKqOa/gOa0u+etlueVpe+8jOabv+aNouWOn+acieeahOWkjeadgua/gOa0u+acuuWItg0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQg55uu5qCH5YWD57SgDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIOmAiemhuQ0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGZpbmRBbmRBY3RpdmF0ZUVsZW1lbnQoZWxlbWVudCwgb3B0aW9ucyA9IHt9KSB7DQogICAgICAgICAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICBpZiAoIWVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2FybignZmluZEFuZEFjdGl2YXRlRWxlbWVudDog55uu5qCH5YWD57Sg5Li656m6Jyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDpqozor4HlhYPntKDnsbvlnovvvJrnoa7kv53mmK/mnInmlYjnmoTkvJror53pobnlhYPntKANCiAgICAgICAgICAgIGlmICghZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ3N4LWNv",
        "bnRhY3QtaXRlbScpKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ2ZpbmRBbmRBY3RpdmF0ZUVsZW1lbnQ6IOS8oOWFpeeahOS4jeaYr+acieaViOeahOS8muivnemhueWFg+e0oCcsIHsNCiAgICAgICAgICAgICAgICAgICAgZWxlbWVudENsYXNzOiBlbGVtZW50LmNsYXNzTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgZWxlbWVudFRhZ05hbWU6IGVsZW1lbnQudGFnTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgZWxlbWVudERhdGFLZXk6IGVsZW1lbnQuZGF0YXNldD8ua2V5DQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmj5Dlj5bnlKjmiLfmmLXnp7DnlKjkuo7mu5rliqjmn6Xmib4NCiAgICAgICAgICAgIGNvbnN0IHRhcmdldE5pY2tuYW1lID0gdGhpcy5leHRyYWN0Tmlja25hbWVGcm9tRWxlbWVudChlbGVtZW50KTsNCiAgICAgICAgICAgIGlmICghdGFyZ2V0Tmlja25hbWUpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5peg5rOV5o+Q5Y+W55So5oi35pi156ew77yM5L2/55So5Z+656GA5r+A5rS75pa55byPJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuYmFzaWNTY3JvbGxBY3RpdmF0aW9uKGVsZW1lbnQpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuaW5mbyhgW+W8gOWni10g5YeG5aSH6YCa6L+H5rua5Yqo5r+A5rS755So5oi3OiAiJHt0YXJnZXROaWNrbmFtZX0iYCk7DQoNCiAgICAgICAgICAgIC8vIC0tLSDmraXpqqQgMTog6I635Y+W5b2T5YmN5rS75Yqo55qE5rua5Yqo5a655ZmoIC0tLQ0KICAgICAgICAgICAgY29uc3Qgc2Nyb2xsZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZC1jb2xsYXBzZS1jb250ZW50LXdyYXBwZXI6bm90KFtzdHlsZSo9Im1heC1oZWlnaHQ6IDBweCJdKSAudnVlLXJlY3ljbGUtc2Nyb2xsZXIuc2Nyb2xsZXInKTsNCiAgICAgICAgICAgIGlmICghc2Nyb2xsZXIpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+KdjCDplJnor6/vvJrmib7kuI3liLDmtLvliqjnmoTmu5rliqjlrrnlmajjgILor7fnoa7kv50i5YWo6YOo5Lya6K+dIuWIl+ihqOW3sue7j+WxleW8gOOAgicpOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8gLS0tIOi+heWKqeWHveaVsDog5qih5ouf55yf5a6e55So5oi354K55Ye777yI6L+Z5piv5r+A5rS755qE5YWz6ZSu77yJIC0tLQ0KICAgICAgICAgICAgY29uc3Qgc2ltdWxhdGVDbGljayA9IChjbGlja0VsZW1lbnQpID0+IHsNCiAgICAgICAgICAgICAgICBpZiAoIWNsaWNrRWxlbWVudCkgcmV0dXJuOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKGBb5r+A5rS7XSDlh4blpIflkJEgIiR7dGFyZ2V0Tmlja25hbWV9IiDlj5HpgIHmqKHmi5/ngrnlh7vkuovku7YuLi5gKTsNCg0KICAgICAgICAgICAg",
        "ICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOS9v+eUqOS4gOezu+WIl+S6i+S7tuadpeehruS/neiDveiiq+WQhOenjeWJjeerr+ahhuaetuaNleiOtw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBldmVudFR5cGVzID0gWw0KICAgICAgICAgICAgICAgICAgICAgICAgeyB0eXBlOiAncG9pbnRlcmRvd24nLCBjb25zdHJ1Y3RvcjogUG9pbnRlckV2ZW50IH0sDQogICAgICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICdtb3VzZWRvd24nLCBjb25zdHJ1Y3RvcjogTW91c2VFdmVudCB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgeyB0eXBlOiAncG9pbnRlcnVwJywgY29uc3RydWN0b3I6IFBvaW50ZXJFdmVudCB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgeyB0eXBlOiAnbW91c2V1cCcsIGNvbnN0cnVjdG9yOiBNb3VzZUV2ZW50IH0sDQogICAgICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICdjbGljaycsIGNvbnN0cnVjdG9yOiBNb3VzZUV2ZW50IH0NCiAgICAgICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgICAgICBldmVudFR5cGVzLmZvckVhY2goKHsgdHlwZSwgY29uc3RydWN0b3IgfSkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBldmVudCA9IG5ldyBjb25zdHJ1Y3Rvcih0eXBlLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbmNlbGFibGU6IHRydWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGlja0VsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zyhg5LqL5Lu2ICR7dHlwZX0g5Yib5bu65aSx6LSl77yM6Lez6L+HYCwgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oYOKchSDmiJDlip8hIOW3sua/gOa0u+eUqOaItyAiJHt0YXJnZXROaWNrbmFtZX0iIOeahOS8muivneOAgmApOw0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5qih5ouf54K55Ye75aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAvLyAtLS0g5q2l6aqkIDI6IOWumuS5ieafpeaJvuW5tua/gOa0u+eahOWHveaVsCAtLS0NCiAgICAgICAgICAgIGNvbnN0IGZpbmRBbmRBY3RpdmF0ZSA9IGFzeW5jICgpID0+IHsNCiAgICAgICAgICAgICAgICBjb25zdCBpdGVtcyA9IHNjcm9s",
        "bGVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zeC1jb250YWN0LWl0ZW0nKTsNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaXRlbXMpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgbmlja25hbWVFbGVtZW50ID0gaXRlbS5xdWVyeVNlbGVjdG9yKCcubmljay1uYW1lJyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChuaWNrbmFtZUVsZW1lbnQgJiYgbmlja25hbWVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSA9PT0gdGFyZ2V0Tmlja25hbWUudHJpbSgpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbyhgW+aJvuWIsCFdIOeUqOaItyAiJHt0YXJnZXROaWNrbmFtZX0iIOW3suWcqOW9k+WJjeWxj+W5leWGheOAgmApOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmu5rliqjliLDlhYPntKDkvb/lhbblrozlhajlj6/op4HvvIzlubblsYXkuK3mmL7npLoNCiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcsIGJsb2NrOiAnY2VudGVyJyB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g562J5b6F5rua5Yqo5Yqo55S75a6M5oiQ77yM6L+Z5piv56Gu5L+d54K55Ye75oiQ5Yqf55qE6YeN6KaB5LiA5q2lDQogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSg1MDApOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmiafooYzmv4DmtLvmk43kvZwNCiAgICAgICAgICAgICAgICAgICAgICAgIHNpbXVsYXRlQ2xpY2soaXRlbSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtOyAvLyDov5Tlm57mib7liLDnmoTlhYPntKDvvIzooajnpLrmiJDlip8NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsgLy8g5pyq5Zyo5b2T5YmN5bGP5bmV5om+5YiwDQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAvLyAtLS0g5q2l6aqkIDM6IOaZuuiDvea7muWKqOafpeaJvuetlueVpSAtLS0NCiAgICAgICAgICAgIC8vIOWFiOWcqOW9k+WJjeWxj+W5leafpeaJvuS4gOasoQ0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCLmraXpqqQgMTog5qOA5p+l5b2T5YmN5bGP5bmVLi4uIik7DQogICAgICAgICAgICBpZiAoYXdhaXQgZmluZEFuZEFjdGl2YXRlKCkpIHsNCiAgICAgICAgICAgICAgICBjb25zdCB0b3RhbFRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmu5rliqjmv4DmtLvmiJDlip8nLCB7IHRvdGFsVGltZTogYCR7dG90YWxUaW1lfW1zYCwgdGFyZ2V0Tmlja25hbWUgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7IC8vIOWcqOmmluWxj+WwseaJvuWIsOS6hg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDorrDlvZXlvZPliY3mu5rliqjkvY3nva7vvIznlKjkuo7lkI7nu63mgaLlpI0NCiAgICAgICAg",
        "ICAgIGNvbnN0IG9yaWdpbmFsU2Nyb2xsVG9wID0gc2Nyb2xsZXIuc2Nyb2xsVG9wOw0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDorrDlvZXljp/lp4vmu5rliqjkvY3nva46ICR7b3JpZ2luYWxTY3JvbGxUb3B9cHhgKTsNCg0KICAgICAgICAgICAgLy8g562W55WlMTog5YWI5Zue5Yiw6aG26YOo77yM5LuO5aS05byA5aeL5p+l5om+77yI6Kej5Yaz55So5oi35Zyo5LiK5LiA6aG155qE6Zeu6aKY77yJDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoIuatpemqpCAyOiDlm57liLDpobbpg6jph43mlrDlvIDlp4vmn6Xmib4uLi4iKTsNCiAgICAgICAgICAgIHNjcm9sbGVyLnNjcm9sbFRvcCA9IDA7DQogICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgzMDApOyAvLyDnrYnlvoXmu5rliqjlrozmiJANCg0KICAgICAgICAgICAgLy8g5LuO6aG26YOo5byA5aeL5p+l5om+DQogICAgICAgICAgICBpZiAoYXdhaXQgZmluZEFuZEFjdGl2YXRlKCkpIHsNCiAgICAgICAgICAgICAgICBjb25zdCB0b3RhbFRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfku47pobbpg6jmn6Xmib7mv4DmtLvmiJDlip8nLCB7IHRvdGFsVGltZTogYCR7dG90YWxUaW1lfW1zYCwgdGFyZ2V0Tmlja25hbWUgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOetlueVpTI6IOS7jumhtumDqOW8gOWni+WQkeS4i+a7muWKqOafpeaJvg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCLmraXpqqQgMzog5LuO6aG26YOo5byA5aeL5rua5Yqo5p+l5om+Li4uIik7DQogICAgICAgICAgICBsZXQgbGFzdFNjcm9sbFRvcCA9IC0xOw0KICAgICAgICAgICAgY29uc3QgU0NST0xMX0RFTEFZX01TID0gMjUwOyAvLyDmu5rliqjlkI7nrYnlvoVET03muLLmn5PnmoTml7bpl7QNCiAgICAgICAgICAgIGNvbnN0IE1BWF9TQ1JPTExfQVRURU1QVFMgPSA1MDsgLy8g5pyA5aSn5rua5Yqo5qyh5pWw77yM6YG/5YWN5peg6ZmQ5rua5YqoDQogICAgICAgICAgICBsZXQgc2Nyb2xsQXR0ZW1wdHMgPSAwOw0KDQogICAgICAgICAgICAvLyDlj6ropoHmu5rliqjmnaHov5jog73nu6fnu63mu5rliqjkuJTmnKrotoXov4fmnIDlpKflsJ3or5XmrKHmlbANCiAgICAgICAgICAgIHdoaWxlIChzY3JvbGxlci5zY3JvbGxUb3AgIT09IGxhc3RTY3JvbGxUb3AgJiYgc2Nyb2xsQXR0ZW1wdHMgPCBNQVhfU0NST0xMX0FUVEVNUFRTKSB7DQogICAgICAgICAgICAgICAgbGFzdFNjcm9sbFRvcCA9IHNjcm9sbGVyLnNjcm9sbFRvcDsNCiAgICAgICAgICAgICAgICBzY3JvbGxBdHRlbXB0cysrOw0KDQogICAgICAgICAgICAgICAgLy8g5ZCR5LiL5rua5Yqo5LiA5Liq5bGP5bmV55qE6auY5bqmDQogICAgICAgICAgICAgICAgc2Nyb2xsZXIuc2Nyb2xsVG9wICs9IHNjcm9sbGVyLmNsaWVudEhlaWdodDsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYC4uLuWQkeS4",
        "i+a7muWKqOS4gOWxjyAoJHtzY3JvbGxBdHRlbXB0c30vJHtNQVhfU0NST0xMX0FUVEVNUFRTfSkgKOW9k+WJjeS9jee9rjogJHtNYXRoLnJvdW5kKHNjcm9sbGVyLnNjcm9sbFRvcCl9cHgpYCk7DQoNCiAgICAgICAgICAgICAgICAvLyDnrYnlvoXmlrDlhoXlrrnmuLLmn5MNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheShTQ1JPTExfREVMQVlfTVMpOw0KDQogICAgICAgICAgICAgICAgLy8g5Zyo5paw5riy5p+T55qE5bGP5bmV5YaF5a655Lit5p+l5om+5bm25r+A5rS7DQogICAgICAgICAgICAgICAgaWYgKGF3YWl0IGZpbmRBbmRBY3RpdmF0ZSgpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCLmu5rliqjmn6Xmib7mv4DmtLvmiJDlip/vvIzlt7LlgZzmraLmu5rliqjjgIIiKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG90YWxUaW1lID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+a7muWKqOa/gOa0u+aIkOWKnycsIHsgdG90YWxUaW1lOiBgJHt0b3RhbFRpbWV9bXNgLCB0YXJnZXROaWNrbmFtZSwgc2Nyb2xsQXR0ZW1wdHMgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOyAvLyDmib7liLDlkI7nq4vliLvpgIDlh7rlvqrnjq8NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblt7LliLDovr7lupXpg6gNCiAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsZXIuc2Nyb2xsVG9wICsgc2Nyb2xsZXIuY2xpZW50SGVpZ2h0ID49IHNjcm9sbGVyLnNjcm9sbEhlaWdodCAtIDEwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1ZygiLi4u5bey5rua5Yqo5Yiw5bqV6YOo44CCIik7DQogICAgICAgICAgICAgICAgICAgIC8vIOWIsOi+vuW6lemDqOWQjuacgOWQjuajgOafpeS4gOasoe+8jOS7pemYsuebruagh+WcqOWIl+ihqOacgOacq+Wwvg0KICAgICAgICAgICAgICAgICAgICBpZiAoIShhd2FpdCBmaW5kQW5kQWN0aXZhdGUoKSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybihg5pyq5om+5Yiw55So5oi3OiAiJHt0YXJnZXROaWNrbmFtZX0i77yM5bCd6K+V5oGi5aSN5Y6f5aeL5rua5Yqo5L2N572uYCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgLy8g5oGi5aSN5Yiw5Y6f5aeL5rua5Yqo5L2N572uDQogICAgICAgICAgICAgICAgICAgICAgICAgc2Nyb2xsZXIuc2Nyb2xsVG9wID0gb3JpZ2luYWxTY3JvbGxUb3A7DQogICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMjAwKTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0b3RhbFRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lOw0KICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflupXpg6jmn6Xmib7mv4DmtLvmiJDlip8nLCB7IHRvdGFsVGltZTogYCR7dG90",
        "YWxUaW1lfW1zYCwgdGFyZ2V0Tmlja25hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgYnJlYWs7IC8vIOmAgOWHuuW+queOrw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5aaC5p6c6L6+5Yiw5pyA5aSn5rua5Yqo5qyh5pWw6ZmQ5Yi2DQogICAgICAgICAgICBpZiAoc2Nyb2xsQXR0ZW1wdHMgPj0gTUFYX1NDUk9MTF9BVFRFTVBUUykgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKGDovr7liLDmnIDlpKfmu5rliqjmrKHmlbDpmZDliLYgKCR7TUFYX1NDUk9MTF9BVFRFTVBUU30p77yM5YGc5q2i5p+l5om+YCk7DQogICAgICAgICAgICAgICAgLy8g5oGi5aSN5Yiw5Y6f5aeL5rua5Yqo5L2N572uDQogICAgICAgICAgICAgICAgc2Nyb2xsZXIuc2Nyb2xsVG9wID0gb3JpZ2luYWxTY3JvbGxUb3A7DQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMjAwKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgdG90YWxUaW1lID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTsNCiAgICAgICAgICAgIExvZ2dlci5lcnJvcign5rua5Yqo5r+A5rS75aSx6LSl77ya5pyq5om+5Yiw55uu5qCH55So5oi3Jywgew0KICAgICAgICAgICAgICAgIHRvdGFsVGltZTogYCR7dG90YWxUaW1lfW1zYCwNCiAgICAgICAgICAgICAgICB0YXJnZXROaWNrbmFtZSwNCiAgICAgICAgICAgICAgICBzY3JvbGxBdHRlbXB0cywNCiAgICAgICAgICAgICAgICBvcmlnaW5hbFNjcm9sbFRvcCwNCiAgICAgICAgICAgICAgICBmaW5hbFNjcm9sbFRvcDogc2Nyb2xsZXIuc2Nyb2xsVG9wLA0KICAgICAgICAgICAgICAgIHN1Z2dlc3Rpb246ICfor7fmo4Dmn6XnlKjmiLfmmLXnp7DmmK/lkKblrozlhajljLnphY3vvIzmiJbnlKjmiLfmmK/lkKblt7Lnprvnur8nDQogICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8g5aaC5p6c5b6q546v57uT5p2f6L+Y5rKh5om+5Yiw77yM5YiZ6KGo56S65aSx6LSlDQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7juWFg+e0oOS4reaPkOWPlueUqOaIt+aYteensA0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQg55uu5qCH5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd8bnVsbH0g55So5oi35pi156ewDQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0Tmlja25hbWVGcm9tRWxlbWVudChlbGVtZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOWwneivleWkmuenjemAieaLqeWZqOafpeaJvuaYteensCAtIOagueaNruWunumZhURPTee7k+aehOS8mOWMlg0KICAgICAgICAgICAgICAgIGNvbnN0IG5pY2tuYW1lU2VsZWN0b3JzID0gWw0KICAgICAgICAgICAgICAgICAgICAvLyDmnIDkvJjlhYjvvJrnm7TmjqXmn6Xmib7m",
        "mLXnp7DlhYPntKDvvIjkuI7npLrkvovku6PnoIHkuIDoh7TvvIkNCiAgICAgICAgICAgICAgICAgICAgJy5uaWNrLW5hbWUnLA0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWkh+eUqOmAieaLqeWZqA0KICAgICAgICAgICAgICAgICAgICAnLnVzZXItbmFtZScsDQogICAgICAgICAgICAgICAgICAgICcuY29udGFjdC1uYW1lJywNCiAgICAgICAgICAgICAgICAgICAgJ1tjbGFzcyo9Im5pY2siXScsDQogICAgICAgICAgICAgICAgICAgICdbY2xhc3MqPSJuYW1lIl0nLA0KICAgICAgICAgICAgICAgICAgICAnLmNvbnRhY3QtaW5mbyAubmlja25hbWUnLA0KICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdG9yIG9mIG5pY2tuYW1lU2VsZWN0b3JzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG5pY2tuYW1lRWxlbWVudCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7DQogICAgICAgICAgICAgICAgICAgIGlmIChuaWNrbmFtZUVsZW1lbnQgJiYgbmlja25hbWVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgbmlja25hbWUgPSBuaWNrbmFtZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmiJDlip/mj5Dlj5bnlKjmiLfmmLXnp7AnLCB7IG5pY2tuYW1lLCBzZWxlY3RvciB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuaWNrbmFtZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOiwg+ivleS/oeaBr++8muiusOW9leWFg+e0oOe7k+aehOS7peS+v+aOkuafpemXrumimA0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5pi156ew5o+Q5Y+W5aSx6LSl77yM5YWD57Sg57uT5p6E5L+h5oGvJywgew0KICAgICAgICAgICAgICAgICAgICBlbGVtZW50Q2xhc3M6IGVsZW1lbnQuY2xhc3NOYW1lLA0KICAgICAgICAgICAgICAgICAgICBlbGVtZW50RGF0YUtleTogZWxlbWVudC5kYXRhc2V0Py5rZXksDQogICAgICAgICAgICAgICAgICAgIGlubmVySFRNTDogZWxlbWVudC5pbm5lckhUTUwuc3Vic3RyaW5nKDAsIDIwMCkgKyAnLi4uJywgLy8g5oiq5Y+W5YmNMjAw5a2X56ymDQogICAgICAgICAgICAgICAgICAgIGF2YWlsYWJsZUNsYXNzZXM6IEFycmF5LmZyb20oZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcqJykpLm1hcChlbCA9PiBlbC5jbGFzc05hbWUpLmZpbHRlcihjID0+IGMpLnNsaWNlKDAsIDEwKQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5om+5LiN5Yiw5pi156ew5YWD57Sg77yM5bCd6K+V5LuOZGF0YeWxnuaAp+iOt+WPlg0KICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LmRhdGFzZXQgJiYgZWxlbWVudC5kYXRhc2V0LnVzZXJOYW1lKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dl",
        "ci5kZWJ1Zygn5LuOZGF0YeWxnuaAp+aPkOWPlueUqOaIt+aYteensCcsIHsgbmlja25hbWU6IGVsZW1lbnQuZGF0YXNldC51c2VyTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQuZGF0YXNldC51c2VyTmFtZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5peg5rOV5LuO5YWD57Sg5Lit5o+Q5Y+W55So5oi35pi156ewJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5o+Q5Y+W55So5oi35pi156ew5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Z+656GA5rua5Yqo5r+A5rS75pa55byP77yI5b2T5peg5rOV5o+Q5Y+W5pi156ew5pe255qE5aSH55So5pa55qGI77yJDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDnm67moIflhYPntKANCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBiYXNpY1Njcm9sbEFjdGl2YXRpb24oZWxlbWVudCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S9v+eUqOWfuuehgOa7muWKqOa/gOa0u+aWueW8jycpOw0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5Zyo6Jma5ouf5rua5Yqo55qERE9N5Zue5pS254q25oCBDQogICAgICAgICAgICAgICAgY29uc3QgaXRlbVZpZXcgPSBlbGVtZW50LmNsb3Nlc3QoJy52dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3Jyk7DQogICAgICAgICAgICAgICAgaWYgKGl0ZW1WaWV3KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybSA9IGl0ZW1WaWV3LnN0eWxlLnRyYW5zZm9ybTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRyYW5zZm9ybSAmJiB0cmFuc2Zvcm0uaW5jbHVkZXMoJ3RyYW5zbGF0ZVkoLTk5OTlweCknKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+ajgOa1i+WIsOWFg+e0oOWcqERPTeWbnuaUtueKtuaAge+8jOmcgOimgeeJueauiuWkhOeQhicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5bCd6K+V6YCa6L+H5rua5Yqo5a655Zmo5r+A5rS7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzY3JvbGxlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy52dWUtcmVjeWNsZS1zY3JvbGxlci5zY3JvbGxlcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNjcm9sbGVyKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5rua5Yqo5Yiw6aG26YOo6YeN5paw5byA5aeLDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Nyb2xsZXIuc2Nyb2xs",
        "VG9wID0gMDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgzMDApOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g55u05o6l5rua5Yqo5Yiw5YWD57Sg5L2N572uDQogICAgICAgICAgICAgICAgZWxlbWVudC5zY3JvbGxJbnRvVmlldyh7IGJlaGF2aW9yOiAnc21vb3RoJywgYmxvY2s6ICdjZW50ZXInIH0pOw0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDUwMCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlhYPntKDmmK/lkKblj6/op4ENCiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc0VsZW1lbnRWaXNpYmxlKGVsZW1lbnQpKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOaJp+ihjOeCueWHu+a/gOa0uw0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXZlbnRUeXBlcyA9IFsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICdwb2ludGVyZG93bicsIGNvbnN0cnVjdG9yOiBQb2ludGVyRXZlbnQgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICdtb3VzZWRvd24nLCBjb25zdHJ1Y3RvcjogTW91c2VFdmVudCB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdHlwZTogJ3BvaW50ZXJ1cCcsIGNvbnN0cnVjdG9yOiBQb2ludGVyRXZlbnQgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICdtb3VzZXVwJywgY29uc3RydWN0b3I6IE1vdXNlRXZlbnQgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICdjbGljaycsIGNvbnN0cnVjdG9yOiBNb3VzZUV2ZW50IH0NCiAgICAgICAgICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50VHlwZXMuZm9yRWFjaCgoeyB0eXBlLCBjb25zdHJ1Y3RvciB9KSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBuZXcgY29uc3RydWN0b3IodHlwZSwgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnViYmxlczogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbmNlbGFibGU6IHRydWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDln7rnoYDmv4DmtLvkuovku7YgJHt0eXBlfSDliJvlu7rlpLHotKXvvIzot7Pov4dgLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Z+656GA5rua5Yqo5r+A5rS75oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Z+656GA5rua5Yqo5r+A5rS754K55Ye75aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfln7rnoYDmu5rliqjmv4DmtLvlpLHotKXvvJrlhYPntKDkuI3lj6/op4EnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50Q2xhc3M6IGVsZW1lbnQuY2xhc3NOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudERhdGFLZXk6IGVsZW1lbnQuZGF0YXNldD8ua2V5LA0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudFJlY3Q6IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksDQogICAgICAgICAgICAgICAgICAgICAgICBpc0Nvbm5lY3RlZDogZWxlbWVudC5pc0Nvbm5lY3RlZCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHZpcnR1YWxTY3JvbGxTdGF0ZTogKCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpdGVtVmlldyA9IGVsZW1lbnQuY2xvc2VzdCgnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbVZpZXcgPyBpdGVtVmlldy5zdHlsZS50cmFuc2Zvcm0gOiAnbm90IGluIHZpcnR1YWwgc2Nyb2xsJw0KICAgICAgICAgICAgICAgICAgICAgICAgfSkoKQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfln7rnoYDmu5rliqjmv4DmtLvlh7rplJknLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5o+Q5Y+W5YWD57Sg54m55b6B55So5LqO5Yy56YWNDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDnm67moIflhYPntKANCiAgICAgICAgICogQHJldHVybnMge09iamVjdHxudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdEVsZW1lbnRTaWduYXR1cmU6IGZ1bmN0aW9uKGVsZW1lbnQpIHsNCiAgICAgICAgICAgIGlmICghZWxlbWVudCkgew0KICAgICAgICAg",
        "ICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IHsNCiAgICAgICAgICAgICAgICAgICAgZGF0YUtleTogZWxlbWVudC5kYXRhc2V0Py5rZXksDQogICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogZWxlbWVudC5jbGFzc05hbWUsDQogICAgICAgICAgICAgICAgICAgIHRhZ05hbWU6IGVsZW1lbnQudGFnTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgdGV4dENvbnRlbnQ6ICcnLA0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogJycsDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VQcmV2aWV3OiAnJywNCiAgICAgICAgICAgICAgICAgICAgaGFzVW5yZWFkQmFkZ2U6IGZhbHNlLA0KICAgICAgICAgICAgICAgICAgICBoYXNMZWFkc1RhZzogZmFsc2UgIC8vIOeVmeWuoui1hOagh+etvueKtuaAgQ0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAvLyDmj5Dlj5bnlKjmiLflkI0NCiAgICAgICAgICAgICAgICBjb25zdCB1c2VyTmFtZUVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcuc3gtY29udGFjdC1pdGVtLW5hbWUsIC5jb250YWN0LW5hbWUsIC51c2VyLW5hbWUnLCBlbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAodXNlck5hbWVFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHNpZ25hdHVyZS51c2VyTmFtZSA9IHVzZXJOYW1lRWxlbWVudC50ZXh0Q29udGVudD8udHJpbSgpIHx8ICcnOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaPkOWPlua2iOaBr+mihOiniA0KICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2VFbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcignLnN4LWNvbnRhY3QtaXRlbS1tZXNzYWdlLCAubGFzdC1tZXNzYWdlLCAubWVzc2FnZS1wcmV2aWV3JywgZWxlbWVudCk7DQogICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2VFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHNpZ25hdHVyZS5tZXNzYWdlUHJldmlldyA9IG1lc3NhZ2VFbGVtZW50LnRleHRDb250ZW50Py50cmltKCkgfHwgJyc7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5pyq6K+75qCH6K+GDQogICAgICAgICAgICAgICAgY29uc3QgdW5yZWFkQmFkZ2UgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcuZC1iYWRnZS1kb3QnLCBlbGVtZW50KTsNCiAgICAgICAgICAgICAgICBzaWduYXR1cmUuaGFzVW5yZWFkQmFkZ2UgPSAhIXVucmVhZEJhZGdlOw0KDQogICAgICAgICAgICAgICAgLy8g5o+Q5Y+W5a6M5pW05paH5pys5YaF5a655L2c5Li65aSH55SoDQogICAgICAgICAgICAgICAgc2lnbmF0dXJlLnRleHRDb250ZW50ID0gZWxlbWVudC50ZXh0Q29udGVudD8udHJpbSgpIHx8ICcnOw0KDQogICAgICAgICAgICAgICAgLy8g5qOA5rWL55WZ5a6i6LWE5qCH562+54q25oCBDQogICAgICAgICAgICAgICAgc2ln",
        "bmF0dXJlLmhhc0xlYWRzVGFnID0gTGVhZHNTdGF0dXNNYW5hZ2VyLmRldGVjdExlYWRzU3RhdHVzKGVsZW1lbnQpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmj5Dlj5blhYPntKDnibnlvoEnLCB7DQogICAgICAgICAgICAgICAgICAgIGRhdGFLZXk6IHNpZ25hdHVyZS5kYXRhS2V5LA0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogc2lnbmF0dXJlLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlUHJldmlldzogc2lnbmF0dXJlLm1lc3NhZ2VQcmV2aWV3Py5zdWJzdHJpbmcoMCwgNTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgIGhhc1VucmVhZEJhZGdlOiBzaWduYXR1cmUuaGFzVW5yZWFkQmFkZ2UsDQogICAgICAgICAgICAgICAgICAgIGhhc0xlYWRzVGFnOiBzaWduYXR1cmUuaGFzTGVhZHNUYWcNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBzaWduYXR1cmU7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmj5Dlj5blhYPntKDnibnlvoHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDln7rkuo7nibnlvoHmn6Xmib7lhYPntKANCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHNpZ25hdHVyZSDlhYPntKDnibnlvoENCiAgICAgICAgICogQHJldHVybnMge0VsZW1lbnR8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIGZpbmRFbGVtZW50QnlTaWduYXR1cmU6IGZ1bmN0aW9uKHNpZ25hdHVyZSkgew0KICAgICAgICAgICAgaWYgKCFzaWduYXR1cmUpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgYWxsQ29udGFjdEl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnN4LWNvbnRhY3QtaXRlbScpOw0KICAgICAgICAgICAgbGV0IGJlc3RNYXRjaCA9IG51bGw7DQogICAgICAgICAgICBsZXQgYmVzdFNjb3JlID0gMDsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGFsbENvbnRhY3RJdGVtcykgew0KICAgICAgICAgICAgICAgIGlmICghaXRlbS5pc0Nvbm5lY3RlZCkgY29udGludWU7DQoNCiAgICAgICAgICAgICAgICBsZXQgc2NvcmUgPSAwOw0KICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1TaWduYXR1cmUgPSB0aGlzLmV4dHJhY3RFbGVtZW50U2lnbmF0dXJlKGl0ZW0pOw0KICAgICAgICAgICAgICAgIGlmICghaXRlbVNpZ25hdHVyZSkgY29udGludWU7DQoNCiAgICAgICAgICAgICAgICAvLyDnsr7noa7ljLnphY1kYXRhLWtlee+8iOacgOmrmOS8mOWFiOe6p++8iQ0KICAgICAgICAgICAgICAgIGlmIChzaWduYXR1cmUuZGF0YUtleSAmJiBpdGVtU2lnbmF0dXJlLmRhdGFLZXkgPT09IHNpZ25hdHVy",
        "ZS5kYXRhS2V5KSB7DQogICAgICAgICAgICAgICAgICAgIHNjb3JlICs9IDEwMDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnlKjmiLflkI3ljLnphY3vvIjpq5jkvJjlhYjnuqfvvIkNCiAgICAgICAgICAgICAgICBpZiAoc2lnbmF0dXJlLnVzZXJOYW1lICYmIGl0ZW1TaWduYXR1cmUudXNlck5hbWUgPT09IHNpZ25hdHVyZS51c2VyTmFtZSkgew0KICAgICAgICAgICAgICAgICAgICBzY29yZSArPSA1MDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmtojmga/pooTop4jljLnphY3vvIjkuK3kvJjlhYjnuqfvvIkNCiAgICAgICAgICAgICAgICBpZiAoc2lnbmF0dXJlLm1lc3NhZ2VQcmV2aWV3ICYmIGl0ZW1TaWduYXR1cmUubWVzc2FnZVByZXZpZXcgPT09IHNpZ25hdHVyZS5tZXNzYWdlUHJldmlldykgew0KICAgICAgICAgICAgICAgICAgICBzY29yZSArPSAzMDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmnKror7vnirbmgIHljLnphY3vvIjkvY7kvJjlhYjnuqfvvIkNCiAgICAgICAgICAgICAgICBpZiAoc2lnbmF0dXJlLmhhc1VucmVhZEJhZGdlID09PSBpdGVtU2lnbmF0dXJlLmhhc1VucmVhZEJhZGdlKSB7DQogICAgICAgICAgICAgICAgICAgIHNjb3JlICs9IDEwOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWh+acrOWGheWuueebuOS8vOW6pu+8iOWkh+eUqO+8iQ0KICAgICAgICAgICAgICAgIGlmIChzaWduYXR1cmUudGV4dENvbnRlbnQgJiYgaXRlbVNpZ25hdHVyZS50ZXh0Q29udGVudCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzaW1pbGFyaXR5ID0gdGhpcy5jYWxjdWxhdGVUZXh0U2ltaWxhcml0eShzaWduYXR1cmUudGV4dENvbnRlbnQsIGl0ZW1TaWduYXR1cmUudGV4dENvbnRlbnQpOw0KICAgICAgICAgICAgICAgICAgICBzY29yZSArPSBzaW1pbGFyaXR5ICogMjA7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHNjb3JlID4gYmVzdFNjb3JlKSB7DQogICAgICAgICAgICAgICAgICAgIGJlc3RTY29yZSA9IHNjb3JlOw0KICAgICAgICAgICAgICAgICAgICBiZXN0TWF0Y2ggPSBpdGVtOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKGJlc3RNYXRjaCAmJiBiZXN0U2NvcmUgPj0gNTApIHsgLy8g6K6+572u5pyA5L2O5Yy56YWN6ZiI5YC8DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfln7rkuo7nibnlvoHmib7liLDljLnphY3lhYPntKAnLCB7DQogICAgICAgICAgICAgICAgICAgIHNjb3JlOiBiZXN0U2NvcmUsDQogICAgICAgICAgICAgICAgICAgIGRhdGFLZXk6IGJlc3RNYXRjaC5kYXRhc2V0Py5rZXkNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gYmVzdE1hdGNoOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIud2Fybign5Z+65LqO",
        "54m55b6B5pyq5om+5Yiw5Yy56YWN5YWD57SgJywgeyBiZXN0U2NvcmUgfSk7DQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K6h566X5paH5pys55u45Ly85bqmDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0MSDmlofmnKwxDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0MiDmlofmnKwyDQogICAgICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IOebuOS8vOW6piAoMC0xKQ0KICAgICAgICAgKi8NCiAgICAgICAgY2FsY3VsYXRlVGV4dFNpbWlsYXJpdHk6IGZ1bmN0aW9uKHRleHQxLCB0ZXh0Mikgew0KICAgICAgICAgICAgaWYgKCF0ZXh0MSB8fCAhdGV4dDIpIHJldHVybiAwOw0KICAgICAgICAgICAgaWYgKHRleHQxID09PSB0ZXh0MikgcmV0dXJuIDE7DQoNCiAgICAgICAgICAgIGNvbnN0IGxlbjEgPSB0ZXh0MS5sZW5ndGg7DQogICAgICAgICAgICBjb25zdCBsZW4yID0gdGV4dDIubGVuZ3RoOw0KICAgICAgICAgICAgY29uc3QgbWF4TGVuID0gTWF0aC5tYXgobGVuMSwgbGVuMik7DQoNCiAgICAgICAgICAgIGlmIChtYXhMZW4gPT09IDApIHJldHVybiAxOw0KDQogICAgICAgICAgICAvLyDnroDljZXnmoTnvJbovpHot53nprvnrpfms5UNCiAgICAgICAgICAgIGNvbnN0IG1hdHJpeCA9IEFycmF5KGxlbjEgKyAxKS5maWxsKCkubWFwKCgpID0+IEFycmF5KGxlbjIgKyAxKS5maWxsKDApKTsNCg0KICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gbGVuMTsgaSsrKSBtYXRyaXhbaV1bMF0gPSBpOw0KICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPD0gbGVuMjsgaisrKSBtYXRyaXhbMF1bal0gPSBqOw0KDQogICAgICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBsZW4xOyBpKyspIHsNCiAgICAgICAgICAgICAgICBmb3IgKGxldCBqID0gMTsgaiA8PSBsZW4yOyBqKyspIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29zdCA9IHRleHQxW2kgLSAxXSA9PT0gdGV4dDJbaiAtIDFdID8gMCA6IDE7DQogICAgICAgICAgICAgICAgICAgIG1hdHJpeFtpXVtqXSA9IE1hdGgubWluKA0KICAgICAgICAgICAgICAgICAgICAgICAgbWF0cml4W2kgLSAxXVtqXSArIDEsDQogICAgICAgICAgICAgICAgICAgICAgICBtYXRyaXhbaV1baiAtIDFdICsgMSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG1hdHJpeFtpIC0gMV1baiAtIDFdICsgY29zdA0KICAgICAgICAgICAgICAgICAgICApOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgZGlzdGFuY2UgPSBtYXRyaXhbbGVuMV1bbGVuMl07DQogICAgICAgICAgICByZXR1cm4gMSAtIChkaXN0YW5jZSAvIG1heExlbik7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmHjeaWsOafpeaJvuWFg+e0oO+8iOWinuW8uueJiO+8iS0g5aSE55CGRE9N5pu05paw5ZCO55qE5YWD57Sg5byV55So5aSx5pWIDQogICAg",
        "ICAgICAqIEBwYXJhbSB7RWxlbWVudH0gb3JpZ2luYWxFbGVtZW50IOWOn+Wni+WFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7RWxlbWVudHxudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgcmVmaW5kRWxlbWVudDogZnVuY3Rpb24ob3JpZ2luYWxFbGVtZW50KSB7DQogICAgICAgICAgICBpZiAoIW9yaWdpbmFsRWxlbWVudCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdyZWZpbmRFbGVtZW50OiDljp/lp4vlhYPntKDkuLrnqbonKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8gMS4g5qOA5p+l5Y6f5aeL5YWD57Sg5piv5ZCm5LuN54S25pyJ5pWIDQogICAgICAgICAgICBpZiAob3JpZ2luYWxFbGVtZW50LmlzQ29ubmVjdGVkKSB7DQogICAgICAgICAgICAgICAgLy8g5pS+5a695qOA5p+l5p2h5Lu277yM5LiN5LuF5LuF5L6d6LWWb2Zmc2V0UGFyZW50DQogICAgICAgICAgICAgICAgY29uc3Qgc3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShvcmlnaW5hbEVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmIChzdHlsZS5kaXNwbGF5ICE9PSAnbm9uZScgJiYgc3R5bGUudmlzaWJpbGl0eSAhPT0gJ2hpZGRlbicpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfljp/lp4vlhYPntKDku43nhLbmnInmlYgnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsRWxlbWVudDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5Y6f5aeL5YWD57Sg5bey5aSx5pWI77yM5byA5aeL6YeN5paw5p+l5om+Jyk7DQoNCiAgICAgICAgICAgIC8vIDIuIOaPkOWPluWOn+Wni+WFg+e0oOeahOeJueW+gQ0KICAgICAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gdGhpcy5leHRyYWN0RWxlbWVudFNpZ25hdHVyZShvcmlnaW5hbEVsZW1lbnQpOw0KICAgICAgICAgICAgaWYgKCFzaWduYXR1cmUpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5peg5rOV5o+Q5Y+W5Y6f5aeL5YWD57Sg54m55b6BJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIDMuIOWfuuS6jueJueW+geafpeaJvuWMuemFjeWFg+e0oA0KICAgICAgICAgICAgY29uc3QgbWF0Y2hlZEVsZW1lbnQgPSB0aGlzLmZpbmRFbGVtZW50QnlTaWduYXR1cmUoc2lnbmF0dXJlKTsNCiAgICAgICAgICAgIGlmIChtYXRjaGVkRWxlbWVudCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmiJDlip/ln7rkuo7nibnlvoHph43mlrDmib7liLDlhYPntKAnLCB7DQogICAgICAgICAgICAgICAgICAgIG9yaWdpbmFsRGF0YUtleTogc2lnbmF0dXJlLmRhdGFLZXksDQogICAgICAgICAgICAgICAgICAgIG1hdGNoZWREYXRhS2V5OiBtYXRjaGVkRWxlbWVudC5kYXRhc2V0Py5rZXksDQogICAgICAgICAgICAgICAgICAgIHVzZXJO",
        "YW1lOiBzaWduYXR1cmUudXNlck5hbWUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbWF0Y2hlZEVsZW1lbnQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIDQuIOmZjee6p+etlueVpe+8mueugOWNleafpeaJvg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfnibnlvoHljLnphY3lpLHotKXvvIzlsJ3or5XpmY3nuqfnrZbnlaUnKTsNCiAgICAgICAgICAgIGNvbnN0IGZhbGxiYWNrU3RyYXRlZ2llcyA9IFsNCiAgICAgICAgICAgICAgICAvLyDnrZbnlaUx77ya6YCa6L+HZGF0YS1rZXnmn6Xmib7vvIjlpoLmnpzlrZjlnKjvvIkNCiAgICAgICAgICAgICAgICAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGlmIChzaWduYXR1cmUuZGF0YUtleSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFV0aWxzLnF1ZXJ5U2VsZWN0b3IoYFtkYXRhLWtleT0iJHtzaWduYXR1cmUuZGF0YUtleX0iXWApOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0sDQoNCiAgICAgICAgICAgICAgICAvLyDnrZbnlaUy77ya5p+l5om+56ys5LiA5Liq5pyJ5pyq6K+75raI5oGv55qE5Lya6K+d6aG5DQogICAgICAgICAgICAgICAgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBpZiAoc2lnbmF0dXJlLmhhc1VucmVhZEJhZGdlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gVXRpbHMucXVlcnlTZWxlY3RvcignLnN4LWNvbnRhY3QtaXRlbSAuZC1iYWRnZS1kb3QnKT8uY2xvc2VzdCgnLnN4LWNvbnRhY3QtaXRlbScpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0sDQoNCiAgICAgICAgICAgICAgICAvLyDnrZbnlaUz77ya5p+l5om+56ys5LiA5Liq5Y+v6KeB55qE5Lya6K+d6aG5DQogICAgICAgICAgICAgICAgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBhbGxJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zeC1jb250YWN0LWl0ZW0nKTsNCiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGFsbEl0ZW1zKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5pc0Nvbm5lY3RlZCAmJiB0aGlzLmlzRWxlbWVudFZpc2libGUoaXRlbSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICBdOw0KDQogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZhbGxiYWNrU3RyYXRlZ2llcy5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0",
        "IGVsZW1lbnQgPSBmYWxsYmFja1N0cmF0ZWdpZXNbaV0oKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQgJiYgZWxlbWVudC5pc0Nvbm5lY3RlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpmY3nuqfnrZbnlaXmiJDlip8nLCB7IHN0cmF0ZWd5OiBpICsgMSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbGVtZW50Ow0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpmY3nuqfnrZbnlaXlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBzdHJhdGVneTogaSArIDEsDQogICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5lcnJvcign5omA5pyJ5YWD57Sg6YeN5paw5p+l5om+562W55Wl6YO95aSx6LSlJyk7DQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Y+v6Z2g55qE5YWD57Sg54K55Ye75pa55rOVDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDopoHngrnlh7vnmoTlhYPntKANCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMg6YCJ6aG5DQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgcmVsaWFibGVDbGljayhlbGVtZW50LCBvcHRpb25zID0ge30pIHsNCiAgICAgICAgICAgIGlmICghZWxlbWVudCB8fCAhZWxlbWVudC5pc0Nvbm5lY3RlZCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdyZWxpYWJsZUNsaWNrOiDlhYPntKDml6DmlYgnKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGNvbnN0IG1heEF0dGVtcHRzID0gb3B0aW9ucy5tYXhBdHRlbXB0cyB8fCAzOw0KICAgICAgICAgICAgY29uc3Qgd2FpdEJldHdlZW5BdHRlbXB0cyA9IG9wdGlvbnMud2FpdEJldHdlZW5BdHRlbXB0cyB8fCAyMDA7DQogICAgICAgICAgICBjb25zdCBmb3JjZUNsaWNrID0gb3B0aW9ucy5mb3JjZUNsaWNrIHx8IGZhbHNlOw0KDQogICAgICAgICAgICBmb3IgKGxldCBhdHRlbXB0ID0gMTsgYXR0ZW1wdCA8PSBtYXhBdHRlbXB0czsgYXR0ZW1wdCsrKSB7DQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDlsJ3or5Xngrnlh7vlhYPntKAgKCR7YXR0ZW1wdH0vJHttYXhBdHRlbXB0c30pYCwgew0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yY2VDbGljaywNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRDbGFzczogZWxlbWVudC5jbGFzc05hbWUsDQogICAgICAgICAg",
        "ICAgICAgICAgICAgICBoYXNBY3RpdmVDbGFzczogZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpDQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOS4jeaYr+W8uuWItueCueWHu+aooeW8j++8jOajgOafpeWFg+e0oOWPr+ingeaApw0KICAgICAgICAgICAgICAgICAgICBpZiAoIWZvcmNlQ2xpY2spIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IHRoaXMuaXNFbGVtZW50VmlzaWJsZShlbGVtZW50LCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyaWN0OiBmYWxzZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dEZXRhaWxzOiBhdHRlbXB0ID09PSBtYXhBdHRlbXB0cw0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNWaXNpYmxlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDlhYPntKDkuI3lj6/op4HvvIzot7Pov4fngrnlh7sgKCR7YXR0ZW1wdH0vJHttYXhBdHRlbXB0c30pYCwgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50Q2xhc3M6IGVsZW1lbnQuY2xhc3NOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50RGF0YUtleTogZWxlbWVudC5kYXRhc2V0Py5rZXkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXR0ZW1wdCA8IG1heEF0dGVtcHRzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KHdhaXRCZXR3ZWVuQXR0ZW1wdHMpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflvLrliLbngrnlh7vmqKHlvI/vvIzot7Pov4flj6/op4HmgKfmo4Dmn6UnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWwneivleWkmuenjeeCueWHu+aWueazlQ0KICAgICAgICAgICAgICAgICAgICBjb25zdCBjbGlja01ldGhvZHMgPSBbDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmlrnms5Ux77ya5qCH5YeG54K55Ye7DQogICAgICAgICAgICAgICAgICAgICAgICAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5jbGljaygpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5pa55rOVMu+8muaooeaL",
        "n+m8oOagh+S6i+S7tg0KICAgICAgICAgICAgICAgICAgICAgICAgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBVdGlscy5zaW11bGF0ZUNsaWNrKGVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5pa55rOVM++8muinpuWPkeS6i+S7tg0KICAgICAgICAgICAgICAgICAgICAgICAgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IE1vdXNlRXZlbnQoJ2NsaWNrJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWJibGVzOiB0cnVlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYW5jZWxhYmxlOiB0cnVlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3OiB3aW5kb3cNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudC5kaXNwYXRjaEV2ZW50KGV2ZW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IG1ldGhvZCBvZiBjbGlja01ldGhvZHMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gbWV0aG9kKCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WFg+e0oOeCueWHu+aIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dGVtcHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6IGNsaWNrTWV0aG9kcy5pbmRleE9mKG1ldGhvZCkgKyAxDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn54K55Ye75pa55rOV5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6IGNsaWNrTWV0aG9kcy5pbmRleE9mKG1ldGhvZCkgKyAxLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGF0dGVtcHQgPCBtYXhBdHRlbXB0cykgew0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVs",
        "YXkod2FpdEJldHdlZW5BdHRlbXB0cyk7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKGDngrnlh7vlsJ3or5Xlh7rplJkgKCR7YXR0ZW1wdH0vJHttYXhBdHRlbXB0c30pYCwgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGF0dGVtcHQgPCBtYXhBdHRlbXB0cykgew0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkod2FpdEJldHdlZW5BdHRlbXB0cyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5lcnJvcign5omA5pyJ54K55Ye75bCd6K+V6YO95aSx6LSlJyk7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluaJgOacieWPr+ingeeahOS8muivnemhuQ0KICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXk8RWxlbWVudD59DQogICAgICAgICAqLw0KICAgICAgICBnZXRWaXNpYmxlQ29udGFjdEl0ZW1zOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IGFsbEl0ZW1zID0gVXRpbHMucXVlcnlTZWxlY3RvckFsbCgnLnN4LWNvbnRhY3QtaXRlbScpOw0KICAgICAgICAgICAgY29uc3QgdmlzaWJsZUl0ZW1zID0gW107DQoNCiAgICAgICAgICAgIGFsbEl0ZW1zLmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNFbGVtZW50VmlzaWJsZShpdGVtKSkgew0KICAgICAgICAgICAgICAgICAgICB2aXNpYmxlSXRlbXMucHVzaChpdGVtKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfomZrmi5/mu5rliqjlj6/op4Hpobnnu5/orqEnLCB7DQogICAgICAgICAgICAgICAgdG90YWw6IGFsbEl0ZW1zLmxlbmd0aCwNCiAgICAgICAgICAgICAgICB2aXNpYmxlOiB2aXNpYmxlSXRlbXMubGVuZ3RoLA0KICAgICAgICAgICAgICAgIGhpZGRlbjogYWxsSXRlbXMubGVuZ3RoIC0gdmlzaWJsZUl0ZW1zLmxlbmd0aA0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIHJldHVybiB2aXNpYmxlSXRlbXM7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIt+aWsOWuueWZqO+8iOeugOWMlueJiO+8iQ0KICAgICAgICAgKi8NCiAgICAgICAgcmVmcmVzaDogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLmNvbnRhY3RMaXN0Q29udGFpbmVyIHx8IHRoaXMuZmluZENvbnRhY3RMaXN0Q29udGFpbmVyKCk7DQogICAgICAgICAgICBpZiAoY29udGFpbmVyKSB7DQogICAgICAgICAgICAgICAgLy8g6Kem5Y+R5rua5Yqo5LqL5Lu2DQogICAgICAgICAgICAgICAgY29uc3Qgc2Nyb2xsRXZlbnQgPSBuZXcgRXZlbnQoJ3Njcm9s",
        "bCcsIHsgYnViYmxlczogdHJ1ZSB9KTsNCiAgICAgICAgICAgICAgICBjb250YWluZXIuZGlzcGF0Y2hFdmVudChzY3JvbGxFdmVudCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WuueWZqOW3suWIt+aWsCcpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g6aG16Z2i5YWD57Sg566h55CG5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBQYWdlRWxlbWVudE1hbmFnZXIgPSB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiDpqozor4HpobXpnaLlhYPntKDmmK/lkKblrZjlnKgNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHNlbGVjdG9yIOmAieaLqeWZqA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSDlhYPntKDlkI3np7ANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICB2YWxpZGF0ZUVsZW1lbnQ6IGZ1bmN0aW9uKHNlbGVjdG9yLCBuYW1lKSB7DQogICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7DQogICAgICAgICAgICBjb25zdCBleGlzdHMgPSAhIWVsZW1lbnQ7DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zyhg5YWD57Sg6aqM6K+BOiAke25hbWV9YCwgew0KICAgICAgICAgICAgICAgIHNlbGVjdG9yLA0KICAgICAgICAgICAgICAgIGV4aXN0cywNCiAgICAgICAgICAgICAgICBlbGVtZW50OiBleGlzdHMgPyBlbGVtZW50LnRhZ05hbWUgOiBudWxsDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgcmV0dXJuIGV4aXN0czsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5aSa6YeN6YCJ5oup5Zmo77yI5aSH6YCJ5pa55qGI77yJDQogICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IHNlbGVjdG9ycyDpgInmi6nlmajmlbDnu4QNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUg5YWD57Sg5ZCN56ewDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gcGFyZW50IOeItuWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7RWxlbWVudHxudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0RWxlbWVudFdpdGhGYWxsYmFjazogZnVuY3Rpb24oc2VsZWN0b3JzLCBuYW1lLCBwYXJlbnQgPSBkb2N1bWVudCkgew0KICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZWxlY3RvcnMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcihzZWxlY3RvcnNbaV0sIHBhcmVudCk7DQogICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDmib7liLDlhYPntKA6ICR7bmFtZX1gLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Rvcjogc2VsZWN0b3JzW2ldLA0K",
        "ICAgICAgICAgICAgICAgICAgICAgICAgZmFsbGJhY2tJbmRleDogaSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHRhZ05hbWU6IGVsZW1lbnQudGFnTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogZWxlbWVudC5jbGFzc05hbWUNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBlbGVtZW50Ow0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLndhcm4oYOacquaJvuWIsOWFg+e0oDogJHtuYW1lfWAsIHsgc2VsZWN0b3JzIH0pOw0KICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaZuuiDvemAieaLqeWZqOajgOa1iyAtIOaWsOWinuWKn+iDvQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3JLZXkg6YCJ5oup5Zmo6ZSu5ZCNDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gcGFyZW50IOeItuWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7RWxlbWVudHxudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0RWxlbWVudFdpdGhTbWFydEZhbGxiYWNrOiBmdW5jdGlvbihzZWxlY3RvcktleSwgcGFyZW50ID0gZG9jdW1lbnQpIHsNCiAgICAgICAgICAgIC8vIOmmluWFiOWwneivleS4u+mAieaLqeWZqA0KICAgICAgICAgICAgY29uc3QgcHJpbWFyeVNlbGVjdG9yID0gQ09ORklHLlNFTEVDVE9SU1tzZWxlY3RvcktleV07DQogICAgICAgICAgICBpZiAocHJpbWFyeVNlbGVjdG9yKSB7DQogICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IocHJpbWFyeVNlbGVjdG9yLCBwYXJlbnQpOw0KICAgICAgICAgICAgICAgIGlmIChlbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zyhg5Li76YCJ5oup5Zmo5oiQ5YqfOiAke3NlbGVjdG9yS2V5fWAsIHsgc2VsZWN0b3I6IHByaW1hcnlTZWxlY3RvciB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQ7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDlsJ3or5XlpIfpgInpgInmi6nlmagNCiAgICAgICAgICAgIGNvbnN0IGZhbGxiYWNrU2VsZWN0b3JzID0gQ09ORklHLlNFTEVDVE9SUy5mYWxsYmFja1NlbGVjdG9yc1tzZWxlY3RvcktleV07DQogICAgICAgICAgICBpZiAoZmFsbGJhY2tTZWxlY3RvcnMgJiYgQXJyYXkuaXNBcnJheShmYWxsYmFja1NlbGVjdG9ycykpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRFbGVtZW50V2l0aEZhbGxiYWNrKGZhbGxiYWNrU2VsZWN0b3JzLCBzZWxlY3RvcktleSwgcGFyZW50KTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmVycm9yKGDmiYDmnInpgInmi6nlmajpg73lpLHotKU6ICR7c2VsZWN0b3JLZXl9YCk7DQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfSwN",
        "Cg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l6aG16Z2i5YWz6ZSu5YWD57SgIC0g5aKe5by654mIDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOajgOafpee7k+aenA0KICAgICAgICAgKi8NCiAgICAgICAgY2hlY2tQYWdlRWxlbWVudHM6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W8gOWni+mhtemdouWFg+e0oOajgOafpS4uLicpOw0KDQogICAgICAgICAgICBjb25zdCByZXN1bHRzID0gew0KICAgICAgICAgICAgICAgIC8vIOWfuuehgOWFg+e0oOajgOafpQ0KICAgICAgICAgICAgICAgIGNvbnRhY3RMaXN0OiB0aGlzLnZhbGlkYXRlRWxlbWVudChDT05GSUcuU0VMRUNUT1JTLmNvbnRhY3RMaXN0LCAn5Lya5ZGY5YiX6KGoJyksDQogICAgICAgICAgICAgICAgY29udGFjdEl0ZW06IHRoaXMudmFsaWRhdGVFbGVtZW50KENPTkZJRy5TRUxFQ1RPUlMuY29udGFjdEl0ZW0sICfkvJror53pobknKSwNCg0KICAgICAgICAgICAgICAgIC8vIOaWsOeahOiBiuWkqeeql+WPo+WFg+e0oOajgOafpQ0KICAgICAgICAgICAgICAgIGNoYXRXaW5kb3c6IHRoaXMudmFsaWRhdGVFbGVtZW50KENPTkZJRy5TRUxFQ1RPUlMuY2hhdFdpbmRvdywgJ+iBiuWkqeeql+WPoycpLA0KICAgICAgICAgICAgICAgIGNoYXRDb250YWluZXI6IHRoaXMudmFsaWRhdGVFbGVtZW50KENPTkZJRy5TRUxFQ1RPUlMuY2hhdENvbnRhaW5lciwgJ+iBiuWkqeWuueWZqCcpLA0KICAgICAgICAgICAgICAgIG1lc3NhZ2VMaXN0OiB0aGlzLnZhbGlkYXRlRWxlbWVudChDT05GSUcuU0VMRUNUT1JTLm1lc3NhZ2VMaXN0LCAn5raI5oGv5YiX6KGoJyksDQoNCiAgICAgICAgICAgICAgICAvLyDovpPlhaXlkozlj5HpgIHlhYPntKDmo4Dmn6UNCiAgICAgICAgICAgICAgICBpbnB1dEJveDogISF0aGlzLmdldE1lc3NhZ2VJbnB1dEJveCgpLA0KICAgICAgICAgICAgICAgIHNlbmRCdXR0b246ICEhdGhpcy5nZXRTZW5kQnV0dG9uKCksDQoNCiAgICAgICAgICAgICAgICAvLyDpobXpnaLnu5PmnoTliIbmnpANCiAgICAgICAgICAgICAgICBwYWdlU3RydWN0dXJlOiB0aGlzLmFuYWx5emVQYWdlU3RydWN0dXJlKCksDQoNCiAgICAgICAgICAgICAgICAvLyDlhbzlrrnmgKfmo4Dmn6UNCiAgICAgICAgICAgICAgICBjb21wYXRpYmlsaXR5OiB0aGlzLmNoZWNrQ29tcGF0aWJpbGl0eSgpLA0KDQogICAgICAgICAgICAgICAgYWxsVmFsaWQ6IGZhbHNlDQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbmiYDmnInlhbPplK7lhYPntKDpg73lrZjlnKgNCiAgICAgICAgICAgIHJlc3VsdHMuYWxsVmFsaWQgPSByZXN1bHRzLmNvbnRhY3RMaXN0ICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRzLmNvbnRhY3RJdGVtICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRzLmNoYXRXaW5kb3cgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdHMu",
        "aW5wdXRCb3ggJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdHMuc2VuZEJ1dHRvbjsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+mhtemdouWFg+e0oOajgOafpeWujOaIkCcsIHsNCiAgICAgICAgICAgICAgICAuLi5yZXN1bHRzLA0KICAgICAgICAgICAgICAgIHBhZ2VTdHJ1Y3R1cmU6IHVuZGVmaW5lZCwgLy8g6YG/5YWN5pel5b+X6L+H6ZW/DQogICAgICAgICAgICAgICAgY29tcGF0aWJpbGl0eTogdW5kZWZpbmVkDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdHM7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIhuaekOmhtemdoue7k+aehCAtIOaWsOWinuWKn+iDvQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDpobXpnaLnu5PmnoTkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIGFuYWx5emVQYWdlU3RydWN0dXJlOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IHN0cnVjdHVyZSA9IHsNCiAgICAgICAgICAgICAgICBoYXNWaXJ0dWFsU2Nyb2xsOiBmYWxzZSwNCiAgICAgICAgICAgICAgICBoYXNUcmFkaXRpb25hbENoYXQ6IGZhbHNlLA0KICAgICAgICAgICAgICAgIGNoYXRXaW5kb3dUeXBlOiAndW5rbm93bicsDQogICAgICAgICAgICAgICAgbWVzc2FnZVN0cnVjdHVyZTogJ3Vua25vd24nLA0KICAgICAgICAgICAgICAgIGRldGVjdGVkU2VsZWN0b3JzOiB7fQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgLy8g5qOA5rWL6Jma5ouf5rua5YqoDQogICAgICAgICAgICBjb25zdCB2aXJ0dWFsU2Nyb2xsRWxlbWVudHMgPSBVdGlscy5xdWVyeVNlbGVjdG9yQWxsKCcudnVlLXJlY3ljbGUtc2Nyb2xsZXInKTsNCiAgICAgICAgICAgIHN0cnVjdHVyZS5oYXNWaXJ0dWFsU2Nyb2xsID0gdmlydHVhbFNjcm9sbEVsZW1lbnRzLmxlbmd0aCA+IDA7DQoNCiAgICAgICAgICAgIC8vIOajgOa1i+S8oOe7n+iBiuWkqee7k+aehA0KICAgICAgICAgICAgY29uc3QgdHJhZGl0aW9uYWxDaGF0RWxlbWVudHMgPSBVdGlscy5xdWVyeVNlbGVjdG9yQWxsKCcuY2hhdC13aW5kb3csIC5tZXNzYWdlLWxpc3QnKTsNCiAgICAgICAgICAgIHN0cnVjdHVyZS5oYXNUcmFkaXRpb25hbENoYXQgPSB0cmFkaXRpb25hbENoYXRFbGVtZW50cy5sZW5ndGggPiAwOw0KDQogICAgICAgICAgICAvLyDnoa7lrprogYrlpKnnqpflj6PnsbvlnosNCiAgICAgICAgICAgIGlmIChVdGlscy5xdWVyeVNlbGVjdG9yKCcjcHJvLW1zZy1ib3gnKSkgew0KICAgICAgICAgICAgICAgIHN0cnVjdHVyZS5jaGF0V2luZG93VHlwZSA9ICdwcm8tbXNnLWJveCc7DQogICAgICAgICAgICB9IGVsc2UgaWYgKFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5jaGF0LXdpbmRvdycpKSB7DQogICAgICAgICAgICAgICAgc3RydWN0dXJlLmNoYXRXaW5kb3dUeXBlID0gJ2NoYXQtd2luZG93JzsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5rWL5raI5oGv",
        "57uT5p6EDQogICAgICAgICAgICBpZiAoVXRpbHMucXVlcnlTZWxlY3RvcignLmltLW1zZy1pdGVtJykpIHsNCiAgICAgICAgICAgICAgICBzdHJ1Y3R1cmUubWVzc2FnZVN0cnVjdHVyZSA9ICdpbS1tc2ctaXRlbSc7DQogICAgICAgICAgICB9IGVsc2UgaWYgKFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5tZXNzYWdlLWl0ZW0nKSkgew0KICAgICAgICAgICAgICAgIHN0cnVjdHVyZS5tZXNzYWdlU3RydWN0dXJlID0gJ21lc3NhZ2UtaXRlbSc7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOiusOW9leajgOa1i+WIsOeahOmAieaLqeWZqA0KICAgICAgICAgICAgT2JqZWN0LmtleXMoQ09ORklHLlNFTEVDVE9SUykuZm9yRWFjaChrZXkgPT4gew0KICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgQ09ORklHLlNFTEVDVE9SU1trZXldID09PSAnc3RyaW5nJykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcihDT05GSUcuU0VMRUNUT1JTW2tleV0pOw0KICAgICAgICAgICAgICAgICAgICBzdHJ1Y3R1cmUuZGV0ZWN0ZWRTZWxlY3RvcnNba2V5XSA9ICEhZWxlbWVudDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpobXpnaLnu5PmnoTliIbmnpDlrozmiJAnLCBzdHJ1Y3R1cmUpOw0KICAgICAgICAgICAgcmV0dXJuIHN0cnVjdHVyZTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l5YW85a655oCnIC0g5paw5aKe5Yqf6IO9DQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOWFvOWuueaAp+S/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgY2hlY2tDb21wYXRpYmlsaXR5OiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvbXBhdGliaWxpdHkgPSB7DQogICAgICAgICAgICAgICAgYnJvd3NlclN1cHBvcnQ6IHRydWUsDQogICAgICAgICAgICAgICAgdGFtcGVybW9ua2V5U3VwcG9ydDogdHJ1ZSwNCiAgICAgICAgICAgICAgICBwYWdlVmVyc2lvbjogJ3Vua25vd24nLA0KICAgICAgICAgICAgICAgIHJlY29tbWVuZGF0aW9uczogW10NCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIC8vIOajgOafpea1j+iniOWZqOaUr+aMgQ0KICAgICAgICAgICAgaWYgKCF3aW5kb3cuTXV0YXRpb25PYnNlcnZlcikgew0KICAgICAgICAgICAgICAgIGNvbXBhdGliaWxpdHkuYnJvd3NlclN1cHBvcnQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICBjb21wYXRpYmlsaXR5LnJlY29tbWVuZGF0aW9ucy5wdXNoKCfmtY/op4jlmajkuI3mlK/mjIFNdXRhdGlvbk9ic2VydmVy77yM6K+35Y2H57qn5rWP6KeI5ZmoJyk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOajgOafpVRhbXBlcm1vbmtleeaUr+aMgQ0KICAgICAgICAgICAgaWYgKHR5cGVvZiBHTV94bWxodHRwUmVxdWVzdCA9PT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICAgICAgICBjb21wYXRp",
        "YmlsaXR5LnRhbXBlcm1vbmtleVN1cHBvcnQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICBjb21wYXRpYmlsaXR5LnJlY29tbWVuZGF0aW9ucy5wdXNoKCdHTV94bWxodHRwUmVxdWVzdOS4jeWPr+eUqO+8jOivt+ajgOafpVRhbXBlcm1vbmtleeiuvue9ricpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4DmtYvpobXpnaLniYjmnKwNCiAgICAgICAgICAgIGlmIChVdGlscy5xdWVyeVNlbGVjdG9yKCcjcHJvLW1zZy1ib3gnKSkgew0KICAgICAgICAgICAgICAgIGNvbXBhdGliaWxpdHkucGFnZVZlcnNpb24gPSAnbmV3LXZpcnR1YWwtc2Nyb2xsJzsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAoVXRpbHMucXVlcnlTZWxlY3RvcignLmNoYXQtd2luZG93JykpIHsNCiAgICAgICAgICAgICAgICBjb21wYXRpYmlsaXR5LnBhZ2VWZXJzaW9uID0gJ2xlZ2FjeSc7DQogICAgICAgICAgICAgICAgY29tcGF0aWJpbGl0eS5yZWNvbW1lbmRhdGlvbnMucHVzaCgn5qOA5rWL5Yiw5pen54mI6aG16Z2i57uT5p6E77yM5bu66K6u5Yi35paw6aG16Z2iJyk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBjb21wYXRpYmlsaXR5Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bkvJrlkZjliJfooajlrrnlmagNCiAgICAgICAgICogQHJldHVybnMge0VsZW1lbnR8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIGdldENvbnRhY3RMaXN0Q29udGFpbmVyOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IHNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICBDT05GSUcuU0VMRUNUT1JTLmNvbnRhY3RMaXN0LA0KICAgICAgICAgICAgICAgICcuY2hhdC1saXN0LWJveCcsDQogICAgICAgICAgICAgICAgJy52dWUtcmVjeWNsZS1zY3JvbGxlcicsDQogICAgICAgICAgICAgICAgJ1tkYXRhLXYtNWIyZGRkMmVdJw0KICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0RWxlbWVudFdpdGhGYWxsYmFjayhzZWxlY3RvcnMsICfkvJrlkZjliJfooajlrrnlmagnKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5omA5pyJ5Lya6K+d6aG5DQogICAgICAgICAqIEByZXR1cm5zIHtOb2RlTGlzdH0NCiAgICAgICAgICovDQogICAgICAgIGdldEFsbENvbnRhY3RJdGVtczogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBjb25zdCBzZWxlY3RvcnMgPSBbDQogICAgICAgICAgICAgICAgQ09ORklHLlNFTEVDVE9SUy5jb250YWN0SXRlbSwNCiAgICAgICAgICAgICAgICAnLnN4LWNvbnRhY3QtaXRlbScsDQogICAgICAgICAgICAgICAgJ1tkYXRhLWtleSo9IkFjdGl2ZS0iXScsDQogICAgICAgICAgICAgICAgJ1tkYXRhLWtleSo9IlRvdGFsLSJdJw0KICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiBzZWxlY3RvcnMpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50cyA9",
        "IFV0aWxzLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpOw0KICAgICAgICAgICAgICAgIGlmIChlbGVtZW50cy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5om+5Yiw5Lya6K+d6aG5Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3IsDQogICAgICAgICAgICAgICAgICAgICAgICBjb3VudDogZWxlbWVudHMubGVuZ3RoDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudHM7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIud2Fybign5pyq5om+5Yiw5Lu75L2V5Lya6K+d6aG5Jyk7DQogICAgICAgICAgICByZXR1cm4gW107DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluacieaWsOa2iOaBr+eahOS8muivnemhuSAtIOWinuW8uueJiO+8jOi/h+a7pOiZmuaLn+a7muWKqOS4reeahOS4jeWPr+ingeWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9DQogICAgICAgICAqLw0KICAgICAgICBnZXRDb250YWN0c1dpdGhOZXdNZXNzYWdlczogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICAvLyDkvJjlhYjkvb/nlKjlhYPntKDnrqHnkIblmajojrflj5blj6/op4HlhYPntKANCiAgICAgICAgICAgIGNvbnN0IGFsbENvbnRhY3RzID0gRWxlbWVudE1hbmFnZXIuZ2V0VmlzaWJsZUNvbnRhY3RJdGVtcygpOw0KDQogICAgICAgICAgICAvLyDlpoLmnpzlhYPntKDnrqHnkIblmajmsqHmnInmib7liLDlhYPntKDvvIzlm57pgIDliLDkvKDnu5/mlrnms5UNCiAgICAgICAgICAgIGlmIChhbGxDb250YWN0cy5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WFg+e0oOeuoeeQhuWZqOacquaJvuWIsOWPr+ingeWFg+e0oO+8jOS9v+eUqOS8oOe7n+aWueazlScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGZhbGxiYWNrQ29udGFjdHMgPSB0aGlzLmdldEFsbENvbnRhY3RJdGVtcygpOw0KICAgICAgICAgICAgICAgIGFsbENvbnRhY3RzLnB1c2goLi4uZmFsbGJhY2tDb250YWN0cyk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGNvbnN0IGNvbnRhY3RzV2l0aE1lc3NhZ2VzID0gW107DQogICAgICAgICAgICBsZXQgdmlzaWJsZUNvdW50ID0gMDsNCiAgICAgICAgICAgIGxldCBoaWRkZW5Db3VudCA9IDA7DQoNCiAgICAgICAgICAgIGFsbENvbnRhY3RzLmZvckVhY2goY29udGFjdCA9PiB7DQogICAgICAgICAgICAgICAgLy8g5YaN5qyh6aqM6K+B5YWD57Sg5Y+v6KeB5oCn77yI5Y+M6YeN5L+d6Zmp77yJDQogICAgICAgICAgICAgICAgaWYgKCFFbGVtZW50TWFuYWdlci5pc0VsZW1lbnRWaXNpYmxlKGNvbnRhY3QpKSB7DQogICAgICAgICAgICAgICAgICAgIGhpZGRlbkNvdW50Kys7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6Lez6L+H5LiN5Y+v6KeB55qE5Lya6K+d6aG5",
        "Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHRoaXMuZXh0cmFjdFVzZXJOYW1lKGNvbnRhY3QpIHx8ICfmnKrnn6XnlKjmiLcnDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdmlzaWJsZUNvdW50Kys7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbmnInmlrDmtojmga/nuqLngrkNCiAgICAgICAgICAgICAgICBjb25zdCBiYWRnZSA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoQ09ORklHLlNFTEVDVE9SUy5uZXdNZXNzYWdlQmFkZ2UsIGNvbnRhY3QpOw0KICAgICAgICAgICAgICAgIGlmIChiYWRnZSkgew0KICAgICAgICAgICAgICAgICAgICAvLyDpqozor4HnuqLngrnmmK/lkKbnnJ/mraPlj6/op4ENCiAgICAgICAgICAgICAgICAgICAgY29uc3QgYmFkZ2VTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGJhZGdlKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNCYWRnZVZpc2libGUgPSBiYWRnZVN0eWxlLnZpc2liaWxpdHkgIT09ICdoaWRkZW4nICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhZGdlU3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhZGdlU3R5bGUub3BhY2l0eSAhPT0gJzAnOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChpc0JhZGdlVmlzaWJsZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlck5hbWUgPSB0aGlzLmV4dHJhY3RVc2VyTmFtZShjb250YWN0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxhc3RNZXNzYWdlID0gdGhpcy5leHRyYWN0TGFzdE1lc3NhZ2UoY29udGFjdCk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhY3RzV2l0aE1lc3NhZ2VzLnB1c2goew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6IGNvbnRhY3QsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdE1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFkZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNWaXNpYmxlOiB0cnVlDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflj5HnjrDlj6/op4HnmoTmlrDmtojmga8nLCB7IHVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfnuqLngrnkuI3lj6/op4HvvIzot7Pov4cnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHRoaXMuZXh0cmFjdFVzZXJOYW1lKGNvbnRhY3QpIHx8ICfmnKrnn6XnlKjmiLcnDQogICAgICAgICAgICAg",
        "ICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aWsOa2iOaBr+ajgOa1i+WujOaIkCcsIHsNCiAgICAgICAgICAgICAgICB0b3RhbENoZWNrZWQ6IGFsbENvbnRhY3RzLmxlbmd0aCwNCiAgICAgICAgICAgICAgICB2aXNpYmxlOiB2aXNpYmxlQ291bnQsDQogICAgICAgICAgICAgICAgaGlkZGVuOiBoaWRkZW5Db3VudCwNCiAgICAgICAgICAgICAgICB3aXRoTmV3TWVzc2FnZXM6IGNvbnRhY3RzV2l0aE1lc3NhZ2VzLmxlbmd0aA0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIHJldHVybiBjb250YWN0c1dpdGhNZXNzYWdlczsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5o+Q5Y+W55So5oi35ZCNDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gY29udGFjdEVsZW1lbnQg5Lya6K+d5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0VXNlck5hbWU6IGZ1bmN0aW9uKGNvbnRhY3RFbGVtZW50KSB7DQogICAgICAgICAgICAvLyDmm7TmlrDpgInmi6nlmajku6XljLnphY3mnIDmlrBET03nu5PmnoQNCiAgICAgICAgICAgIGNvbnN0IHNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICAnLnN4LWNvbnRhY3QtaXRlbSAubmljay1uYW1lJywgIC8vIOacgOS9s+mAieaLqeWZqA0KICAgICAgICAgICAgICAgICcubmljay1uYW1lJywgICAgICAgICAgICAgICAgICAgLy8g55u05o6l5pi156ew6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgQ09ORklHLlNFTEVDVE9SUy51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAnLmQtdGV4dC5uaWNrLW5hbWUnLA0KICAgICAgICAgICAgICAgICcuaXRlbS1tYWluLXRvcCAuZC10ZXh0JywNCiAgICAgICAgICAgICAgICAnLml0ZW0tbWFpbi10b3AgLm5pY2stbmFtZScNCiAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgIGZvciAoY29uc3Qgc2VsZWN0b3Igb2Ygc2VsZWN0b3JzKSB7DQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmFtZUVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yLCBjb250YWN0RWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lRWxlbWVudCAmJiBuYW1lRWxlbWVudC50ZXh0Q29udGVudC50cmltKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBuYW1lRWxlbWVudC50ZXh0Q29udGVudC50cmltKCk7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eUqOaIt+WQjeaPkOWPluaIkOWKnycsIHsgc2VsZWN0b3IsIG5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmFtZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAg",
        "ICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn55So5oi35ZCN6YCJ5oup5Zmo5aSx6LSlJywgeyBzZWxlY3RvciwgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eUqOaIt+WQjeaPkOWPluWksei0pe+8jOi/lOWbnum7mOiupOWAvCcpOw0KICAgICAgICAgICAgcmV0dXJuICfmnKrnn6XnlKjmiLcnOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmj5Dlj5bmnIDlkI7kuIDmnaHmtojmga8NCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBjb250YWN0RWxlbWVudCDkvJror53lhYPntKANCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RMYXN0TWVzc2FnZTogZnVuY3Rpb24oY29udGFjdEVsZW1lbnQpIHsNCiAgICAgICAgICAgIGNvbnN0IHNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICBDT05GSUcuU0VMRUNUT1JTLmxhc3RNZXNzYWdlLA0KICAgICAgICAgICAgICAgICcuY29udGVudCcsDQogICAgICAgICAgICAgICAgJy5pdGVtLW1haW4tY2VudGVyIC5jb250ZW50JywNCiAgICAgICAgICAgICAgICAnLmQtdGV4dC5jb250ZW50Jw0KICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiBzZWxlY3RvcnMpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlRWxlbWVudCA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IsIGNvbnRhY3RFbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZUVsZW1lbnQgJiYgbWVzc2FnZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBtZXNzYWdlRWxlbWVudC50ZXh0Q29udGVudC50cmltKCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5Lya6K+d5YiX6KGo5raI5oGv5o+Q5Y+WJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3IsDQogICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBtZXNzYWdlLnN1YnN0cmluZygwLCA1MCkgKyAobWVzc2FnZS5sZW5ndGggPiA1MCA/ICcuLi4nIDogJycpLA0KICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUxlbmd0aDogbWVzc2FnZS5sZW5ndGgNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBtZXNzYWdlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfkvJror53liJfooajmtojmga/mj5Dlj5blpLHotKUnKTsNCiAgICAgICAgICAgIHJldHVybiAnJzsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5raI5oGv6L6T5YWl5qGGIC0g5aKe5by654mIDQogICAgICAgICAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9DQogICAgICAgICAq",
        "Lw0KICAgICAgICBnZXRNZXNzYWdlSW5wdXRCb3g6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflvIDlp4vmn6Xmib7mtojmga/ovpPlhaXmoYYuLi4nKTsNCg0KICAgICAgICAgICAgLy8g5L2/55So5pm66IO95aSH6YCJ6YCJ5oup5ZmoDQogICAgICAgICAgICBjb25zdCBpbnB1dEJveCA9IHRoaXMuZ2V0RWxlbWVudFdpdGhTbWFydEZhbGxiYWNrKCdpbnB1dEJveCcpOw0KDQogICAgICAgICAgICBpZiAoaW5wdXRCb3gpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aJvuWIsOi+k+WFpeahhicsIHsNCiAgICAgICAgICAgICAgICAgICAgdGFnTmFtZTogaW5wdXRCb3gudGFnTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgdHlwZTogaW5wdXRCb3gudHlwZSwNCiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IGlucHV0Qm94LnBsYWNlaG9sZGVyLA0KICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IGlucHV0Qm94LmNsYXNzTmFtZQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g6aqM6K+B6L6T5YWl5qGG5piv5ZCm5Y+v55SoDQogICAgICAgICAgICAgICAgaWYgKGlucHV0Qm94LmRpc2FibGVkIHx8IGlucHV0Qm94LnJlYWRPbmx5KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfovpPlhaXmoYbooqvnpoHnlKjmiJblj6ror7snKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGlucHV0Qm94Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+acquaJvuWIsOWPr+eUqOeahOa2iOaBr+i+k+WFpeahhicpOw0KICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluWPkemAgeaMiemSriAtIOWinuW8uueJiA0KICAgICAgICAgKiBAcmV0dXJucyB7RWxlbWVudHxudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0U2VuZEJ1dHRvbjogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+W8gOWni+afpeaJvuWPkemAgeaMiemSri4uLicpOw0KDQogICAgICAgICAgICAvLyDkvb/nlKjmmbrog73lpIfpgInpgInmi6nlmagNCiAgICAgICAgICAgIGxldCBzZW5kQnV0dG9uID0gdGhpcy5nZXRFbGVtZW50V2l0aFNtYXJ0RmFsbGJhY2soJ3NlbmRCdXR0b24nKTsNCg0KICAgICAgICAgICAgLy8g5aaC5p6c5Li76YCJ5oup5Zmo5aSx6LSl77yM5bCd6K+V6YCa6L+H5paH5pys5YaF5a655p+l5om+DQogICAgICAgICAgICBpZiAoIXNlbmRCdXR0b24pIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WwneivlemAmui/h+aWh+acrOWGheWuueafpeaJvuWPkemAgeaMiemSri4uLicpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGJ1dHRvbnMgPSBVdGlscy5xdWVyeVNlbGVjdG9yQWxsKCdidXR0b24nKTsNCiAgICAg",
        "ICAgICAgICAgICBmb3IgKGNvbnN0IGJ1dHRvbiBvZiBidXR0b25zKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRleHQgPSBidXR0b24udGV4dENvbnRlbnQudHJpbSgpOw0KICAgICAgICAgICAgICAgICAgICBpZiAodGV4dCA9PT0gJ+WPkemAgScgfHwgdGV4dCA9PT0gJ1NlbmQnIHx8IHRleHQuaW5jbHVkZXMoJ+WPkemAgScpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBzZW5kQnV0dG9uID0gYnV0dG9uOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpgJrov4fmlofmnKzmib7liLDlj5HpgIHmjInpkq4nLCB7IHRleHQgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5aaC5p6c6L+Y5piv5rKh5om+5Yiw77yM5bCd6K+V5p+l5om+6L6T5YWl5qGG6ZmE6L+R55qE5oyJ6ZKuDQogICAgICAgICAgICBpZiAoIXNlbmRCdXR0b24pIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WwneivleafpeaJvui+k+WFpeahhumZhOi/keeahOaMiemSri4uLicpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGlucHV0Qm94ID0gdGhpcy5nZXRNZXNzYWdlSW5wdXRCb3goKTsNCiAgICAgICAgICAgICAgICBpZiAoaW5wdXRCb3gpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgcGFyZW50ID0gaW5wdXRCb3guY2xvc2VzdCgnLmlucHV0LWNvbnRhaW5lciwgLm1lc3NhZ2UtaW5wdXQsIC5jaGF0LWlucHV0LCBmb3JtJyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChwYXJlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRCdXR0b24gPSBVdGlscy5xdWVyeVNlbGVjdG9yKCdidXR0b25bdHlwZT0ic3VibWl0Il0sIGJ1dHRvbjpsYXN0LWNoaWxkJywgcGFyZW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZW5kQnV0dG9uKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflnKjovpPlhaXmoYbpmYTov5Hmib7liLDmjInpkq4nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKHNlbmRCdXR0b24pIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aJvuWIsOWPkemAgeaMiemSricsIHsNCiAgICAgICAgICAgICAgICAgICAgdGFnTmFtZTogc2VuZEJ1dHRvbi50YWdOYW1lLA0KICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IHNlbmRCdXR0b24uY2xhc3NOYW1lLA0KICAgICAgICAgICAgICAgICAgICB0ZXh0OiBzZW5kQnV0dG9uLnRleHRDb250ZW50LnRyaW0oKSwNCiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IHNlbmRCdXR0b24uZGlzYWJsZWQNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBz",
        "ZW5kQnV0dG9uOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+acquaJvuWIsOWPkemAgeaMiemSricpOw0KICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluW9k+WJjeWvueivneeahOeUqOaIt+S/oeaBrw0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fSDnlKjmiLfkv6Hmga/lr7nosaEge3VzZXJJZCwgdXNlck5hbWV9DQogICAgICAgICAqLw0KICAgICAgICBnZXRDdXJyZW50Q2hhdFVzZXI6IGFzeW5jIGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+W8gOWni+iOt+WPluW9k+WJjeWvueivneeUqOaIt+S/oeaBry4uLicpOw0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMe+8muWwneivleS7juW9k+WJjea0u+i3g+eahOiBlOezu+S6uumhueS4reiOt+WPlg0KICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2ZUNvbnRhY3QgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcuc3gtY29udGFjdC1pdGVtLmFjdGl2ZScpOw0KICAgICAgICAgICAgICAgIGlmIChhY3RpdmVDb250YWN0KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5om+5Yiw5rS76LeD6IGU57O75Lq66aG5Jyk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5o+Q5Y+W55So5oi35ZCNDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJOYW1lID0gdGhpcy5leHRyYWN0VXNlck5hbWUoYWN0aXZlQ29udGFjdCk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5o+Q5Y+W55So5oi3SUQNCiAgICAgICAgICAgICAgICAgICAgbGV0IHVzZXJJZCA9ICcnOw0KICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aXZlQ29udGFjdC5kYXRhc2V0ICYmIGFjdGl2ZUNvbnRhY3QuZGF0YXNldC5rZXkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZCA9IGFjdGl2ZUNvbnRhY3QuZGF0YXNldC5rZXk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoYWN0aXZlQ29udGFjdC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkID0gYWN0aXZlQ29udGFjdC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIGlmICh1c2VyTmFtZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF1c2VySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQgPSAnbmFtZTonICsgdXNlck5hbWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5LuO5rS76LeD6IGU57O75Lq66aG56I635Y+W55So5oi35L+h5oGv5oiQ5YqfJywgeyB1c2VySWQsIHVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgdXNlcklkLCB1",
        "c2VyTmFtZSB9Ow0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMu+8muWwneivleS7jlVSTOiOt+WPlueUqOaIt0lEDQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG1hdGNoID0gdXJsLm1hdGNoKC9cL21lc3NhZ2VcL3VzZXJcLyhbXi8/XSspLyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCAmJiBtYXRjaFsxXSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gbWF0Y2hbMV07DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S7jlVSTOiOt+WPlueUqOaIt0lE5oiQ5YqfJywgeyB1c2VySWQgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWwneivleS7jua0u+i3g+iBlOezu+S6uuiOt+WPlueUqOaIt+WQjQ0KICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHVzZXJOYW1lID0gJ+acquefpeeUqOaItyc7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aXZlQ29udGFjdCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lID0gdGhpcy5leHRyYWN0VXNlck5hbWUoYWN0aXZlQ29udGFjdCkgfHwgdXNlck5hbWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHVzZXJJZCwgdXNlck5hbWUgfTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfku45VUkzmj5Dlj5bnlKjmiLdJROWksei0pScsIHsgZXJyb3I6IGUubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Uz77ya5bCd6K+V5LuO5a+56K+d56qX5Y+j5qCH6aKY6I635Y+W77yI5aSa56eN6YCJ5oup5Zmo77yJDQogICAgICAgICAgICAgICAgY29uc3QgdGl0bGVTZWxlY3RvcnMgPSBbDQogICAgICAgICAgICAgICAgICAgICcuY2hhdC1oZWFkZXIgLnRpdGxlJywNCiAgICAgICAgICAgICAgICAgICAgJy5jaGF0LXRpdGxlJywNCiAgICAgICAgICAgICAgICAgICAgJy5jb252ZXJzYXRpb24tdGl0bGUnLA0KICAgICAgICAgICAgICAgICAgICAnLmhlYWRlci10aXRsZScsDQogICAgICAgICAgICAgICAgICAgICdbY2xhc3MqPSJ0aXRsZSJdJywNCiAgICAgICAgICAgICAgICAgICAgJy5zeC1jaGF0LWhlYWRlciAudGl0bGUnDQogICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2VsZWN0b3Igb2YgdGl0bGVTZWxlY3RvcnMpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGl0bGVFbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7DQogICAgICAgICAgICAgICAgICAgIGlm",
        "ICh0aXRsZUVsZW1lbnQgJiYgdGl0bGVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlck5hbWUgPSB0aXRsZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gJ25hbWU6JyArIHVzZXJOYW1lOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S7juWvueivneagh+mimOiOt+WPlueUqOaIt+S/oeaBr+aIkOWKnycsIHsgdXNlcklkLCB1c2VyTmFtZSwgc2VsZWN0b3IgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geyB1c2VySWQsIHVzZXJOYW1lIH07DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5U077ya5LuO5pyA6L+R55qE5raI5oGv5Lit5o6o5pat55So5oi35L+h5oGvDQogICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZUl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmltLW1zZy1pdGVtJyk7DQogICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2VJdGVtcy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOaJvuWIsOacgOaWsOeahOeUqOaIt+a2iOaBr++8iOmdnkFJ5Zue5aSN77yJDQogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSBtZXNzYWdlSXRlbXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1zZ0l0ZW0gPSBtZXNzYWdlSXRlbXNbaV07DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1VzZXJNZXNzYWdlID0gbXNnSXRlbS5jbGFzc0xpc3QuY29udGFpbnMoJ2xlZnQnKSB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtc2dJdGVtLnF1ZXJ5U2VsZWN0b3IoJy5sZWZ0JykgfHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIW1zZ0l0ZW0uY2xhc3NMaXN0LmNvbnRhaW5zKCdyaWdodCcpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNVc2VyTWVzc2FnZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWwneivleS7jua2iOaBr+S4reaPkOWPlueUqOaIt+S/oeaBrw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJOYW1lRWxlbWVudCA9IG1zZ0l0ZW0ucXVlcnlTZWxlY3RvcignW2NsYXNzKj0ibmFtZSJdLCBbY2xhc3MqPSJ1c2VyIl0nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodXNlck5hbWVFbGVtZW50ICYmIHVzZXJOYW1lRWxlbWVudC50ZXh0Q29udGVudC50cmltKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlck5hbWUgPSB1c2VyTmFtZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySWQg",
        "PSAnbmFtZTonICsgdXNlck5hbWU7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfku47mtojmga/mjqjmlq3nlKjmiLfkv6Hmga/miJDlip8nLCB7IHVzZXJJZCwgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHVzZXJJZCwgdXNlck5hbWUgfTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5omA5pyJ5pa55rOV6YO95peg5rOV6I635Y+W5b2T5YmN5a+56K+d55So5oi35L+h5oGvJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6I635Y+W5b2T5YmN5a+56K+d55So5oi35L+h5oGv5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOa2iOaBr+ebkeWQrOWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgTWVzc2FnZUxpc3RlbmVyID0gew0KICAgICAgICBvYnNlcnZlcjogbnVsbCwNCiAgICAgICAgaXNMaXN0ZW5pbmc6IGZhbHNlLA0KICAgICAgICBsYXN0Q2hlY2tUaW1lOiAwLA0KICAgICAgICBsYXN0TXV0YXRpb25UaW1lOiAwLCAgLy8g5paw5aKe77ya55So5LqO6Ziy5oqWDQogICAgICAgIGJhc2VDaGVja0ludGVydmFsOiAyMDAwLA0KICAgICAgICBjdXJyZW50Q2hlY2tJbnRlcnZhbDogMjAwMCwNCiAgICAgICAgbWluQ2hlY2tJbnRlcnZhbDogMjAwMCwNCiAgICAgICAgbWF4Q2hlY2tJbnRlcnZhbDogODAwMCwNCiAgICAgICAgY2hlY2tJbnRlcnZhbFRpbWVyOiBudWxsLA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlvIDlp4vnm5HlkKzmtojmga/lj5jljJYNCiAgICAgICAgICovDQogICAgICAgIHN0YXJ0OiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmlzTGlzdGVuaW5nKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+a2iOaBr+ebkeWQrOWZqOW3suWcqOi/kOihjCcpOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDnoa7kv53lhYPntKDnrqHnkIblmajlt7LliJ3lp4vljJYNCiAgICAgICAgICAgICAgICBpZiAoIUVsZW1lbnRNYW5hZ2VyLmNvbnRhY3RMaXN0Q29udGFpbmVyKSB7DQogICAgICAgICAgICAgICAgICAgIEVsZW1lbnRNYW5hZ2VyLmluaXQoKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0",
        "aGlzLnNldHVwTXV0YXRpb25PYnNlcnZlcigpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2V0dXBQZXJpb2RpY0NoZWNrKCk7DQogICAgICAgICAgICAgICAgdGhpcy5pc0xpc3RlbmluZyA9IHRydWU7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+a2iOaBr+ebkeWQrOWZqOW3suWQr+WKqO+8iERPTeeos+WumuaAp+S8mOWMluW3suWQr+eUqO+8iScpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WQr+WKqOa2iOaBr+ebkeWQrOWZqOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWBnOatouebkeWQrOa2iOaBr+WPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgc3RvcDogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBpZiAoIXRoaXMuaXNMaXN0ZW5pbmcpIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmICh0aGlzLm9ic2VydmVyKSB7DQogICAgICAgICAgICAgICAgdGhpcy5vYnNlcnZlci5kaXNjb25uZWN0KCk7DQogICAgICAgICAgICAgICAgdGhpcy5vYnNlcnZlciA9IG51bGw7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrSW50ZXJ2YWxUaW1lcikgew0KICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLmNoZWNrSW50ZXJ2YWxUaW1lcik7DQogICAgICAgICAgICAgICAgdGhpcy5jaGVja0ludGVydmFsVGltZXIgPSBudWxsOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0aGlzLmlzTGlzdGVuaW5nID0gZmFsc2U7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn5raI5oGv55uR5ZCs5Zmo5bey5YGc5q2iJyk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiuvue9rkRPTeWPmOWMluebkeWQrOWZqA0KICAgICAgICAgKi8NCiAgICAgICAgc2V0dXBNdXRhdGlvbk9ic2VydmVyOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IHRhcmdldEVsZW1lbnQgPSBQYWdlRWxlbWVudE1hbmFnZXIuZ2V0Q29udGFjdExpc3RDb250YWluZXIoKTsNCiAgICAgICAgICAgIGlmICghdGFyZ2V0RWxlbWVudCkgew0KICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcign5pyq5om+5Yiw5Lya5ZGY5YiX6KGo5a655Zmo77yM5peg5rOV6K6+572u55uR5ZCs5ZmoJyk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcigobXV0YXRpb25zKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVNdXRhdGlvbnMobXV0YXRpb25zKTsNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAvLyDnm5HlkKzphY3nva4NCiAgICAgICAgICAgIGNvbnN0IGNvbmZpZyA9IHsNCiAgICAgICAgICAgICAgICBjaGlsZExpc3Q6IHRydWUsICAgICAgICAv",
        "LyDnm5HlkKzlrZDoioLngrnlj5jljJYNCiAgICAgICAgICAgICAgICBzdWJ0cmVlOiB0cnVlLCAgICAgICAgICAvLyDnm5HlkKzmiYDmnInlkI7ku6PoioLngrkNCiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB0cnVlLCAgICAgICAvLyDnm5HlkKzlsZ7mgKflj5jljJYNCiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVGaWx0ZXI6IFsnY2xhc3MnLCAnc3R5bGUnXSwgLy8g5Y+q55uR5ZCs54m55a6a5bGe5oCnDQogICAgICAgICAgICAgICAgY2hhcmFjdGVyRGF0YTogZmFsc2UgICAgLy8g5LiN55uR5ZCs5paH5pys5YaF5a655Y+Y5YyWDQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICB0aGlzLm9ic2VydmVyLm9ic2VydmUodGFyZ2V0RWxlbWVudCwgY29uZmlnKTsNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1ZygnTXV0YXRpb25PYnNlcnZlcuW3suiuvue9ricsIHsgdGFyZ2V0OiB0YXJnZXRFbGVtZW50LnRhZ05hbWUgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhkRPTeWPmOWMliAtIOS8mOWMlueJiO+8jOa3u+WKoOmYsuaKluWSjOeos+WumuaAp+etieW+hQ0KICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBtdXRhdGlvbnMg5Y+Y5YyW5YiX6KGoDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVNdXRhdGlvbnM6IGFzeW5jIGZ1bmN0aW9uKG11dGF0aW9ucykgew0KICAgICAgICAgICAgLy8g6Ziy5oqW77ya6YG/5YWN55+t5pe26Ze05YaF6YeN5aSN6Kem5Y+RDQogICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgaWYgKHRoaXMubGFzdE11dGF0aW9uVGltZSAmJiBub3cgLSB0aGlzLmxhc3RNdXRhdGlvblRpbWUgPCA1MDApIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ0RPTeWPmOWMlumYsuaKlu+8jOi3s+i/h+WkhOeQhicpOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMubGFzdE11dGF0aW9uVGltZSA9IG5vdzsNCg0KICAgICAgICAgICAgbGV0IGhhc05ld01lc3NhZ2UgPSBmYWxzZTsNCiAgICAgICAgICAgIGxldCBjaGFuZ2VkRWxlbWVudHMgPSBbXTsNCg0KICAgICAgICAgICAgbXV0YXRpb25zLmZvckVhY2gobXV0YXRpb24gPT4gew0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaWsOWinueahOiKgueCuQ0KICAgICAgICAgICAgICAgIGlmIChtdXRhdGlvbi50eXBlID09PSAnY2hpbGRMaXN0Jykgew0KICAgICAgICAgICAgICAgICAgICBtdXRhdGlvbi5hZGRlZE5vZGVzLmZvckVhY2gobm9kZSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05PREUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5jaGVja0Zvck5ld01lc3NhZ2VJbmRpY2F0b3JzKG5vZGUpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc05ld01lc3NhZ2UgPSB0cnVlOw0KICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmo4DmtYvliLDnmoTmmK/lvr3nq6DlhYPntKDvvIzovazmjaLkuLrlr7nlupTnmoTkvJror53pobnlhYPntKANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29udGFjdEVsZW1lbnQgPSB0aGlzLmdldENvbnRhY3RFbGVtZW50RnJvbUluZGljYXRvcihub2RlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRhY3RFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2VkRWxlbWVudHMucHVzaChjb250YWN0RWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWxnuaAp+WPmOWMlu+8iOWmgue6oueCueaYvuekui/pmpDol4/vvIkNCiAgICAgICAgICAgICAgICBpZiAobXV0YXRpb24udHlwZSA9PT0gJ2F0dHJpYnV0ZXMnKSB7DQogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrRm9yTmV3TWVzc2FnZUluZGljYXRvcnMobXV0YXRpb24udGFyZ2V0KSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaGFzTmV3TWVzc2FnZSA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmo4DmtYvliLDnmoTmmK/lvr3nq6DlhYPntKDvvIzovazmjaLkuLrlr7nlupTnmoTkvJror53pobnlhYPntKANCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhY3RFbGVtZW50ID0gdGhpcy5nZXRDb250YWN0RWxlbWVudEZyb21JbmRpY2F0b3IobXV0YXRpb24udGFyZ2V0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb250YWN0RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZWRFbGVtZW50cy5wdXNoKGNvbnRhY3RFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBpZiAoaGFzTmV3TWVzc2FnZSkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5qOA5rWL5Yiw5paw5raI5oGv5Y+Y5YyW77yM562J5b6FRE9N56iz5a6aJywgew0KICAgICAgICAgICAgICAgICAgICBtdXRhdGlvbkNvdW50OiBtdXRhdGlvbnMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICBjaGFuZ2VkRWxlbWVudHM6IGNoYW5nZWRFbGVtZW50cy5sZW5ndGgNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOetieW+hURPTeeos+WumuWQjuWGjeWkhOeQhg0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzU3RhYmxlID0gYXdhaXQgRE9NU3RhYmlsaXR5TWFuYWdl",
        "ci53YWl0Rm9yRE9NU3RhYmlsaXR5KG51bGwsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG1heFdhaXRUaW1lOiAxNTAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhYmlsaXR5VGhyZXNob2xkOiAzMDANCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzU3RhYmxlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ0RPTeW3sueos+Wumu+8jOW8gOWni+WkhOeQhuaWsOa2iOaBrycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbk5ld01lc3NhZ2VEZXRlY3RlZChjaGFuZ2VkRWxlbWVudHMpOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ0RPTeeos+WumuaAp+etieW+hei2heaXtu+8jOS7jeeEtuWkhOeQhuaWsOa2iOaBrycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbk5ld01lc3NhZ2VEZXRlY3RlZChjaGFuZ2VkRWxlbWVudHMpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdET03nqLPlrprmgKfnrYnlvoXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLm9uTmV3TWVzc2FnZURldGVjdGVkKGNoYW5nZWRFbGVtZW50cyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XlhYPntKDmmK/lkKbljIXlkKvmlrDmtojmga/mjIfnpLrlmagNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOimgeajgOafpeeahOWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGNoZWNrRm9yTmV3TWVzc2FnZUluZGljYXRvcnM6IGZ1bmN0aW9uKGVsZW1lbnQpIHsNCiAgICAgICAgICAgIC8vIOWmguaenOWFg+e0oOacrOi6q+aYr+e6oueCue+8jOafpeaJvuWFtuaJgOWxnueahOS8muivnemhuQ0KICAgICAgICAgICAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0ICYmIGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdkLWJhZGdlLWRvdCcpKSB7DQogICAgICAgICAgICAgICAgY29uc3QgY29udGFjdEl0ZW0gPSBlbGVtZW50LmNsb3Nlc3QoJy5zeC1jb250YWN0LWl0ZW0nKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gISFjb250YWN0SXRlbTsgLy8g5Y+q5pyJ5b2T57qi54K55bGe5LqO5Lya6K+d6aG55pe25omN6L+U5ZuedHJ1ZQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6XlhYPntKDlhoXmmK/lkKbljIXlkKvnuqLngrkNCiAgICAgICAgICAgIGNvbnN0IGJhZGdlID0gVXRpbHMucXVlcnlTZWxlY3RvcignLmQtYmFkZ2UtZG90JywgZWxlbWVudCk7DQogICAgICAgICAgICBpZiAoYmFkZ2UpIHsNCiAg",
        "ICAgICAgICAgICAgICAvLyDmo4Dmn6XnuqLngrnmmK/lkKblj6/op4ENCiAgICAgICAgICAgICAgICBjb25zdCBzdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGJhZGdlKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gc3R5bGUudmlzaWJpbGl0eSAhPT0gJ2hpZGRlbicgJiYgc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbmmK/kvJror53pobnkuJTljIXlkKvmlrDmtojmga/moIfor4YNCiAgICAgICAgICAgIGlmIChlbGVtZW50LmNsYXNzTGlzdCAmJiBlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnc3gtY29udGFjdC1pdGVtJykpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gVXRpbHMucXVlcnlTZWxlY3RvcignLmQtYmFkZ2UtZG90JywgZWxlbWVudCkgIT09IG51bGw7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5LuO5oyH56S65Zmo5YWD57Sg6I635Y+W5a+55bqU55qE5Lya6K+d6aG55YWD57SgDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDmjIfnpLrlmajlhYPntKDvvIjlj6/og73mmK/lvr3nq6DmiJbkvJror53pobnvvIkNCiAgICAgICAgICogQHJldHVybnMge0VsZW1lbnR8bnVsbH0g5a+55bqU55qE5Lya6K+d6aG55YWD57SgDQogICAgICAgICAqLw0KICAgICAgICBnZXRDb250YWN0RWxlbWVudEZyb21JbmRpY2F0b3I6IGZ1bmN0aW9uKGVsZW1lbnQpIHsNCiAgICAgICAgICAgIC8vIOWmguaenOWFg+e0oOacrOi6q+WwseaYr+S8muivnemhue+8jOebtOaOpei/lOWbng0KICAgICAgICAgICAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0ICYmIGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzeC1jb250YWN0LWl0ZW0nKSkgew0KICAgICAgICAgICAgICAgIHJldHVybiBlbGVtZW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDlpoLmnpzmmK/lvr3nq6DlhYPntKDvvIzmn6Xmib7lhbbmiYDlsZ7nmoTkvJror53pobkNCiAgICAgICAgICAgIGlmIChlbGVtZW50LmNsYXNzTGlzdCAmJiBlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnZC1iYWRnZS1kb3QnKSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhY3RJdGVtID0gZWxlbWVudC5jbG9zZXN0KCcuc3gtY29udGFjdC1pdGVtJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGNvbnRhY3RJdGVtOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6XlhYPntKDlhoXmmK/lkKbljIXlkKvkvJror53pobkNCiAgICAgICAgICAgIGNvbnN0IGNvbnRhY3RJdGVtID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuc3gtY29udGFjdC1pdGVtJyk7DQogICAgICAgICAgICBpZiAoY29udGFjdEl0ZW0pIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gY29udGFjdEl0ZW07DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8v",
        "IOajgOafpeWFg+e0oOaYr+WQpuWcqOS8muivnemhueWGhemDqA0KICAgICAgICAgICAgY29uc3QgcGFyZW50Q29udGFjdEl0ZW0gPSBlbGVtZW50LmNsb3Nlc3QoJy5zeC1jb250YWN0LWl0ZW0nKTsNCiAgICAgICAgICAgIGlmIChwYXJlbnRDb250YWN0SXRlbSkgew0KICAgICAgICAgICAgICAgIHJldHVybiBwYXJlbnRDb250YWN0SXRlbTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiuvue9ruWumuacn+ajgOafpe+8iOWKqOaAgemXtOmalO+8iQ0KICAgICAgICAgKi8NCiAgICAgICAgc2V0dXBQZXJpb2RpY0NoZWNrOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIHRoaXMuc2NoZWR1bGVOZXh0Q2hlY2soKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6LCD5bqm5LiL5LiA5qyh5qOA5p+lDQogICAgICAgICAqLw0KICAgICAgICBzY2hlZHVsZU5leHRDaGVjazogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBpZiAodGhpcy5jaGVja0ludGVydmFsVGltZXIpIHsNCiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5jaGVja0ludGVydmFsVGltZXIpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0aGlzLmNoZWNrSW50ZXJ2YWxUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzTGlzdGVuaW5nICYmIENvbmZpZ01hbmFnZXIuZ2V0KCdlbmFibGVkJykpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5wZXJmb3JtUGVyaW9kaWNDaGVjaygpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNjaGVkdWxlTmV4dENoZWNrKCk7IC8vIOmAkuW9kuiwg+W6puS4i+S4gOasoeajgOafpQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sIHRoaXMuY3VycmVudENoZWNrSW50ZXJ2YWwpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliqjmgIHosIPmlbTmo4Dmn6Xpl7TpmpQNCiAgICAgICAgICovDQogICAgICAgIGFkanVzdENoZWNrSW50ZXJ2YWw6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3QgcXVldWVVc2FnZSA9IE1lc3NhZ2VQcm9jZXNzb3IuZ2V0UXVldWVVc2FnZSgpOw0KICAgICAgICAgICAgbGV0IG5ld0ludGVydmFsID0gdGhpcy5iYXNlQ2hlY2tJbnRlcnZhbDsNCg0KICAgICAgICAgICAgaWYgKHF1ZXVlVXNhZ2UgPj0gODApIHsNCiAgICAgICAgICAgICAgICAvLyDpmJ/liJfkvb/nlKjnjofpq5jvvIzlh4/lsJHmo4Dmn6XpopHnjocNCiAgICAgICAgICAgICAgICBuZXdJbnRlcnZhbCA9IHRoaXMubWF4Q2hlY2tJbnRlcnZhbDsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAocXVldWVVc2FnZSA+PSA1MCkgew0KICAgICAgICAgICAgICAgIC8vIOmYn+WIl+S9v+eUqOeOh+S4reetie+8jOmAguW6puWHj+WwkeajgOafpemikeeOhw0KICAgICAgICAgICAgICAgIG5ld0ludGVydmFsID0g",
        "TWF0aC5mbG9vcih0aGlzLmJhc2VDaGVja0ludGVydmFsICogMik7DQogICAgICAgICAgICB9IGVsc2UgaWYgKHF1ZXVlVXNhZ2UgPCAyMCkgew0KICAgICAgICAgICAgICAgIC8vIOmYn+WIl+S9v+eUqOeOh+S9ju+8jOS/neaMgeato+W4uOmikeeOhw0KICAgICAgICAgICAgICAgIG5ld0ludGVydmFsID0gdGhpcy5iYXNlQ2hlY2tJbnRlcnZhbDsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgLy8g6Zif5YiX5L2/55So546H6YCC5Lit77yM6L275b6u5aKe5Yqg6Ze06ZqUDQogICAgICAgICAgICAgICAgbmV3SW50ZXJ2YWwgPSBNYXRoLmZsb29yKHRoaXMuYmFzZUNoZWNrSW50ZXJ2YWwgKiAxLjUpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDnoa7kv53pl7TpmpTlnKjlkIjnkIbojIPlm7TlhoUNCiAgICAgICAgICAgIG5ld0ludGVydmFsID0gTWF0aC5tYXgodGhpcy5taW5DaGVja0ludGVydmFsLCBNYXRoLm1pbih0aGlzLm1heENoZWNrSW50ZXJ2YWwsIG5ld0ludGVydmFsKSk7DQoNCiAgICAgICAgICAgIGlmIChuZXdJbnRlcnZhbCAhPT0gdGhpcy5jdXJyZW50Q2hlY2tJbnRlcnZhbCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6LCD5pW05qOA5p+l6Ze06ZqUJywgew0KICAgICAgICAgICAgICAgICAgICBvbGRJbnRlcnZhbDogdGhpcy5jdXJyZW50Q2hlY2tJbnRlcnZhbCwNCiAgICAgICAgICAgICAgICAgICAgbmV3SW50ZXJ2YWw6IG5ld0ludGVydmFsLA0KICAgICAgICAgICAgICAgICAgICBxdWV1ZVVzYWdlOiBgJHtxdWV1ZVVzYWdlLnRvRml4ZWQoMSl9JWANCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRDaGVja0ludGVydmFsID0gbmV3SW50ZXJ2YWw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaJp+ihjOWumuacn+ajgOafpQ0KICAgICAgICAgKi8NCiAgICAgICAgcGVyZm9ybVBlcmlvZGljQ2hlY2s6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGlmIChub3cgLSB0aGlzLmxhc3RDaGVja1RpbWUgPCB0aGlzLmN1cnJlbnRDaGVja0ludGVydmFsKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0aGlzLmxhc3RDaGVja1RpbWUgPSBub3c7DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5Yqo5oCB6LCD5pW05qOA5p+l6Ze06ZqUDQogICAgICAgICAgICAgICAgdGhpcy5hZGp1c3RDaGVja0ludGVydmFsKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDlrprmnJ/muIXnkIbov4fmnJ/nmoTlpITnkIbkuK3orrDlvZUNCiAgICAgICAgICAgICAgICBNZXNzYWdlRGVkdXBsaWNhdG9yLmNsZWFudXBFeHBpcmVkUHJvY2Vzc2luZygpOw0KDQogICAgICAgICAgICAgICAgLy8g5a6a5pyf5riF55CG6L+H5pyf55qE55WZ5a6i6LWE",
        "54q25oCB57yT5a2YDQogICAgICAgICAgICAgICAgTGVhZHNTdGF0dXNNYW5hZ2VyLmNsZWFyRXhwaXJlZENhY2hlKCk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWN0c1dpdGhNZXNzYWdlcyA9IFBhZ2VFbGVtZW50TWFuYWdlci5nZXRDb250YWN0c1dpdGhOZXdNZXNzYWdlcygpOw0KICAgICAgICAgICAgICAgIGlmIChjb250YWN0c1dpdGhNZXNzYWdlcy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5a6a5pyf5qOA5p+l5Y+R546w5paw5raI5oGvJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgY291bnQ6IGNvbnRhY3RzV2l0aE1lc3NhZ2VzLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrSW50ZXJ2YWw6IHRoaXMuY3VycmVudENoZWNrSW50ZXJ2YWwsDQogICAgICAgICAgICAgICAgICAgICAgICBxdWV1ZVVzYWdlOiBgJHtNZXNzYWdlUHJvY2Vzc29yLmdldFF1ZXVlVXNhZ2UoKS50b0ZpeGVkKDEpfSVgDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLm9uTmV3TWVzc2FnZURldGVjdGVkKGNvbnRhY3RzV2l0aE1lc3NhZ2VzLm1hcChjID0+IGMuZWxlbWVudCkpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5a6a5pyf5qOA5p+l5peg5paw5raI5oGvJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tJbnRlcnZhbDogdGhpcy5jdXJyZW50Q2hlY2tJbnRlcnZhbCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXVlVXNhZ2U6IGAke01lc3NhZ2VQcm9jZXNzb3IuZ2V0UXVldWVVc2FnZSgpLnRvRml4ZWQoMSl9JWANCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+Wumuacn+ajgOafpeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaWsOa2iOaBr+ajgOa1i+Wbnuiwgw0KICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBlbGVtZW50cyDlj5jljJbnmoTlhYPntKDliJfooagNCiAgICAgICAgICovDQogICAgICAgIG9uTmV3TWVzc2FnZURldGVjdGVkOiBmdW5jdGlvbihlbGVtZW50cykgew0KICAgICAgICAgICAgaWYgKCFDb25maWdNYW5hZ2VyLmdldCgnZW5hYmxlZCcpKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfoh6rliqjlm57lpI3lt7LnpoHnlKjvvIzot7Pov4flpITnkIYnKTsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOmAmuefpeS4u+W6lOeUqOWkhOeQhuaWsOa2iOaBrw0KICAgICAgICAgICAgaWYgKHdpbmRvdy5YSFNBdXRvUmVwbHkgJiYgd2luZG93LlhIU0F1dG9SZXBseS5oYW5kbGVOZXdNZXNz",
        "YWdlcykgew0KICAgICAgICAgICAgICAgIHdpbmRvdy5YSFNBdXRvUmVwbHkuaGFuZGxlTmV3TWVzc2FnZXMoZWxlbWVudHMpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g5a+56K+d6L+96Liq5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBDb252ZXJzYXRpb25UcmFja2VyID0gew0KICAgICAgICBjb252ZXJzYXRpb25EYXRhOiBuZXcgTWFwKCksDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOWvueivneaVsOaNrg0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCNDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlQ29udGVudCDmtojmga/lhoXlrrkNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMg6aKd5aSW6YCJ6aG5DQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOeUqOaIt+WvueivneaVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlQ29udmVyc2F0aW9uOiBmdW5jdGlvbih1c2VyTmFtZSwgbWVzc2FnZUNvbnRlbnQsIG9wdGlvbnMgPSB7fSkgew0KICAgICAgICAgICAgaWYgKCF0aGlzLmNvbnZlcnNhdGlvbkRhdGEuaGFzKHVzZXJOYW1lKSkgew0KICAgICAgICAgICAgICAgIHRoaXMuY29udmVyc2F0aW9uRGF0YS5zZXQodXNlck5hbWUsIHsNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUNvdW50OiAwLA0KICAgICAgICAgICAgICAgICAgICBoYXNSZWNlaXZlZEFjcXVpc2l0aW9uVG9vbDogZmFsc2UsDQogICAgICAgICAgICAgICAgICAgIGFjdGl2ZVdlbGNvbWVTZW50OiBmYWxzZSwNCiAgICAgICAgICAgICAgICAgICAgaW50ZXJlc3RLZXl3b3JkczogW10sDQogICAgICAgICAgICAgICAgICAgIGxhc3RNZXNzYWdlVGltZTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLA0KICAgICAgICAgICAgICAgICAgICBmaXJzdE1lc3NhZ2VUaW1lOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgdXNlckRhdGEgPSB0aGlzLmNvbnZlcnNhdGlvbkRhdGEuZ2V0KHVzZXJOYW1lKTsNCg0KICAgICAgICAgICAgLy8g5aaC5p6c5LiN5piv54m55q6K5raI5oGv77yI5aaC5Li75Yqo6L+b57q/6K+d5pyv77yJ77yM5YiZ5aKe5Yqg5raI5oGv6K6h5pWwDQogICAgICAgICAgICBpZiAoIW1lc3NhZ2VDb250ZW50LmluY2x1ZGVzKCdb5Li75Yqo6L+b57q/6K+d5pyvXScpKSB7DQogICAgICAgICAgICAgICAgdXNlckRhdGEubWVzc2FnZUNvdW50Kys7DQogICAgICAgICAgICB9DQogICAgICAgICAgICB1c2VyRGF0YS5sYXN0TWVzc2FnZVRpbWUgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7DQoNCiAgICAgICAgICAgIC8vIOW6lOeUqOmineWklumAiemhuQ0KICAgICAgICAgICAgaWYgKG9w",
        "dGlvbnMuYWN0aXZlV2VsY29tZVNlbnQgIT09IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgICAgIHVzZXJEYXRhLmFjdGl2ZVdlbGNvbWVTZW50ID0gb3B0aW9ucy5hY3RpdmVXZWxjb21lU2VudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5rWL5YW06Laj5YWz6ZSu6K+N77yI6Lez6L+H54m55q6K5raI5oGv77yJDQogICAgICAgICAgICBpZiAoIW1lc3NhZ2VDb250ZW50LmluY2x1ZGVzKCdb5Li75Yqo6L+b57q/6K+d5pyvXScpKSB7DQogICAgICAgICAgICAgICAgY29uc3Qga2V5d29yZHNDb25maWcgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25LZXl3b3JkcycsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmFjcXVpc2l0aW9uS2V5d29yZHMpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGludGVyZXN0S2V5d29yZHMgPSBrZXl3b3Jkc0NvbmZpZy5zcGxpdCgnLCcpLm1hcChrID0+IGsudHJpbSgpKS5maWx0ZXIoayA9PiBrKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkZXRlY3RlZEtleXdvcmRzID0gaW50ZXJlc3RLZXl3b3Jkcy5maWx0ZXIoa2V5d29yZCA9PiBtZXNzYWdlQ29udGVudC5pbmNsdWRlcyhrZXl3b3JkKSk7DQoNCiAgICAgICAgICAgICAgICBpZiAoZGV0ZWN0ZWRLZXl3b3Jkcy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJEYXRhLmludGVyZXN0S2V5d29yZHMgPSBbLi4ubmV3IFNldChbLi4udXNlckRhdGEuaW50ZXJlc3RLZXl3b3JkcywgLi4uZGV0ZWN0ZWRLZXl3b3Jkc10pXTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5a+56K+d5pWw5o2u5bey5pu05pawJywgew0KICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgIG1lc3NhZ2VDb3VudDogdXNlckRhdGEubWVzc2FnZUNvdW50LA0KICAgICAgICAgICAgICAgIGhhc1JlY2VpdmVkQWNxdWlzaXRpb25Ub29sOiB1c2VyRGF0YS5oYXNSZWNlaXZlZEFjcXVpc2l0aW9uVG9vbCwNCiAgICAgICAgICAgICAgICBhY3RpdmVXZWxjb21lU2VudDogdXNlckRhdGEuYWN0aXZlV2VsY29tZVNlbnQsDQogICAgICAgICAgICAgICAgZGV0ZWN0ZWRLZXl3b3JkczogdXNlckRhdGEuaW50ZXJlc3RLZXl3b3Jkcw0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIHJldHVybiB1c2VyRGF0YTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qCH6K6w5bey5Y+R6YCB6I635a6i5bel5YW3DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICovDQogICAgICAgIG1hcmtBY3F1aXNpdGlvblRvb2xTZW50OiBmdW5jdGlvbih1c2VyTmFtZSkgew0KICAgICAgICAgICAgaWYgKHRoaXMuY29udmVyc2F0aW9uRGF0YS5oYXModXNlck5hbWUpKSB7DQogICAgICAgICAgICAgICAgdGhpcy5jb252ZXJzYXRpb25EYXRhLmdldCh1c2VyTmFtZSkuaGFzUmVjZWl2",
        "ZWRBY3F1aXNpdGlvblRvb2wgPSB0cnVlOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflt7LmoIforrDojrflrqLlt6Xlhbflj5HpgIHnirbmgIEnLCB7IHVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDph43nva7nlKjmiLfojrflrqLlt6XlhbfnirbmgIHvvIjnlKjkuo7lhYHorrjph43lpI3lj5HpgIHvvIkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKi8NCiAgICAgICAgcmVzZXRBY3F1aXNpdGlvblN0YXR1czogZnVuY3Rpb24odXNlck5hbWUpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmNvbnZlcnNhdGlvbkRhdGEuaGFzKHVzZXJOYW1lKSkgew0KICAgICAgICAgICAgICAgIHRoaXMuY29udmVyc2F0aW9uRGF0YS5nZXQodXNlck5hbWUpLmhhc1JlY2VpdmVkQWNxdWlzaXRpb25Ub29sID0gZmFsc2U7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W3sumHjee9rueUqOaIt+iOt+WuouW3peWFt+eKtuaAgScsIHsgdXNlck5hbWUgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluWvueivneaVsOaNrg0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCNDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIGdldENvbnZlcnNhdGlvbkRhdGE6IGZ1bmN0aW9uKHVzZXJOYW1lKSB7DQogICAgICAgICAgICByZXR1cm4gdGhpcy5jb252ZXJzYXRpb25EYXRhLmdldCh1c2VyTmFtZSkgfHwgbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5omA5pyJ5a+56K+d57uf6K6hDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0aXN0aWNzOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IHN0YXRzID0gew0KICAgICAgICAgICAgICAgIHRvdGFsVXNlcnM6IHRoaXMuY29udmVyc2F0aW9uRGF0YS5zaXplLA0KICAgICAgICAgICAgICAgIHVzZXJzV2l0aEFjcXVpc2l0aW9uVG9vbDogMCwNCiAgICAgICAgICAgICAgICB0b3RhbE1lc3NhZ2VzOiAwLA0KICAgICAgICAgICAgICAgIGF2ZXJhZ2VNZXNzYWdlc1BlclVzZXI6IDANCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIGZvciAoY29uc3QgdXNlckRhdGEgb2YgdGhpcy5jb252ZXJzYXRpb25EYXRhLnZhbHVlcygpKSB7DQogICAgICAgICAgICAgICAgaWYgKHVzZXJEYXRhLmhhc1JlY2VpdmVkQWNxdWlzaXRpb25Ub29sKSB7DQogICAgICAgICAgICAgICAgICAgIHN0YXRzLnVzZXJzV2l0aEFjcXVpc2l0aW9uVG9vbCsrOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBzdGF0cy50b3RhbE1lc3NhZ2VzICs9IHVzZXJEYXRhLm1lc3NhZ2VDb3VudDsNCiAgICAgICAgICAgIH0N",
        "Cg0KICAgICAgICAgICAgaWYgKHN0YXRzLnRvdGFsVXNlcnMgPiAwKSB7DQogICAgICAgICAgICAgICAgc3RhdHMuYXZlcmFnZU1lc3NhZ2VzUGVyVXNlciA9IE1hdGgucm91bmQoc3RhdHMudG90YWxNZXNzYWdlcyAvIHN0YXRzLnRvdGFsVXNlcnMgKiAxMDApIC8gMTAwOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gc3RhdHM7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDogZrlhYnov5vnur/lpITnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IFNwb3RsaWdodExlYWRQcm9jZXNzb3IgPSB7DQogICAgICAgIHByb2Nlc3NlZExlYWRzOiBuZXcgU2V0KCksDQogICAgICAgIG1heENhY2hlU2l6ZTogNTAwLA0KICAgICAgICBjYWNoZUV4cGlyZVRpbWU6IDI0ICogNjAgKiA2MCAqIDEwMDAsIC8vIDI05bCP5pe2DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOa1i+aYr+WQpuS4uuiBmuWFiei/m+e6v+a2iOaBrw0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IG1lc3NhZ2VFbGVtZW50IOa2iOaBr+WFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGlzU3BvdGxpZ2h0TGVhZChtZXNzYWdlRWxlbWVudCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjZW50ZXJDb250YWluZXIgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcuaXRlbS1tYWluLWNlbnRlcicsIG1lc3NhZ2VFbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAoIWNlbnRlckNvbnRhaW5lcikgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgZGFuZ2VyVGV4dCA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5kLXRleHQuLS1jb2xvci1kYW5nZXInLCBjZW50ZXJDb250YWluZXIpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnRTcGFuID0gVXRpbHMucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnLCBjZW50ZXJDb250YWluZXIpOw0KDQogICAgICAgICAgICAgICAgaWYgKCFkYW5nZXJUZXh0IHx8ICFjb250ZW50U3Bhbikgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgY29udGVudFRleHQgPSBjb250ZW50U3Bhbi50ZXh0Q29udGVudC50cmltKCk7DQogICAgICAgICAgICAgICAgY29uc3QgaXNTcG90bGlnaHQgPSAv5a+55pa56YCa6L+H44CMLis/44CN6L+b5YWl56eB5L+hLy50ZXN0KGNvbnRlbnRUZXh0KTsNCg0KICAgICAgICAgICAgICAgIGlmIChpc1Nwb3RsaWdodCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+ajgOa1i+WIsOiBmuWFiei/m+e6v+a2iOaBrycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAg",
        "IGNvbnRlbnQ6IGNvbnRlbnRUZXh0LnN1YnN0cmluZygwLCA1MCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gaXNTcG90bGlnaHQ7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6IGa5YWJ6L+b57q/5qOA5rWL5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmqjOivgeivvueoi+WQjeensOaYr+WQpuacieaViA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY291cnNlTmFtZSDor77nqIvlkI3np7ANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuacieaViA0KICAgICAgICAgKi8NCiAgICAgICAgdmFsaWRhdGVDb3Vyc2VOYW1lKGNvdXJzZU5hbWUpIHsNCiAgICAgICAgICAgIGlmICghY291cnNlTmFtZSB8fCB0eXBlb2YgY291cnNlTmFtZSAhPT0gJ3N0cmluZycpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGNvbnN0IHRyaW1tZWROYW1lID0gY291cnNlTmFtZS50cmltKCk7DQoNCiAgICAgICAgICAgIC8vIOajgOafpemVv+W6pu+8iOWkquefreaIluWkqumVv+mDveWPr+iDveaYr+aXoOaViOeahO+8iQ0KICAgICAgICAgICAgaWYgKHRyaW1tZWROYW1lLmxlbmd0aCA8IDIgfHwgdHJpbW1lZE5hbWUubGVuZ3RoID4gMTAwKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfor77nqIvlkI3np7Dplb/luqbkuI3lkIjnkIYnLCB7IGxlbmd0aDogdHJpbW1lZE5hbWUubGVuZ3RoLCBuYW1lOiB0cmltbWVkTmFtZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuWMheWQq+aYjuaYvueahOaXoOaViOWtl+espuaIluaooeW8jw0KICAgICAgICAgICAgY29uc3QgaW52YWxpZFBhdHRlcm5zID0gWw0KICAgICAgICAgICAgICAgIC9eW1xzXC1fXC5dKyQvLCAgLy8g5Y+q5YyF5ZCr56m65qC844CB5qiq57q/44CB5LiL5YiS57q/44CB54K55Y+3DQogICAgICAgICAgICAgICAgL15bMC05XSskLywgICAgICAvLyDnuq/mlbDlrZcNCiAgICAgICAgICAgICAgICAvWzw+e31bXF1dLywgICAgIC8vIEhUTUzmoIfnrb7miJbnibnmrornrKblj7cNCiAgICAgICAgICAgICAgICAvXlw/KyQvLCAgICAgICAgIC8vIOe6r+mXruWPtw0KICAgICAgICAgICAgICAgIC9eXC4rJC8sICAgICAgICAgLy8g57qv54K55Y+3DQogICAgICAgICAgICAgICAgL17mnKrnn6V8dW5rbm93bnxudWxsfHVuZGVmaW5lZCQvaSAgLy8g5piO5pi+55qE5Y2g5L2N56ymDQogICAgICAgICAgICBdOw0KDQogICAgICAgICAgICBmb3IgKGNvbnN0IHBhdHRlcm4g",
        "b2YgaW52YWxpZFBhdHRlcm5zKSB7DQogICAgICAgICAgICAgICAgaWYgKHBhdHRlcm4udGVzdCh0cmltbWVkTmFtZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfor77nqIvlkI3np7DljIXlkKvml6DmlYjmqKHlvI8nLCB7IHBhdHRlcm46IHBhdHRlcm4udG9TdHJpbmcoKSwgbmFtZTogdHJpbW1lZE5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmj5Dlj5bogZrlhYnov5vnur/lhoXlrrkNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBtZXNzYWdlRWxlbWVudCDmtojmga/lhYPntKANCiAgICAgICAgICogQHJldHVybnMge09iamVjdHxudWxsfSDmj5Dlj5bnmoTlhoXlrrnkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RTcG90bGlnaHRMZWFkQ29udGVudChtZXNzYWdlRWxlbWVudCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjZW50ZXJDb250YWluZXIgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcuaXRlbS1tYWluLWNlbnRlcicsIG1lc3NhZ2VFbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAoIWNlbnRlckNvbnRhaW5lcikgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50U3BhbiA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW50JywgY2VudGVyQ29udGFpbmVyKTsNCiAgICAgICAgICAgICAgICBpZiAoIWNvbnRlbnRTcGFuKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnRUZXh0ID0gY29udGVudFNwYW4udGV4dENvbnRlbnQudHJpbSgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IG1hdGNoID0gY29udGVudFRleHQubWF0Y2goL+WvueaWuemAmui/h+OAjCguKz8p44CN6L+b5YWl56eB5L+hLyk7DQoNCiAgICAgICAgICAgICAgICBpZiAobWF0Y2gpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXh0cmFjdGVkQ291cnNlTmFtZSA9IG1hdGNoWzFdOw0KICAgICAgICAgICAgICAgICAgICBsZXQgZmluYWxDb3Vyc2VOYW1lID0gZXh0cmFjdGVkQ291cnNlTmFtZTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDpqozor4Hmj5Dlj5bnmoTor77nqIvlkI3np7ANCiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLnZhbGlkYXRlQ291cnNlTmFtZShleHRyYWN0ZWRDb3Vyc2VOYW1lKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5L2/55So6buY6K6k6K++56iL5ZCN56ewDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkZWZhdWx0Q291cnNlTmFtZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGln",
        "aHREZWZhdWx0Q291cnNlTmFtZScsICfmiJHku6znmoTor77nqIsnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGZpbmFsQ291cnNlTmFtZSA9IGRlZmF1bHRDb3Vyc2VOYW1lOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6K++56iL5ZCN56ew6K+G5Yir5aSx6LSl77yM5L2/55So6buY6K6k5ZCN56ewJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4dHJhY3RlZDogZXh0cmFjdGVkQ291cnNlTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiBkZWZhdWx0Q291cnNlTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdWxsVGV4dDogY29udGVudFRleHQNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfor77nqIvlkI3np7Dor4bliKvmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY291cnNlTmFtZTogZmluYWxDb3Vyc2VOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bGxUZXh0OiBjb250ZW50VGV4dA0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgICAgICAgICAgY291cnNlTmFtZTogZmluYWxDb3Vyc2VOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgb3JpZ2luYWxDb3Vyc2VOYW1lOiBleHRyYWN0ZWRDb3Vyc2VOYW1lLCAgLy8g5L+d55WZ5Y6f5aeL5o+Q5Y+W55qE5ZCN56ewDQogICAgICAgICAgICAgICAgICAgICAgICBmdWxsVGV4dDogY29udGVudFRleHQsDQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBDT05GSUcuTUVTU0FHRV9UWVBFUy5TUE9UTElHSFRfTEVBRCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGlzRGVmYXVsdE5hbWU6ICF0aGlzLnZhbGlkYXRlQ291cnNlTmFtZShleHRyYWN0ZWRDb3Vyc2VOYW1lKSAgLy8g5qCH6K6w5piv5ZCm5L2/55So5LqG6buY6K6k5ZCN56ewDQogICAgICAgICAgICAgICAgICAgIH07DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6IGa5YWJ6L+b57q/5YaF5a655o+Q5Y+W5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog55Sf5oiQ6IGa5YWJ6L+b57q/5ZSv5LiA5qCH6K+GDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvdXJzZU5hbWUg6K++56iL5ZCN56ewDQogICAgICAgICAqIEBy",
        "ZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBnZW5lcmF0ZUxlYWRJZCh1c2VyTmFtZSwgY291cnNlTmFtZSkgew0KICAgICAgICAgICAgcmV0dXJuIGBzcG90bGlnaHRfJHt1c2VyTmFtZX1fJHtjb3Vyc2VOYW1lfWAucmVwbGFjZSgvW15hLXpBLVowLTlfXHU0ZTAwLVx1OWZhNV0vZywgJ18nKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l6IGa5YWJ6L+b57q/5piv5ZCm5bey5aSE55CGDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvdXJzZU5hbWUg6K++56iL5ZCN56ewDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgaXNMZWFkUHJvY2Vzc2VkKHVzZXJOYW1lLCBjb3Vyc2VOYW1lKSB7DQogICAgICAgICAgICBjb25zdCBsZWFkSWQgPSB0aGlzLmdlbmVyYXRlTGVhZElkKHVzZXJOYW1lLCBjb3Vyc2VOYW1lKTsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NlZExlYWRzLmhhcyhsZWFkSWQpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmoIforrDogZrlhYnov5vnur/kuLrlt7LlpITnkIYNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY291cnNlTmFtZSDor77nqIvlkI3np7ANCiAgICAgICAgICovDQogICAgICAgIG1hcmtMZWFkQXNQcm9jZXNzZWQodXNlck5hbWUsIGNvdXJzZU5hbWUpIHsNCiAgICAgICAgICAgIGNvbnN0IGxlYWRJZCA9IHRoaXMuZ2VuZXJhdGVMZWFkSWQodXNlck5hbWUsIGNvdXJzZU5hbWUpOw0KICAgICAgICAgICAgdGhpcy5wcm9jZXNzZWRMZWFkcy5hZGQobGVhZElkKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+iBmuWFiei/m+e6v+W3suagh+iusOS4uuWkhOeQhicsIHsNCiAgICAgICAgICAgICAgICBsZWFkSWQsDQogICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgY291cnNlTmFtZSwNCiAgICAgICAgICAgICAgICB0b3RhbFByb2Nlc3NlZDogdGhpcy5wcm9jZXNzZWRMZWFkcy5zaXplDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g5riF55CG6L+H5pyf57yT5a2YDQogICAgICAgICAgICB0aGlzLmNsZWFudXBFeHBpcmVkQ2FjaGUoKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog55Sf5oiQ6IGa5YWJ6L+b57q/5Zue5aSN5YaF5a65DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvdXJzZU5hbWUg6K++56iL5ZCN56ewDQogICAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNEZWZhdWx0TmFtZSDmmK/lkKbkvb/nlKjkuobpu5jorqTor77nqIvlkI3np7ANCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAg",
        "ICAgICovDQogICAgICAgIGdlbmVyYXRlUmVwbHkodXNlck5hbWUsIGNvdXJzZU5hbWUsIGlzRGVmYXVsdE5hbWUgPSBmYWxzZSkgew0KICAgICAgICAgICAgY29uc3QgdGVtcGxhdGUgPSBDb25maWdNYW5hZ2VyLmdldCgnc3BvdGxpZ2h0TGVhZFRlbXBsYXRlJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1Muc3BvdGxpZ2h0TGVhZFRlbXBsYXRlKTsNCg0KICAgICAgICAgICAgLy8g56Gu5L+d6K++56iL5ZCN56ew5pyJ5pWI77yM5aaC5p6c5peg5pWI5YiZ5L2/55So6buY6K6k5YC8DQogICAgICAgICAgICBsZXQgZmluYWxDb3Vyc2VOYW1lID0gY291cnNlTmFtZTsNCiAgICAgICAgICAgIGlmICghY291cnNlTmFtZSB8fCAhdGhpcy52YWxpZGF0ZUNvdXJzZU5hbWUoY291cnNlTmFtZSkpIHsNCiAgICAgICAgICAgICAgICBmaW5hbENvdXJzZU5hbWUgPSBDb25maWdNYW5hZ2VyLmdldCgnc3BvdGxpZ2h0RGVmYXVsdENvdXJzZU5hbWUnLCAn5oiR5Lus55qE6K++56iLJyk7DQogICAgICAgICAgICAgICAgaXNEZWZhdWx0TmFtZSA9IHRydWU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGNvbnN0IHJlcGx5ID0gdGVtcGxhdGUNCiAgICAgICAgICAgICAgICAucmVwbGFjZSgvXHvnlKjmiLfmmLXnp7BcfS9nLCB1c2VyTmFtZSB8fCAn5pyL5Y+LJykNCiAgICAgICAgICAgICAgICAucmVwbGFjZSgvXHvor77nqIvlkI3np7BcfS9nLCBmaW5hbENvdXJzZU5hbWUpDQogICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcbi9nLCAnXG4nKTsgLy8g5aSE55CG5o2i6KGM56ymDQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn55Sf5oiQ6IGa5YWJ6L+b57q/5Zue5aSNJywgew0KICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgIG9yaWdpbmFsQ291cnNlTmFtZTogY291cnNlTmFtZSwNCiAgICAgICAgICAgICAgICBmaW5hbENvdXJzZU5hbWUsDQogICAgICAgICAgICAgICAgaXNEZWZhdWx0TmFtZSwNCiAgICAgICAgICAgICAgICByZXBseUxlbmd0aDogcmVwbHkubGVuZ3RoDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgcmV0dXJuIHJlcGx5Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbogZrlhYnov5vnur/mtojmga8NCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBtZXNzYWdlRWxlbWVudCDmtojmga/lhYPntKANCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHVzZXJJbmZvIOeUqOaIt+S/oeaBrw0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5oiQ5Yqf5aSE55CGDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBwcm9jZXNzU3BvdGxpZ2h0TGVhZChtZXNzYWdlRWxlbWVudCwgdXNlckluZm8pIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCFDb25maWdNYW5hZ2VyLmdldCgnc3BvdGxpZ2h0TGVhZEVuYWJsZWQnLCBmYWxzZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfogZrl",
        "hYnov5vnur/lip/og73mnKrlkK/nlKgnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGxlYWRDb250ZW50ID0gdGhpcy5leHRyYWN0U3BvdGxpZ2h0TGVhZENvbnRlbnQobWVzc2FnZUVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmICghbGVhZENvbnRlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfogZrlhYnov5vnur/lhoXlrrnmj5Dlj5blpLHotKUnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHsgY291cnNlTmFtZSwgaXNEZWZhdWx0TmFtZSB9ID0gbGVhZENvbnRlbnQ7DQogICAgICAgICAgICAgICAgY29uc3QgdXNlck5hbWUgPSB1c2VySW5mby51c2VyTmFtZTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuW3suWkhOeQhui/hw0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzTGVhZFByb2Nlc3NlZCh1c2VyTmFtZSwgY291cnNlTmFtZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+iBmuWFiei/m+e6v+W3suWkhOeQhui/h++8jOi3s+i/hycsIHsgdXNlck5hbWUsIGNvdXJzZU5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmoIforrDkuLrlt7LlpITnkIYNCiAgICAgICAgICAgICAgICB0aGlzLm1hcmtMZWFkQXNQcm9jZXNzZWQodXNlck5hbWUsIGNvdXJzZU5hbWUpOw0KDQogICAgICAgICAgICAgICAgLy8g55Sf5oiQ5Zue5aSN5YaF5a65DQogICAgICAgICAgICAgICAgY29uc3QgcmVwbHlUZXh0ID0gdGhpcy5nZW5lcmF0ZVJlcGx5KHVzZXJOYW1lLCBjb3Vyc2VOYW1lLCBpc0RlZmF1bHROYW1lKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflvIDlp4vlj5HpgIHogZrlhYnov5vnur/lm57lpI0nLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBjb3Vyc2VOYW1lLA0KICAgICAgICAgICAgICAgICAgICByZXBseUxlbmd0aDogcmVwbHlUZXh0Lmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5Y+R6YCB5Zue5aSNDQogICAgICAgICAgICAgICAgY29uc3Qgc2VudCA9IGF3YWl0IE1lc3NhZ2VQcm9jZXNzb3Iuc2VuZFJlcGx5KHJlcGx5VGV4dCk7DQoNCiAgICAgICAgICAgICAgICBpZiAoc2VudCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOiBmuWFiei/m+e6v+WbnuWkjeWPkemAgeaIkOWKnycsIHsgdXNlck5hbWUsIGNvdXJzZU5hbWUgfSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfinYwg6IGa5YWJ6L+b57q/5Zue5aSN5Y+R6YCB5aSx6LSlJywgeyB1",
        "c2VyTmFtZSwgY291cnNlTmFtZSB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gc2VudDsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WkhOeQhuiBmuWFiei/m+e6v+aXtuWPkeeUn+mUmeivrycsIHsNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mbz8udXNlck5hbWUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heeQhui/h+acn+e8k+WtmA0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYW51cEV4cGlyZWRDYWNoZSgpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLnByb2Nlc3NlZExlYWRzLnNpemUgPiB0aGlzLm1heENhY2hlU2l6ZSkgew0KICAgICAgICAgICAgICAgIC8vIOeugOWNleeahExSVeetlueVpe+8mua4heeQhuS4gOWNiue8k+WtmA0KICAgICAgICAgICAgICAgIGNvbnN0IHRvRGVsZXRlID0gQXJyYXkuZnJvbSh0aGlzLnByb2Nlc3NlZExlYWRzKS5zbGljZSgwLCBNYXRoLmZsb29yKHRoaXMubWF4Q2FjaGVTaXplIC8gMikpOw0KICAgICAgICAgICAgICAgIHRvRGVsZXRlLmZvckVhY2gobGVhZElkID0+IHRoaXMucHJvY2Vzc2VkTGVhZHMuZGVsZXRlKGxlYWRJZCkpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmuIXnkIbogZrlhYnov5vnur/nvJPlrZgnLCB7DQogICAgICAgICAgICAgICAgICAgIGRlbGV0ZWQ6IHRvRGVsZXRlLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgcmVtYWluaW5nOiB0aGlzLnByb2Nlc3NlZExlYWRzLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5aSE55CG57uf6K6h5L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0cygpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgcHJvY2Vzc2VkQ291bnQ6IHRoaXMucHJvY2Vzc2VkTGVhZHMuc2l6ZSwNCiAgICAgICAgICAgICAgICBtYXhDYWNoZVNpemU6IHRoaXMubWF4Q2FjaGVTaXplLA0KICAgICAgICAgICAgICAgIGVuYWJsZWQ6IENvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGlnaHRMZWFkRW5hYmxlZCcsIGZhbHNlKQ0KICAgICAgICAgICAgfTsNCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOa2iOaBr+WOu+mHjeeuoeeQhuWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgTWVzc2FnZURlZHVwbGljYXRvciA9IHsNCiAgICAgICAgcHJvY2Vzc2VkTWVz",
        "c2FnZXM6IG5ldyBNYXAoKSwNCiAgICAgICAgY29udGVudEJhc2VkQ2FjaGU6IG5ldyBNYXAoKSwgLy8g5paw5aKe77ya5Z+65LqO5YaF5a6555qE57yT5a2YDQogICAgICAgIHByb2Nlc3NpbmdNZXNzYWdlczogbmV3IE1hcCgpLCAvLyDmlrDlop7vvJrmraPlnKjlpITnkIbkuK3nmoTmtojmga8NCiAgICAgICAgbWF4Q2FjaGVTaXplOiAxMDAwLA0KICAgICAgICBjYWNoZUV4cGlyZVRpbWU6IDI0ICogNjAgKiA2MCAqIDEwMDAsIC8vIDI05bCP5pe2DQogICAgICAgIHByb2Nlc3NpbmdUaW1lb3V0OiA1ICogNjAgKiAxMDAwLCAvLyA15YiG6ZKf5aSE55CG6LaF5pe2DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOeUn+aIkOa2iOaBr+WGheWuueWTiOW4jA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udGVudCDmtojmga/lhoXlrrkNCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIGdlbmVyYXRlQ29udGVudEhhc2g6IGZ1bmN0aW9uKGNvbnRlbnQpIHsNCiAgICAgICAgICAgIC8vIOWuieWFqOajgOafpe+8muehruS/nWNvbnRlbnTmmK/lrZfnrKbkuLINCiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCAhPT0gJ3N0cmluZycpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2FybignZ2VuZXJhdGVDb250ZW50SGFzaOaUtuWIsOaXoOaViOWGheWuuScsIHsgY29udGVudCwgdHlwZTogdHlwZW9mIGNvbnRlbnQgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuICcwJzsgLy8g6L+U5Zue6buY6K6k5ZOI5biM5YC8DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGxldCBoYXNoID0gMDsNCiAgICAgICAgICAgIGlmIChjb250ZW50Lmxlbmd0aCA9PT0gMCkgcmV0dXJuIGhhc2gudG9TdHJpbmcoKTsNCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29udGVudC5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNoYXIgPSBjb250ZW50LmNoYXJDb2RlQXQoaSk7DQogICAgICAgICAgICAgICAgaGFzaCA9ICgoaGFzaCA8PCA1KSAtIGhhc2gpICsgY2hhcjsNCiAgICAgICAgICAgICAgICBoYXNoID0gaGFzaCAmIGhhc2g7IC8vIOi9rOaNouS4ujMy5L2N5pW05pWwDQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gTWF0aC5hYnMoaGFzaCkudG9TdHJpbmcoMzYpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnlJ/miJDmtojmga/llK/kuIDmoIfor4YgLSDmlLnov5vniYjvvIzlh4/lsJHlr7nml7bpl7TmiLPnmoTkvp3otZYNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZUNvbnRlbnQg5raI5oGv5YaF5a65DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0aW1lc3RhbXAg5pe26Ze05oiz77yI5Y+v6YCJ77yJDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBnZW5l",
        "cmF0ZU1lc3NhZ2VJZDogZnVuY3Rpb24odXNlck5hbWUsIG1lc3NhZ2VDb250ZW50LCB0aW1lc3RhbXAgPSAnJykgew0KICAgICAgICAgICAgLy8g5LyY5YWI5L2/55So5YaF5a655ZOI5biM77yM5pe26Ze05oiz5L2c5Li66L6F5YqpDQogICAgICAgICAgICBjb25zdCBjb250ZW50SGFzaCA9IHRoaXMuZ2VuZXJhdGVDb250ZW50SGFzaChtZXNzYWdlQ29udGVudCk7DQogICAgICAgICAgICBjb25zdCB1c2VySGFzaCA9IHRoaXMuZ2VuZXJhdGVDb250ZW50SGFzaCh1c2VyTmFtZSk7DQoNCiAgICAgICAgICAgIC8vIOWmguaenOacieacieaViOeahOaXtumXtOaIs++8jOS9v+eUqOWug++8m+WQpuWImeWPquS9v+eUqOWGheWuueWTiOW4jA0KICAgICAgICAgICAgaWYgKHRpbWVzdGFtcCAmJiB0aW1lc3RhbXAgIT09ICd1bmRlZmluZWQnICYmICF0aW1lc3RhbXAuaW5jbHVkZXMoJ25ldyBEYXRlJykpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gYCR7dXNlckhhc2h9OiR7Y29udGVudEhhc2h9OiR7dGltZXN0YW1wfWA7DQogICAgICAgICAgICAgICAgcmV0dXJuIGJ0b2EoZW5jb2RlVVJJQ29tcG9uZW50KGNvbnRlbnQpKS5yZXBsYWNlKC9bKy89XS9nLCAnJyk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIC8vIOS7heWfuuS6jueUqOaIt+WSjOWGheWuueeahOagh+ivhuespg0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBgJHt1c2VySGFzaH06JHtjb250ZW50SGFzaH1gOw0KICAgICAgICAgICAgICAgIHJldHVybiBidG9hKGVuY29kZVVSSUNvbXBvbmVudChjb250ZW50KSkucmVwbGFjZSgvWysvPV0vZywgJycpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6Xmtojmga/mmK/lkKblt7LlpITnkIYgLSDlop7lvLrniYjvvIzmlK/mjIHlhoXlrrnnuqfliKvljrvph40NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VJZCDmtojmga9JRA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCN77yI5Y+v6YCJ77yJDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlQ29udGVudCDmtojmga/lhoXlrrnvvIjlj6/pgInvvIkNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBpc1Byb2Nlc3NlZDogZnVuY3Rpb24obWVzc2FnZUlkLCB1c2VyTmFtZSA9ICcnLCBtZXNzYWdlQ29udGVudCA9ICcnKSB7DQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+W8gOWni+WOu+mHjeajgOafpScsIHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlSWQ6IG1lc3NhZ2VJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgbWVzc2FnZUNvbnRlbnQ6IG1lc3NhZ2VDb250ZW50LnN1YnN0cmluZygwLCAyMCkgKyAobWVzc2FnZUNvbnRlbnQubGVuZ3RoID4gMjAgPyAnLi4uJyA6",
        "ICcnKSwNCiAgICAgICAgICAgICAgICBjYWNoZVNpemU6IHRoaXMucHJvY2Vzc2VkTWVzc2FnZXMuc2l6ZSwNCiAgICAgICAgICAgICAgICBjb250ZW50Q2FjaGVTaXplOiB0aGlzLmNvbnRlbnRCYXNlZENhY2hlLnNpemUsDQogICAgICAgICAgICAgICAgcHJvY2Vzc2luZ1NpemU6IHRoaXMucHJvY2Vzc2luZ01lc3NhZ2VzLnNpemUNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAvLyDpppblhYjmo4Dmn6XmmK/lkKbmraPlnKjlpITnkIbkuK0NCiAgICAgICAgICAgIGNvbnN0IHByb2Nlc3NpbmdSZWNvcmQgPSB0aGlzLnByb2Nlc3NpbmdNZXNzYWdlcy5nZXQobWVzc2FnZUlkKTsNCiAgICAgICAgICAgIGlmIChwcm9jZXNzaW5nUmVjb3JkKSB7DQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5aSE55CG5piv5ZCm6LaF5pe2DQogICAgICAgICAgICAgICAgaWYgKERhdGUubm93KCkgLSBwcm9jZXNzaW5nUmVjb3JkLnRpbWVzdGFtcCA+IHRoaXMucHJvY2Vzc2luZ1RpbWVvdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuZGVsZXRlKG1lc3NhZ2VJZCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCflpITnkIbotoXml7bvvIzmuIXnkIblpITnkIbkuK3nirbmgIEnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlSWQ6IG1lc3NhZ2VJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICB0aW1lb3V0TWludXRlczogdGhpcy5wcm9jZXNzaW5nVGltZW91dCAvICg2MCAqIDEwMDApDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5qrIOa2iOaBr+ato+WcqOWkhOeQhuS4re+8jOi3s+i/hycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZDogbWVzc2FnZUlkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ZWRBdDogbmV3IERhdGUocHJvY2Vzc2luZ1JlY29yZC50aW1lc3RhbXApLnRvTG9jYWxlVGltZVN0cmluZygpDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsgLy8g5q2j5Zyo5aSE55CG5Lit77yM6KeG5Li65bey5aSE55CGDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDnhLblkI7mo4Dmn6Xnsr7noa7nmoRtZXNzYWdlSWQNCiAgICAgICAgICAgIGNvbnN0IHJlY29yZCA9IHRoaXMucHJvY2Vzc2VkTWVzc2FnZXMuZ2V0KG1lc3NhZ2VJZCk7DQogICAgICAgICAgICBpZiAocmVjb3JkKSB7DQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm6L+H5pyfDQogICAgICAgICAgICAgICAgaWYgKERhdGUubm93KCkgLSByZWNvcmQudGltZXN0YW1wID4gdGhpcy5jYWNoZUV4cGlyZVRpbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhp",
        "cy5wcm9jZXNzZWRNZXNzYWdlcy5kZWxldGUobWVzc2FnZUlkKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmtojmga/orrDlvZXlt7Lov4fmnJ/vvIzliKDpmaQnLCB7IG1lc3NhZ2VJZDogbWVzc2FnZUlkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJyB9KTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a2iOaBr+W3suWkhOeQhu+8iOeyvuehruWMuemFje+8iScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZDogbWVzc2FnZUlkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3NlZEF0OiBuZXcgRGF0ZShyZWNvcmQudGltZXN0YW1wKS50b0xvY2FsZVRpbWVTdHJpbmcoKQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDlpoLmnpzmj5DkvpvkuobnlKjmiLflkI3lkozmtojmga/lhoXlrrnvvIzov5vooYzlhoXlrrnnuqfliKvnmoTljrvph43mo4Dmn6UNCiAgICAgICAgICAgIGlmICh1c2VyTmFtZSAmJiBtZXNzYWdlQ29udGVudCkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnRLZXkgPSBgJHt1c2VyTmFtZX06JHt0aGlzLmdlbmVyYXRlQ29udGVudEhhc2gobWVzc2FnZUNvbnRlbnQpfWA7DQogICAgICAgICAgICAgICAgY29uc3QgY29udGVudFJlY29yZCA9IHRoaXMuY29udGVudEJhc2VkQ2FjaGUuZ2V0KGNvbnRlbnRLZXkpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflhoXlrrnnuqfliKvljrvph43mo4Dmn6UnLCB7DQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnRLZXksDQogICAgICAgICAgICAgICAgICAgIGhhc1JlY29yZDogISFjb250ZW50UmVjb3JkDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBpZiAoY29udGVudFJlY29yZCkgew0KICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbov4fmnJ8NCiAgICAgICAgICAgICAgICAgICAgaWYgKERhdGUubm93KCkgLSBjb250ZW50UmVjb3JkLnRpbWVzdGFtcCA+IHRoaXMuY2FjaGVFeHBpcmVUaW1lKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnRCYXNlZENhY2hlLmRlbGV0ZShjb250ZW50S2V5KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5YaF5a656K6w5b2V5bey6L+H5pyf77yM5Yig6ZmkJywgeyBjb250ZW50S2V5IH0pOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmtojmga/lt7LlpITnkIbvvIjlhoXlrrnljLnphY3vvIknLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudEtleSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmlnaW5h",
        "bE1lc3NhZ2VJZDogY29udGVudFJlY29yZC5tZXNzYWdlSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRNZXNzYWdlSWQ6IG1lc3NhZ2VJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc2VkQXQ6IG5ldyBEYXRlKGNvbnRlbnRSZWNvcmQudGltZXN0YW1wKS50b0xvY2FsZVRpbWVTdHJpbmcoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmtojmga/mnKrlpITnkIbvvIzlj6/ku6Xnu6fnu60nLCB7DQogICAgICAgICAgICAgICAgbWVzc2FnZUlkOiBtZXNzYWdlSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgIHVzZXJOYW1lDQogICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qCH6K6w5raI5oGv5Li65bey5aSE55CGIC0g5aKe5by654mI77yM5ZCM5pe25pu05paw5YaF5a6557yT5a2YDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlSWQg5raI5oGvSUQNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IG1ldGFkYXRhIOWFg+aVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgbWFya0FzUHJvY2Vzc2VkOiBmdW5jdGlvbihtZXNzYWdlSWQsIG1ldGFkYXRhID0ge30pIHsNCiAgICAgICAgICAgIC8vIOmmluWFiOa4heeQhuWkhOeQhuS4reeKtuaAgQ0KICAgICAgICAgICAgdGhpcy5jbGVhclByb2Nlc3NpbmcobWVzc2FnZUlkKTsNCg0KICAgICAgICAgICAgLy8g5riF55CG6L+H5pyf6K6w5b2VDQogICAgICAgICAgICB0aGlzLmNsZWFudXBFeHBpcmVkUmVjb3JkcygpOw0KDQogICAgICAgICAgICAvLyDpmZDliLbnvJPlrZjlpKflsI8NCiAgICAgICAgICAgIGlmICh0aGlzLnByb2Nlc3NlZE1lc3NhZ2VzLnNpemUgPj0gdGhpcy5tYXhDYWNoZVNpemUpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBvbGRlc3RLZXkgPSB0aGlzLnByb2Nlc3NlZE1lc3NhZ2VzLmtleXMoKS5uZXh0KCkudmFsdWU7DQogICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzZWRNZXNzYWdlcy5kZWxldGUob2xkZXN0S2V5KTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgLy8g5qCH6K6w5raI5oGvSUTkuLrlt7LlpITnkIYNCiAgICAgICAgICAgIHRoaXMucHJvY2Vzc2VkTWVzc2FnZXMuc2V0KG1lc3NhZ2VJZCwgew0KICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbm93LA0KICAgICAgICAgICAgICAgIG1ldGFkYXRhDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g5aaC",
        "5p6c5pyJ55So5oi35ZCN5ZKM5raI5oGv5YaF5a6577yM5Lmf5re75Yqg5Yiw5YaF5a6557yT5a2YDQogICAgICAgICAgICBpZiAobWV0YWRhdGEudXNlck5hbWUgJiYgbWV0YWRhdGEubWVzc2FnZUNvbnRlbnQpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50S2V5ID0gYCR7bWV0YWRhdGEudXNlck5hbWV9OiR7dGhpcy5nZW5lcmF0ZUNvbnRlbnRIYXNoKG1ldGFkYXRhLm1lc3NhZ2VDb250ZW50KX1gOw0KDQogICAgICAgICAgICAgICAgLy8g6ZmQ5Yi25YaF5a6557yT5a2Y5aSn5bCPDQogICAgICAgICAgICAgICAgaWYgKHRoaXMuY29udGVudEJhc2VkQ2FjaGUuc2l6ZSA+PSB0aGlzLm1heENhY2hlU2l6ZSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBvbGRlc3RDb250ZW50S2V5ID0gdGhpcy5jb250ZW50QmFzZWRDYWNoZS5rZXlzKCkubmV4dCgpLnZhbHVlOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnRCYXNlZENhY2hlLmRlbGV0ZShvbGRlc3RDb250ZW50S2V5KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnRCYXNlZENhY2hlLnNldChjb250ZW50S2V5LCB7DQogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbm93LA0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlSWQ6IG1lc3NhZ2VJZCwNCiAgICAgICAgICAgICAgICAgICAgbWV0YWRhdGENCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5raI5oGv5bey5qCH6K6w5Li65bey5aSE55CG77yI5ZCr5YaF5a6557yT5a2Y77yJJywgew0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlSWQsDQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnRLZXksDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiBtZXRhZGF0YS51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgY29udGVudExlbmd0aDogbWV0YWRhdGEubWVzc2FnZUNvbnRlbnQ/Lmxlbmd0aCB8fCAwDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5raI5oGv5bey5qCH6K6w5Li65bey5aSE55CGJywgeyBtZXNzYWdlSWQsIG1ldGFkYXRhIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmoIforrDmtojmga/kuLrlpITnkIbkuK3nirbmgIENCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VJZCDmtojmga9JRA0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gbWV0YWRhdGEg5YWD5pWw5o2uDQogICAgICAgICAqLw0KICAgICAgICBtYXJrQXNQcm9jZXNzaW5nOiBmdW5jdGlvbihtZXNzYWdlSWQsIG1ldGFkYXRhID0ge30pIHsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQoNCiAgICAgICAgICAgIC8vIOa4heeQhui/h+acn+eahOWkhOeQhuS4reiusOW9lQ0KICAgICAgICAgICAgdGhpcy5jbGVhbnVwRXhw",
        "aXJlZFByb2Nlc3NpbmcoKTsNCg0KICAgICAgICAgICAgdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuc2V0KG1lc3NhZ2VJZCwgew0KICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbm93LA0KICAgICAgICAgICAgICAgIG1ldGFkYXRhDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmtojmga/lt7LmoIforrDkuLrlpITnkIbkuK0nLCB7DQogICAgICAgICAgICAgICAgbWVzc2FnZUlkOiBtZXNzYWdlSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgIHVzZXJOYW1lOiBtZXRhZGF0YS51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICBwcm9jZXNzaW5nQ291bnQ6IHRoaXMucHJvY2Vzc2luZ01lc3NhZ2VzLnNpemUNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuIXnkIblpITnkIbkuK3nirbmgIENCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VJZCDmtojmga9JRA0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYXJQcm9jZXNzaW5nOiBmdW5jdGlvbihtZXNzYWdlSWQpIHsNCiAgICAgICAgICAgIGNvbnN0IHJlbW92ZWQgPSB0aGlzLnByb2Nlc3NpbmdNZXNzYWdlcy5kZWxldGUobWVzc2FnZUlkKTsNCiAgICAgICAgICAgIGlmIChyZW1vdmVkKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmuIXnkIblpITnkIbkuK3nirbmgIEnLCB7DQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZDogbWVzc2FnZUlkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgcmVtYWluaW5nUHJvY2Vzc2luZzogdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuc2l6ZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuIXnkIbov4fmnJ/nmoTlpITnkIbkuK3orrDlvZUNCiAgICAgICAgICovDQogICAgICAgIGNsZWFudXBFeHBpcmVkUHJvY2Vzc2luZzogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgY29uc3QgZXhwaXJlZEtleXMgPSBbXTsNCg0KICAgICAgICAgICAgdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuZm9yRWFjaCgocmVjb3JkLCBrZXkpID0+IHsNCiAgICAgICAgICAgICAgICBpZiAobm93IC0gcmVjb3JkLnRpbWVzdGFtcCA+IHRoaXMucHJvY2Vzc2luZ1RpbWVvdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgZXhwaXJlZEtleXMucHVzaChrZXkpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBleHBpcmVkS2V5cy5mb3JFYWNoKGtleSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuZGVsZXRlKGtleSk7DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgaWYgKGV4cGlyZWRLZXlzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAg",
        "ICBMb2dnZXIud2Fybign5riF55CG6L+H5pyf55qE5aSE55CG5Lit6K6w5b2VJywgew0KICAgICAgICAgICAgICAgICAgICBleHBpcmVkQ291bnQ6IGV4cGlyZWRLZXlzLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgdGltZW91dE1pbnV0ZXM6IHRoaXMucHJvY2Vzc2luZ1RpbWVvdXQgLyAoNjAgKiAxMDAwKQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDljp/lrZDmgKfmo4Dmn6XlubbmoIforrDkuLrlpITnkIbkuK0gLSDpmLLmraLnq57kuonmnaHku7YNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VJZCDmtojmga9JRA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCNDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlQ29udGVudCDmtojmga/lhoXlrrkNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IG1ldGFkYXRhIOWFg+aVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gdHJ1ZeihqOekuuWPr+S7peWkhOeQhu+8jGZhbHNl6KGo56S65bey6KKr5aSE55CG5oiW5q2j5Zyo5aSE55CG5LitDQogICAgICAgICAqLw0KICAgICAgICBjaGVja0FuZE1hcmtBc1Byb2Nlc3Npbmc6IGZ1bmN0aW9uKG1lc3NhZ2VJZCwgdXNlck5hbWUgPSAnJywgbWVzc2FnZUNvbnRlbnQgPSAnJywgbWV0YWRhdGEgPSB7fSkgew0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CflI0g5Y6f5a2Q5oCn5qOA5p+l5bm25qCH6K6wJywgew0KICAgICAgICAgICAgICAgIG1lc3NhZ2VJZDogbWVzc2FnZUlkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICBtZXNzYWdlQ29udGVudDogbWVzc2FnZUNvbnRlbnQuc3Vic3RyaW5nKDAsIDIwKSArIChtZXNzYWdlQ29udGVudC5sZW5ndGggPiAyMCA/ICcuLi4nIDogJycpLA0KICAgICAgICAgICAgICAgIGNhY2hlU2l6ZTogdGhpcy5wcm9jZXNzZWRNZXNzYWdlcy5zaXplLA0KICAgICAgICAgICAgICAgIGNvbnRlbnRDYWNoZVNpemU6IHRoaXMuY29udGVudEJhc2VkQ2FjaGUuc2l6ZSwNCiAgICAgICAgICAgICAgICBwcm9jZXNzaW5nU2l6ZTogdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuc2l6ZQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOWOn+WtkOaAp+aTjeS9nO+8muWFiOajgOafpe+8jOWmguaenOacquWkhOeQhuWImeeri+WNs+agh+iusA0KICAgICAgICAgICAgaWYgKHRoaXMuaXNQcm9jZXNzZWQobWVzc2FnZUlkLCB1c2VyTmFtZSwgbWVzc2FnZUNvbnRlbnQpKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KaoO+4jyDmtojmga/lt7LlpITnkIbmiJbmraPlnKjlpITnkIbkuK3vvIzot7Pov4cnLCB7DQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZDogbWVzc2FnZUlkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAg",
        "ICAgICAgICAgICAgICAgdXNlck5hbWUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7IC8vIOS4jeiDveWkhOeQhg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDnq4vljbPmoIforrDkuLrlpITnkIbkuK0NCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICB0aGlzLnByb2Nlc3NpbmdNZXNzYWdlcy5zZXQobWVzc2FnZUlkLCB7DQogICAgICAgICAgICAgICAgdGltZXN0YW1wOiBub3csDQogICAgICAgICAgICAgICAgbWV0YWRhdGENCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOa2iOaBr+WOn+WtkOaAp+agh+iusOS4uuWkhOeQhuS4rScsIHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlSWQ6IG1lc3NhZ2VJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgdXNlck5hbWU6IG1ldGFkYXRhLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgIHByb2Nlc3NpbmdDb3VudDogdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuc2l6ZQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIHJldHVybiB0cnVlOyAvLyDlj6/ku6XlpITnkIYNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF55CG6L+H5pyf6K6w5b2VIC0g5aKe5by654mI77yM5ZCM5pe25riF55CG5YaF5a6557yT5a2YDQogICAgICAgICAqLw0KICAgICAgICBjbGVhbnVwRXhwaXJlZFJlY29yZHM6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGNvbnN0IGV4cGlyZWRLZXlzID0gW107DQogICAgICAgICAgICBjb25zdCBleHBpcmVkQ29udGVudEtleXMgPSBbXTsNCg0KICAgICAgICAgICAgLy8g5riF55CG5Li75raI5oGv57yT5a2YDQogICAgICAgICAgICB0aGlzLnByb2Nlc3NlZE1lc3NhZ2VzLmZvckVhY2goKHJlY29yZCwga2V5KSA9PiB7DQogICAgICAgICAgICAgICAgaWYgKG5vdyAtIHJlY29yZC50aW1lc3RhbXAgPiB0aGlzLmNhY2hlRXhwaXJlVGltZSkgew0KICAgICAgICAgICAgICAgICAgICBleHBpcmVkS2V5cy5wdXNoKGtleSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIGV4cGlyZWRLZXlzLmZvckVhY2goa2V5ID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NlZE1lc3NhZ2VzLmRlbGV0ZShrZXkpOw0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOa4heeQhuWGheWuuee8k+WtmA0KICAgICAgICAgICAgdGhpcy5jb250ZW50QmFzZWRDYWNoZS5mb3JFYWNoKChyZWNvcmQsIGtleSkgPT4gew0KICAgICAgICAgICAgICAgIGlmIChub3cgLSByZWNvcmQudGltZXN0YW1wID4gdGhpcy5jYWNoZUV4cGlyZVRpbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgZXhwaXJlZENvbnRlbnRLZXlzLnB1c2goa2V5KTsNCiAgICAgICAgICAgICAgICB9",
        "DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgZXhwaXJlZENvbnRlbnRLZXlzLmZvckVhY2goa2V5ID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnRCYXNlZENhY2hlLmRlbGV0ZShrZXkpOw0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIGlmIChleHBpcmVkS2V5cy5sZW5ndGggPiAwIHx8IGV4cGlyZWRDb250ZW50S2V5cy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmuIXnkIbov4fmnJ/mtojmga/orrDlvZUnLCB7DQogICAgICAgICAgICAgICAgICAgIGV4cGlyZWRNZXNzYWdlczogZXhwaXJlZEtleXMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICBleHBpcmVkQ29udGVudDogZXhwaXJlZENvbnRlbnRLZXlzLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5blpITnkIbnu5/orqEgLSDlop7lvLrniYjvvIzljIXlkKvlhoXlrrnnvJPlrZjnu5/orqENCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldFN0YXRzOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgdG90YWxQcm9jZXNzZWQ6IHRoaXMucHJvY2Vzc2VkTWVzc2FnZXMuc2l6ZSwNCiAgICAgICAgICAgICAgICBjYWNoZVNpemU6IHRoaXMucHJvY2Vzc2VkTWVzc2FnZXMuc2l6ZSwNCiAgICAgICAgICAgICAgICBjb250ZW50Q2FjaGVTaXplOiB0aGlzLmNvbnRlbnRCYXNlZENhY2hlLnNpemUsDQogICAgICAgICAgICAgICAgcHJvY2Vzc2luZ1NpemU6IHRoaXMucHJvY2Vzc2luZ01lc3NhZ2VzLnNpemUsDQogICAgICAgICAgICAgICAgbWF4Q2FjaGVTaXplOiB0aGlzLm1heENhY2hlU2l6ZSwNCiAgICAgICAgICAgICAgICBjYWNoZVVzYWdlOiBgJHsodGhpcy5wcm9jZXNzZWRNZXNzYWdlcy5zaXplIC8gdGhpcy5tYXhDYWNoZVNpemUgKiAxMDApLnRvRml4ZWQoMSl9JWAsDQogICAgICAgICAgICAgICAgY29udGVudENhY2hlVXNhZ2U6IGAkeyh0aGlzLmNvbnRlbnRCYXNlZENhY2hlLnNpemUgLyB0aGlzLm1heENhY2hlU2l6ZSAqIDEwMCkudG9GaXhlZCgxKX0lYCwNCiAgICAgICAgICAgICAgICBwcm9jZXNzaW5nQ291bnQ6IHRoaXMucHJvY2Vzc2luZ01lc3NhZ2VzLnNpemUNCiAgICAgICAgICAgIH07DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heepuuaJgOacieiusOW9lSAtIOWinuW8uueJiO+8jOWQjOaXtua4heepuuWGheWuuee8k+WtmA0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYXI6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3QgbWVzc2FnZUNvdW50ID0gdGhpcy5wcm9jZXNzZWRNZXNzYWdlcy5zaXplOw0KICAgICAgICAgICAgY29uc3QgY29udGVudENvdW50ID0gdGhpcy5jb250ZW50QmFzZWRDYWNoZS5zaXplOw0KICAgICAgICAgICAgY29uc3Qg",
        "cHJvY2Vzc2luZ0NvdW50ID0gdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuc2l6ZTsNCg0KICAgICAgICAgICAgdGhpcy5wcm9jZXNzZWRNZXNzYWdlcy5jbGVhcigpOw0KICAgICAgICAgICAgdGhpcy5jb250ZW50QmFzZWRDYWNoZS5jbGVhcigpOw0KICAgICAgICAgICAgdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuY2xlYXIoKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+a2iOaBr+WOu+mHjeiusOW9leW3sua4heepuicsIHsNCiAgICAgICAgICAgICAgICBjbGVhcmVkTWVzc2FnZXM6IG1lc3NhZ2VDb3VudCwNCiAgICAgICAgICAgICAgICBjbGVhcmVkQ29udGVudDogY29udGVudENvdW50LA0KICAgICAgICAgICAgICAgIGNsZWFyZWRQcm9jZXNzaW5nOiBwcm9jZXNzaW5nQ291bnQNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g6buR5ZCN5Y2V566h55CG5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBCbGFja2xpc3RNYW5hZ2VyID0gew0KICAgICAgICAvKioNCiAgICAgICAgICog5Yid5aeL5YyW6buR5ZCN5Y2V566h55CG5ZmoDQogICAgICAgICAqLw0KICAgICAgICBpbml0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDnoa7kv53pu5HlkI3ljZXphY3nva7pobnlrZjlnKgNCiAgICAgICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCdibGFja2xpc3QnKSkgew0KICAgICAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnYmxhY2tsaXN0JywgW10pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChDb25maWdNYW5hZ2VyLmdldCgnYmxhY2tsaXN0RW5hYmxlZCcpID09PSBudWxsKSB7DQogICAgICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdibGFja2xpc3RFbmFibGVkJywgdHJ1ZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKENvbmZpZ01hbmFnZXIuZ2V0KCdhdXRvRGV0ZWN0QmxvY2tlZCcpID09PSBudWxsKSB7DQogICAgICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdhdXRvRGV0ZWN0QmxvY2tlZCcsIHRydWUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5qrIOm7keWQjeWNleeuoeeQhuWZqOWIneWni+WMluWujOaIkCcpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+m7keWQjeWNleeuoeeQhuWZqOWIneWni+WMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa3u+WKoOeUqOaIt+WIsOm7keWQjeWNlQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkIOeUqOaIt0lEDQog",
        "ICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHJlYXNvbiDmt7vliqDljp/lm6ANCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHNvdXJjZSDmnaXmupDmj4/ov7ANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpua3u+WKoOaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgYWRkKHVzZXJJZCwgdXNlck5hbWUsIHJlYXNvbiA9ICdtYW51YWwnLCBzb3VyY2UgPSAn5omL5Yqo5re75YqgJykgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5re75Yqg6buR5ZCN5Y2V5aSx6LSl77ya55So5oi3SUTkuLrnqbonKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WPluW9k+WJjem7keWQjeWNlQ0KICAgICAgICAgICAgICAgIGNvbnN0IGJsYWNrbGlzdCA9IHRoaXMuZ2V0QWxsKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblt7LlrZjlnKgNCiAgICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ0luZGV4ID0gYmxhY2tsaXN0LmZpbmRJbmRleChpdGVtID0+IGl0ZW0udXNlcklkID09PSB1c2VySWQpOw0KICAgICAgICAgICAgICAgIGlmIChleGlzdGluZ0luZGV4ID49IDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfnlKjmiLflt7LlnKjpu5HlkI3ljZXkuK0nLCB7IHVzZXJJZCwgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOyAvLyDlt7LlrZjlnKjop4bkuLrmt7vliqDmiJDlip8NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmt7vliqDmlrDmnaHnm64NCiAgICAgICAgICAgICAgICBjb25zdCBuZXdFbnRyeSA9IHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlck5hbWUgfHwgJ+acquefpeeUqOaItycsDQogICAgICAgICAgICAgICAgICAgIGFkZGVkQXQ6IERhdGUubm93KCksDQogICAgICAgICAgICAgICAgICAgIHJlYXNvbiwNCiAgICAgICAgICAgICAgICAgICAgc291cmNlDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIGJsYWNrbGlzdC5wdXNoKG5ld0VudHJ5KTsNCg0KICAgICAgICAgICAgICAgIC8vIOS/neWtmOabtOaWsOWQjueahOm7keWQjeWNlQ0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdibGFja2xpc3QnLCBibGFja2xpc3QpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfmqsg55So5oi35bey5re75Yqg5Yiw6buR5ZCN5Y2VJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICByZWFzb24sDQog",
        "ICAgICAgICAgICAgICAgICAgIHRvdGFsOiBibGFja2xpc3QubGVuZ3RoDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5re75Yqg6buR5ZCN5Y2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7jum7keWQjeWNleenu+mZpOeUqOaItw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkIOeUqOaIt0lEDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKbnp7vpmaTmiJDlip8NCiAgICAgICAgICovDQogICAgICAgIHJlbW92ZSh1c2VySWQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCF1c2VySWQpIHJldHVybiBmYWxzZTsNCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WPluW9k+WJjem7keWQjeWNlQ0KICAgICAgICAgICAgICAgIGNvbnN0IGJsYWNrbGlzdCA9IHRoaXMuZ2V0QWxsKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDov4fmu6TmjonopoHnp7vpmaTnmoTnlKjmiLcNCiAgICAgICAgICAgICAgICBjb25zdCBuZXdCbGFja2xpc3QgPSBibGFja2xpc3QuZmlsdGVyKGl0ZW0gPT4gaXRlbS51c2VySWQgIT09IHVzZXJJZCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbmnInlj5jljJYNCiAgICAgICAgICAgICAgICBpZiAobmV3QmxhY2tsaXN0Lmxlbmd0aCA9PT0gYmxhY2tsaXN0Lmxlbmd0aCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eUqOaIt+S4jeWcqOm7keWQjeWNleS4rScsIHsgdXNlcklkIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5L+d5a2Y5pu05paw5ZCO55qE6buR5ZCN5Y2VDQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2JsYWNrbGlzdCcsIG5ld0JsYWNrbGlzdCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOeUqOaIt+W3suS7jum7keWQjeWNleenu+mZpCcsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICByZW1haW5pbmc6IG5ld0JsYWNrbGlzdC5sZW5ndGgNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfnp7vpmaTpu5HlkI3ljZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l",
        "55So5oi35piv5ZCm5Zyo6buR5ZCN5Y2V5LitDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VySWQg55So5oi3SUQNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuWcqOm7keWQjeWNleS4rQ0KICAgICAgICAgKi8NCiAgICAgICAgaXNCbGFja2xpc3RlZCh1c2VySWQpIHsNCiAgICAgICAgICAgIGlmICghdXNlcklkIHx8ICFDb25maWdNYW5hZ2VyLmdldCgnYmxhY2tsaXN0RW5hYmxlZCcsIHRydWUpKSByZXR1cm4gZmFsc2U7DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0ID0gdGhpcy5nZXRBbGwoKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gYmxhY2tsaXN0LnNvbWUoaXRlbSA9PiBpdGVtLnVzZXJJZCA9PT0gdXNlcklkKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmo4Dmn6Xpu5HlkI3ljZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8g5Ye66ZSZ5pe26buY6K6k5LiN5oum5oiqDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluaJgOaciem7keWQjeWNleeUqOaItw0KICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9IOm7keWQjeWNleWIl+ihqA0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0QWxsKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICByZXR1cm4gQ29uZmlnTWFuYWdlci5nZXQoJ2JsYWNrbGlzdCcsIFtdKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfojrflj5bpu5HlkI3ljZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBbXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF56m66buR5ZCN5Y2VDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKbmuIXnqbrmiJDlip8NCiAgICAgICAgICovDQogICAgICAgIGNsZWFyKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb3VudCA9IHRoaXMuZ2V0QWxsKCkubGVuZ3RoOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdibGFja2xpc3QnLCBbXSk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfl5HvuI8g6buR5ZCN5Y2V5bey5riF56m6JywgeyBjbGVhcmVkQ291bnQ6IGNvdW50IH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+a4heepuum7keWQjeWNleWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAg",
        "ICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlr7zlhaXpu5HlkI3ljZXmlbDmja4NCiAgICAgICAgICogQHBhcmFtIHtBcnJheX0gZGF0YSDpu5HlkI3ljZXmlbDmja4NCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuWvvOWFpeaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgaW1wb3J0KGRhdGEpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGRhdGEpKSB7DQogICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcign5pWw5o2u5qC85byP5peg5pWIJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6aqM6K+B5pWw5o2u5qC85byPDQogICAgICAgICAgICAgICAgY29uc3QgdmFsaWREYXRhID0gZGF0YS5maWx0ZXIoaXRlbSA9Pg0KICAgICAgICAgICAgICAgICAgICBpdGVtICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJiBpdGVtLnVzZXJJZA0KICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnYmxhY2tsaXN0JywgdmFsaWREYXRhKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+TpSDpu5HlkI3ljZXmlbDmja7lr7zlhaXmiJDlip8nLCB7IGNvdW50OiB2YWxpZERhdGEubGVuZ3RoIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WvvOWFpem7keWQjeWNleWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlr7zlh7rpu5HlkI3ljZXmlbDmja4NCiAgICAgICAgICogQHJldHVybnMge0FycmF5fSDpu5HlkI3ljZXmlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGV4cG9ydCgpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEFsbCgpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bpu5HlkI3ljZXnu5/orqHkv6Hmga8NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g57uf6K6h5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0cygpIHsNCiAgICAgICAgICAgIGNvbnN0IGJsYWNrbGlzdCA9IHRoaXMuZ2V0QWxsKCk7DQogICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgY29uc3Qgb25lRGF5ID0gMjQgKiA2MCAqIDYwICogMTAwMDsNCg0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICB0b3RhbDogYmxhY2tsaXN0Lmxlbmd0aCwNCiAgICAgICAgICAgICAgICBtYW51YWw6IGJsYWNrbGlzdC5maWx0ZXIoaXRlbSA9PiBpdGVtLnJlYXNvbiA9PT0gJ21hbnVhbCcpLmxlbmd0aCwNCiAgICAgICAgICAgICAgICBhdXRvQmxv",
        "Y2tlZDogYmxhY2tsaXN0LmZpbHRlcihpdGVtID0+IGl0ZW0ucmVhc29uID09PSAnYXV0b19ibG9ja2VkJykubGVuZ3RoLA0KICAgICAgICAgICAgICAgIHJlY2VudGx5QWRkZWQ6IGJsYWNrbGlzdC5maWx0ZXIoaXRlbSA9PiBub3cgLSBpdGVtLmFkZGVkQXQgPCBvbmVEYXkpLmxlbmd0aA0KICAgICAgICAgICAgfTsNCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOiiq+aLiem7keajgOa1i+WZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgQmxvY2tlZFVzZXJEZXRlY3RvciA9IHsNCiAgICAgICAgb2JzZXJ2ZXI6IG51bGwsDQogICAgICAgIHByb2Nlc3NlZFRvYXN0czogbmV3IFNldCgpLCAvLyDpmLLmraLph43lpI3lpITnkIblkIzkuIDkuKrmj5DnpLoNCiAgICAgICAgbGFzdFByb2Nlc3NUaW1lOiAwLCAvLyDpmLLmipbmnLrliLYNCiAgICAgICAgZGVib3VuY2VEZWxheTogMTAwMCwgLy8gMeenkumYsuaKlg0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliJ3lp4vljJbmo4DmtYvlmagNCiAgICAgICAgICovDQogICAgICAgIGluaXQoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLm9ic2VydmVyKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXIuZGlzY29ubmVjdCgpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWIm+W7uk11dGF0aW9uT2JzZXJ2ZXINCiAgICAgICAgICAgICAgICB0aGlzLm9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIodGhpcy5oYW5kbGVNdXRhdGlvbnMuYmluZCh0aGlzKSk7DQoNCiAgICAgICAgICAgICAgICAvLyDlvIDlp4vnm5HlkKwNCiAgICAgICAgICAgICAgICB0aGlzLm9ic2VydmVyLm9ic2VydmUoZG9jdW1lbnQuYm9keSwgew0KICAgICAgICAgICAgICAgICAgICBjaGlsZExpc3Q6IHRydWUsDQogICAgICAgICAgICAgICAgICAgIHN1YnRyZWU6IHRydWUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5GB77iPIOiiq+aLiem7keajgOa1i+WZqOW3suWIneWni+WMlicpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+iiq+aLiem7keajgOa1i+WZqOWIneWni+WMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhkRPTeWPmOWMlg0KICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBtdXRhdGlvbnMg5Y+Y5YyW6K6w5b2VDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVNdXRhdGlvbnMobXV0YXRpb25zKSB7DQogICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCdhdXRvRGV0ZWN0QmxvY2tlZCcsIHRydWUpKSByZXR1cm47DQoNCiAg",
        "ICAgICAgICAgIGZvciAoY29uc3QgbXV0YXRpb24gb2YgbXV0YXRpb25zKSB7DQogICAgICAgICAgICAgICAgaWYgKG11dGF0aW9uLnR5cGUgPT09ICdjaGlsZExpc3QnKSB7DQogICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgbm9kZSBvZiBtdXRhdGlvbi5hZGRlZE5vZGVzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZS5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05PREUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNoZWNrQmxvY2tlZE5vdGljZShub2RlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l5piv5ZCm5piv6KKr5ouJ6buR5o+Q56S6DQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gbm9kZSBET03oioLngrkNCiAgICAgICAgICovDQogICAgICAgIGNoZWNrQmxvY2tlZE5vdGljZShub2RlKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOajgOafpeiHqui6q+aYr+WQpuaYr+aPkOekuuWFg+e0oA0KICAgICAgICAgICAgICAgIGlmIChub2RlLmNsYXNzTGlzdCAmJiBub2RlLmNsYXNzTGlzdC5jb250YWlucygnZC10b2FzdC1ub3RpY2UnKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/CflI0g5Y+R546wdG9hc3Tmj5DnpLrlhYPntKAnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IG5vZGUuY2xhc3NOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogbm9kZS50ZXh0Q29udGVudA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzVG9hc3ROb3RpY2Uobm9kZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5a2Q5YWD57Sg5Lit55qE5o+Q56S6DQogICAgICAgICAgICAgICAgY29uc3Qgbm90aWNlcyA9IG5vZGUucXVlcnlTZWxlY3RvckFsbCgnLmQtdG9hc3Qtbm90aWNlJyk7DQogICAgICAgICAgICAgICAgaWYgKG5vdGljZXMubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/CflI0g5Y+R546w5a2Q5YWD57Sg5Lit55qEdG9hc3Tmj5DnpLonLCB7IGNvdW50OiBub3RpY2VzLmxlbmd0aCB9KTsNCiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBub3RpY2Ugb2Ygbm90aWNlcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzVG9hc3ROb3RpY2Uobm90aWNlKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaJqeWxleajgOa1i++8muajgOafpeWFtuS7luWPr+iDveeahOmUmeivr+aPkOekuuWFg+e0oA0KICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yU2VsZWN0b3Jz",
        "ID0gWw0KICAgICAgICAgICAgICAgICAgICAnLmQtdG9hc3Qtbm90aWNlJywNCiAgICAgICAgICAgICAgICAgICAgJy50b2FzdC1ub3RpY2UnLA0KICAgICAgICAgICAgICAgICAgICAnLmVycm9yLW5vdGljZScsDQogICAgICAgICAgICAgICAgICAgICcubWVzc2FnZS1lcnJvcicsDQogICAgICAgICAgICAgICAgICAgICdbY2xhc3MqPSJ0b2FzdCJdJywNCiAgICAgICAgICAgICAgICAgICAgJ1tjbGFzcyo9Im5vdGljZSJdJywNCiAgICAgICAgICAgICAgICAgICAgJ1tjbGFzcyo9ImVycm9yIl0nDQogICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2VsZWN0b3Igb2YgZXJyb3JTZWxlY3RvcnMpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50cyA9IG5vZGUucXVlcnlTZWxlY3RvckFsbCA/IG5vZGUucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvcikgOiBbXTsNCiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBlcnJvckVsZW1lbnQgb2YgZXJyb3JFbGVtZW50cykgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29udGVudCA9IGVycm9yRWxlbWVudC50ZXh0Q29udGVudCB8fCAnJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb250ZW50LmluY2x1ZGVzKCfnlKjmiLfooqvlsY/olL0nKSB8fCBjb250ZW50LmluY2x1ZGVzKCfooqvlsY/olL0nKSB8fCBjb250ZW50LmluY2x1ZGVzKCflsY/olL0nKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+UjSDpgJrov4fmianlsZXpgInmi6nlmajlj5HnjrDlsY/olL3mj5DnpLonLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBjb250ZW50LnRyaW0oKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc1RvYXN0Tm90aWNlKGVycm9yRWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5qOA5p+l6KKr5ouJ6buR5o+Q56S65aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5o+Q56S65YWD57SgDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gbm90aWNlIOaPkOekuuWFg+e0oA0KICAgICAgICAgKi8NCiAgICAgICAgcHJvY2Vzc1RvYXN0Tm90aWNlKG5vdGljZSkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gbm90aWNlLnRleHRDb250ZW50IHx8ICcnOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnRI",
        "YXNoID0gdGhpcy5nZW5lcmF0ZUNvbnRlbnRIYXNoKGNvbnRlbnQpOw0KDQogICAgICAgICAgICAgICAgLy8g6Ziy5oqW5py65Yi277ya5aaC5p6c6Led56a75LiK5qyh5aSE55CG5pe26Ze05aSq55+t77yM6Lez6L+HDQogICAgICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICBpZiAobm93IC0gdGhpcy5sYXN0UHJvY2Vzc1RpbWUgPCB0aGlzLmRlYm91bmNlRGVsYXkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfwn5SNIOmYsuaKlui3s+i/h+mHjeWkjeWkhOeQhicsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVTaW5jZUxhc3RQcm9jZXNzOiBub3cgLSB0aGlzLmxhc3RQcm9jZXNzVGltZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWOu+mHjeacuuWItu+8muWmguaenOW3sue7j+WkhOeQhui/h+ebuOWQjOWGheWuueeahOaPkOekuu+8jOi3s+i/hw0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnByb2Nlc3NlZFRvYXN0cy5oYXMoY29udGVudEhhc2gpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+UjSDljrvph43ot7Pov4flt7LlpITnkIbnmoTmj5DnpLonLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50SGFzaCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGNvbnRlbnQudHJpbSgpDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfwn5SNIOWkhOeQhuaPkOekuuWFg+e0oCcsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudDogY29udGVudC50cmltKCksDQogICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogbm90aWNlLmNsYXNzTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgY29udGVudEhhc2gNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWkmuenjeWPr+iDveeahOWxj+iUveaPkOekuuaWh+acrA0KICAgICAgICAgICAgICAgIGNvbnN0IGJsb2NrZWRLZXl3b3JkcyA9IFsNCiAgICAgICAgICAgICAgICAgICAgJ+eUqOaIt+iiq+Wxj+iUvScsDQogICAgICAgICAgICAgICAgICAgICfooqvlsY/olL0nLA0KICAgICAgICAgICAgICAgICAgICAn5bGP6JS9JywNCiAgICAgICAgICAgICAgICAgICAgJ2Jsb2NrZWQnLA0KICAgICAgICAgICAgICAgICAgICAn5peg5rOV5Y+R6YCBJywNCiAgICAgICAgICAgICAgICAgICAgJ+WPkemAgeWksei0pScNCiAgICAgICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAgICAgY29uc3QgaXNCbG9ja2VkID0gYmxvY2tlZEtleXdvcmRzLnNvbWUoa2V5d29yZCA9PiBjb250ZW50LmluY2x1ZGVzKGtleXdvcmQpKTsNCg0KICAgICAgICAgICAgICAg",
        "IGlmIChpc0Jsb2NrZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5qCH6K6w5Li65bey5aSE55CGDQogICAgICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc2VkVG9hc3RzLmFkZChjb250ZW50SGFzaCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubGFzdFByb2Nlc3NUaW1lID0gbm93Ow0KDQogICAgICAgICAgICAgICAgICAgIC8vIOa4heeQhui/h+acn+eahOWkhOeQhuiusOW9le+8iOS/neeVmeacgOi/kTEw5YiG6ZKf55qE6K6w5b2V77yJDQogICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYW51cFByb2Nlc3NlZFRvYXN0cygpOw0KDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfimqDvuI8g5qOA5rWL5Yiw55So5oi36KKr5bGP6JS95o+Q56S6Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogY29udGVudC50cmltKCksDQogICAgICAgICAgICAgICAgICAgICAgICBtYXRjaGVkS2V5d29yZDogYmxvY2tlZEtleXdvcmRzLmZpbmQoayA9PiBjb250ZW50LmluY2x1ZGVzKGspKSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRIYXNoDQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOW7tui/n+WkhOeQhu+8jOehruS/nURPTeeos+Wumg0KICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlQmxvY2tlZFVzZXIoKTsNCiAgICAgICAgICAgICAgICAgICAgfSwgNTAwKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5aSE55CG5o+Q56S65YWD57Sg5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog55Sf5oiQ5YaF5a655ZOI5biM55So5LqO5Y676YeNDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb250ZW50IOWGheWuuQ0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSDlk4jluIzlgLwNCiAgICAgICAgICovDQogICAgICAgIGdlbmVyYXRlQ29udGVudEhhc2goY29udGVudCkgew0KICAgICAgICAgICAgLy8g566A5Y2V55qE5ZOI5biM5Ye95pWwDQogICAgICAgICAgICBsZXQgaGFzaCA9IDA7DQogICAgICAgICAgICBjb25zdCBjbGVhbkNvbnRlbnQgPSBjb250ZW50LnRyaW0oKTsNCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2xlYW5Db250ZW50Lmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICAgICAgY29uc3QgY2hhciA9IGNsZWFuQ29udGVudC5jaGFyQ29kZUF0KGkpOw0KICAgICAgICAgICAgICAgIGhhc2ggPSAoKGhhc2ggPDwgNSkgLSBoYXNoKSArIGNoYXI7DQogICAgICAgICAgICAgICAgaGFzaCA9IGhhc2ggJiBoYXNoOyAvLyDovazmjaLkuLozMuS9jeaVtOaVsA0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAg",
        "cmV0dXJuIGhhc2gudG9TdHJpbmcoKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF55CG6L+H5pyf55qE5aSE55CG6K6w5b2VDQogICAgICAgICAqLw0KICAgICAgICBjbGVhbnVwUHJvY2Vzc2VkVG9hc3RzKCkgew0KICAgICAgICAgICAgLy8g5aaC5p6c6K6w5b2V5aSq5aSa77yM5riF55CG5LiA5Lqb5pen6K6w5b2VDQogICAgICAgICAgICBpZiAodGhpcy5wcm9jZXNzZWRUb2FzdHMuc2l6ZSA+IDUwKSB7DQogICAgICAgICAgICAgICAgY29uc3QgdG9EZWxldGUgPSBBcnJheS5mcm9tKHRoaXMucHJvY2Vzc2VkVG9hc3RzKS5zbGljZSgwLCAyNSk7DQogICAgICAgICAgICAgICAgdG9EZWxldGUuZm9yRWFjaChoYXNoID0+IHRoaXMucHJvY2Vzc2VkVG9hc3RzLmRlbGV0ZShoYXNoKSk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfwn6e5IOa4heeQhui/h+acn+eahOaPkOekuuWkhOeQhuiusOW9lScsIHsNCiAgICAgICAgICAgICAgICAgICAgZGVsZXRlZDogdG9EZWxldGUubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICByZW1haW5pbmc6IHRoaXMucHJvY2Vzc2VkVG9hc3RzLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6KKr5ouJ6buR55So5oi3DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVCbG9ja2VkVXNlcigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g6I635Y+W5b2T5YmN5a+56K+d55So5oi35L+h5oGvDQogICAgICAgICAgICAgICAgY29uc3QgY3VycmVudFVzZXIgPSBhd2FpdCBQYWdlRWxlbWVudE1hbmFnZXIuZ2V0Q3VycmVudENoYXRVc2VyKCk7DQogICAgICAgICAgICAgICAgaWYgKCFjdXJyZW50VXNlciB8fCAhY3VycmVudFVzZXIudXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfml6Dms5Xojrflj5blvZPliY3lr7nor53nlKjmiLfkv6Hmga8nKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeeUqOaIt+aYr+WQpuW3suWcqOm7keWQjeWNleS4rQ0KICAgICAgICAgICAgICAgIGlmIChCbGFja2xpc3RNYW5hZ2VyLmlzQmxhY2tsaXN0ZWQoY3VycmVudFVzZXIudXNlcklkKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pqg77iPIOeUqOaIt+W3suWcqOm7keWQjeWNleS4re+8jOi3s+i/h+a3u+WKoCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogY3VycmVudFVzZXIudXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IGN1cnJlbnRVc2VyLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5re75Yqg",
        "5Yiw6buR5ZCN5Y2VDQogICAgICAgICAgICAgICAgY29uc3QgYWRkZWQgPSBCbGFja2xpc3RNYW5hZ2VyLmFkZCgNCiAgICAgICAgICAgICAgICAgICAgY3VycmVudFVzZXIudXNlcklkLA0KICAgICAgICAgICAgICAgICAgICBjdXJyZW50VXNlci51c2VyTmFtZSB8fCAn5pyq55+l55So5oi3JywNCiAgICAgICAgICAgICAgICAgICAgJ2F1dG9fYmxvY2tlZCcsDQogICAgICAgICAgICAgICAgICAgICfns7vnu5/mo4DmtYvliLDnlKjmiLfooqvlsY/olL0nDQogICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgIGlmIChhZGRlZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+aqyDlt7Loh6rliqjlsIbooqvmi4npu5HnlKjmiLfmt7vliqDliLDpu5HlkI3ljZUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IGN1cnJlbnRVc2VyLnVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiBjdXJyZW50VXNlci51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5re75Yqg55So5oi35Yiw6buR5ZCN5Y2V5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiBjdXJyZW50VXNlci51c2VySWQsDQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogY3VycmVudFVzZXIudXNlck5hbWUNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WkhOeQhuiiq+aLiem7keeUqOaIt+aXtuWHuumUmScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa1i+ivleiiq+aLiem7keajgOa1i+WKn+iDvQ0KICAgICAgICAgKi8NCiAgICAgICAgdGVzdEJsb2NrZWREZXRlY3Rpb24oKSB7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+nqiDlvIDlp4vmtYvor5Xooqvmi4npu5Hmo4DmtYvlip/og70uLi4nKTsNCg0KICAgICAgICAgICAgLy8g5Yib5bu65qih5ouf55qE6KKr5bGP6JS95o+Q56S6DQogICAgICAgICAgICBjb25zdCB0ZXN0VG9hc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsNCiAgICAgICAgICAgIHRlc3RUb2FzdC5jbGFzc05hbWUgPSAnZC10b2FzdC1ub3RpY2UnOw0KICAgICAgICAgICAgdGVzdFRvYXN0LmlubmVySFRNTCA9IGANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLXRvYXN0LW1haW4iPg0KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZC10b2FzdC1pY29uIGQtdG9hc3QtaWNvbi1kYW5nZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB3aWR0aD0iMTAwJSIgaGVpZ2h0PSIxMDAlIiB2aWV3Qm94PSIwIDAgMTggMTgiIGZpbGw9",
        "Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTkuMDA0OTIgMTcuMzNDMTMuNjA4MiAxNy4zMyAxNy4zMzk5IDEzLjU5ODMgMTcuMzM5OSA4Ljk5NTAyQzE3LjMzOTkgNC4zOTE3MiAxMy42MDgyIDAuNjYwMDE3IDkuMDA0OTIgMC42NjAwMTdDNC40MDE2MyAwLjY2MDAxNyAwLjY2OTkyMiA0LjM5MTcyIDAuNjY5OTIyIDguOTk1MDJDMC42Njk5MjIgMTMuNTk4MyA0LjQwMTYzIDE3LjMzIDkuMDA0OTIgMTcuMzNaIiBmaWxsPSIjRkIzMzY3Ij48L3BhdGg+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZmlsbC1ydWxlPSJldmVub2RkIiBjbGlwLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik04LjA1MjM0IDEyLjc1NTFDOC4wNTIzNCAxMy4zMDg5IDguNTAxMjYgMTMuNzU3OCA5LjA1NTA0IDEzLjc1NzhDOS42MDg4MiAxMy43NTc4IDEwLjA1NzggMTMuMzA4OSAxMC4wNTc4IDEyLjc1NTFDMTAuMDU3OCAxMi4yMDEzIDkuNjA4ODIgMTEuNzUyNCA5LjA1NTA0IDExLjc1MjRDOC41MDEyNiAxMS43NTI0IDguMDUyMzQgMTIuMjAxMyA4LjA1MjM0IDEyLjc1NTFaTTkuODkwNzUgNS4wNjc3NUM5Ljg5MDc1IDQuNjA2MjYgOS41MTY2NSA0LjIzMjE2IDkuMDU1MTYgNC4yMzIxNkM4LjU5MzY4IDQuMjMyMTYgOC4yMTk1NyA0LjYwNjI2IDguMjE5NTcgNS4wNjc3NUw4LjIxOTU3IDEwLjA4MTNDOC4yMTk1NyAxMC41NDI4IDguNTkzNjggMTAuOTE2OSA5LjA1NTE2IDEwLjkxNjlDOS41MTY2NSAxMC45MTY5IDkuODkwNzUgMTAuNTQyOCA5Ljg5MDc1IDEwLjA4MTNMOS44OTA3NSA1LjA2Nzc1WiIgZmlsbD0id2hpdGUiPjwvcGF0aD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPg0KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtdG9hc3QtY29udGVudCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZC10b2FzdC1kZXNjcmlwdGlvbiI+55So5oi36KKr5bGP6JS9PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIGA7DQoNCiAgICAgICAgICAgIC8vIOa3u+WKoOWIsOmhtemdouW5tuinpuWPkeajgOa1iw0KICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0ZXN0VG9hc3QpOw0KDQogICAgICAgICAgICAvLyDmqKHmi5/mo4DmtYvov4fnqIsNCiAgICAgICAgICAgIHRoaXMucHJvY2Vzc1RvYXN0Tm90aWNlKHRlc3RUb2FzdCk7DQoNCiAgICAgICAgICAgIC8vIOa4heeQhua1i+ivleWFg+e0oA0KICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgICAgICAgICAgaWYgKHRlc3RUb2FzdC5wYXJlbnROb2RlKSB7DQogICAgICAgICAgICAgICAgICAgIHRlc3RUb2FzdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRlc3RUb2FzdCk7DQogICAgICAg",
        "ICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn6eqIOiiq+aLiem7keajgOa1i+a1i+ivleWujOaIkCcpOw0KICAgICAgICAgICAgfSwgMjAwMCk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDmtojmga/lpITnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IE1lc3NhZ2VQcm9jZXNzb3IgPSB7DQogICAgICAgIGlzUHJvY2Vzc2luZzogZmFsc2UsDQogICAgICAgIHByb2Nlc3NpbmdRdWV1ZTogbmV3IE1hcCgpLCAvLyDmlLnkuLpNYXDnu5PmnoTvvIzmjInogZTns7vkurrliIbnu4QNCiAgICAgICAgbWF4UXVldWVTaXplOiA1MCwgLy8g5aKe5Yqg6Zif5YiX5a656YePDQogICAgICAgIHF1ZXVlV2FybmluZ1RocmVzaG9sZDogNDAsIC8vIOmYn+WIl+itpuWRiumYiOWAvA0KICAgICAgICBsYXN0UXVldWVDaGVjazogMCwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5paw5raI5oGvDQogICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IGVsZW1lbnRzIOWMheWQq+aWsOa2iOaBr+eahOWFg+e0oOWIl+ihqA0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgcHJvY2Vzc05ld01lc3NhZ2VzKGVsZW1lbnRzKSB7DQogICAgICAgICAgICBpZiAodGhpcy5pc1Byb2Nlc3NpbmcpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a2iOaBr+WkhOeQhuWZqOW/meeijOS4re+8jOa3u+WKoOWIsOmYn+WIlycsIHsNCiAgICAgICAgICAgICAgICAgICAgY3VycmVudFF1ZXVlU2l6ZTogdGhpcy5wcm9jZXNzaW5nUXVldWUuc2l6ZSwNCiAgICAgICAgICAgICAgICAgICAgbmV3RWxlbWVudHNDb3VudDogZWxlbWVudHMubGVuZ3RoDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5hZGRUb1F1ZXVlKGVsZW1lbnRzKTsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMuaXNQcm9jZXNzaW5nID0gdHJ1ZTsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCflvIDlp4vlpITnkIbmlrDmtojmga8nLCB7DQogICAgICAgICAgICAgICAgY291bnQ6IGVsZW1lbnRzLmxlbmd0aCwNCiAgICAgICAgICAgICAgICBxdWV1ZVNpemU6IHRoaXMucHJvY2Vzc2luZ1F1ZXVlLnNpemUNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZWxlbWVudCBvZiBlbGVtZW50cykgew0KICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnByb2Nlc3NTaW5nbGVNZXNzYWdlKGVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheShDb25maWdNYW5hZ2VyLmdldCgncmVwbHlEZWxheScsIDMwMDApKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlpITnkIbpmJ/liJfkuK3nmoTmtojmga8NCiAg",
        "ICAgICAgICAgICAgICBhd2FpdCB0aGlzLnByb2Nlc3NRdWV1ZSgpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WkhOeQhua2iOaBr+aXtuWPkeeUn+mUmeivrycsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9IGZpbmFsbHkgew0KICAgICAgICAgICAgICAgIHRoaXMuaXNQcm9jZXNzaW5nID0gZmFsc2U7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmtojmga/lpITnkIblrozmiJDvvIzpmJ/liJfnirbmgIEnLCB7DQogICAgICAgICAgICAgICAgICAgIHF1ZXVlU2l6ZTogdGhpcy5wcm9jZXNzaW5nUXVldWUuc2l6ZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbljZXmnaHmtojmga8gLSDlop7lvLrniYjvvIzpm4bmiJDmmbrog73ph43or5XmnLrliLYNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBjb250YWN0RWxlbWVudCDkvJror53lhYPntKANCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHByb2Nlc3NTaW5nbGVNZXNzYWdlKGNvbnRhY3RFbGVtZW50KSB7DQogICAgICAgICAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgbGV0IHVzZXJOYW1lID0gJ+acquefpeeUqOaItyc7DQogICAgICAgICAgICBsZXQgbWVzc2FnZUlkID0gbnVsbDsgLy8g55So5LqO6ZSZ6K+v5aSE55CG5pe25riF55CG54q25oCBDQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g6aqM6K+B5YWD57Sg57G75Z6L77ya56Gu5L+d5piv5pyJ5pWI55qE5Lya6K+d6aG55YWD57SgDQogICAgICAgICAgICAgICAgaWYgKCFjb250YWN0RWxlbWVudCB8fCAhY29udGFjdEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzeC1jb250YWN0LWl0ZW0nKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2FybigncHJvY2Vzc1NpbmdsZU1lc3NhZ2U6IOS8oOWFpeeahOS4jeaYr+acieaViOeahOS8muivnemhueWFg+e0oCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRDbGFzczogY29udGFjdEVsZW1lbnQ/LmNsYXNzTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRUYWdOYW1lOiBjb250YWN0RWxlbWVudD8udGFnTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnREYXRhS2V5OiBjb250YWN0RWxlbWVudD8uZGF0YXNldD8ua2V5DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIC8vIDEuIOetieW+hURPTeeos+WumuW5tua/gOa0u+WFg+e0oA0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5byA5aeLRE9N56iz5a6a5oCn5qOA5p+l5ZKM5YWD57Sg5r+A5rS75rWB56iLJyk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBl",
        "bGVtZW50QWN0aXZhdGVkID0gYXdhaXQgRWxlbWVudE1hbmFnZXIuZmluZEFuZEFjdGl2YXRlRWxlbWVudChjb250YWN0RWxlbWVudCwgew0KICAgICAgICAgICAgICAgICAgICB3YWl0Rm9yU3RhYmlsaXR5OiB0cnVlLA0KICAgICAgICAgICAgICAgICAgICBtYXhSZXRyaWVzOiAzDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWVsZW1lbnRBY3RpdmF0ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfml6Dms5Xmv4DmtLvkvJror53lhYPntKDvvIzot7Pov4flpITnkIYnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIDIuIOmHjeaWsOafpeaJvuacgOaWsOeahOWFg+e0oOW5tuaPkOWPlueUqOaIt+S/oeaBrw0KICAgICAgICAgICAgICAgIGxldCBjdXJyZW50RWxlbWVudCA9IEVsZW1lbnRNYW5hZ2VyLnJlZmluZEVsZW1lbnQoY29udGFjdEVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmICghY3VycmVudEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfml6Dms5Xph43mlrDmib7liLDkvJror53lhYPntKDvvIzot7Pov4flpITnkIYnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOenu+mZpOeItue6p+S8muivnemhueajgOafpSAtIOebtOaOpeS9v+eUqOaJvuWIsOeahOWFg+e0oOi/m+ihjOWkhOeQhg0KDQogICAgICAgICAgICAgICAgY29uc3QgdXNlckluZm8gPSB0aGlzLmV4dHJhY3RVc2VySW5mbyhjdXJyZW50RWxlbWVudCk7DQogICAgICAgICAgICAgICAgaWYgKCF1c2VySW5mbykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5peg5rOV5o+Q5Y+W55So5oi35L+h5oGv77yM6Lez6L+H5aSE55CGJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudERhdGFLZXk6IGN1cnJlbnRFbGVtZW50LmRhdGFzZXQ/LmtleSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRDbGFzczogY3VycmVudEVsZW1lbnQuY2xhc3NOYW1lDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdXNlck5hbWUgPSB1c2VySW5mby51c2VyTmFtZTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5byA5aeL5aSE55CG55So5oi35raI5oGvJywgeyB1c2VyTmFtZSB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIDMuIOW7tui/n+a2iOaBr0lE55Sf5oiQIC0g562J5b6F5o+Q5Y+W5Yiw5a6e6ZmF55So5oi35raI5oGv5ZCO5YaN55Sf5oiQDQogICAgICAgICAgICAgICAgLy8g6YG/5YWN5Z+65LqO5Lya6K+d5YiX6KGo55qEbGFzdE1lc3NhZ2XvvIjlj6/og73mmK9BSeWbnuWkje+8ieeUn+aIkOmUmeivr+eahOWIneWni0lEDQogICAgICAgICAgICAg",
        "ICAgbGV0IG1lc3NhZ2VJZCA9IG51bGw7DQoNCiAgICAgICAgICAgICAgICAvLyA0LiDmo4Dmn6XlhYPntKDmmK/lkKblt7Lnu4/mmK/mv4DmtLvnirbmgIHvvIjmnIlhY3RpdmXnsbvvvIkNCiAgICAgICAgICAgICAgICBpZiAoY3VycmVudEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Lya6K+d6aG55bey5aSE5LqO5r+A5rS754q25oCB77yM6Lez6L+H54K55Ye755u05o6l6L+b5YWl5a+56K+dJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50RGF0YUtleTogY3VycmVudEVsZW1lbnQuZGF0YXNldD8ua2V5DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAvLyDnm7TmjqXov5vlhaXlr7nor53lpITnkIbmtYHnqIsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAvLyDkvb/nlKjlj6/pnaDnmoTngrnlh7vmlrnms5XvvIjkvb/nlKjph43mlrDmib7liLDnmoTlhYPntKDvvIkNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpY2tlZCA9IGF3YWl0IEVsZW1lbnRNYW5hZ2VyLnJlbGlhYmxlQ2xpY2soY3VycmVudEVsZW1lbnQsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG1heEF0dGVtcHRzOiA1LA0KICAgICAgICAgICAgICAgICAgICAgICAgd2FpdEJldHdlZW5BdHRlbXB0czogNDAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yY2VDbGljazogdHJ1ZSAvLyDlvLrliLbngrnlh7vmqKHlvI8NCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFjbGlja2VkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+eCueWHu+S8muivnemhueacgOe7iOWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50RGF0YUtleTogY3VycmVudEVsZW1lbnQuZGF0YXNldD8ua2V5LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRWaXNpYmxlOiBFbGVtZW50TWFuYWdlci5pc0VsZW1lbnRWaXNpYmxlKGN1cnJlbnRFbGVtZW50LCB7IHN0cmljdDogZmFsc2UgfSksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzQWN0aXZlQ2xhc3M6IGN1cnJlbnRFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJykNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8gNS4g562J5b6F5a+56K+d56qX5Y+j5Yqg6L29DQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMTUwMCk7DQoNCiAgICAgICAgICAgICAgICAvLyA2LiDmj5Dlj5bmnIDm",
        "lrDmtojmga/lhoXlrrnvvIjnm7TmjqXosIPnlKjvvIzlhYHorrjov5Tlm55udWxs77yJDQogICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZUNvbnRlbnQgPSBhd2FpdCB0aGlzLmV4dHJhY3RMYXRlc3RNZXNzYWdlKCk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIW1lc3NhZ2VDb250ZW50KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfml6Dms5Xmj5Dlj5bmnIDmlrDmtojmga/lhoXlrrnvvIzmo4Dmn6XnibnmrorlnLrmma8nLCB7IHVzZXJOYW1lIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOiOt+WPluS8muivneWIl+ihqOS4reeahOa2iOaBr+mihOiniO+8iOeUqOS6juWDteWwuOacquivu+ajgOa1i++8iQ0KICAgICAgICAgICAgICAgICAgICBjb25zdCBsYXN0TWVzc2FnZVByZXZpZXcgPSB1c2VySW5mby5sYXN0TWVzc2FnZSB8fCAnJzsNCg0KICAgICAgICAgICAgICAgICAgICAvLyAxLiDpppblhYjmo4Dmn6XogZrlhYnov5vnur8NCiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2hhdENvbnRhaW5lciA9IFBhZ2VFbGVtZW50TWFuYWdlci5nZXRFbGVtZW50V2l0aFNtYXJ0RmFsbGJhY2soJ2NoYXRDb250YWluZXInKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGNoYXRDb250YWluZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2VWaWV3cyA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3JBbGwoJy52dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3JywgY2hhdENvbnRhaW5lcik7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdmlldyBvZiBtZXNzYWdlVmlld3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlSXRlbSA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5pbS1tc2ctaXRlbScsIHZpZXcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZXNzYWdlSXRlbSAmJiBTcG90bGlnaHRMZWFkUHJvY2Vzc29yLmlzU3BvdGxpZ2h0TGVhZChtZXNzYWdlSXRlbSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CfjJ8g5qOA5rWL5Yiw6IGa5YWJ6L+b57q/5raI5oGv77yM5ZCv5Yqo5aSE55CG5rWB56iLJywgeyB1c2VyTmFtZSB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzcG90bGlnaHRQcm9jZXNzZWQgPSBhd2FpdCBTcG90bGlnaHRMZWFkUHJvY2Vzc29yLnByb2Nlc3NTcG90bGlnaHRMZWFkKA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUl0ZW0sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySW5mbw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzcG90bGlnaHRQcm9jZXNzZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg",
        "6IGa5YWJ6L+b57q/5raI5oGv5aSE55CG5a6M5oiQJywgeyB1c2VyTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAvLyAyLiDlpoLmnpzmsqHmnInogZrlhYnov5vnur/vvIzmo4Dmn6XmmK/lkKblkK/nlKjkuLvliqjov5vnur/or53mnK8NCiAgICAgICAgICAgICAgICAgICAgaWYgKENvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGlnaHRBY3RpdmVXZWxjb21lRW5hYmxlZCcsIGZhbHNlKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfjq8g5ZCv55So5Li75Yqo6L+b57q/6K+d5pyv77yM5Y+R6YCB5qyi6L+O5raI5oGvJywgeyB1c2VyTmFtZSB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5bey5Y+R6YCB6L+H5Li75Yqo5qyi6L+O6K+d5pyv77yI6Ziy6YeN5aSN77yJDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VyRGF0YSA9IENvbnZlcnNhdGlvblRyYWNrZXIuZ2V0Q29udmVyc2F0aW9uRGF0YSh1c2VySW5mby51c2VyTmFtZSk7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBoYXNBY3RpdmVXZWxjb21lU2VudCA9IHVzZXJEYXRhICYmIHVzZXJEYXRhLmFjdGl2ZVdlbGNvbWVTZW50Ow0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGFzQWN0aXZlV2VsY29tZVNlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5bey5Y+R6YCB6L+H5Li75Yqo6L+b57q/6K+d5pyv77yM5qOA5p+l5YO15bC45pyq6K+754q25oCBJywgeyB1c2VyTmFtZSB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIDMuIOWDteWwuOacquivu+ajgOa1i+WSjOWkhOeQhg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHpvbWJpZURldGVjdGlvbiA9IFpvbWJpZVVucmVhZE1hbmFnZXIuZGV0ZWN0Wm9tYmllVW5yZWFkKA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUNvbnRlbnQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RNZXNzYWdlUHJldmlldywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzQWN0aXZlV2VsY29tZVNlbnQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHpvbWJpZURldGVjdGlvbi5pc1pvbWJpZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+nnyDmo4DmtYvl",
        "iLDlg7XlsLjmnKror7vnirbmgIEnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYXNvbjogem9tYmllRGV0ZWN0aW9uLnJlYXNvbiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbmdlcnByaW50OiB6b21iaWVEZXRlY3Rpb24uZmluZ2VycHJpbnQ/LnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlhrfljbTnirbmgIENCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29vbGRvd25TdGF0dXMgPSBab21iaWVVbnJlYWRNYW5hZ2VyLmNoZWNrQ29vbGRvd24oDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHpvbWJpZURldGVjdGlvbi5maW5nZXJwcmludA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb29sZG93blN0YXR1cy5pbkNvb2xkb3duKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+nnyDlg7XlsLjmnKror7vlpITkuo7lhrfljbTmnJ/vvIzot7Pov4flpITnkIYnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtYWluaW5nTWludXRlczogY29vbGRvd25TdGF0dXMucmVtYWluaW5nTWludXRlcywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFzb246IGNvb2xkb3duU3RhdHVzLnJlYXNvbg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+nnyDlg7XlsLjmnKror7vlhrfljbTmnJ/lt7Lov4fmiJbnirbmgIHlt7Llj5jljJbvvIzorrDlvZXmnKzmrKHlpITnkIYnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhc29uOiBjb29sZG93blN0YXR1cy5yZWFzb24NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDorrDlvZXmnKzmrKHlg7XlsLjmnKror7vlpITnkIYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFpvbWJpZVVucmVh",
        "ZE1hbmFnZXIucmVjb3JkWm9tYmllUHJvY2VzcygNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6b21iaWVEZXRlY3Rpb24uZmluZ2VycHJpbnQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/Cfp58g5LiN56ym5ZCI5YO15bC45pyq6K+75p2h5Lu2Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFzb246IHpvbWJpZURldGVjdGlvbi5yZWFzb24NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWkjeeUqOiBmuWFiei/m+e6v+eahOivneacr+aooeadvw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGUgPSBDb25maWdNYW5hZ2VyLmdldCgnc3BvdGxpZ2h0TGVhZFRlbXBsYXRlJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1Muc3BvdGxpZ2h0TGVhZFRlbXBsYXRlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlZmF1bHRDb3Vyc2VOYW1lID0gQ29uZmlnTWFuYWdlci5nZXQoJ3Nwb3RsaWdodEFjdGl2ZVdlbGNvbWVDb3Vyc2VOYW1lJywgJ+aIkeS7rOeahOivvueoiycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgd2VsY29tZU1lc3NhZ2UgPSB0ZW1wbGF0ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9ce+eUqOaIt+aYteensFx9L2csIHVzZXJJbmZvLnVzZXJOYW1lIHx8ICfmnIvlj4snKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9ce+ivvueoi+WQjeensFx9L2csIGRlZmF1bHRDb3Vyc2VOYW1lKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXG4vZywgJ1xuJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbnQgPSBhd2FpdCBNZXNzYWdlUHJvY2Vzc29yLnNlbmRSZXBseSh3ZWxjb21lTWVzc2FnZSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDkuLvliqjov5vnur/or53mnK/lj5HpgIHmiJDlip8nLCB7IHVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOag",
        "h+iusOW3suWPkemAgeS4u+WKqOasoui/juivneacrw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIENvbnZlcnNhdGlvblRyYWNrZXIudXBkYXRlQ29udmVyc2F0aW9uKHVzZXJJbmZvLnVzZXJOYW1lLCAnW+S4u+WKqOi/m+e6v+ivneacr10nLCB7IGFjdGl2ZVdlbGNvbWVTZW50OiB0cnVlIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+KdjCDkuLvliqjov5vnur/or53mnK/lj5HpgIHlpLHotKUnLCB7IHVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgLy8gMy4g5pei5rKh5pyJ6IGa5YWJ6L+b57q/77yM5Lmf5rKh5pyJ5ZCv55So5Li75Yqo6K+d5pyv77yM5oql6ZSZ6YCA5Ye6DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmnKrmib7liLDlj6/lpITnkIbnmoTmtojmga/vvIzkuJTmnKrlkK/nlKjkuLvliqjov5vnur/or53mnK8nLCB7IHVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8gNC4g5Z+65LqO5a6e6ZmF55So5oi35raI5oGv55Sf5oiQ5ZSv5LiA5raI5oGvSUQNCiAgICAgICAgICAgICAgICBtZXNzYWdlSWQgPSBNZXNzYWdlRGVkdXBsaWNhdG9yLmdlbmVyYXRlTWVzc2FnZUlkKA0KICAgICAgICAgICAgICAgICAgICB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUNvbnRlbnQsIC8vIOS9v+eUqOWunumZheaPkOWPlueahOeUqOaIt+a2iOaBr+WGheWuuQ0KICAgICAgICAgICAgICAgICAgICB1c2VySW5mby50aW1lc3RhbXANCiAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+aIkOWKn+aPkOWPluacgOaWsOeUqOaIt+a2iOaBrycsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudDogbWVzc2FnZUNvbnRlbnQsDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfk50g55Sf5oiQ5raI5oGvSUQnLCB7DQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZDogbWVzc2FnZUlkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlQ29udGVudDogbWVzc2FnZUNvbnRlbnQuc3Vic3RyaW5nKDAsIDUwKSArIChtZXNzYWdlQ29udGVudC5sZW5ndGggPiA1MCA/ICcuLi4nIDogJycpLA0KICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IHVzZXJJbmZvLnRpbWVzdGFtcA0KICAgICAgICAgICAgICAgIH0p",
        "Ow0KDQogICAgICAgICAgICAgICAgLy8gNS4g6Ieq5Yqo6K6w5b2V5paw55So5oi35Yiw6L+957KJ57O757uf77yI5aaC5p6c5ZCv55So77yJDQogICAgICAgICAgICAgICAgaWYgKENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEVuYWJsZWQnLCBmYWxzZSkgJiYgQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwQXV0b1JlY29yZCcsIHRydWUpKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuYXV0b1JlY29yZFVzZXJGb3JGb2xsb3dVcCh1c2VySW5mbywgbWVzc2FnZUNvbnRlbnQpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIDYuIOm7keWQjeWNleajgOafpQ0KICAgICAgICAgICAgICAgIGlmIChDb25maWdNYW5hZ2VyLmdldCgnYmxhY2tsaXN0RW5hYmxlZCcsIHRydWUpKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IHVzZXJJbmZvLnVzZXJJZDsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNCbGFja2xpc3RlZCA9IEJsYWNrbGlzdE1hbmFnZXIuaXNCbGFja2xpc3RlZCh1c2VySWQpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoaXNCbGFja2xpc3RlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfmqsg55So5oi35Zyo6buR5ZCN5Y2V5Lit77yM6Lez6L+H6Ieq5Yqo5Zue5aSNJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47IC8vIOebtOaOpei/lOWbnu+8jOS4jei/m+ihjOWQjue7reWkhOeQhg0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfinIUg55So5oi35LiN5Zyo6buR5ZCN5Y2V5Lit77yM57un57ut5aSE55CGJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyA3LiDljp/lrZDmgKfmo4Dmn6XlubbmoIforrAgLSDln7rkuo7lrp7pmYXmtojmga/lhoXlrrkNCiAgICAgICAgICAgICAgICBjb25zdCBjYW5Qcm9jZXNzID0gTWVzc2FnZURlZHVwbGljYXRvci5jaGVja0FuZE1hcmtBc1Byb2Nlc3NpbmcoDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZCwNCiAgICAgICAgICAgICAgICAgICAgdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VDb250ZW50LA0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlcklu",
        "Zm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlQ29udGVudDogbWVzc2FnZUNvbnRlbnQsDQogICAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IHVzZXJJbmZvLnRpbWVzdGFtcCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgaWYgKCFjYW5Qcm9jZXNzKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfimqDvuI8g5Y6f5a2Q5oCn5qOA5p+l5aSx6LSl77yM6Lez6L+H5aSE55CGJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUlkOiBtZXNzYWdlSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUNvbnRlbnQ6IG1lc3NhZ2VDb250ZW50LnN1YnN0cmluZygwLCA1MCkgKyAobWVzc2FnZUNvbnRlbnQubGVuZ3RoID4gNTAgPyAnLi4uJyA6ICcnKQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIDguMy4g6IGa5YWJ6L+b57q/5raI5oGv54m55q6K5aSE55CGDQogICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2VDb250ZW50ICYmIG1lc3NhZ2VDb250ZW50LmluY2x1ZGVzKCdb6IGa5YWJ6L+b57q/XScpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn4yfIOajgOa1i+WIsOiBmuWFiei/m+e6v+a2iOaBr++8jOWQr+WKqOS4k+mXqOWkhOeQhua1geeoiycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VQcmV2aWV3OiBtZXNzYWdlQ29udGVudC5zdWJzdHJpbmcoMCwgMTAwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOafpeaJvuWMheWQq+iBmuWFiei/m+e6v+a2iOaBr+eahOWFg+e0oA0KICAgICAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlVmlld3MgPSBVdGlscy5xdWVyeVNlbGVjdG9yQWxsKCcudnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0tdmlldycsDQogICAgICAgICAgICAgICAgICAgICAgICBQYWdlRWxlbWVudE1hbmFnZXIuZ2V0RWxlbWVudFdpdGhTbWFydEZhbGxiYWNrKCdjaGF0Q29udGFpbmVyJykpOw0KDQogICAgICAgICAgICAgICAgICAgIGxldCBzcG90bGlnaHRFbGVtZW50ID0gbnVsbDsNCiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCB2aWV3IG9mIG1lc3NhZ2VWaWV3cykgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZUl0ZW0gPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcu",
        "aW0tbXNnLWl0ZW0nLCB2aWV3KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZXNzYWdlSXRlbSAmJiBTcG90bGlnaHRMZWFkUHJvY2Vzc29yLmlzU3BvdGxpZ2h0TGVhZChtZXNzYWdlSXRlbSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcG90bGlnaHRFbGVtZW50ID0gbWVzc2FnZUl0ZW07DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBpZiAoc3BvdGxpZ2h0RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3BvdGxpZ2h0UHJvY2Vzc2VkID0gYXdhaXQgU3BvdGxpZ2h0TGVhZFByb2Nlc3Nvci5wcm9jZXNzU3BvdGxpZ2h0TGVhZCgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcG90bGlnaHRFbGVtZW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJbmZvDQogICAgICAgICAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3BvdGxpZ2h0UHJvY2Vzc2VkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDogZrlhYnov5vnur/mtojmga/lpITnkIblrozmiJAnLCB7IHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47IC8vIOiBmuWFiei/m+e6v+WkhOeQhuWujOaIkO+8jOS4jemcgOimgee7p+e7reaZrumAmua2iOaBr+a1geeoiw0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4pqg77iPIOiBmuWFiei/m+e6v+a2iOaBr+WkhOeQhuWksei0pe+8jOe7p+e7reaZrumAmua2iOaBr+a1geeoiycsIHsgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KaoO+4jyDmnKrmib7liLDogZrlhYnov5vnur/mtojmga/lhYPntKDvvIznu6fnu63mma7pgJrmtojmga/mtYHnqIsnLCB7IHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIDguNS4g5qOA5rWL55WZ5a6i6LWE54q25oCB5ZKM6I635Y+WY29udmVyc2F0aW9uSWTvvIjlvLrliLblrp7ml7bmo4DmtYvvvIkNCiAgICAgICAgICAgICAgICBsZXQgbGVhZHNTdGF0dXMgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICBsZXQgY29udmVyc2F0aW9uSWQgPSBudWxsOw0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkID0gY3VycmVudEVsZW1lbnQuZGF0YXNldD8ua2V5Ow0KICAgICAgICAgICAg",
        "ICAgICAgICBpZiAoY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOW8uuWItuWunuaXtuajgOa1i+eVmeWuoui1hOeKtuaAge+8iOavj+asoea2iOaBr+WkhOeQhumDvemHjeaWsOajgOa1i++8iQ0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+W8gOWni+W8uuWItuWunuaXtueVmeWuoui1hOajgOa1iycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWFkc1N0YXR1cyA9IGF3YWl0IExlYWRzU3RhdHVzTWFuYWdlci5nZXRMZWFkc1N0YXR1cyhjb252ZXJzYXRpb25JZCwgY3VycmVudEVsZW1lbnQsIHRydWUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5a6e5pe2QVBJ5qOA5rWL5aSx6LSl77yM5L2/55So5ZCM5q2lRE9N5qOA5rWLJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWFkc1N0YXR1cyA9IExlYWRzU3RhdHVzTWFuYWdlci5nZXRMZWFkc1N0YXR1c1N5bmMoY29udmVyc2F0aW9uSWQsIGN1cnJlbnRFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CflIQg5a6e5pe255WZ5a6i6LWE54q25oCB5qOA5rWL5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlYWRzU3RhdHVzOiBsZWFkc1N0YXR1cyA/ICflt7LnlZnlrqLotYQnIDogJ+acqueVmeWuoui1hCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAg5qOA5rWL5pa55byPOiAn5by65Yi25a6e5pe25qOA5rWLJw0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+eVmeWuoui1hOeKtuaAgeajgOa1i+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8gOS4g55Sf5oiQQUnlm57lpI3vvIjljIXlkKvnlZnlrqLotYTnirbmgIHlkozkvJro",
        "r53kuIrkuIvmlofvvIkNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZXh0ID0gew0KICAgICAgICAgICAgICAgICAgICBsZWFkc1N0YXR1cywNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgY29uc3QgYWlSZXBseSA9IGF3YWl0IEFQSVJldHJ5TWFuYWdlci5jYWxsV2l0aFJldHJ5KA0KICAgICAgICAgICAgICAgICAgICBBSVJlcGx5R2VuZXJhdG9yLmdlbmVyYXRlUmVwbHksDQogICAgICAgICAgICAgICAgICAgIFttZXNzYWdlQ29udGVudCwgdXNlckluZm8udXNlck5hbWUsIGNvbnRleHRdDQogICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgIGlmICghYWlSZXBseSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ0FJ5Zue5aSN55Sf5oiQ5aSx6LSlJywgeyB1c2VyTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1ZygnQUnlm57lpI3nlJ/miJDmiJDlip8nLCB7IHVzZXJOYW1lLCByZXBseUxlbmd0aDogYWlSZXBseS5sZW5ndGggfSk7DQoNCiAgICAgICAgICAgICAgICAvLyA4LiDlj5HpgIHlm57lpI0NCiAgICAgICAgICAgICAgICBjb25zdCBzZW50ID0gYXdhaXQgU21hcnRSZXRyeU1hbmFnZXIuZXhlY3V0ZVdpdGhSZXRyeSgNCiAgICAgICAgICAgICAgICAgICAgKCkgPT4gdGhpcy5zZW5kUmVwbHkoYWlSZXBseSksDQogICAgICAgICAgICAgICAgICAgIG51bGwsDQogICAgICAgICAgICAgICAgICAgIGDlj5HpgIHlm57lpI0tJHt1c2VyTmFtZX1gLA0KICAgICAgICAgICAgICAgICAgICB7IG1heFJldHJpZXM6IDIgfQ0KICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIXNlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflj5HpgIHlm57lpI3lpLHotKUnLCB7IHVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+WbnuWkjeWPkemAgeaIkOWKnycsIHsgdXNlck5hbWUgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyA5LiDmo4Dmn6XmmK/lkKbpnIDopoHlj5HpgIHojrflrqLlt6XlhbcNCiAgICAgICAgICAgICAgICBpZiAoQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uRW5hYmxlZCcsIGZhbHNlKSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VyRGF0YSA9IENvbnZlcnNhdGlvblRyYWNrZXIudXBkYXRlQ29udmVyc2F0aW9uKHVzZXJJbmZvLnVzZXJOYW1lLCBtZXNzYWdlQ29udGVudCk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKEFjcXVpc2l0aW9uT3Bwb3J0dW5pdHlEZXRlY3Rvci5zaG91bGRTZW5kQWNxdWlzaXRpb25Ub29sKHVzZXJJbmZvLnVzZXJOYW1lLCBtZXNzYWdlQ29udGVudCwgdXNlckRhdGEpKSB7",
        "DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5qOA5rWL5Yiw6I635a6i5bel5YW35Y+R6YCB5pe25py6JywgeyB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOetieW+heS4gOauteaXtumXtOWGjeWPkemAgeiOt+WuouW3peWFt++8iOmBv+WFjei/h+S6jueqgeWFgO+8iQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYWNxdWlzaXRpb25EZWxheSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdhY3F1aXNpdGlvbkRlbGF5JywgMjAwMCk7DQogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheShhY3F1aXNpdGlvbkRlbGF5KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9vbFR5cGUgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25Ub29sVHlwZScsICfnlZnotYTljaEnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xOYW1lID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uVG9vbE5hbWUnLCAnJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFjcXVpc2l0aW9uU2VudCA9IGF3YWl0IEN1c3RvbWVyQWNxdWlzaXRpb25TZW5kZXIuc2VuZEFjcXVpc2l0aW9uVG9vbCh0b29sVHlwZSwgdG9vbE5hbWUpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWNxdWlzaXRpb25TZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29udmVyc2F0aW9uVHJhY2tlci5tYXJrQWNxdWlzaXRpb25Ub29sU2VudCh1c2VySW5mby51c2VyTmFtZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+iOt+WuouW3peWFt+WPkemAgeaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b29sVHlwZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9vbE5hbWU6IHRvb2xOYW1lIHx8ICfpu5jorqTlt6XlhbcnDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6I635a6i5bel5YW35Y+R6YCB5aSx6LSlJywgeyB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAvLyDljbPkvb/ojrflrqLlip/og73mnKrlkK/nlKjvvIzkuZ/opoHmm7TmlrDlr7nor53ov73ouKrmlbDmja4NCiAgICAgICAgICAgICAgICAgICAgQ29udmVyc2F0aW9uVHJhY2tlci51cGRhdGVDb252ZXJzYXRpb24odXNlckluZm8udXNlck5hbWUsIG1lc3NhZ2VDb250ZW50KTsNCiAgICAgICAgICAg",
        "ICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyA4LiDmoIforrDkuLrlt7LlpITnkIYNCiAgICAgICAgICAgICAgICBjb25zdCBtZXRhZGF0YSA9IHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlQ29udGVudDogbWVzc2FnZUNvbnRlbnQsDQogICAgICAgICAgICAgICAgICAgIGFpUmVwbHksDQogICAgICAgICAgICAgICAgICAgIHByb2Nlc3NlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksDQogICAgICAgICAgICAgICAgICAgIHByb2Nlc3NpbmdUaW1lOiBEYXRlLm5vdygpIC0gc3RhcnRUaW1lLA0KICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IHVzZXJJbmZvLnRpbWVzdGFtcA0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICBNZXNzYWdlRGVkdXBsaWNhdG9yLm1hcmtBc1Byb2Nlc3NlZChtZXNzYWdlSWQsIG1ldGFkYXRhKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHByb2Nlc3NpbmdUaW1lID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5raI5oGv5aSE55CG5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc2luZ1RpbWU6IGAke3Byb2Nlc3NpbmdUaW1lfW1zYCwNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUlkOiBtZXNzYWdlSWQuc3Vic3RyaW5nKDAsIDgpICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VQcmV2aWV3OiBtZXNzYWdlQ29udGVudC5zdWJzdHJpbmcoMCwgNTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgIHJlcGx5UHJldmlldzogYWlSZXBseS5zdWJzdHJpbmcoMCwgNTApICsgJy4uLicNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBwcm9jZXNzaW5nVGltZSA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflpITnkIbmtojmga/ml7blj5HnlJ/plJnor68nLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc2luZ1RpbWU6IGAke3Byb2Nlc3NpbmdUaW1lfW1zYCwNCiAgICAgICAgICAgICAgICAgICAgc3RhY2s6IGVycm9yLnN0YWNrPy5zdWJzdHJpbmcoMCwgMjAwKSArICcuLi4nDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmuIXnkIblpITnkIbkuK3nirbmgIENCiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZUlkKSB7DQogICAgICAgICAgICAgICAgICAgIE1lc3NhZ2VEZWR1cGxpY2F0b3IuY2xlYXJQcm9jZXNzaW5nKG1lc3NhZ2VJZCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5bey",
        "5riF55CG5aSx6LSl5raI5oGv55qE5aSE55CG5Lit54q25oCBJywgeyBtZXNzYWdlSWQsIHVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr+WFg+e0oOebuOWFs+mUmeivr++8jOWwneivleWIt+aWsA0KICAgICAgICAgICAgICAgIGlmIChlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCflhYPntKAnKSB8fCBlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCflj6/op4EnKSB8fCBlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCfmv4DmtLsnKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+ajgOa1i+WIsOWFg+e0oOebuOWFs+mUmeivr++8jOWIt+aWsOWuueWZqCcpOw0KICAgICAgICAgICAgICAgICAgICBFbGVtZW50TWFuYWdlci5yZWZyZXNoKCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmj5Dlj5bnlKjmiLfkv6Hmga8gLSDlop7lvLrniYjvvIzmlK/mjIHlpJrnp43lhYPntKDnsbvlnovlkozpmY3nuqfnrZbnlaUNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBjb250YWN0RWxlbWVudCDkvJror53lhYPntKANCiAgICAgICAgICogQHJldHVybnMge09iamVjdHxudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdFVzZXJJbmZvKGNvbnRhY3RFbGVtZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5byA5aeL5o+Q5Y+W55So5oi35L+h5oGvJywgew0KICAgICAgICAgICAgICAgICAgICBlbGVtZW50VGFnOiBjb250YWN0RWxlbWVudC50YWdOYW1lLA0KICAgICAgICAgICAgICAgICAgICBlbGVtZW50Q2xhc3M6IGNvbnRhY3RFbGVtZW50LmNsYXNzTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgZGF0YUtleTogY29udGFjdEVsZW1lbnQuZGF0YXNldD8ua2V5DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDkvb/nlKjlop7lvLrnmoTnlKjmiLflkI3mj5Dlj5YNCiAgICAgICAgICAgICAgICBjb25zdCB1c2VyTmFtZSA9IHRoaXMuZXh0cmFjdFVzZXJOYW1lRW5oYW5jZWQoY29udGFjdEVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGxhc3RNZXNzYWdlID0gdGhpcy5leHRyYWN0TGFzdE1lc3NhZ2VFbmhhbmNlZChjb250YWN0RWxlbWVudCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmlLnov5vnmoTml7bpl7TmiLPmj5Dlj5bpgLvovpENCiAgICAgICAgICAgICAgICBsZXQgdGltZXN0YW1wID0gJyc7DQogICAgICAgICAgICAgICAgY29uc3QgdGltZUVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcudGltZScsIGNvbnRhY3RFbGVtZW50KTsNCg0KICAgICAgICAgICAgICAgIGlmICh0aW1lRWxlbWVudCAmJiB0aW1lRWxlbWVudC50ZXh0Q29udGVudC50cmltKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGltZVRleHQgPSB0aW1lRWxlbWVudC50ZXh0Q29udGVu",
        "dC50cmltKCk7DQogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcCA9IHRoaXMubm9ybWFsaXplVGltZXN0YW1wKHRpbWVUZXh0KTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmib7kuI3liLDml7bpl7TlhYPntKDvvIzkvb/nlKjmtojmga/lhoXlrrnkvZzkuLrnqLPlrprmoIfor4bnrKYNCiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wID0gYGNvbnRlbnRfJHt0aGlzLmdlbmVyYXRlU3RhYmxlVGltZXN0YW1wKHVzZXJOYW1lLCBsYXN0TWVzc2FnZSl9YDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJOYW1lIHx8IHVzZXJOYW1lID09PSAn5pyq55+l55So5oi3Jykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign55So5oi35ZCN5o+Q5Y+W5aSx6LSl5oiW5Li66buY6K6k5YC8Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50RGF0YUtleTogY29udGFjdEVsZW1lbnQuZGF0YXNldD8ua2V5LA0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudFRleHQ6IGNvbnRhY3RFbGVtZW50LnRleHRDb250ZW50Py5zdWJzdHJpbmcoMCwgMTAwKQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmj5Dlj5bnlKjmiLfkv6Hmga/miJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlTGVuZ3RoOiBsYXN0TWVzc2FnZT8ubGVuZ3RoIHx8IDAsDQogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcCwNCiAgICAgICAgICAgICAgICAgICAgaGFzVGltZUVsZW1lbnQ6ICEhdGltZUVsZW1lbnQNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOaPkOWPlueUqOaIt0lEDQogICAgICAgICAgICAgICAgbGV0IHVzZXJJZCA9ICcnOw0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMe+8muS7jmRhdGFzZXQua2V56I635Y+WDQogICAgICAgICAgICAgICAgaWYgKGNvbnRhY3RFbGVtZW50LmRhdGFzZXQgJiYgY29udGFjdEVsZW1lbnQuZGF0YXNldC5rZXkpIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkID0gY29udGFjdEVsZW1lbnQuZGF0YXNldC5rZXk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMu+8muS7jmRhdGEtaWTlsZ7mgKfojrflj5YNCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJZCAmJiBjb250YWN0RWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnKSkgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQgPSBjb250YWN0RWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAv",
        "LyDmlrnms5Uz77ya5LuOZGF0YS11c2VyLWlk5bGe5oCn6I635Y+WDQogICAgICAgICAgICAgICAgaWYgKCF1c2VySWQgJiYgY29udGFjdEVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXVzZXItaWQnKSkgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQgPSBjb250YWN0RWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdXNlci1pZCcpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenOS7jeeEtuayoeaciXVzZXJJZO+8jOS9v+eUqHVzZXJOYW1l5L2c5Li65qCH6K+GDQogICAgICAgICAgICAgICAgaWYgKCF1c2VySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkID0gJ25hbWU6JyArIHVzZXJOYW1lOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaPkOWPlmNvbnZlcnNhdGlvbklkDQogICAgICAgICAgICAgICAgY29uc3QgY29udmVyc2F0aW9uSWQgPSBjb250YWN0RWxlbWVudC5kYXRhc2V0Py5rZXk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aPkOWPlueUqOaIt0lE5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZCA/IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJyA6ICdOL0EnLA0KICAgICAgICAgICAgICAgICAgICBzb3VyY2U6IHVzZXJJZC5zdGFydHNXaXRoKCduYW1lOicpID8gJ3VzZXJOYW1lJyA6ICdkYXRhQXR0cmlidXRlJw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQsIC8vIOa3u+WKoGNvbnZlcnNhdGlvbklk5a2X5q61DQogICAgICAgICAgICAgICAgICAgIGxhc3RNZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXAsDQogICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6IGNvbnRhY3RFbGVtZW50DQogICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmj5Dlj5bnlKjmiLfkv6Hmga/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlop7lvLrnmoTnlKjmiLflkI3mj5Dlj5bmlrnms5UNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBjb250YWN0RWxlbWVudCDkvJror53lhYPntKANCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RVc2VyTmFtZUVuaGFuY2VkKGNvbnRhY3RFbGVtZW50KSB7DQogICAgICAgICAgICAvLyDmm7TmlrDnmoTpgInmi6nl",
        "majliJfooaggLSDln7rkuo7mnIDmlrBET03nu5PmnoTliIbmnpANCiAgICAgICAgICAgIGNvbnN0IHNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICAvLyDmnIDmlrDlsI/nuqLkuaZET03nu5PmnoTpgInmi6nlmajvvIgyMDI05bm05pu05paw77yJDQogICAgICAgICAgICAgICAgJy5zeC1jb250YWN0LWl0ZW0gLm5pY2stbmFtZScsICAvLyDmnIDkvbPpgInmi6nlmajvvJrogZTns7vkurrpobnkuK3nmoTmmLXnp7ANCiAgICAgICAgICAgICAgICAnLm5pY2stbmFtZScsICAgICAgICAgICAgICAgICAgIC8vIOebtOaOpeaYteensOmAieaLqeWZqA0KICAgICAgICAgICAgICAgICcuZC10ZXh0Lm5pY2stbmFtZScsICAgICAgICAgICAvLyDluKZkLXRleHTnsbvnmoTmmLXnp7ANCiAgICAgICAgICAgICAgICAnLml0ZW0tbWFpbi10b3AgLm5pY2stbmFtZScsICAgLy8g5Li76KaB5Yy65Z+f5Lit55qE5pi156ewDQoNCiAgICAgICAgICAgICAgICAvLyDmoIflh4bpgInmi6nlmajvvIjkv53mjIHlhbzlrrnmgKfvvIkNCiAgICAgICAgICAgICAgICBDT05GSUcuU0VMRUNUT1JTLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICcuaXRlbS1tYWluLXRvcCAuZC10ZXh0JywNCg0KICAgICAgICAgICAgICAgIC8vIOWwj+e6ouS5pueJueWumumAieaLqeWZqA0KICAgICAgICAgICAgICAgICcuc3gtY29udGFjdC1pdGVtLW5hbWUnLA0KICAgICAgICAgICAgICAgICcuY29udGFjdC1uYW1lJywNCiAgICAgICAgICAgICAgICAnLnVzZXItbmFtZScsDQogICAgICAgICAgICAgICAgJy5uYW1lJywNCiAgICAgICAgICAgICAgICAnLnRpdGxlJywNCg0KICAgICAgICAgICAgICAgIC8vIOmAmueUqOmAieaLqeWZqA0KICAgICAgICAgICAgICAgICdbY2xhc3MqPSJuYW1lIl0nLA0KICAgICAgICAgICAgICAgICdbY2xhc3MqPSJuaWNrIl0nLA0KICAgICAgICAgICAgICAgICdbY2xhc3MqPSJ1c2VyIl0nLA0KICAgICAgICAgICAgICAgICcuZC10ZXh0OmZpcnN0LWNoaWxkJywNCg0KICAgICAgICAgICAgICAgIC8vIOmZjee6p+mAieaLqeWZqA0KICAgICAgICAgICAgICAgICcuZC10ZXh0JywNCiAgICAgICAgICAgICAgICAnc3BhbicsDQogICAgICAgICAgICAgICAgJ2RpdicNCiAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgIC8vIOa3u+WKoOivpue7hueahOiwg+ivleS/oeaBrw0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflvIDlp4vnlKjmiLflkI3mj5Dlj5YnLCB7DQogICAgICAgICAgICAgICAgZWxlbWVudFRhZzogY29udGFjdEVsZW1lbnQudGFnTmFtZSwNCiAgICAgICAgICAgICAgICBlbGVtZW50Q2xhc3M6IGNvbnRhY3RFbGVtZW50LmNsYXNzTmFtZSwNCiAgICAgICAgICAgICAgICBlbGVtZW50SWQ6IGNvbnRhY3RFbGVtZW50LmlkLA0KICAgICAgICAgICAgICAgIGRhdGFLZXk6IGNvbnRhY3RFbGVtZW50LmRhdGFzZXQ/LmtleSwNCiAgICAgICAgICAgICAgICBpbm5lckhUTUw6IGNvbnRhY3RFbGVtZW50LmlubmVySFRNTC5zdWJz",
        "dHJpbmcoMCwgMjAwKSArICcuLi4nDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiBzZWxlY3RvcnMpIHsNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBuYW1lRWxlbWVudCA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IsIGNvbnRhY3RFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWVFbGVtZW50ICYmIG5hbWVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmFtZSA9IG5hbWVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmib7liLDmvZzlnKjnlKjmiLflkI3lhYPntKAnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3IsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50VGFnOiBuYW1lRWxlbWVudC50YWdOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRDbGFzczogbmFtZUVsZW1lbnQuY2xhc3NOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6L+H5ruk5o6J5piO5pi+5LiN5piv55So5oi35ZCN55qE5YaF5a65DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5pc1ZhbGlkVXNlck5hbWUobmFtZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eUqOaIt+WQjeaPkOWPluaIkOWKnycsIHsgc2VsZWN0b3IsIG5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5hbWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn55So5oi35ZCN6aqM6K+B5aSx6LSlJywgeyBzZWxlY3RvciwgbmFtZSwgcmVhc29uOiAn5LiN56ym5ZCI55So5oi35ZCN5qC85byPJyB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6YCJ5oup5Zmo5pyq5om+5Yiw5pyJ5pWI5YWD57SgJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvdW5kOiAhIW5hbWVFbGVtZW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc1RleHQ6IG5hbWVFbGVtZW50ID8gISFuYW1lRWxlbWVudC50ZXh0Q29udGVudC50cmltKCkgOiBmYWxzZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWco",
        "J+eUqOaIt+WQjemAieaLqeWZqOWksei0pScsIHsgc2VsZWN0b3IsIGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g6ZmN57qn562W55Wl77ya5bCd6K+V5LuO5YW25LuW5bGe5oCn55Sf5oiQ55So5oi35qCH6K+GDQogICAgICAgICAgICBjb25zdCBmYWxsYmFja05hbWUgPSB0aGlzLmdlbmVyYXRlRmFsbGJhY2tVc2VyTmFtZShjb250YWN0RWxlbWVudCk7DQogICAgICAgICAgICBpZiAoZmFsbGJhY2tOYW1lICYmIGZhbGxiYWNrTmFtZSAhPT0gJ+acquefpeeUqOaItycpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5L2/55So6ZmN57qn562W55Wl55Sf5oiQ55So5oi35qCH6K+GJywgeyBmYWxsYmFja05hbWUgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbGxiYWNrTmFtZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5aKe5by655qE6ZSZ6K+v5L+h5oGvDQogICAgICAgICAgICBMb2dnZXIud2Fybign5omA5pyJ55So5oi35ZCN5o+Q5Y+W562W55Wl6YO95aSx6LSlJywgew0KICAgICAgICAgICAgICAgIGVsZW1lbnRPdXRlckhUTUw6IGNvbnRhY3RFbGVtZW50Lm91dGVySFRNTC5zdWJzdHJpbmcoMCwgNTAwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgIGF2YWlsYWJsZUNsYXNzZXM6IGNvbnRhY3RFbGVtZW50LmNsYXNzTmFtZSwNCiAgICAgICAgICAgICAgICBjaGlsZEVsZW1lbnRzQ291bnQ6IGNvbnRhY3RFbGVtZW50LmNoaWxkcmVuLmxlbmd0aCwNCiAgICAgICAgICAgICAgICB0ZXh0Q29udGVudDogY29udGFjdEVsZW1lbnQudGV4dENvbnRlbnQuc3Vic3RyaW5nKDAsIDEwMCkgKyAnLi4uJw0KICAgICAgICAgICAgfSk7DQogICAgICAgICAgICByZXR1cm4gJ+acquefpeeUqOaItyc7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWinuW8uueahOa2iOaBr+WGheWuueaPkOWPluaWueazlQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRhY3RFbGVtZW50IOS8muivneWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfQ0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdExhc3RNZXNzYWdlRW5oYW5jZWQoY29udGFjdEVsZW1lbnQpIHsNCiAgICAgICAgICAgIGNvbnN0IHNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICAvLyDmoIflh4bpgInmi6nlmagNCiAgICAgICAgICAgICAgICBDT05GSUcuU0VMRUNUT1JTLmxhc3RNZXNzYWdlLA0KICAgICAgICAgICAgICAgICcuY29udGVudCcsDQogICAgICAgICAgICAgICAgJy5pdGVtLW1haW4tY2VudGVyIC5jb250ZW50JywNCiAgICAgICAgICAgICAgICAnLmQtdGV4dC5jb250ZW50JywNCg0KICAgICAgICAgICAgICAgIC8vIOWwj+e6ouS5pueJueWumumAieaLqeWZqA0KICAgICAgICAgICAgICAgICcuc3gtY29udGFjdC1pdGVtLW1lc3NhZ2UnLA0KICAgICAgICAgICAgICAgICcubGFzdC1tZXNzYWdl",
        "JywNCiAgICAgICAgICAgICAgICAnLm1lc3NhZ2UtcHJldmlldycsDQogICAgICAgICAgICAgICAgJy5tZXNzYWdlLWNvbnRlbnQnLA0KDQogICAgICAgICAgICAgICAgLy8g6YCa55So6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgJ1tjbGFzcyo9Im1lc3NhZ2UiXScsDQogICAgICAgICAgICAgICAgJ1tjbGFzcyo9ImNvbnRlbnQiXScsDQogICAgICAgICAgICAgICAgJy5kLXRleHQ6bGFzdC1jaGlsZCcsDQogICAgICAgICAgICAgICAgJy5kLXRleHQ6bnRoLWNoaWxkKDIpJw0KICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiBzZWxlY3RvcnMpIHsNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlRWxlbWVudCA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IsIGNvbnRhY3RFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2VFbGVtZW50ICYmIG1lc3NhZ2VFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IG1lc3NhZ2VFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOi/h+a7pOaOieaYjuaYvuS4jeaYr+a2iOaBr+WGheWuueeahOaWh+acrA0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNWYWxpZE1lc3NhZ2UobWVzc2FnZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WinuW8uua2iOaBr+WGheWuueaPkOWPluaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3IsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2Uuc3Vic3RyaW5nKDAsIDUwKSArIChtZXNzYWdlLmxlbmd0aCA+IDUwID8gJy4uLicgOiAnJyksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VMZW5ndGg6IG1lc3NhZ2UubGVuZ3RoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2U7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a2iOaBr+mAieaLqeWZqOWksei0pScsIHsgc2VsZWN0b3IsIGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflop7lvLrmtojmga/lhoXlrrnmj5Dlj5blpLHotKXvvIzov5Tlm57nqbrlrZfnrKbkuLInKTsNCiAgICAgICAgICAgIHJldHVybiAnJzsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog55Sf5oiQ6ZmN57qn55So5oi35ZCN5qCH6K+GDQog",
        "ICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gY29udGFjdEVsZW1lbnQg5Lya6K+d5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBnZW5lcmF0ZUZhbGxiYWNrVXNlck5hbWUoY29udGFjdEVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g562W55WlMe+8muS9v+eUqGRhdGEta2V55bGe5oCnDQogICAgICAgICAgICAgICAgaWYgKGNvbnRhY3RFbGVtZW50LmRhdGFzZXQgJiYgY29udGFjdEVsZW1lbnQuZGF0YXNldC5rZXkpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0YUtleSA9IGNvbnRhY3RFbGVtZW50LmRhdGFzZXQua2V5Ow0KICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpxkYXRhLWtleeeci+i1t+adpeWDj+eUqOaIt0lE77yM55Sf5oiQ5LiA5Liq5Y+L5aW955qE5qCH6K+GDQogICAgICAgICAgICAgICAgICAgIGlmIChkYXRhS2V5Lmxlbmd0aCA+IDEwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYOeUqOaIt18ke2RhdGFLZXkuc3Vic3RyaW5nKDAsIDgpfWA7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnrZbnlaUy77ya5LuO5YWD57Sg55qE5omA5pyJ5paH5pys5YaF5a655Lit5o+Q5Y+W5Y+v6IO955qE55So5oi35ZCNDQogICAgICAgICAgICAgICAgY29uc3QgYWxsVGV4dCA9IGNvbnRhY3RFbGVtZW50LnRleHRDb250ZW50IHx8ICcnOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRleHRQYXJ0cyA9IGFsbFRleHQuc3BsaXQoL1tcc1xuXHJcdF0rLykuZmlsdGVyKHBhcnQgPT4gcGFydC50cmltKCkpOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBwYXJ0IG9mIHRleHRQYXJ0cykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0cmltbWVkID0gcGFydC50cmltKCk7DQogICAgICAgICAgICAgICAgICAgIGlmICh0cmltbWVkLmxlbmd0aCA+PSAyICYmIHRyaW1tZWQubGVuZ3RoIDw9IDIwICYmIHRoaXMuaXNWYWxpZFVzZXJOYW1lKHRyaW1tZWQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S7juaWh+acrOWGheWuueS4reaPkOWPluWIsOeUqOaIt+WQjScsIHsgbmFtZTogdHJpbW1lZCB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cmltbWVkOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g562W55WlM++8muS9v+eUqOaXtumXtOaIs+eUn+aIkOWUr+S4gOagh+ivhg0KICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IERhdGUubm93KCkudG9TdHJpbmcoKS5zbGljZSgtNik7DQogICAgICAgICAgICAgICAgcmV0dXJuIGDnlKjmiLdfJHt0aW1lc3RhbXB9YDsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mZjee6p+eU",
        "qOaIt+WQjeeUn+aIkOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuICfmnKrnn6XnlKjmiLcnOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpqozor4HmmK/lkKbkuLrmnInmlYjnmoTnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG5hbWUg55So5oi35ZCNDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgaXNWYWxpZFVzZXJOYW1lKG5hbWUpIHsNCiAgICAgICAgICAgIGlmICghbmFtZSB8fCBuYW1lLmxlbmd0aCA8IDEgfHwgbmFtZS5sZW5ndGggPiA1MCkgew0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g6L+H5ruk5o6J5piO5pi+5LiN5piv55So5oi35ZCN55qE5YaF5a65DQogICAgICAgICAgICBjb25zdCBpbnZhbGlkUGF0dGVybnMgPSBbDQogICAgICAgICAgICAgICAgL15cZCskLywgLy8g57qv5pWw5a2XDQogICAgICAgICAgICAgICAgL15bXHNcblxyXHRdKyQvLCAvLyDnuq/nqbrnmb3lrZfnrKYNCiAgICAgICAgICAgICAgICAvXlteXHU0ZTAwLVx1OWZhNWEtekEtWjAtOV0rJC8sIC8vIOS4jeWMheWQq+S4reaWh+OAgeiLseaWh+OAgeaVsOWtl+eahOWtl+espuS4sg0KICAgICAgICAgICAgICAgIC9eKOaXtumXtHzmtojmga985YaF5a65fOagh+mimHzpk77mjqV85Zu+54mHfOinhumikXzpn7PpopEpJC9pLCAvLyDmmI7mmL7nmoRVSeaWh+acrA0KICAgICAgICAgICAgICAgIC9eKOaYqOWkqXzku4rlpKl85Yia5YiafFxkKzpcZCspJC9pIC8vIOaXtumXtOebuOWFs+aWh+acrA0KICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgcmV0dXJuICFpbnZhbGlkUGF0dGVybnMuc29tZShwYXR0ZXJuID0+IHBhdHRlcm4udGVzdChuYW1lKSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmqjOivgeaYr+WQpuS4uuacieaViOeahOa2iOaBr+WGheWuuQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSDmtojmga/lhoXlrrkNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBpc1ZhbGlkTWVzc2FnZShtZXNzYWdlKSB7DQogICAgICAgICAgICBpZiAoIW1lc3NhZ2UgfHwgbWVzc2FnZS5sZW5ndGggPiA1MDApIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOi/h+a7pOaOieaYjuaYvuS4jeaYr+a2iOaBr+WGheWuueeahOaWh+acrA0KICAgICAgICAgICAgY29uc3QgaW52YWxpZFBhdHRlcm5zID0gWw0KICAgICAgICAgICAgICAgIC9eW1xzXG5cclx0XSskLywgLy8g57qv56m655m95a2X56ymDQogICAgICAgICAgICAgICAgL14o55So5oi35ZCNfOaYteensHzlpLTlg4985Zyo57q/fOemu+e6vykkL2ksIC8vIFVJ55u45YWz5paH5pys",
        "DQogICAgICAgICAgICAgICAgL14oXGQrOlxkK3xcZCvliIbpkp/liY185Yia5YiafOaYqOWkqXzku4rlpKkpJC9pIC8vIOe6r+aXtumXtOaWh+acrA0KICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgcmV0dXJuICFpbnZhbGlkUGF0dGVybnMuc29tZShwYXR0ZXJuID0+IHBhdHRlcm4udGVzdChtZXNzYWdlKSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOagh+WHhuWMluaXtumXtOaIs++8jOWkhOeQhuebuOWvueaXtumXtA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGltZVRleHQg5pe26Ze05paH5pysDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBub3JtYWxpemVUaW1lc3RhbXAodGltZVRleHQpIHsNCiAgICAgICAgICAgIC8vIOWvueS6juebuOWvueaXtumXtO+8jOi9rOaNouS4uueos+WumueahOagh+ivhuespuiAjOmdnue7neWvueaXtumXtA0KICAgICAgICAgICAgaWYgKHRpbWVUZXh0LmluY2x1ZGVzKCfliIbpkp/liY0nKSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IG1pbnV0ZXMgPSBwYXJzZUludCh0aW1lVGV4dCkgfHwgMDsNCiAgICAgICAgICAgICAgICAvLyDlsIbliIbpkp/mlbDlvZLnsbvliLDml7bpl7TmrrXvvIzlh4/lsJHml7bpl7TmiLPlj5jljJYNCiAgICAgICAgICAgICAgICBjb25zdCB0aW1lU2xvdCA9IE1hdGguZmxvb3IobWludXRlcyAvIDUpICogNTsgLy8gNeWIhumSn+S4uuS4gOS4quaXtumXtOautQ0KICAgICAgICAgICAgICAgIHJldHVybiBgJHt0aW1lU2xvdH1taW5fYWdvYDsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAodGltZVRleHQuaW5jbHVkZXMoJ+Wwj+aXtuWJjScpKSB7DQogICAgICAgICAgICAgICAgY29uc3QgaG91cnMgPSBwYXJzZUludCh0aW1lVGV4dCkgfHwgMDsNCiAgICAgICAgICAgICAgICByZXR1cm4gYCR7aG91cnN9aG91cl9hZ29gOw0KICAgICAgICAgICAgfSBlbHNlIGlmICh0aW1lVGV4dC5pbmNsdWRlcygn5aSp5YmNJykgfHwgdGltZVRleHQuaW5jbHVkZXMoJ+aYqOWkqScpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRpbWVUZXh0OyAvLyDlpKnnuqfliKvnmoTml7bpl7Tnm7jlr7nnqLPlrpoNCiAgICAgICAgICAgIH0gZWxzZSBpZiAodGltZVRleHQubWF0Y2goL1xkezJ9OlxkezJ9LykpIHsNCiAgICAgICAgICAgICAgICAvLyDku4rlpKnnmoTlhbfkvZPml7bpl7TvvIzkv53mjIHljp/moLcNCiAgICAgICAgICAgICAgICByZXR1cm4gdGltZVRleHQ7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIC8vIOWFtuS7luagvOW8j++8jOS/neaMgeWOn+agtw0KICAgICAgICAgICAgICAgIHJldHVybiB0aW1lVGV4dDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog55Sf5oiQ5Z+65LqO5YaF5a6555qE56iz5a6a5pe26Ze05oizDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0N",
        "CiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VDb250ZW50IOa2iOaBr+WGheWuuQ0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2VuZXJhdGVTdGFibGVUaW1lc3RhbXAodXNlck5hbWUsIG1lc3NhZ2VDb250ZW50KSB7DQogICAgICAgICAgICBjb25zdCBjb250ZW50ID0gYCR7dXNlck5hbWV9XyR7bWVzc2FnZUNvbnRlbnR9YDsNCiAgICAgICAgICAgIHJldHVybiBNZXNzYWdlRGVkdXBsaWNhdG9yLmdlbmVyYXRlQ29udGVudEhhc2goY29udGVudCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOeCueWHu+S8muivnemhuSAtIOWinuW8uueJiO+8jOaUr+aMgeiZmuaLn+a7muWKqA0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRhY3RFbGVtZW50IOS8muivneWFg+e0oA0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyDpgInpobkNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBjbGlja0NvbnRhY3RJdGVtKGNvbnRhY3RFbGVtZW50LCBvcHRpb25zID0ge30pIHsNCiAgICAgICAgICAgIGNvbnN0IHVzZXJOYW1lID0gUGFnZUVsZW1lbnRNYW5hZ2VyLmV4dHJhY3RVc2VyTmFtZShjb250YWN0RWxlbWVudCkgfHwgJ+acquefpeeUqOaItyc7DQogICAgICAgICAgICBjb25zdCBza2lwQWN0aXZhdGlvbiA9IG9wdGlvbnMuc2tpcEFjdGl2YXRpb24gfHwgZmFsc2U7DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5YeG5aSH54K55Ye75Lya6K+d6aG5JywgeyB1c2VyTmFtZSwgc2tpcEFjdGl2YXRpb24gfSk7DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8gMS4g5p2h5Lu25oCn5YWD57Sg5r+A5rS777yI6YG/5YWN6YeN5aSN5r+A5rS777yJDQogICAgICAgICAgICAgICAgaWYgKCFza2lwQWN0aXZhdGlvbikgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1Zpc2libGUgPSBFbGVtZW50TWFuYWdlci5pc0VsZW1lbnRWaXNpYmxlKGNvbnRhY3RFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1Zpc2libGUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5Lya6K+d6aG55LiN5Y+v6KeB77yM5bCd6K+V5r+A5rS7Jyk7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhY3RpdmF0ZWQgPSBhd2FpdCBFbGVtZW50TWFuYWdlci5maW5kQW5kQWN0aXZhdGVFbGVtZW50KGNvbnRhY3RFbGVtZW50LCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2FpdEZvclN0YWJpbGl0eTogZmFsc2UgLy8g6Lez6L+H56iz5a6a5oCn562J5b6FDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghYWN0aXZhdGVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKGDml6Dms5Xmv4DmtLvmiJbmu5rliqjliLDkvJro",
        "r53pobk6ICR7dXNlck5hbWV9YCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfkvJror53pobnlt7Llj6/op4HvvIzot7Pov4fmv4DmtLsnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6Lez6L+H5YWD57Sg5r+A5rS75qOA5p+lJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g562J5b6F5rua5Yqo5pWI5p6c56iz5a6aDQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoQ09ORklHLkRFTEFZUy5jbGlja0RlbGF5IC8gMik7DQoNCiAgICAgICAgICAgICAgICAvLyAyLiDmqKHmi5/ngrnlh7sNCiAgICAgICAgICAgICAgICBjb25zdCBjbGlja2VkID0gVXRpbHMuc2ltdWxhdGVDbGljayhjb250YWN0RWxlbWVudCk7DQogICAgICAgICAgICAgICAgaWYgKCFjbGlja2VkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcihg5qih5ouf54K55Ye75aSx6LSlOiAke3VzZXJOYW1lfWApOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oYOaIkOWKn+eCueWHu+S8muivnemhuTogJHt1c2VyTmFtZX1gKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoYOeCueWHu+S8muivnemhueaXtuWPkeeUn+acquefpemUmeivrzogJHt1c2VyTmFtZX1gLCB7DQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICBzdGFjazogZXJyb3Iuc3RhY2sNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaPkOWPluacgOaWsOa2iOaBr+WGheWuuSAtIOW3suabtOaWsOS7pemAgumFjeiZmuaLn+a7muWKqOe7k+aehO+8jOWfuuS6juaXtumXtOaIs+aOkuW6jw0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBleHRyYWN0TGF0ZXN0TWVzc2FnZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflvIDlp4vmj5Dlj5bmnIDmlrDmtojmga8uLi4nKTsNCg0KICAgICAgICAgICAgICAgIC8vIOetieW+heWvueivneeql+WPo+WKoOi9vSAtIOS9v+eUqOaWsOeahOmAieaLqeWZqA0KICAgICAgICAgICAgICAgIGNvbnN0IGNoYXRXaW5kb3cgPSBQYWdlRWxlbWVudE1hbmFnZXIuZ2V0",
        "RWxlbWVudFdpdGhTbWFydEZhbGxiYWNrKCdjaGF0V2luZG93Jyk7DQogICAgICAgICAgICAgICAgaWYgKCFjaGF0V2luZG93KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5a+56K+d56qX5Y+j5pyq5om+5YiwJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5om+5Yiw5a+56K+d56qX5Y+jJywgew0KICAgICAgICAgICAgICAgICAgICBpZDogY2hhdFdpbmRvdy5pZCwNCiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBjaGF0V2luZG93LmNsYXNzTmFtZQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5p+l5om+6Jma5ouf5rua5Yqo5a655ZmoDQogICAgICAgICAgICAgICAgY29uc3Qgc2Nyb2xsQ29udGFpbmVyID0gUGFnZUVsZW1lbnRNYW5hZ2VyLmdldEVsZW1lbnRXaXRoU21hcnRGYWxsYmFjaygnY2hhdENvbnRhaW5lcicsIGNoYXRXaW5kb3cpOw0KICAgICAgICAgICAgICAgIGlmICghc2Nyb2xsQ29udGFpbmVyKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6Jma5ouf5rua5Yqo5a655Zmo5pyq5om+5YiwJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOetieW+hea2iOaBr+WKoOi9vQ0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDEwMDApOw0KDQogICAgICAgICAgICAgICAgLy8g5p+l5om+5omA5pyJ5Y+v6KeB55qE5raI5oGv6aG5IC0g6YCC6YWN6Jma5ouf5rua5YqoDQogICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZVZpZXdzID0gVXRpbHMucXVlcnlTZWxlY3RvckFsbCgnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcnLCBzY3JvbGxDb250YWluZXIpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJNZXNzYWdlcyA9IFtdOw0KDQogICAgICAgICAgICAgICAgLy8g5pS26ZuG5omA5pyJ55So5oi35raI5oGv5bm25o+Q5Y+W5pe26Ze05oizDQogICAgICAgICAgICAgICAgbWVzc2FnZVZpZXdzLmZvckVhY2goKHZpZXcsIHZpZXdJbmRleCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm0gPSB2aWV3LnN0eWxlLnRyYW5zZm9ybTsNCiAgICAgICAgICAgICAgICAgICAgLy8g6Lez6L+H6KKr56e75Ye66KeG56qX55qE5YWD57Sg77yIdHJhbnNsYXRlWSgtOTk5OXB4Ke+8iQ0KICAgICAgICAgICAgICAgICAgICBpZiAoIXRyYW5zZm9ybS5pbmNsdWRlcygnLTk5OTlweCcpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlSXRlbSA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5pbS1tc2ctaXRlbScsIHZpZXcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2VJdGVtKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5raI5oGv",
        "55qE5biD5bGA5pa55ZCR5p2l5Yik5pat5piv5ZCm5piv55So5oi35Y+R6YCB55qE5raI5oGvDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmxleENvbnRhaW5lciA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJ2RpdltzdHlsZSo9ImRpc3BsYXk6IGZsZXgiXScsIG1lc3NhZ2VJdGVtKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmxleENvbnRhaW5lcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBqdXN0aWZ5Q29udGVudCA9IGZsZXhDb250YWluZXIuc3R5bGUuanVzdGlmeUNvbnRlbnQ7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzVXNlck1lc3NhZ2UgPSBqdXN0aWZ5Q29udGVudCA9PT0gJ2ZsZXgtc3RhcnQnOyAvLyDlt6blr7npvZDnmoTmmK/nlKjmiLfmtojmga8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNBSVJlcGx5ID0ganVzdGlmeUNvbnRlbnQgPT09ICdmbGV4LWVuZCc7IC8vIOWPs+Wvuem9kOeahOaYr0FJ5Zue5aSNDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzU3lzdGVtTWVzc2FnZSA9IGp1c3RpZnlDb250ZW50ID09PSAnY2VudGVyJzsgLy8g5bGF5Lit55qE5piv57O757uf5raI5oGvDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmtojmga/mlrnlkJHmo4DmtYsnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzVXNlck1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0FJUmVwbHksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1N5c3RlbU1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3SW5kZXg6IHZpZXdJbmRleA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlj6rlpITnkIbnlKjmiLfmtojmga/vvIzmjpLpmaRBSeWbnuWkjeWSjOezu+e7n+a2iOaBrw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNVc2VyTWVzc2FnZSAmJiAhaXNBSVJlcGx5ICYmICFpc1N5c3RlbU1lc3NhZ2UpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOaPkOWPluaXtumXtOaIsw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGltZUVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCdzcGFuW3N0eWxlKj0iY29sb3I6IHZhcigtLVRleHQtcGxhY2Vob2xkZXIiXScsIG1lc3NhZ2VJdGVtKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0aW1lc3RhbXAgPSBudWxsOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
        "bGV0IHRpbWVUZXh0ID0gJyc7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aW1lRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVUZXh0ID0gdGltZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOino+aekOaXtumXtOaIs++8jOagvOW8j+Wmgu+8miLmmJ/lsI/kuLsgMjAyNS0wNy0xMSAyMjoxMjo0NyINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0aW1lTWF0Y2ggPSB0aW1lVGV4dC5tYXRjaCgvKFxkezR9LVxkezJ9LVxkezJ9IFxkezJ9OlxkezJ9OlxkezJ9KS8pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aW1lTWF0Y2gpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wID0gbmV3IERhdGUodGltZU1hdGNoWzFdKS5nZXRUaW1lKCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDkvb/nlKjnu5/kuIDnmoTmtojmga/lhoXlrrnmj5Dlj5YNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2VUeXBlID0gdGhpcy5kZXRlY3RNZXNzYWdlVHlwZShtZXNzYWdlSXRlbSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5leHRyYWN0VW5pZmllZENvbnRlbnQobWVzc2FnZUl0ZW0sIG1lc3NhZ2VUeXBlKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRlbnQgJiYgY29udGVudC5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck1lc3NhZ2VzLnB1c2goew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBjb250ZW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IHRpbWVzdGFtcCB8fCAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lVGV4dDogdGltZVRleHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VUeXBlOiBtZXNzYWdlVHlwZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0luZGV4OiB2aWV3SW5kZXgsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6IG1lc3NhZ2VJdGVtDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aJvuWIsOeUqOaIt+a2iOaBrycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogY29udGVudC5zdWJzdHJpbmcoMCwgNTApICsgKGNvbnRlbnQubGVuZ3RoID4gNTAgPyAnLi4uJyA6ICcnKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZVR5cGU6IG1lc3NhZ2VUeXBlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lVGV4dDogdGltZVRleHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogdGltZXN0YW1wLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3SW5kZXg6IHZpZXdJbmRleA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a2iOaBr+WGheWuueaPkOWPluWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZVR5cGU6IG1lc3NhZ2VUeXBlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3SW5kZXg6IHZpZXdJbmRleCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZVRleHQ6IHRpbWVUZXh0DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5om+5Yiw55So5oi35raI5oGv5oC75pWwJywgeyBjb3VudDogdXNlck1lc3NhZ2VzLmxlbmd0aCB9KTsNCg0KICAgICAgICAgICAgICAgIGlmICh1c2VyTWVzc2FnZXMubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmnKrmib7liLDku7vkvZXnlKjmiLfmtojmga8nKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5oyJ5pe26Ze05oiz5o6S5bqP77yM5om+5Yiw5pyA5paw55qE5raI5oGvDQogICAgICAgICAgICAgICAgdXNlck1lc3NhZ2VzLnNvcnQoKGEsIGIpID0+IGIudGltZXN0YW1wIC0gYS50aW1lc3RhbXApOw0KICAgICAgICAgICAgICAgIGNvbnN0IGxhdGVzdE1lc3NhZ2UgPSB1c2VyTWVzc2FnZXNbMF07DQoN",
        "CiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5oiQ5Yqf5o+Q5Y+W5pyA5paw55So5oi35raI5oGvJywgew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBsYXRlc3RNZXNzYWdlLmNvbnRlbnQuc3Vic3RyaW5nKDAsIDEwMCkgKyAobGF0ZXN0TWVzc2FnZS5jb250ZW50Lmxlbmd0aCA+IDEwMCA/ICcuLi4nIDogJycpLA0KICAgICAgICAgICAgICAgICAgICB0aW1lVGV4dDogbGF0ZXN0TWVzc2FnZS50aW1lVGV4dCwNCiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBsYXRlc3RNZXNzYWdlLnRpbWVzdGFtcCwNCiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IGxhdGVzdE1lc3NhZ2Uuc2VsZWN0b3IsDQogICAgICAgICAgICAgICAgICAgIHZpZXdJbmRleDogbGF0ZXN0TWVzc2FnZS52aWV3SW5kZXgNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBsYXRlc3RNZXNzYWdlLmNvbnRlbnQ7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmj5Dlj5bmnIDmlrDmtojmga/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlLCBzdGFjazogZXJyb3Iuc3RhY2sgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOa1i+a2iOaBr+exu+Weiw0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IG1lc3NhZ2VFbGVtZW50IOa2iOaBr+WFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSDmtojmga/nsbvlnovvvJonVEVYVCcsICdDQVJEJywgJ0VNT0pJJywgJ1NQT1RMSUdIVF9MRUFEJywgJ1VOS05PV04nDQogICAgICAgICAqLw0KICAgICAgICBkZXRlY3RNZXNzYWdlVHlwZShtZXNzYWdlRWxlbWVudCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDkvJjlhYjmo4DmtYvogZrlhYnov5vnur/mtojmga8NCiAgICAgICAgICAgICAgICBpZiAoU3BvdGxpZ2h0TGVhZFByb2Nlc3Nvci5pc1Nwb3RsaWdodExlYWQobWVzc2FnZUVsZW1lbnQpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5qOA5rWL5Yiw6IGa5YWJ6L+b57q/5raI5oGvJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBDT05GSUcuTUVTU0FHRV9UWVBFUy5TUE9UTElHSFRfTEVBRDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmn6Xmib7mtojmga/lrrnlmagNCiAgICAgICAgICAgICAgICBjb25zdCBtc2dDb250YWluZXIgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCdbZGF0YS1tc2ctdHlwZV0nLCBtZXNzYWdlRWxlbWVudCk7DQogICAgICAgICAgICAgICAgaWYgKCFtc2dDb250YWluZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmnKrmib7liLBkYXRhLW1zZy10eXBl5bGe5oCnJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVy",
        "biBDT05GSUcuTUVTU0FHRV9UWVBFUy5VTktOT1dOOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IG1zZ1R5cGUgPSBtc2dDb250YWluZXIuZ2V0QXR0cmlidXRlKCdkYXRhLW1zZy10eXBlJyk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmo4DmtYvliLDmtojmga/nsbvlnosnLCB7IG1zZ1R5cGUgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDlpoLmnpzmmK9URVhU57G75Z6L77yM6L+b5LiA5q2l5qOA5p+l5piv5ZCm5YyF5ZCr6KGo5oOF5YyFDQogICAgICAgICAgICAgICAgaWYgKG1zZ1R5cGUgPT09ICdURVhUJykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlbW9qaUltZyA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy54aHMtZW1vamknLCBtc2dDb250YWluZXIpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoZW1vamlJbWcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5qOA5rWL5Yiw6KGo5oOF5YyF5raI5oGvJyk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gQ09ORklHLk1FU1NBR0VfVFlQRVMuRU1PSkk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIENPTkZJRy5NRVNTQUdFX1RZUEVTLlRFWFQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6L+U5Zue5a+55bqU55qE5raI5oGv57G75Z6L5bi46YePDQogICAgICAgICAgICAgICAgc3dpdGNoIChtc2dUeXBlKSB7DQogICAgICAgICAgICAgICAgICAgIGNhc2UgJ0NBUkQnOg0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIENPTkZJRy5NRVNTQUdFX1RZUEVTLkNBUkQ7DQogICAgICAgICAgICAgICAgICAgIGNhc2UgJ1RFWFQnOg0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIENPTkZJRy5NRVNTQUdFX1RZUEVTLlRFWFQ7DQogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbXNnVHlwZSB8fCBDT05GSUcuTUVTU0FHRV9UWVBFUy5VTktOT1dOOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmtojmga/nsbvlnovmo4DmtYvlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBDT05GSUcuTUVTU0FHRV9UWVBFUy5VTktOT1dOOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnu5/kuIDnmoTmtojmga/lhoXlrrnmj5Dlj5YNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBtZXNzYWdlRWxlbWVudCDmtojmga/lhYPntKANCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VUeXBlIOa2iOaBr+exu+Weiw0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9IOaPkOWPlueahOWGheWuuQ0KICAgICAgICAgKi8NCiAg",
        "ICAgICAgZXh0cmFjdFVuaWZpZWRDb250ZW50KG1lc3NhZ2VFbGVtZW50LCBtZXNzYWdlVHlwZSkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBzd2l0Y2ggKG1lc3NhZ2VUeXBlKSB7DQogICAgICAgICAgICAgICAgICAgIGNhc2UgQ09ORklHLk1FU1NBR0VfVFlQRVMuU1BPVExJR0hUX0xFQUQ6DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5leHRyYWN0U3BvdGxpZ2h0TGVhZENvbnRlbnQobWVzc2FnZUVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICBjYXNlIENPTkZJRy5NRVNTQUdFX1RZUEVTLkVNT0pJOg0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZXh0cmFjdEVtb2ppQ29udGVudChtZXNzYWdlRWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgIGNhc2UgQ09ORklHLk1FU1NBR0VfVFlQRVMuQ0FSRDoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmV4dHJhY3RDYXJkQ29udGVudChtZXNzYWdlRWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgIGNhc2UgQ09ORklHLk1FU1NBR0VfVFlQRVMuVEVYVDoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmV4dHJhY3RUZXh0Q29udGVudChtZXNzYWdlRWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgIC8vIOWFvOWuueaXp+eJiOacrOWtl+espuS4suW4uOmHjw0KICAgICAgICAgICAgICAgICAgICBjYXNlICdFTU9KSSc6DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5leHRyYWN0RW1vamlDb250ZW50KG1lc3NhZ2VFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgY2FzZSAnQ0FSRCc6DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5leHRyYWN0Q2FyZENvbnRlbnQobWVzc2FnZUVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICBjYXNlICdURVhUJzoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmV4dHJhY3RUZXh0Q29udGVudChtZXNzYWdlRWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlm57pgIDliLDljp/mnInpgLvovpENCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmV4dHJhY3RUZXh0Q29udGVudChtZXNzYWdlRWxlbWVudCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+e7n+S4gOWGheWuueaPkOWPluWksei0pScsIHsgbWVzc2FnZVR5cGUsIGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmj5Dlj5bogZrlhYnov5vnur/lhoXlrrkNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBtZXNzYWdlRWxlbWVudCDmtojmga/lhYPntKANCiAgICAgICAgICog",
        "QHJldHVybnMge3N0cmluZ3xudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdFNwb3RsaWdodExlYWRDb250ZW50KG1lc3NhZ2VFbGVtZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGxlYWRDb250ZW50ID0gU3BvdGxpZ2h0TGVhZFByb2Nlc3Nvci5leHRyYWN0U3BvdGxpZ2h0TGVhZENvbnRlbnQobWVzc2FnZUVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmIChsZWFkQ29udGVudCkgew0KICAgICAgICAgICAgICAgICAgICAvLyDov5Tlm57moLzlvI/ljJbnmoTlhoXlrrnnlKjkuo7mmL7npLrlkozlpITnkIYNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGBb6IGa5YWJ6L+b57q/XSAke2xlYWRDb250ZW50LmZ1bGxUZXh0fWA7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+iBmuWFiei/m+e6v+WGheWuueaPkOWPluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaPkOWPluihqOaDheWMheWGheWuuQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IG1lc3NhZ2VFbGVtZW50IOa2iOaBr+WFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0RW1vamlDb250ZW50KG1lc3NhZ2VFbGVtZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGVtb2ppSW1nID0gVXRpbHMucXVlcnlTZWxlY3RvcignLnhocy1lbW9qaScsIG1lc3NhZ2VFbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAoZW1vamlJbWcgJiYgZW1vamlJbWcuYWx0KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGVtb2ppVGV4dCA9IGVtb2ppSW1nLmFsdC50cmltKCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5o+Q5Y+W6KGo5oOF5YyF5YaF5a65JywgeyBlbW9qaVRleHQgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBlbW9qaVRleHQ7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+ihqOaDheWMheWGheWuueaPkOWPluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaPkOWPlueslOiusOWNoeeJh+WGheWuuQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IG1lc3NhZ2VFbGVtZW50IOa2iOaBr+WFg+e0oA0KICAgICAgICAgKiBAcmV0dXJu",
        "cyB7c3RyaW5nfG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0Q2FyZENvbnRlbnQobWVzc2FnZUVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgY2FyZENvbnRhaW5lciA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX2NvbnRhaW5lcicsIG1lc3NhZ2VFbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAoIWNhcmRDb250YWluZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmnKrmib7liLDljaHniYflrrnlmagnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5o+Q5Y+W5qCH6aKYDQogICAgICAgICAgICAgICAgY29uc3QgdGl0bGVFbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcignLmNhcmRfYm90dG9tX3RpdGxlJywgY2FyZENvbnRhaW5lcik7DQogICAgICAgICAgICAgICAgY29uc3QgdGl0bGUgPSB0aXRsZUVsZW1lbnQgPyB0aXRsZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpIDogJyc7DQoNCiAgICAgICAgICAgICAgICAvLyDmj5Dlj5bkvZzogIUNCiAgICAgICAgICAgICAgICBjb25zdCBhdXRob3JFbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcignLmNhcmRfYm90dG9tX2luZm9fbmFtZScsIGNhcmRDb250YWluZXIpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGF1dGhvciA9IGF1dGhvckVsZW1lbnQgPyBhdXRob3JFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSA6ICcnOw0KDQogICAgICAgICAgICAgICAgaWYgKHRpdGxlKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhcmRDb250ZW50ID0gYXV0aG9yID8gYFvnrJTorrBdICR7dGl0bGV9IC0gJHthdXRob3J9YCA6IGBb56yU6K6wXSAke3RpdGxlfWA7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5o+Q5Y+W56yU6K6w5Y2h54mH5YaF5a65JywgeyB0aXRsZSwgYXV0aG9yLCBjYXJkQ29udGVudCB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhcmRDb250ZW50Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eslOiusOWNoeeJh+WGheWuueaPkOWPluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaPkOWPluaZrumAmuaWh+acrOWGheWuuQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IG1lc3NhZ2VFbGVtZW50IOa2iOaBr+WFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0VGV4dENvbnRlbnQobWVzc2FnZUVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRy",
        "eSB7DQogICAgICAgICAgICAgICAgY29uc3QgY29udGVudFNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICAgICAgJy50ZXh0LW1lc3NhZ2Ugc3BhbiBzcGFuJywgLy8g5pyA5YW35L2T55qE6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgICAgICcudGV4dC1tZXNzYWdlIHNwYW4nLA0KICAgICAgICAgICAgICAgICAgICAnLnRleHQtbWVzc2FnZScsDQogICAgICAgICAgICAgICAgICAgICcubGVmdCAudGV4dC1tZXNzYWdlJywNCiAgICAgICAgICAgICAgICAgICAgJ3AudGV4dC1tZXNzYWdlIHNwYW4nLA0KICAgICAgICAgICAgICAgICAgICAnLmNvbnRlbnQnDQogICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2VsZWN0b3Igb2YgY29udGVudFNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50RWxlbWVudCA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IsIG1lc3NhZ2VFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRlbnRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gY29udGVudEVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRlbnQgJiYgY29udGVudC5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmj5Dlj5bmlofmnKzlhoXlrrknLCB7IHNlbGVjdG9yLCBjb250ZW50TGVuZ3RoOiBjb250ZW50Lmxlbmd0aCB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29udGVudDsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aWh+acrOWGheWuueaPkOWPluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiHquWKqOiusOW9leeUqOaIt+WIsOi/veeyieezu+e7nw0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gdXNlckluZm8g55So5oi35L+h5oGvDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlQ29udGVudCDmtojmga/lhoXlrrkNCiAgICAgICAgICovDQogICAgICAgIGF1dG9SZWNvcmRVc2VyRm9yRm9sbG93VXAodXNlckluZm8sIG1lc3NhZ2VDb250ZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghRm9sbG93VXBNYW5hZ2VyIHx8ICFGb2xsb3dVcFJlY29yZE1hbmFnZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajmnKrliJ3lp4vljJbvvIzo",
        "t7Pov4foh6rliqjorrDlvZUnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGRlbGF5ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwQXV0b1JlY29yZERlbGF5JywgNSkgKiAxMDAwOw0KDQogICAgICAgICAgICAgICAgLy8g5bu26L+f5omn6KGM77yM6YG/5YWN5b2x5ZON5Li75rWB56iLDQogICAgICAgICAgICAgICAgc2V0VGltZW91dChhc3luYyAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySWQgPSB1c2VySW5mby51c2VySWQgfHwgdXNlckluZm8uY29udmVyc2F0aW9uSWQ7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VyTmFtZSA9IHVzZXJJbmZvLnVzZXJOYW1lIHx8ICfmnKrnn6XnlKjmiLcnOw0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g8J+UpyBCVUfkv67lpI3vvJrku451c2VySWTojrflj5Zjb252ZXJzYXRpb25JZO+8jOWboOS4umV4dHJhY3RVc2VySW5mb+i/lOWbnueahOWvueixoeS4rXVzZXJJZOWwseaYr2NvbnZlcnNhdGlvbklkDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb252ZXJzYXRpb25JZCA9IHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkIHx8IHVzZXJJbmZvLnVzZXJJZDsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5bey5a2Y5Zyo6K6w5b2VDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ1JlY29yZCA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5nZXQodXNlcklkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChleGlzdGluZ1JlY29yZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6Ieq5Yqo6K6w5b2V77ya55So5oi35bey5a2Y5Zyo77yM6Lez6L+HJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBleGlzdGluZ1JlY29yZC5zdGF0dXMNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpem7keWQjeWNlQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKEJsYWNrbGlzdE1hbmFnZXIgJiYgQmxhY2tsaXN0TWFuYWdlci5pc0JsYWNrbGlzdGVkKHVzZXJJZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiHquWKqOiusOW9le+8mueUqOaIt+WcqOm7keWQjeWNleS4re+8jOi3s+i/hycsIHsgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAg",
        "ICAgICAgICAgICAgICAgICAgICAvLyDkvb/nlKhBUEnkvJjlhYjnmoTlvILmraXlv6vpgJ/mo4Dmn6XnlZnlrqLotYTnirbmgIENCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhc0xlYWRzVGFnID0gYXdhaXQgRm9sbG93VXBNYW5hZ2VyLmNoZWNrVXNlckxlYWRzU3RhdHVzRmFzdEFzeW5jKHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGFzTGVhZHNUYWcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiHquWKqOiusOW9le+8mueUqOaIt+W3suacieeVmeWuoui1hOagh+etvu+8jOi3s+i/hycsIHsgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDliJvlu7rmlrDnmoTov73nsonorrDlvZUNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZWNvcmQgPSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0Q29udGFjdDogbm93LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RGb2xsb3dVcDogbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcENvdW50OiAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwSGlzdG9yeTogW10sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAncGVuZGluZycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0b1JlY29yZGVkOiB0cnVlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0TWVzc2FnZTogbWVzc2FnZUNvbnRlbnQuc3Vic3RyaW5nKDAsIDEwMCkgLy8g5L+d5a2Y5YmNMTAw5a2X56ymDQogICAgICAgICAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkQ2FjaGUuc2V0KHVzZXJJZCwgcmVjb3JkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5zeW5jVG9TdG9yYWdlSWZOZWVkZWQoKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiHquWKqOiusOW9le+8muaWsOeUqOaIt+W3sua3u+WKoOWIsOi/veeyieWIl+ihqCcsIHsNCiAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZVByZXZpZXc6IG1lc3NhZ2VDb250ZW50LnN1YnN0cmluZygwLCA1MCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6Ieq5Yqo6K6w5b2V77ya5aSE55CG5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9LCBkZWxheSk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonoh6rliqjorrDlvZXvvJrliJ3lp4vljJblpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlj5HpgIHlm57lpI3mtojmga8NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHJlcGx5VGV4dCDlm57lpI3lhoXlrrkNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzZW5kUmVwbHkocmVwbHlUZXh0KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflvIDlp4vlj5HpgIHlm57lpI0nLCB7DQogICAgICAgICAgICAgICAgICAgIHJlcGx5TGVuZ3RoOiByZXBseVRleHQubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICBwcmV2aWV3OiByZXBseVRleHQuc3Vic3RyaW5nKDAsIDUwKSArICcuLi4nDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmn6Xmib7ovpPlhaXmoYYNCiAgICAgICAgICAgICAgICBjb25zdCBpbnB1dEJveCA9IFBhZ2VFbGVtZW50TWFuYWdlci5nZXRNZXNzYWdlSW5wdXRCb3goKTsNCiAgICAgICAgICAgICAgICBpZiAoIWlucHV0Qm94KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pyq5om+5Yiw5raI5oGv6L6T5YWl5qGGJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDloavlhYXlm57lpI3lhoXlrrkNCiAgICAgICAgICAgICAgICBjb25zdCBmaWxsZWQgPSBVdGlscy5zaW11bGF0ZUlucHV0KGlucHV0Qm94LCByZXBseVRleHQpOw0KICAgICAgICAgICAgICAgIGlmICghZmlsbGVkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dl",
        "ci5lcnJvcign5aGr5YWF6L6T5YWl5qGG5aSx6LSlJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnrYnlvoXkuIDkuIvnoa7kv53lhoXlrrnlt7LloavlhYUNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSg1MDApOw0KDQogICAgICAgICAgICAgICAgLy8g5p+l5om+5Y+R6YCB5oyJ6ZKuDQogICAgICAgICAgICAgICAgY29uc3Qgc2VuZEJ1dHRvbiA9IFBhZ2VFbGVtZW50TWFuYWdlci5nZXRTZW5kQnV0dG9uKCk7DQogICAgICAgICAgICAgICAgaWYgKCFzZW5kQnV0dG9uKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pyq5om+5Yiw5Y+R6YCB5oyJ6ZKuJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6Xlj5HpgIHmjInpkq7mmK/lkKblj6/nlKgNCiAgICAgICAgICAgICAgICBpZiAoc2VuZEJ1dHRvbi5kaXNhYmxlZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5Y+R6YCB5oyJ6ZKu6KKr56aB55SoJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDngrnlh7vlj5HpgIHmjInpkq4NCiAgICAgICAgICAgICAgICBjb25zdCBjbGlja2VkID0gVXRpbHMuc2ltdWxhdGVDbGljayhzZW5kQnV0dG9uKTsNCiAgICAgICAgICAgICAgICBpZiAoIWNsaWNrZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfngrnlh7vlj5HpgIHmjInpkq7lpLHotKUnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOetieW+heWPkemAgeWujOaIkA0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDEwMDApOw0KDQogICAgICAgICAgICAgICAgLy8g6aqM6K+B5Y+R6YCB5piv5ZCm5oiQ5Yqf77yI5qOA5p+l6L6T5YWl5qGG5piv5ZCm5bey5riF56m677yJDQogICAgICAgICAgICAgICAgaWYgKCFpbnB1dEJveC52YWx1ZSB8fCBpbnB1dEJveC52YWx1ZS50cmltKCkgPT09ICcnKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflm57lpI3lj5HpgIHmiJDlip8nKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+WbnuWkjeWPr+iDveWPkemAgeWksei0pe+8jOi+k+WFpeahhuacqua4heepuicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Y+R6YCB5Zue5aSN5pe25Y+R55Sf6ZSZ6K+vJywg",
        "eyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa3u+WKoOWIsOWkhOeQhumYn+WIl++8iOaZuuiDveWOu+mHjeeJiOacrO+8iQ0KICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBlbGVtZW50cyDlhYPntKDliJfooagNCiAgICAgICAgICovDQogICAgICAgIGFkZFRvUXVldWUoZWxlbWVudHMpIHsNCiAgICAgICAgICAgIGxldCBhZGRlZENvdW50ID0gMDsNCiAgICAgICAgICAgIGxldCBkdXBsaWNhdGVDb3VudCA9IDA7DQogICAgICAgICAgICBsZXQgcmVwbGFjZWRDb3VudCA9IDA7DQoNCiAgICAgICAgICAgIGVsZW1lbnRzLmZvckVhY2goZWxlbWVudCA9PiB7DQogICAgICAgICAgICAgICAgLy8g5o+Q5Y+W6IGU57O75Lq65qCH6K+GDQogICAgICAgICAgICAgICAgY29uc3QgY29udGFjdElkID0gdGhpcy5leHRyYWN0Q29udGFjdElkKGVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmICghY29udGFjdElkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfml6Dms5Xmj5Dlj5bogZTns7vkurpJRO+8jOi3s+i/h+ivpea2iOaBrycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5bey5a2Y5Zyo6K+l6IGU57O75Lq655qE5raI5oGvDQogICAgICAgICAgICAgICAgaWYgKHRoaXMucHJvY2Vzc2luZ1F1ZXVlLmhhcyhjb250YWN0SWQpKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOabtOaWsOS4uuacgOaWsOa2iOaBr++8iOmBv+WFjemHjeWkjeWkhOeQhu+8iQ0KICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zZXQoY29udGFjdElkLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50OiBlbGVtZW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgYWRkZWRBdDogRGF0ZS5ub3coKSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhY3RJZDogY29udGFjdElkDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXBsYWNlZENvdW50Kys7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5pu05paw6Zif5YiX5Lit55qE6IGU57O75Lq65raI5oGvJywgeyBjb250YWN0SWQgfSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zaXplIDwgdGhpcy5tYXhRdWV1ZVNpemUpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5re75Yqg5paw5raI5oGvDQogICAgICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc2luZ1F1ZXVlLnNldChjb250YWN0SWQsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6IGVsZW1lbnQsDQogICAgICAgICAgICAgICAgICAgICAgICBhZGRlZEF0OiBEYXRlLm5vdygpLA0KICAgICAgICAgICAgICAgICAgICAg",
        "ICAgY29udGFjdElkOiBjb250YWN0SWQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIGFkZGVkQ291bnQrKzsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAvLyDpmJ/liJflt7Lmu6HvvIzmm7/mjaLmnIDml6fnmoTmtojmga8NCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb2xkZXN0RW50cnkgPSB0aGlzLmZpbmRPbGRlc3RRdWV1ZUVudHJ5KCk7DQogICAgICAgICAgICAgICAgICAgIGlmIChvbGRlc3RFbnRyeSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzaW5nUXVldWUuZGVsZXRlKG9sZGVzdEVudHJ5LmNvbnRhY3RJZCk7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zZXQoY29udGFjdElkLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogZWxlbWVudCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRlZEF0OiBEYXRlLm5vdygpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRhY3RJZDogY29udGFjdElkDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlcGxhY2VkQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfpmJ/liJflt7Lmu6HvvIzmm7/mjaLmnIDml6fmtojmga8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgb2xkQ29udGFjdElkOiBvbGRlc3RFbnRyeS5jb250YWN0SWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q29udGFjdElkOiBjb250YWN0SWQNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOiusOW9lemYn+WIl+eKtuaAgQ0KICAgICAgICAgICAgY29uc3QgcXVldWVVc2FnZSA9ICh0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zaXplIC8gdGhpcy5tYXhRdWV1ZVNpemUgKiAxMDApLnRvRml4ZWQoMSk7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn6Zif5YiX5pu05paw5a6M5oiQJywgew0KICAgICAgICAgICAgICAgIGFkZGVkOiBhZGRlZENvdW50LA0KICAgICAgICAgICAgICAgIHJlcGxhY2VkOiByZXBsYWNlZENvdW50LA0KICAgICAgICAgICAgICAgIGR1cGxpY2F0ZXM6IGR1cGxpY2F0ZUNvdW50LA0KICAgICAgICAgICAgICAgIHF1ZXVlU2l6ZTogdGhpcy5wcm9jZXNzaW5nUXVldWUuc2l6ZSwNCiAgICAgICAgICAgICAgICBxdWV1ZVVzYWdlOiBgJHtxdWV1ZVVzYWdlfSVgDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g6Zif5YiX5L2/55So546H6K2m5ZGKDQogICAgICAgICAgICBpZiAodGhpcy5wcm9jZXNzaW5nUXVldWUuc2l6ZSA+PSB0aGlzLnF1ZXVlV2FybmluZ1RocmVzaG9sZCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfpmJ/liJfk",
        "vb/nlKjnjofovoPpq5gnLCB7DQogICAgICAgICAgICAgICAgICAgIHVzYWdlOiBgJHtxdWV1ZVVzYWdlfSVgLA0KICAgICAgICAgICAgICAgICAgICB0aHJlc2hvbGQ6IGAkeyh0aGlzLnF1ZXVlV2FybmluZ1RocmVzaG9sZCAvIHRoaXMubWF4UXVldWVTaXplICogMTAwKS50b0ZpeGVkKDEpfSVgDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaPkOWPluiBlOezu+S6uklEDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDogZTns7vkurrlhYPntKANCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ3xudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdENvbnRhY3RJZChlbGVtZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOWwneivleWkmuenjeaWueW8j+aPkOWPluiBlOezu+S6uuWUr+S4gOagh+ivhg0KICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJOYW1lID0gUGFnZUVsZW1lbnRNYW5hZ2VyLmV4dHJhY3RVc2VyTmFtZShlbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAodXNlck5hbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGB1c2VyXyR7dXNlck5hbWV9YDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlpIfnlKjmlrnmoYjvvJrkvb/nlKjlhYPntKDnmoRkYXRh5bGe5oCn5oiW5YW25LuW5ZSv5LiA5qCH6K+GDQogICAgICAgICAgICAgICAgY29uc3QgZGF0YUlkID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtaWQnKSB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS11c2VyLWlkJykgfHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtY29udGFjdC1pZCcpOw0KICAgICAgICAgICAgICAgIGlmIChkYXRhSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGBpZF8ke2RhdGFJZH1gOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOacgOWQjuaWueahiO+8muS9v+eUqOWFg+e0oOWcqERPTeS4reeahOS9jee9rg0KICAgICAgICAgICAgICAgIGNvbnN0IHNpYmxpbmdzID0gQXJyYXkuZnJvbShlbGVtZW50LnBhcmVudE5vZGU/LmNoaWxkcmVuIHx8IFtdKTsNCiAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9IHNpYmxpbmdzLmluZGV4T2YoZWxlbWVudCk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGBwb3NfJHtpbmRleH1fJHtlbGVtZW50LnRleHRDb250ZW50Py5zbGljZSgwLCAyMCkgfHwgJ3Vua25vd24nfWA7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5o+Q5Y+W6IGU57O75Lq6SUTlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAg",
        "ICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmn6Xmib7pmJ/liJfkuK3mnIDml6fnmoTmnaHnm64NCiAgICAgICAgICogQHJldHVybnMge09iamVjdHxudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZmluZE9sZGVzdFF1ZXVlRW50cnkoKSB7DQogICAgICAgICAgICBsZXQgb2xkZXN0RW50cnkgPSBudWxsOw0KICAgICAgICAgICAgbGV0IG9sZGVzdFRpbWUgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICBmb3IgKGNvbnN0IFtjb250YWN0SWQsIGVudHJ5XSBvZiB0aGlzLnByb2Nlc3NpbmdRdWV1ZSkgew0KICAgICAgICAgICAgICAgIGlmIChlbnRyeS5hZGRlZEF0IDwgb2xkZXN0VGltZSkgew0KICAgICAgICAgICAgICAgICAgICBvbGRlc3RUaW1lID0gZW50cnkuYWRkZWRBdDsNCiAgICAgICAgICAgICAgICAgICAgb2xkZXN0RW50cnkgPSB7IGNvbnRhY3RJZCwgLi4uZW50cnkgfTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBvbGRlc3RFbnRyeTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6Zif5YiX5Lit55qE5raI5oGvDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBwcm9jZXNzUXVldWUoKSB7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn5byA5aeL5aSE55CG6Zif5YiX5raI5oGvJywgeyBxdWV1ZVNpemU6IHRoaXMucHJvY2Vzc2luZ1F1ZXVlLnNpemUgfSk7DQoNCiAgICAgICAgICAgIHdoaWxlICh0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zaXplID4gMCkgew0KICAgICAgICAgICAgICAgIC8vIOiOt+WPluacgOaWsOeahOa2iOaBr++8iExJRk/nrZbnlaXvvIkNCiAgICAgICAgICAgICAgICBjb25zdCBlbnRyaWVzID0gQXJyYXkuZnJvbSh0aGlzLnByb2Nlc3NpbmdRdWV1ZS5lbnRyaWVzKCkpOw0KICAgICAgICAgICAgICAgIGNvbnN0IFtjb250YWN0SWQsIGVudHJ5XSA9IGVudHJpZXNbZW50cmllcy5sZW5ndGggLSAxXTsNCg0KICAgICAgICAgICAgICAgIC8vIOS7jumYn+WIl+S4reenu+mZpA0KICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc2luZ1F1ZXVlLmRlbGV0ZShjb250YWN0SWQpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflpITnkIbpmJ/liJfmtojmga8nLCB7DQogICAgICAgICAgICAgICAgICAgIGNvbnRhY3RJZCwNCiAgICAgICAgICAgICAgICAgICAgcmVtYWluaW5nUXVldWU6IHRoaXMucHJvY2Vzc2luZ1F1ZXVlLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMucHJvY2Vzc1NpbmdsZU1lc3NhZ2UoZW50cnkuZWxlbWVudCk7DQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoQ29uZmlnTWFuYWdlci5nZXQoJ3JlcGx5RGVsYXknLCAzMDAwKSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfpmJ/liJflpITnkIblrozmiJAnKTsNCiAgICAgICAgfSwNCg0K",
        "ICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5aSE55CG57uf6K6hDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0cygpIHsNCiAgICAgICAgICAgIGNvbnN0IHF1ZXVlVXNhZ2UgPSAodGhpcy5wcm9jZXNzaW5nUXVldWUuc2l6ZSAvIHRoaXMubWF4UXVldWVTaXplICogMTAwKS50b0ZpeGVkKDEpOw0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICBpc1Byb2Nlc3Npbmc6IHRoaXMuaXNQcm9jZXNzaW5nLA0KICAgICAgICAgICAgICAgIHF1ZXVlTGVuZ3RoOiB0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zaXplLA0KICAgICAgICAgICAgICAgIG1heFF1ZXVlU2l6ZTogdGhpcy5tYXhRdWV1ZVNpemUsDQogICAgICAgICAgICAgICAgcXVldWVVc2FnZTogYCR7cXVldWVVc2FnZX0lYCwNCiAgICAgICAgICAgICAgICBxdWV1ZVdhcm5pbmdUaHJlc2hvbGQ6IHRoaXMucXVldWVXYXJuaW5nVGhyZXNob2xkLA0KICAgICAgICAgICAgICAgIHF1ZXVlQ29udGFjdHM6IEFycmF5LmZyb20odGhpcy5wcm9jZXNzaW5nUXVldWUua2V5cygpKSwNCiAgICAgICAgICAgICAgICBkZWR1cGxpY2F0b3JTdGF0czogTWVzc2FnZURlZHVwbGljYXRvci5nZXRTdGF0cygpDQogICAgICAgICAgICB9Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuIXnqbrlpITnkIbpmJ/liJcNCiAgICAgICAgICovDQogICAgICAgIGNsZWFyUXVldWUoKSB7DQogICAgICAgICAgICBjb25zdCBjbGVhcmVkQ291bnQgPSB0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zaXplOw0KICAgICAgICAgICAgdGhpcy5wcm9jZXNzaW5nUXVldWUuY2xlYXIoKTsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCflpITnkIbpmJ/liJflt7LmuIXnqbonLCB7IGNsZWFyZWRDb3VudCB9KTsNCiAgICAgICAgICAgIHJldHVybiBjbGVhcmVkQ291bnQ7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPlumYn+WIl+S9v+eUqOeOhw0KICAgICAgICAgKiBAcmV0dXJucyB7bnVtYmVyfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0UXVldWVVc2FnZSgpIHsNCiAgICAgICAgICAgIHJldHVybiAodGhpcy5wcm9jZXNzaW5nUXVldWUuc2l6ZSAvIHRoaXMubWF4UXVldWVTaXplICogMTAwKTsNCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOiOt+WuouW3peWFt+WPkemAgeWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgQ3VzdG9tZXJBY3F1aXNpdGlvblNlbmRlciA9IHsNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWPkemAgeiOt+WuouW3peWFtw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdG9vbFR5cGUg5bel5YW357G75Z6L77yaJ+eVmei1hOWNoScg5oiWICflkI3niYcnDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0b29sTmFtZSDlt6Xl",
        "hbflkI3np7DvvIjlj6/pgInvvIzlpoLmnpzkuI3mjIflrprliJnkvb/nlKjnrKzkuIDkuKrvvIkNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzZW5kQWNxdWlzaXRpb25Ub29sKHRvb2xUeXBlID0gJ+eVmei1hOWNoScsIHRvb2xOYW1lID0gJycpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W8gOWni+WPkemAgeiOt+WuouW3peWFtycsIHsgdG9vbFR5cGUsIHRvb2xOYW1lIH0pOw0KDQogICAgICAgICAgICAgICAgLy8gMS4g56Gu5L+d6I635a6i5bel5YW36Z2i5p2/5Y+v6KeBDQogICAgICAgICAgICAgICAgY29uc3QgcGFuZWxWaXNpYmxlID0gYXdhaXQgdGhpcy5lbnN1cmVBY3F1aXNpdGlvblBhbmVsVmlzaWJsZSgpOw0KICAgICAgICAgICAgICAgIGlmICghcGFuZWxWaXNpYmxlKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6I635a6i5bel5YW36Z2i5p2/5LiN5Y+v6KeBJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyAyLiDliIfmjaLliLDmjIflrprlt6XlhbfnsbvlnosNCiAgICAgICAgICAgICAgICBjb25zdCB0eXBlU2VsZWN0ZWQgPSBhd2FpdCB0aGlzLnNlbGVjdFRvb2xUeXBlKHRvb2xUeXBlKTsNCiAgICAgICAgICAgICAgICBpZiAoIXR5cGVTZWxlY3RlZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WIh+aNouW3peWFt+exu+Wei+Wksei0pScsIHsgdG9vbFR5cGUgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyAzLiDnrYnlvoXlt6XlhbfliJfooajliqDovb0NCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgxMDAwKTsNCg0KICAgICAgICAgICAgICAgIC8vIDQuIOmAieaLqeW5tuWPkemAgeW3peWFtw0KICAgICAgICAgICAgICAgIGNvbnN0IHNlbnQgPSBhd2FpdCB0aGlzLnNlbGVjdEFuZFNlbmRUb29sKHRvb2xOYW1lKTsNCiAgICAgICAgICAgICAgICBpZiAoIXNlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflj5HpgIHlt6XlhbflpLHotKUnLCB7IHRvb2xOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+iOt+WuouW3peWFt+WPkemAgeaIkOWKnycsIHsgdG9vbFR5cGUsIHRvb2xOYW1lIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Y+R6YCB6I635a6i5bel5YW35pe25Y+R55Sf6ZSZ6K+vJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAg",
        "ICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa/gOa0u+iOt+WuouW3peWFt+mdouadvw0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGFjdGl2YXRlQWNxdWlzaXRpb25Ub29sUGFuZWwoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+UpyDlsJ3or5Xmv4DmtLvojrflrqLlt6XlhbfpnaLmnb8nKTsNCg0KICAgICAgICAgICAgICAgIC8vIOafpeaJvnNlcnZpY2VQYWdlLWljb27lhYPntKANCiAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXRTdmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdzdmcuc2VydmljZVBhZ2UtaWNvbicpOw0KDQogICAgICAgICAgICAgICAgaWYgKCF0YXJnZXRTdmcpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KdjCDmnKrmib7liLBzZXJ2aWNlUGFnZS1pY29u5YWD57SgJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkvb/nlKhVdGlscy5zaW11bGF0ZUNsaWNr5pa55rOV6L+b6KGM5YW85a655oCn54K55Ye7DQogICAgICAgICAgICAgICAgY29uc3QgY2xpY2tlZCA9IFV0aWxzLnNpbXVsYXRlQ2xpY2sodGFyZ2V0U3ZnKTsNCiAgICAgICAgICAgICAgICBpZiAoIWNsaWNrZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KdjCDngrnlh7tzZXJ2aWNlUGFnZS1pY29u5aSx6LSlJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDlt7Lngrnlh7tzZXJ2aWNlUGFnZS1pY29u5r+A5rS76I635a6i5bel5YW36Z2i5p2/Jyk7DQoNCiAgICAgICAgICAgICAgICAvLyDnrYnlvoXpnaLmnb/mv4DmtLsNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgxMDAwKTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+KdjCDmv4DmtLvojrflrqLlt6XlhbfpnaLmnb/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog56Gu5L+d6I635a6i5bel5YW36Z2i5p2/5Y+v6KeBDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgZW5zdXJlQWNxdWlzaXRpb25QYW5lbFZpc2libGUoKSB7DQogICAgICAgICAgICAvLyDmo4Dmn6Xlj7PkvqfpnaLmnb/mmK/lkKblrZjlnKgNCiAgICAgICAgICAgIGNvbnN0IHJpZ2h0UGFu",
        "ZWwgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcjcmlnaHRQYW5lbCcpOw0KICAgICAgICAgICAgaWYgKCFyaWdodFBhbmVsKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+WPs+S+p+mdouadv+S4jeWtmOWcqCcpOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g56ys5LiA5qyh5qOA5p+l6I635a6i5bel5YW35qCH562+6aG15piv5ZCm5a2Y5ZyoDQogICAgICAgICAgICBsZXQgYWNxdWlzaXRpb25UYWIgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kLXRhYnMtaGVhZGVyJykpLmZpbmQodGFiID0+DQogICAgICAgICAgICAgICAgdGFiLnRleHRDb250ZW50LmluY2x1ZGVzKCfojrflrqLlt6XlhbcnKQ0KICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgaWYgKCFhY3F1aXNpdGlvblRhYikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+UjSDojrflrqLlt6XlhbfmoIfnrb7pobXkuI3lrZjlnKjvvIzlsJ3or5Xmv4DmtLvojrflrqLlt6XlhbfpnaLmnb8nKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWwneivlea/gOa0u+iOt+WuouW3peWFt+mdouadvw0KICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2YXRlZCA9IGF3YWl0IHRoaXMuYWN0aXZhdGVBY3F1aXNpdGlvblRvb2xQYW5lbCgpOw0KICAgICAgICAgICAgICAgIGlmICghYWN0aXZhdGVkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfinYwg6I635a6i5bel5YW36Z2i5p2/5r+A5rS75aSx6LSlJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlho3mrKHmo4Dmn6XojrflrqLlt6XlhbfmoIfnrb7pobUNCiAgICAgICAgICAgICAgICBhY3F1aXNpdGlvblRhYiA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmQtdGFicy1oZWFkZXInKSkuZmluZCh0YWIgPT4NCiAgICAgICAgICAgICAgICAgICAgdGFiLnRleHRDb250ZW50LmluY2x1ZGVzKCfojrflrqLlt6XlhbcnKQ0KICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWFjcXVpc2l0aW9uVGFiKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfinYwg6I635a6i5bel5YW35qCH562+6aG15LuN54S25LiN5a2Y5ZyoJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOiOt+WuouW3peWFt+mdouadv+a/gOa0u+aIkOWKn++8jOaJvuWIsOiOt+WuouW3peWFt+agh+etvumhtScpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDlpoLmnpzmoIfnrb7pobXmnKrmv4DmtLvvvIzngrnlh7vmv4DmtLsNCiAgICAgICAgICAgIGlmICghYWNxdWlzaXRpb25UYWIuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSkg",
        "ew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn54K55Ye75r+A5rS76I635a6i5bel5YW35qCH562+6aG1Jyk7DQogICAgICAgICAgICAgICAgYWNxdWlzaXRpb25UYWIuY2xpY2soKTsNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSg1MDApOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6YCJ5oup5bel5YW357G75Z6LDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0b29sVHlwZSDlt6XlhbfnsbvlnosNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzZWxlY3RUb29sVHlwZSh0b29sVHlwZSkgew0KICAgICAgICAgICAgY29uc3Qgc2VnbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZC1zZWdtZW50LWl0ZW0nKTsNCiAgICAgICAgICAgIGNvbnN0IHRhcmdldFNlZ21lbnQgPSBBcnJheS5mcm9tKHNlZ21lbnRzKS5maW5kKHNlZ21lbnQgPT4NCiAgICAgICAgICAgICAgICBzZWdtZW50LnRleHRDb250ZW50LnRyaW0oKSA9PT0gdG9vbFR5cGUNCiAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgIGlmICghdGFyZ2V0U2VnbWVudCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5om+5LiN5Yiw5bel5YW357G75Z6LJywgew0KICAgICAgICAgICAgICAgICAgICB0b29sVHlwZSwNCiAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlVHlwZXM6IEFycmF5LmZyb20oc2VnbWVudHMpLm1hcChzID0+IHMudGV4dENvbnRlbnQudHJpbSgpKQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5aaC5p6c5pyq5r+A5rS777yM54K55Ye75r+A5rS7DQogICAgICAgICAgICBpZiAoIXRhcmdldFNlZ21lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn54K55Ye76YCJ5oup5bel5YW357G75Z6LJywgeyB0b29sVHlwZSB9KTsNCiAgICAgICAgICAgICAgICB0YXJnZXRTZWdtZW50LmNsaWNrKCk7DQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoNTAwKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmAieaLqeW5tuWPkemAgeW3peWFtw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdG9vbE5hbWUg5bel5YW35ZCN56ew77yI5Y+v6YCJ77yJDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgc2VsZWN0QW5kU2VuZFRvb2wodG9vbE5hbWUgPSAnJykgew0KICAgICAgICAgICAgLy8g5p+l5om+5omA5pyJ5bel5YW35Y2h54mHDQogICAgICAgICAgICBjb25zdCB0b29s",
        "Q2FyZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2FyZCcpOw0KDQogICAgICAgICAgICBpZiAodG9vbENhcmRzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5rKh5pyJ5om+5Yiw5Y+v55So55qE5bel5YW35Y2h54mHJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBsZXQgdGFyZ2V0Q2FyZCA9IG51bGw7DQoNCiAgICAgICAgICAgIC8vIOWmguaenOaMh+WumuS6huW3peWFt+WQjeensO+8jOafpeaJvuWMuemFjeeahOWNoeeJhw0KICAgICAgICAgICAgaWYgKHRvb2xOYW1lKSB7DQogICAgICAgICAgICAgICAgdGFyZ2V0Q2FyZCA9IEFycmF5LmZyb20odG9vbENhcmRzKS5maW5kKGNhcmQgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0aXRsZUVsZW1lbnQgPSBjYXJkLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkLWJveF9fdGl0bGUsIC5jYXJkLWJveF9fY29udGVudC10aXRsZScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGl0bGVFbGVtZW50ICYmIHRpdGxlRWxlbWVudC50ZXh0Q29udGVudC5pbmNsdWRlcyh0b29sTmFtZSk7DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIXRhcmdldENhcmQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+aJvuS4jeWIsOaMh+WumuWQjeensOeahOW3peWFt++8jOS9v+eUqOesrOS4gOS4quWPr+eUqOW3peWFtycsIHsgdG9vbE5hbWUgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDlpoLmnpzmsqHmnInmib7liLDmjIflrprlt6XlhbfmiJbmsqHmnInmjIflrprlkI3np7DvvIzkvb/nlKjnrKzkuIDkuKoNCiAgICAgICAgICAgIGlmICghdGFyZ2V0Q2FyZCkgew0KICAgICAgICAgICAgICAgIHRhcmdldENhcmQgPSB0b29sQ2FyZHNbMF07DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOafpeaJvuWPkemAgeaMiemSrg0KICAgICAgICAgICAgY29uc3Qgc2VuZEJ1dHRvbiA9IHRhcmdldENhcmQucXVlcnlTZWxlY3RvcignLmJ0bicpOw0KICAgICAgICAgICAgaWYgKCFzZW5kQnV0dG9uIHx8ICFzZW5kQnV0dG9uLnRleHRDb250ZW50LmluY2x1ZGVzKCflj5HpgIEnKSkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5om+5LiN5Yiw5Y+R6YCB5oyJ6ZKuJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDojrflj5blt6XlhbfmoIfpopjnlKjkuo7ml6Xlv5cNCiAgICAgICAgICAgIGNvbnN0IHRpdGxlRWxlbWVudCA9IHRhcmdldENhcmQucXVlcnlTZWxlY3RvcignLmNhcmQtYm94X190aXRsZSwgLmNhcmQtYm94X19jb250ZW50LXRpdGxlJyk7DQogICAgICAgICAgICBjb25zdCBhY3R1YWxUb29sTmFtZSA9IHRpdGxlRWxlbWVudCA/IHRpdGxlRWxlbWVudC50ZXh0Q29udGVu",
        "dC50cmltKCkgOiAn5pyq55+l5bel5YW3JzsNCg0KICAgICAgICAgICAgLy8g54K55Ye75Y+R6YCB5oyJ6ZKuDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eCueWHu+WPkemAgeaMiemSricsIHsgdG9vbE5hbWU6IGFjdHVhbFRvb2xOYW1lIH0pOw0KICAgICAgICAgICAgc2VuZEJ1dHRvbi5jbGljaygpOw0KDQogICAgICAgICAgICAvLyDnrYnlvoXlj5HpgIHlrozmiJANCiAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDEwMDApOw0KDQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5Y+v55So55qE5bel5YW35YiX6KGoDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0b29sVHlwZSDlt6XlhbfnsbvlnosNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8QXJyYXk+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgZ2V0QXZhaWxhYmxlVG9vbHModG9vbFR5cGUgPSAn55WZ6LWE5Y2hJykgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDnoa7kv53pnaLmnb/lj6/op4ENCiAgICAgICAgICAgICAgICBjb25zdCBwYW5lbFZpc2libGUgPSBhd2FpdCB0aGlzLmVuc3VyZUFjcXVpc2l0aW9uUGFuZWxWaXNpYmxlKCk7DQogICAgICAgICAgICAgICAgaWYgKCFwYW5lbFZpc2libGUpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWIh+aNouWIsOaMh+WumuW3peWFt+exu+Weiw0KICAgICAgICAgICAgICAgIGNvbnN0IHR5cGVTZWxlY3RlZCA9IGF3YWl0IHRoaXMuc2VsZWN0VG9vbFR5cGUodG9vbFR5cGUpOw0KICAgICAgICAgICAgICAgIGlmICghdHlwZVNlbGVjdGVkKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBbXTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnrYnlvoXliqDovb0NCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgxMDAwKTsNCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WPluW3peWFt+WIl+ihqA0KICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xDYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYXJkJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdG9vbHMgPSBbXTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgY2FyZCBvZiB0b29sQ2FyZHMpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGl0bGVFbGVtZW50ID0gY2FyZC5xdWVyeVNlbGVjdG9yKCcuY2FyZC1ib3hfX3RpdGxlLCAuY2FyZC1ib3hfX2NvbnRlbnQtdGl0bGUnKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVzY0VsZW1lbnQgPSBjYXJkLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkLWJveF9fY29udGVudC1kZXNjJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRpdGxlRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdG9vbHMucHVzaCh7",
        "DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogdGl0bGVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZGVzY0VsZW1lbnQgPyBkZXNjRWxlbWVudC50ZXh0Q29udGVudC50cmltKCkgOiAnJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50OiBjYXJkDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6I635Y+W5Yiw5Y+v55So5bel5YW35YiX6KGoJywgeyB0b29sVHlwZSwgY291bnQ6IHRvb2xzLmxlbmd0aCB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdG9vbHM7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfojrflj5blt6XlhbfliJfooajlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBbXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOiOt+WuouaXtuacuuWIpOaWreWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgQWNxdWlzaXRpb25PcHBvcnR1bml0eURldGVjdG9yID0gew0KICAgICAgICAvKioNCiAgICAgICAgICog5Yik5pat5piv5ZCm5bqU6K+l5Y+R6YCB6I635a6i5bel5YW3DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VDb250ZW50IOa2iOaBr+WGheWuuQ0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gdXNlckRhdGEg55So5oi35a+56K+d5pWw5o2uDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgc2hvdWxkU2VuZEFjcXVpc2l0aW9uVG9vbDogZnVuY3Rpb24odXNlck5hbWUsIG1lc3NhZ2VDb250ZW50LCB1c2VyRGF0YSkgew0KICAgICAgICAgICAgLy8g5qOA5p+l6I635a6i5Yqf6IO95piv5ZCm5ZCv55SoDQogICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCdhY3F1aXNpdGlvbkVuYWJsZWQnLCBmYWxzZSkpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOWmguaenOS4jeWFgeiuuOmHjeWkjeWPkemAgeS4lOW3sue7j+WPkemAgei/h++8jOWImeS4jeWGjeWPkemAgQ0KICAgICAgICAgICAgY29uc3QgYWxsb3dSZXBlYXQgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25BbGxvd1JlcGVhdCcsIGZhbHNlKTsNCiAgICAgICAgICAgIGlmICghYWxsb3dSZXBlYXQgJiYgdXNlckRhdGEuaGFzUmVjZWl2ZWRBY3F1aXNpdGlvblRvb2wpIHsNCiAgICAg",
        "ICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eUqOaIt+W3suaOpeaUtui/h+iOt+WuouW3peWFt+S4lOS4jeWFgeiuuOmHjeWkjeWPkemAgScsIHsgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4DmtYvlhbTotqPlhbPplK7or40NCiAgICAgICAgICAgIGNvbnN0IGtleXdvcmRzQ29uZmlnID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uS2V5d29yZHMnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5hY3F1aXNpdGlvbktleXdvcmRzKTsNCiAgICAgICAgICAgIGNvbnN0IGludGVyZXN0S2V5d29yZHMgPSBrZXl3b3Jkc0NvbmZpZy5zcGxpdCgnLCcpLm1hcChrID0+IGsudHJpbSgpKS5maWx0ZXIoayA9PiBrKTsNCiAgICAgICAgICAgIGNvbnN0IGhhc0ludGVyZXN0S2V5d29yZCA9IGludGVyZXN0S2V5d29yZHMuc29tZShrZXl3b3JkID0+IG1lc3NhZ2VDb250ZW50LmluY2x1ZGVzKGtleXdvcmQpKTsNCg0KICAgICAgICAgICAgLy8g6I635Y+W6YWN572u55qE6L2u5qyhDQogICAgICAgICAgICBjb25zdCB0cmlnZ2VyUm91bmQgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25UcmlnZ2VyUm91bmQnLCAyKTsNCiAgICAgICAgICAgIGNvbnN0IGZhbGxiYWNrUm91bmQgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25GYWxsYmFja1JvdW5kJywgMyk7DQoNCiAgICAgICAgICAgIC8vIOWIpOaWreWPkemAgeadoeS7tg0KICAgICAgICAgICAgLy8g5p2h5Lu2MTog6L6+5Yiw6Kem5Y+R6L2u5qyhICsg5pyJ5YW06Laj5YWz6ZSu6K+NDQogICAgICAgICAgICBpZiAodXNlckRhdGEubWVzc2FnZUNvdW50ID49IHRyaWdnZXJSb3VuZCAmJiBoYXNJbnRlcmVzdEtleXdvcmQpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5ruh6Laz6I635a6i5bel5YW35Y+R6YCB5p2h5Lu277ya6L2u5qyhK+WFs+mUruivjScsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VDb3VudDogdXNlckRhdGEubWVzc2FnZUNvdW50LA0KICAgICAgICAgICAgICAgICAgICB0cmlnZ2VyUm91bmQsDQogICAgICAgICAgICAgICAgICAgIGRldGVjdGVkS2V5d29yZHM6IGludGVyZXN0S2V5d29yZHMuZmlsdGVyKGsgPT4gbWVzc2FnZUNvbnRlbnQuaW5jbHVkZXMoaykpDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOadoeS7tjI6IOi+vuWIsOWFnOW6lei9ruasoe+8jOaXoOadoeS7tuWPkemAgQ0KICAgICAgICAgICAgaWYgKHVzZXJEYXRhLm1lc3NhZ2VDb3VudCA+PSBmYWxsYmFja1JvdW5kKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+a7oei2s+iOt+WuouW3peWFt+WPkemAgeadoeS7tu+8muWFnOW6lei9ruasoScsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNl",
        "ck5hbWUsDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VDb3VudDogdXNlckRhdGEubWVzc2FnZUNvdW50LA0KICAgICAgICAgICAgICAgICAgICBmYWxsYmFja1JvdW5kDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5pyq5ruh6Laz6I635a6i5bel5YW35Y+R6YCB5p2h5Lu2Jywgew0KICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgIG1lc3NhZ2VDb3VudDogdXNlckRhdGEubWVzc2FnZUNvdW50LA0KICAgICAgICAgICAgICAgIHRyaWdnZXJSb3VuZCwNCiAgICAgICAgICAgICAgICBmYWxsYmFja1JvdW5kLA0KICAgICAgICAgICAgICAgIGhhc0ludGVyZXN0S2V5d29yZCwNCiAgICAgICAgICAgICAgICBoYXNSZWNlaXZlZEJlZm9yZTogdXNlckRhdGEuaGFzUmVjZWl2ZWRBY3F1aXNpdGlvblRvb2wNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIhuaekOa2iOaBr+S4reeahOWFtOi2o+S/oeWPtw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZUNvbnRlbnQg5raI5oGv5YaF5a65DQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBhbmFseXplSW50ZXJlc3RTaWduYWxzOiBmdW5jdGlvbihtZXNzYWdlQ29udGVudCkgew0KICAgICAgICAgICAgY29uc3Qga2V5d29yZHNDb25maWcgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25LZXl3b3JkcycsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmFjcXVpc2l0aW9uS2V5d29yZHMpOw0KICAgICAgICAgICAgY29uc3QgaW50ZXJlc3RLZXl3b3JkcyA9IGtleXdvcmRzQ29uZmlnLnNwbGl0KCcsJykubWFwKGsgPT4gay50cmltKCkpLmZpbHRlcihrID0+IGspOw0KDQogICAgICAgICAgICBjb25zdCBkZXRlY3RlZEtleXdvcmRzID0gaW50ZXJlc3RLZXl3b3Jkcy5maWx0ZXIoa2V5d29yZCA9PiBtZXNzYWdlQ29udGVudC5pbmNsdWRlcyhrZXl3b3JkKSk7DQogICAgICAgICAgICBjb25zdCBpbnRlcmVzdExldmVsID0gZGV0ZWN0ZWRLZXl3b3Jkcy5sZW5ndGggPiAwID8gTWF0aC5taW4oZGV0ZWN0ZWRLZXl3b3Jkcy5sZW5ndGggLyBpbnRlcmVzdEtleXdvcmRzLmxlbmd0aCwgMSkgOiAwOw0KDQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIGhhc0ludGVyZXN0OiBkZXRlY3RlZEtleXdvcmRzLmxlbmd0aCA+IDAsDQogICAgICAgICAgICAgICAgZGV0ZWN0ZWRLZXl3b3JkcywNCiAgICAgICAgICAgICAgICBpbnRlcmVzdExldmVsLA0KICAgICAgICAgICAgICAgIHRvdGFsS2V5d29yZHM6IGludGVyZXN0S2V5d29yZHMubGVuZ3RoDQogICAgICAgICAgICB9Ow0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09",
        "PT09PT09PT09DQogICAgLy8g5Lya6K+d6K6w5b+G566h55CG5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBDaGF0U2Vzc2lvbk1hbmFnZXIgPSB7DQogICAgICAgIC8vIOS8muivnee8k+WtmO+8mmNvbnZlcnNhdGlvbklkIC0+IHsgY2hhdElkLCBsYXN0VXNlZCwgbWVzc2FnZUNvdW50LCBjcmVhdGVkQXQgfQ0KICAgICAgICBzZXNzaW9uQ2FjaGU6IG5ldyBNYXAoKSwNCg0KICAgICAgICAvLyDlrZjlgqjplK7lkI0NCiAgICAgICAgU1RPUkFHRV9LRVk6ICd4aHNfY2hhdF9zZXNzaW9ucycsDQoNCiAgICAgICAgLy8g5Lya6K+d6L+H5pyf5pe26Ze077yIN+Wkqe+8iQ0KICAgICAgICBTRVNTSU9OX0VYUElSRV9USU1FOiA3ICogMjQgKiA2MCAqIDYwICogMTAwMCwNCg0KICAgICAgICAvLyDmnIDlpKfkvJror53mlbDph48NCiAgICAgICAgTUFYX1NFU1NJT05TOiAxMDAsDQoNCiAgICAgICAgLy8g57yT5a2Y5ZCM5q2l6Ze06ZqU77yINeWIhumSn++8iQ0KICAgICAgICBDQUNIRV9TWU5DX0lOVEVSVkFMOiA1ICogNjAgKiAxMDAwLA0KDQogICAgICAgIC8vIOS4iuasoeWQjOatpeaXtumXtA0KICAgICAgICBsYXN0U3luY1RpbWU6IDAsDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIneWni+WMluS8muivneeuoeeQhuWZqA0KICAgICAgICAgKi8NCiAgICAgICAgaW5pdCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5LuO6YWN572u5Yqg6L295Y+C5pWwDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVDb25maWdGcm9tU2V0dGluZ3MoKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMubG9hZFNlc3Npb25zRnJvbVN0b3JhZ2UoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0UGVyaW9kaWNDbGVhbnVwKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+S8muivneiusOW/hueuoeeQhuWZqOWIneWni+WMluaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbkNvdW50OiB0aGlzLnNlc3Npb25DYWNoZS5zaXplLA0KICAgICAgICAgICAgICAgICAgICBleHBpcmVUaW1lOiB0aGlzLlNFU1NJT05fRVhQSVJFX1RJTUUsDQogICAgICAgICAgICAgICAgICAgIG1heFNlc3Npb25zOiB0aGlzLk1BWF9TRVNTSU9OUw0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S8muivneiusOW/hueuoeeQhuWZqOWIneWni+WMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7jumFjee9ruabtOaWsOWPguaVsA0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlQ29uZmlnRnJvbVNldHRpbmdzKCkgew0KICAgICAgICAgICAgaWYgKHR5cGVvZiBDb25maWdNYW5hZ2VyICE9PSAndW5kZWZpbmVkJykgew0KICAgICAgICAgICAgICAg",
        "IGNvbnN0IGV4cGlyZURheXMgPSBDb25maWdNYW5hZ2VyLmdldCgnc2Vzc2lvbkV4cGlyZURheXMnLCA3KTsNCiAgICAgICAgICAgICAgICBjb25zdCBtYXhTZXNzaW9ucyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdtYXhTZXNzaW9ucycsIDEwMCk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLlNFU1NJT05fRVhQSVJFX1RJTUUgPSBleHBpcmVEYXlzICogMjQgKiA2MCAqIDYwICogMTAwMDsNCiAgICAgICAgICAgICAgICB0aGlzLk1BWF9TRVNTSU9OUyA9IG1heFNlc3Npb25zOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfkvJror53nrqHnkIblmajphY3nva7lt7Lmm7TmlrAnLCB7DQogICAgICAgICAgICAgICAgICAgIGV4cGlyZURheXMsDQogICAgICAgICAgICAgICAgICAgIG1heFNlc3Npb25zLA0KICAgICAgICAgICAgICAgICAgICBleHBpcmVUaW1lOiB0aGlzLlNFU1NJT05fRVhQSVJFX1RJTUUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5oiW5Yib5bu65Lya6K+dDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb252ZXJzYXRpb25JZCDlr7nor51JRA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBjaGF0SWQNCiAgICAgICAgICovDQogICAgICAgIGdldE9yQ3JlYXRlU2Vzc2lvbihjb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgaWYgKCFjb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfkvJror53nrqHnkIbvvJpjb252ZXJzYXRpb25JZOS4uuepuu+8jOi/lOWbnuS4tOaXtmNoYXRJZCcpOw0KICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdlbmVyYXRlVGVtcENoYXRJZCgpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6XnvJPlrZgNCiAgICAgICAgICAgIGxldCBzZXNzaW9uID0gdGhpcy5zZXNzaW9uQ2FjaGUuZ2V0KGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQoNCiAgICAgICAgICAgIC8vIOWmguaenOS8muivneS4jeWtmOWcqOaIluW3sui/h+acn++8jOWIm+W7uuaWsOS8muivnQ0KICAgICAgICAgICAgaWYgKCFzZXNzaW9uIHx8IHRoaXMuaXNTZXNzaW9uRXhwaXJlZChzZXNzaW9uLCBub3cpKSB7DQogICAgICAgICAgICAgICAgc2Vzc2lvbiA9IHRoaXMuY3JlYXRlTmV3U2Vzc2lvbihjb252ZXJzYXRpb25JZCwgbm93KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNlc3Npb25DYWNoZS5zZXQoY29udmVyc2F0aW9uSWQsIHNlc3Npb24pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2F2ZVNlc3Npb25zVG9TdG9yYWdlKCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Lya6K+d6K6w5b+G77ya5Yib5bu65paw5Lya6K+dJywgew0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0K",
        "ICAgICAgICAgICAgICAgICAgICBjaGF0SWQ6IHNlc3Npb24uY2hhdElkLnN1YnN0cmluZygwLCAyMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgaXNFeHBpcmVkOiAhIXNlc3Npb24NCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgLy8g5pu05paw5pyA5ZCO5L2/55So5pe26Ze0DQogICAgICAgICAgICAgICAgc2Vzc2lvbi5sYXN0VXNlZCA9IG5vdzsNCiAgICAgICAgICAgICAgICB0aGlzLnNlc3Npb25DYWNoZS5zZXQoY29udmVyc2F0aW9uSWQsIHNlc3Npb24pOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfkvJror53orrDlv4bvvJrkvb/nlKjnjrDmnInkvJror50nLCB7DQogICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgIGNoYXRJZDogc2Vzc2lvbi5jaGF0SWQuc3Vic3RyaW5nKDAsIDIwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlQ291bnQ6IHNlc3Npb24ubWVzc2FnZUNvdW50DQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBzZXNzaW9uLmNoYXRJZDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw5Lya6K+d5raI5oGv6K6h5pWwDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb252ZXJzYXRpb25JZCDlr7nor51JRA0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlU2Vzc2lvbk1lc3NhZ2VDb3VudChjb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgaWYgKCFjb252ZXJzYXRpb25JZCkgcmV0dXJuOw0KDQogICAgICAgICAgICBjb25zdCBzZXNzaW9uID0gdGhpcy5zZXNzaW9uQ2FjaGUuZ2V0KGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgIGlmIChzZXNzaW9uKSB7DQogICAgICAgICAgICAgICAgc2Vzc2lvbi5tZXNzYWdlQ291bnQgPSAoc2Vzc2lvbi5tZXNzYWdlQ291bnQgfHwgMCkgKyAxOw0KICAgICAgICAgICAgICAgIHNlc3Npb24ubGFzdFVzZWQgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2Vzc2lvbkNhY2hlLnNldChjb252ZXJzYXRpb25JZCwgc2Vzc2lvbik7DQoNCiAgICAgICAgICAgICAgICAvLyDlrprmnJ/lkIzmraXliLDlrZjlgqgNCiAgICAgICAgICAgICAgICB0aGlzLnN5bmNUb1N0b3JhZ2VJZk5lZWRlZCgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliJvlu7rmlrDkvJror50NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIOWvueivnUlEDQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lc3RhbXAg5pe26Ze05oizDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOS8muivneWvueixoQ0KICAgICAgICAgKi8NCiAgICAgICAgY3JlYXRlTmV3U2Vz",
        "c2lvbihjb252ZXJzYXRpb25JZCwgdGltZXN0YW1wKSB7DQogICAgICAgICAgICBjb25zdCBjaGF0SWQgPSB0aGlzLmdlbmVyYXRlQ2hhdElkKGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgY2hhdElkLA0KICAgICAgICAgICAgICAgIGNyZWF0ZWRBdDogdGltZXN0YW1wLA0KICAgICAgICAgICAgICAgIGxhc3RVc2VkOiB0aW1lc3RhbXAsDQogICAgICAgICAgICAgICAgbWVzc2FnZUNvdW50OiAwDQogICAgICAgICAgICB9Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnlJ/miJBjaGF0SWQNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIOWvueivnUlEDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IGNoYXRJZA0KICAgICAgICAgKi8NCiAgICAgICAgZ2VuZXJhdGVDaGF0SWQoY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgIC8vIOehruS/nWNoYXRJZOWUr+S4gOS4lOespuWQiEZhc3RHUFTopoHmsYLvvIjplb/luqY8MjUw77yJDQogICAgICAgICAgICBjb25zdCBzaG9ydElkID0gY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDIwKTsNCiAgICAgICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IERhdGUubm93KCk7DQogICAgICAgICAgICByZXR1cm4gYHhoc18ke3Nob3J0SWR9XyR7dGltZXN0YW1wfWA7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOeUn+aIkOS4tOaXtmNoYXRJZO+8iOeUqOS6juW8guW4uOaDheWGte+8iQ0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSDkuLTml7ZjaGF0SWQNCiAgICAgICAgICovDQogICAgICAgIGdlbmVyYXRlVGVtcENoYXRJZCgpIHsNCiAgICAgICAgICAgIHJldHVybiBgeGhzX3RlbXBfJHtEYXRlLm5vdygpfV8ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZygyLCA4KX1gOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XkvJror53mmK/lkKbov4fmnJ8NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHNlc3Npb24g5Lya6K+d5a+56LGhDQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBub3cg5b2T5YmN5pe26Ze0DQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKbov4fmnJ8NCiAgICAgICAgICovDQogICAgICAgIGlzU2Vzc2lvbkV4cGlyZWQoc2Vzc2lvbiwgbm93KSB7DQogICAgICAgICAgICByZXR1cm4gKG5vdyAtIHNlc3Npb24ubGFzdFVzZWQpID4gdGhpcy5TRVNTSU9OX0VYUElSRV9USU1FOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDku45sb2NhbFN0b3JhZ2XliqDovb3kvJror53mlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGxvYWRTZXNzaW9uc0Zyb21TdG9yYWdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBzdG9yZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLlNUT1JBR0VfS0VZ",
        "KTsNCiAgICAgICAgICAgICAgICBpZiAoc3RvcmVkKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlc3Npb25zID0gSlNPTi5wYXJzZShzdG9yZWQpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNlc3Npb25DYWNoZS5jbGVhcigpOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWPquWKoOi9veacqui/h+acn+eahOS8muivnQ0KICAgICAgICAgICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgICAgICBsZXQgbG9hZGVkQ291bnQgPSAwOw0KDQogICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2NvbnZlcnNhdGlvbklkLCBzZXNzaW9uXSBvZiBPYmplY3QuZW50cmllcyhzZXNzaW9ucykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5pc1Nlc3Npb25FeHBpcmVkKHNlc3Npb24sIG5vdykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlc3Npb25DYWNoZS5zZXQoY29udmVyc2F0aW9uSWQsIHNlc3Npb24pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRlZENvdW50Kys7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Lya6K+d6K6w5b+G77ya5LuO5a2Y5YKo5Yqg6L295Lya6K+dJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxTdG9yZWQ6IE9iamVjdC5rZXlzKHNlc3Npb25zKS5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgICAgICBsb2FkZWRDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGlyZWRDb3VudDogT2JqZWN0LmtleXMoc2Vzc2lvbnMpLmxlbmd0aCAtIGxvYWRlZENvdW50DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfkvJror53orrDlv4bvvJrliqDovb3lrZjlgqjmlbDmja7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2Vzc2lvbkNhY2hlLmNsZWFyKCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS/neWtmOS8muivneaVsOaNruWIsGxvY2FsU3RvcmFnZQ0KICAgICAgICAgKi8NCiAgICAgICAgc2F2ZVNlc3Npb25zVG9TdG9yYWdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBzZXNzaW9ucyA9IE9iamVjdC5mcm9tRW50cmllcyh0aGlzLnNlc3Npb25DYWNoZSk7DQogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5TVE9SQUdFX0tFWSwgSlNPTi5zdHJpbmdpZnkoc2Vzc2lvbnMpKTsNCiAgICAgICAgICAgICAgICB0aGlzLmxhc3RTeW5jVGltZSA9IERhdGUubm93KCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S8muivneiusOW/",
        "hu+8muS/neWtmOWIsOWtmOWCqCcsIHsNCiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbkNvdW50OiB0aGlzLnNlc3Npb25DYWNoZS5zaXplLA0KICAgICAgICAgICAgICAgICAgICBzdG9yYWdlU2l6ZTogSlNPTi5zdHJpbmdpZnkoc2Vzc2lvbnMpLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S8muivneiusOW/hu+8muS/neWtmOWtmOWCqOaVsOaNruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWumuacn+WQjOatpeWIsOWtmOWCqO+8iOmBv+WFjemikee5geWGmeWFpe+8iQ0KICAgICAgICAgKi8NCiAgICAgICAgc3luY1RvU3RvcmFnZUlmTmVlZGVkKCkgew0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGlmICgobm93IC0gdGhpcy5sYXN0U3luY1RpbWUpID4gdGhpcy5DQUNIRV9TWU5DX0lOVEVSVkFMKSB7DQogICAgICAgICAgICAgICAgdGhpcy5zYXZlU2Vzc2lvbnNUb1N0b3JhZ2UoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF55CG6L+H5pyf5Lya6K+dDQogICAgICAgICAqLw0KICAgICAgICBjbGVhbkV4cGlyZWRTZXNzaW9ucygpIHsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBsZXQgY2xlYW5lZENvdW50ID0gMDsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCBbY29udmVyc2F0aW9uSWQsIHNlc3Npb25dIG9mIHRoaXMuc2Vzc2lvbkNhY2hlLmVudHJpZXMoKSkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzU2Vzc2lvbkV4cGlyZWQoc2Vzc2lvbiwgbm93KSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNlc3Npb25DYWNoZS5kZWxldGUoY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgICAgICBjbGVhbmVkQ291bnQrKzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOWmguaenOS8muivneaVsOmHj+i2hei/h+mZkOWItu+8jOa4heeQhuacgOaXp+eahOS8muivnQ0KICAgICAgICAgICAgaWYgKHRoaXMuc2Vzc2lvbkNhY2hlLnNpemUgPiB0aGlzLk1BWF9TRVNTSU9OUykgew0KICAgICAgICAgICAgICAgIGNvbnN0IHNlc3Npb25zID0gQXJyYXkuZnJvbSh0aGlzLnNlc3Npb25DYWNoZS5lbnRyaWVzKCkpOw0KICAgICAgICAgICAgICAgIHNlc3Npb25zLnNvcnQoKGEsIGIpID0+IGFbMV0ubGFzdFVzZWQgLSBiWzFdLmxhc3RVc2VkKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRvUmVtb3ZlID0gc2Vzc2lvbnMuc2xpY2UoMCwgdGhpcy5zZXNzaW9uQ2FjaGUuc2l6ZSAtIHRoaXMuTUFYX1NFU1NJT05TKTsNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtjb252ZXJzYXRp",
        "b25JZF0gb2YgdG9SZW1vdmUpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXNzaW9uQ2FjaGUuZGVsZXRlKGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICAgICAgY2xlYW5lZENvdW50Kys7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoY2xlYW5lZENvdW50ID4gMCkgew0KICAgICAgICAgICAgICAgIHRoaXMuc2F2ZVNlc3Npb25zVG9TdG9yYWdlKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+S8muivneiusOW/hu+8mua4heeQhui/h+acn+S8muivnScsIHsNCiAgICAgICAgICAgICAgICAgICAgY2xlYW5lZENvdW50LA0KICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdDb3VudDogdGhpcy5zZXNzaW9uQ2FjaGUuc2l6ZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gY2xlYW5lZENvdW50Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlkK/liqjlrprmnJ/muIXnkIYNCiAgICAgICAgICovDQogICAgICAgIHN0YXJ0UGVyaW9kaWNDbGVhbnVwKCkgew0KICAgICAgICAgICAgLy8g5q+P5bCP5pe25riF55CG5LiA5qyh6L+H5pyf5Lya6K+dDQogICAgICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5jbGVhbkV4cGlyZWRTZXNzaW9ucygpOw0KICAgICAgICAgICAgfSwgNjAgKiA2MCAqIDEwMDApOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bkvJror53nu5/orqHkv6Hmga8NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g57uf6K6h5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICBnZXRTZXNzaW9uU3RhdHMoKSB7DQogICAgICAgICAgICBjb25zdCBzZXNzaW9ucyA9IEFycmF5LmZyb20odGhpcy5zZXNzaW9uQ2FjaGUudmFsdWVzKCkpOw0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICB0b3RhbFNlc3Npb25zOiB0aGlzLnNlc3Npb25DYWNoZS5zaXplLA0KICAgICAgICAgICAgICAgIGFjdGl2ZVNlc3Npb25zOiBzZXNzaW9ucy5maWx0ZXIocyA9PiAobm93IC0gcy5sYXN0VXNlZCkgPCAyNCAqIDYwICogNjAgKiAxMDAwKS5sZW5ndGgsDQogICAgICAgICAgICAgICAgdG90YWxNZXNzYWdlczogc2Vzc2lvbnMucmVkdWNlKChzdW0sIHMpID0+IHN1bSArIChzLm1lc3NhZ2VDb3VudCB8fCAwKSwgMCksDQogICAgICAgICAgICAgICAgb2xkZXN0U2Vzc2lvbjogc2Vzc2lvbnMubGVuZ3RoID4gMCA/IE1hdGgubWluKC4uLnNlc3Npb25zLm1hcChzID0+IHMuY3JlYXRlZEF0KSkgOiBudWxsLA0KICAgICAgICAgICAgICAgIG5ld2VzdFNlc3Npb246IHNlc3Npb25zLmxlbmd0aCA+IDAgPyBNYXRoLm1heCguLi5zZXNzaW9ucy5tYXAocyA9PiBzLmNyZWF0ZWRBdCkpIDogbnVsbCwNCiAgICAgICAgICAg",
        "ICAgICBzdG9yYWdlU2l6ZTogSlNPTi5zdHJpbmdpZnkoT2JqZWN0LmZyb21FbnRyaWVzKHRoaXMuc2Vzc2lvbkNhY2hlKSkubGVuZ3RoDQogICAgICAgICAgICB9Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmiYvliqjmuIXnkIbmiYDmnInkvJror50NCiAgICAgICAgICovDQogICAgICAgIGNsZWFyQWxsU2Vzc2lvbnMoKSB7DQogICAgICAgICAgICBjb25zdCBjb3VudCA9IHRoaXMuc2Vzc2lvbkNhY2hlLnNpemU7DQogICAgICAgICAgICB0aGlzLnNlc3Npb25DYWNoZS5jbGVhcigpOw0KICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5TVE9SQUdFX0tFWSk7DQoNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfkvJror53orrDlv4bvvJrmiYvliqjmuIXnkIbmiYDmnInkvJror50nLCB7IGNsZWFyZWRDb3VudDogY291bnQgfSk7DQogICAgICAgICAgICByZXR1cm4gY291bnQ7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWvvOWHuuS8muivneaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBKU09O5qC85byP55qE5Lya6K+d5pWw5o2uDQogICAgICAgICAqLw0KICAgICAgICBleHBvcnRTZXNzaW9ucygpIHsNCiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB7DQogICAgICAgICAgICAgICAgdmVyc2lvbjogJzEuMCcsDQogICAgICAgICAgICAgICAgZXhwb3J0VGltZTogRGF0ZS5ub3coKSwNCiAgICAgICAgICAgICAgICBzZXNzaW9uczogT2JqZWN0LmZyb21FbnRyaWVzKHRoaXMuc2Vzc2lvbkNhY2hlKQ0KICAgICAgICAgICAgfTsNCiAgICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShkYXRhLCBudWxsLCAyKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5a+85YWl5Lya6K+d5pWw5o2uDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBqc29uRGF0YSBKU09O5qC85byP55qE5Lya6K+d5pWw5o2uDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDlr7zlhaXmmK/lkKbmiJDlip8NCiAgICAgICAgICovDQogICAgICAgIGltcG9ydFNlc3Npb25zKGpzb25EYXRhKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKGpzb25EYXRhKTsNCiAgICAgICAgICAgICAgICBpZiAoIWRhdGEuc2Vzc2lvbnMpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfml6DmlYjnmoTkvJror53mlbDmja7moLzlvI8nKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgIGxldCBpbXBvcnRlZENvdW50ID0gMDsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2NvbnZlcnNhdGlvbklkLCBzZXNzaW9uXSBvZiBPYmplY3QuZW50cmllcyhkYXRhLnNlc3Npb25zKSkgew0KICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaXNTZXNzaW9uRXhwaXJl",
        "ZChzZXNzaW9uLCBub3cpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlc3Npb25DYWNoZS5zZXQoY29udmVyc2F0aW9uSWQsIHNlc3Npb24pOw0KICAgICAgICAgICAgICAgICAgICAgICAgaW1wb3J0ZWRDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy5zYXZlU2Vzc2lvbnNUb1N0b3JhZ2UoKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Lya6K+d6K6w5b+G77ya5a+85YWl5Lya6K+d5pWw5o2uJywgew0KICAgICAgICAgICAgICAgICAgICB0b3RhbEltcG9ydGVkOiBPYmplY3Qua2V5cyhkYXRhLnNlc3Npb25zKS5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIHZhbGlkSW1wb3J0ZWQ6IGltcG9ydGVkQ291bnQNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S8muivneiusOW/hu+8muWvvOWFpeS8muivneaVsOaNruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8gU2VsbGVyIElEIOaPkOWPluWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgU2VsbGVySWRFeHRyYWN0b3IgPSB7DQogICAgICAgIHNlbGxlcklkOiBudWxsLA0KICAgICAgICBpbml0aWFsaXplZDogZmFsc2UsDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIneWni+WMllNlbGxlciBJROaPkOWPluWZqO+8iOWinuW8uueJiO+8iQ0KICAgICAgICAgKi8NCiAgICAgICAgaW5pdCgpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmluaXRpYWxpemVkKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCdTZWxsZXJJZEV4dHJhY3RvcuW3suWIneWni+WMlu+8jOi3s+i/h+mHjeWkjeWIneWni+WMlicpOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+agCDlvIDlp4vliJ3lp4vljJZTZWxsZXIgSUTmj5Dlj5blmagnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpemhtemdoueOr+Wigw0KICAgICAgICAgICAgICAgIGNvbnN0IGlzUHJvUGFnZSA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLmluY2x1ZGVzKCdwcm8ueGlhb2hvbmdzaHUuY29tJyk7DQogICAgICAgICAgICAgICAgaWYgKCFpc1Byb1BhZ2UpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KaoO+4jyDlvZPliY3kuI3lnKjlsI/nuqLkuabkuJPkuJrniYjpobXpnaLvvIxzZWxsZXJfaWTmj5Dlj5blj6/og73lpLHotKUnKTsNCiAg",
        "ICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Ux77ya5LuOVVJM5Y+C5pWw5o+Q5Y+W77yI56uL5Y2z5omn6KGM77yJDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfwn5SNIOWwneivleS7jlVSTOWPguaVsOaPkOWPlnNlbGxlcl9pZCcpOw0KICAgICAgICAgICAgICAgIHRoaXMuZXh0cmFjdEZyb21VUkwoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTLvvJrnm5HlkKznvZHnu5zor7fmsYLvvIjnq4vljbPorr7nva7nm5HlkKzlmajvvIkNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/CflI0g6K6+572u572R57uc6K+35rGC55uR5ZCs5ZmoJyk7DQogICAgICAgICAgICAgICAgdGhpcy5pbnRlcmNlcHROZXR3b3JrUmVxdWVzdHMoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTPvvJrku47pobXpnaLmlbDmja7mj5Dlj5bvvIjnq4vljbPlsJ3or5UgKyDlu7bov5/ph43or5XvvIkNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/CflI0g5bCd6K+V5LuO6aG16Z2i5pWw5o2u5o+Q5Y+Wc2VsbGVyX2lkJyk7DQogICAgICAgICAgICAgICAgdGhpcy5leHRyYWN0RnJvbVBhZ2VEYXRhKCk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLmluaXRpYWxpemVkID0gdHJ1ZTsNCg0KICAgICAgICAgICAgICAgIC8vIOWIneWni+WMluWujOaIkOWQjueahOeKtuaAgeajgOafpQ0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXMgPSB0aGlzLmdldFN0YXR1c1JlcG9ydCgpOw0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zZWxsZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSBTZWxsZXIgSUTmj5Dlj5blmajliJ3lp4vljJbmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsbGVySWQ6IHRoaXMuc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ+W3suiOt+WPlicNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KaoO+4jyBTZWxsZXIgSUTmj5Dlj5blmajliJ3lp4vljJblrozmiJDvvIzkvYbmnKrojrflj5bliLBzZWxsZXJfaWQnLCBzdGF0dXMpOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CfkqEg5ZCv5Yqo6Ieq5Yqo5L+u5aSN5py65Yi2Li4uJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWQr+WKqOiHquWKqOS/ruWkjeacuuWItg0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGFydEF1dG9SZXBhaXIoKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0sIDMwMDApOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAg",
        "IExvZ2dlci5lcnJvcign4p2MIFNlbGxlciBJROaPkOWPluWZqOWIneWni+WMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5pbml0aWFsaXplZCA9IGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDku45VUkzlj4LmlbDmj5Dlj5ZzZWxsZXJfaWQNCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RGcm9tVVJMKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCB1cmxQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNlbGxlcklkID0gdXJsUGFyYW1zLmdldCgnc2VsbGVyX2lkJyk7DQogICAgICAgICAgICAgICAgaWYgKHNlbGxlcklkKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsbGVySWQgPSBzZWxsZXJJZDsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+S7jlVSTOaPkOWPlnNlbGxlcl9pZCcsIHsgc2VsbGVySWQ6IHNlbGxlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJyB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5Lmf5qOA5p+laGFzaOWPguaVsA0KICAgICAgICAgICAgICAgIGNvbnN0IGhhc2ggPSB3aW5kb3cubG9jYXRpb24uaGFzaDsNCiAgICAgICAgICAgICAgICBjb25zdCBoYXNoTWF0Y2ggPSBoYXNoLm1hdGNoKC9zZWxsZXJfaWQ9KFteJl0rKS8pOw0KICAgICAgICAgICAgICAgIGlmIChoYXNoTWF0Y2ggJiYgaGFzaE1hdGNoWzFdKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsbGVySWQgPSBoYXNoTWF0Y2hbMV07DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfku45VUkwgaGFzaOaPkOWPlnNlbGxlcl9pZCcsIHsgc2VsbGVySWQ6IGhhc2hNYXRjaFsxXS5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfku45VUkzmj5Dlj5ZzZWxsZXJfaWTlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnm5HlkKznvZHnu5zor7fmsYLmj5Dlj5ZzZWxsZXJfaWTvvIjlop7lvLrniYjvvIkNCiAgICAgICAgICovDQogICAgICAgIGludGVyY2VwdE5ldHdvcmtSZXF1ZXN0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxGZXRjaCA9IHdpbmRvdy5mZXRjaDsNCiAgICAgICAgICAgICAgICBjb25zdCBvcmlnaW5hbFhIUk9wZW4gPSBYTUxI",
        "dHRwUmVxdWVzdC5wcm90b3R5cGUub3BlbjsNCiAgICAgICAgICAgICAgICBjb25zdCBzZWxmID0gdGhpczsNCg0KICAgICAgICAgICAgICAgIC8vIOaLpuaIqmZldGNo6K+35rGCDQogICAgICAgICAgICAgICAgd2luZG93LmZldGNoID0gZnVuY3Rpb24oLi4uYXJncykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBvcmlnaW5hbEZldGNoLmFwcGx5KHRoaXMsIGFyZ3MpOw0KDQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSBhcmdzWzBdOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB1cmwgPT09ICdzdHJpbmcnKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5leHRyYWN0U2VsbGVySWRGcm9tVXJsKHVybCwgJ2ZldGNoJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlv73nlaXnvZHnu5zor7fmsYLmi6bmiKrkuK3nmoTplJnor68NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIC8vIOaLpuaIqlhNTEh0dHBSZXF1ZXN06K+35rGCDQogICAgICAgICAgICAgICAgWE1MSHR0cFJlcXVlc3QucHJvdG90eXBlLm9wZW4gPSBmdW5jdGlvbihtZXRob2QsIHVybCwgLi4uYXJncykgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB1cmwgPT09ICdzdHJpbmcnKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5leHRyYWN0U2VsbGVySWRGcm9tVXJsKHVybCwgJ3hocicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5b+955Wl572R57uc6K+35rGC5oum5oiq5Lit55qE6ZSZ6K+vDQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxYSFJPcGVuLmFwcGx5KHRoaXMsIFttZXRob2QsIHVybCwgLi4uYXJnc10pOw0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+UjSDlop7lvLrnvZHnu5zor7fmsYLmi6bmiKrlmajlt7Lorr7nva4nLCB7DQogICAgICAgICAgICAgICAgICAgIOebkeWQrOexu+WeizogWydmZXRjaCcsICdYTUxIdHRwUmVxdWVzdCddLA0KICAgICAgICAgICAgICAgICAgICDnm67moIdBUEk6IFsNCiAgICAgICAgICAgICAgICAgICAgICAgICdsYW5kaW5ncGFnZS9saXN0IChzZWxsZXJfaWQpJywNCiAgICAgICAgICAgICAgICAgICAgICAgICd3aWtpL2dyb3VwIChvd25lcl9pZCknLA0KICAgICAgICAgICAgICAgICAgICAgICAgJ3dpa2kvaXRlbSAo",
        "b3duZXJfaWQpJywNCiAgICAgICAgICAgICAgICAgICAgICAgICdyb2Jpbi90cmlnZ2VyICh1c2VySWQpJw0KICAgICAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6K6+572u572R57uc6K+35rGC5oum5oiq5Zmo5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5LuOVVJM5Lit5o+Q5Y+Wc2VsbGVyX2lk55qE5qC45b+D6YC76L6RDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1cmwg6K+35rGCVVJMDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzb3VyY2Ug5p2l5rqQ57G75Z6LDQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0U2VsbGVySWRGcm9tVXJsKHVybCwgc291cmNlID0gJ3Vua25vd24nKSB7DQogICAgICAgICAgICBpZiAodGhpcy5zZWxsZXJJZCkgew0KICAgICAgICAgICAgICAgIHJldHVybjsgLy8g5bey57uP6I635Y+W5Yiw5LqG77yM5LiN6ZyA6KaB6YeN5aSN5o+Q5Y+WDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5pa55rOVMTog55u05o6l5LuOc2VsbGVyX2lk5Y+C5pWw5o+Q5Y+WDQogICAgICAgICAgICAgICAgaWYgKHVybC5pbmNsdWRlcygnc2VsbGVyX2lkPScpKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG1hdGNoID0gdXJsLm1hdGNoKC9zZWxsZXJfaWQ9KFteJl0rKS8pOw0KICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2ggJiYgbWF0Y2hbMV0pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGxlcklkID0gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzFdKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnZhbGlkYXRlU2VsbGVySWQoc2VsbGVySWQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxsZXJJZCA9IHNlbGxlcklkOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg5LuOc2VsbGVyX2lk5Y+C5pWw5o+Q5Y+W5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLnN1YnN0cmluZygwLCA4MCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTI6IOS7jm93bmVyX2lk5Y+C5pWw5o+Q",
        "5Y+W77yId2lraSBBUEnkuK1vd25lcl9pZOetieWQjOS6jnNlbGxlcl9pZO+8iQ0KICAgICAgICAgICAgICAgIGlmICh1cmwuaW5jbHVkZXMoJ293bmVyX2lkPScpICYmICh1cmwuaW5jbHVkZXMoJy93aWtpLycpIHx8IHVybC5pbmNsdWRlcygnL3Rvb2xzLycpKSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBtYXRjaCA9IHVybC5tYXRjaCgvb3duZXJfaWQ9KFteJl0rKS8pOw0KICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2ggJiYgbWF0Y2hbMV0pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG93bmVySWQgPSBkZWNvZGVVUklDb21wb25lbnQobWF0Y2hbMV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMudmFsaWRhdGVTZWxsZXJJZChvd25lcklkKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsbGVySWQgPSBvd25lcklkOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg5LuOb3duZXJfaWTlj4LmlbDmj5Dlj5bmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGxlcklkOiBvd25lcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHVybC5zdWJzdHJpbmcoMCwgODApICsgJy4uLicNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5UzOiDku451c2VySWTlj4LmlbDmj5Dlj5bvvIhyb2JpbiBBUEnkuK11c2VySWTnrYnlkIzkuo5zZWxsZXJfaWTvvIkNCiAgICAgICAgICAgICAgICBpZiAodXJsLmluY2x1ZGVzKCd1c2VySWQ9JykgJiYgdXJsLmluY2x1ZGVzKCcvcm9iaW4vdHJpZ2dlcicpKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG1hdGNoID0gdXJsLm1hdGNoKC91c2VySWQ9KFteJl0rKS8pOw0KICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2ggJiYgbWF0Y2hbMV0pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFsxXSk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy52YWxpZGF0ZVNlbGxlcklkKHVzZXJJZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGxlcklkID0gdXNlcklkOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg5LuOdXNlcklk5Y+C5pWw5o+Q5Y+W5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgc291cmNlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHVybC5zdWJzdHJpbmcoMCwgODApICsgJy4uLicNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5U0OiDku47ot6/lvoTkuK3mj5Dlj5ZJRO+8iOafkOS6m0FQSeWwhklE5L2c5Li66Lev5b6E5Y+C5pWw77yJDQogICAgICAgICAgICAgICAgY29uc3QgcGF0aElkTWF0Y2ggPSB1cmwubWF0Y2goL1wvKFthLWYwLTldezI0fSlcLy8pOw0KICAgICAgICAgICAgICAgIGlmIChwYXRoSWRNYXRjaCAmJiBwYXRoSWRNYXRjaFsxXSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXRoSWQgPSBwYXRoSWRNYXRjaFsxXTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMudmFsaWRhdGVTZWxsZXJJZChwYXRoSWQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGxlcklkID0gcGF0aElkOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDku47ot6/lvoTlj4LmlbDmj5Dlj5bmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsbGVySWQ6IHBhdGhJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLnN1YnN0cmluZygwLCA4MCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCdVUkzlj4LmlbDmj5Dlj5blpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICB1cmw6IHVybC5zdWJzdHJpbmcoMCwgNTApICsgJy4uLicNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6aqM6K+Bc2VsbGVyX2lk5qC85byP5piv5ZCm5q2j56GuDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZWxsZXJJZCDlvoXpqozor4HnmoRzZWxsZXJfaWQNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuacieaViA0KICAgICAgICAgKi8NCiAgICAgICAgdmFsaWRhdGVTZWxsZXJJZChzZWxsZXJJZCkgew0KICAgICAgICAgICAgaWYgKCFzZWxsZXJJZCB8fCB0eXBlb2Ygc2VsbGVySWQgIT09ICdzdHJpbmcnKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAg",
        "ICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDljrvpmaTlj6/og73nmoTlvJXlj7flkoznqbrmoLwNCiAgICAgICAgICAgIHNlbGxlcklkID0gc2VsbGVySWQudHJpbSgpLnJlcGxhY2UoL1snIl0vZywgJycpOw0KDQogICAgICAgICAgICAvLyDmo4Dmn6Xplb/luqbvvIjpgJrluLjkuLoyNOS9jeWNgeWFrei/m+WItuWtl+espu+8iQ0KICAgICAgICAgICAgaWYgKHNlbGxlcklkLmxlbmd0aCAhPT0gMjQpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ3NlbGxlcl9pZOmVv+W6puS4jeato+ehricsIHsNCiAgICAgICAgICAgICAgICAgICAgc2VsbGVySWQ6IHNlbGxlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgbGVuZ3RoOiBzZWxsZXJJZC5sZW5ndGgNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuS4uuacieaViOeahOWNgeWFrei/m+WItuWtl+espuS4sg0KICAgICAgICAgICAgaWYgKCEvXlthLWYwLTldezI0fSQvaS50ZXN0KHNlbGxlcklkKSkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygnc2VsbGVyX2lk5qC85byP5LiN5q2j56GuJywgew0KICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6ICfpnZ7ljYHlha3ov5vliLbmoLzlvI8nDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ3NlbGxlcl9pZOagvOW8j+mqjOivgemAmui/hycsIHsNCiAgICAgICAgICAgICAgICBzZWxsZXJJZDogc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDku47pobXpnaLmlbDmja7mj5Dlj5ZzZWxsZXJfaWTvvIjlop7lvLrniYjvvIkNCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RGcm9tUGFnZURhdGEoKSB7DQogICAgICAgICAgICAvLyDnq4vljbPlsJ3or5XkuIDmrKENCiAgICAgICAgICAgIHRoaXMudHJ5RXh0cmFjdEZyb21QYWdlRGF0YSgpOw0KDQogICAgICAgICAgICAvLyDlu7bov5/ph43or5XmnLrliLYNCiAgICAgICAgICAgIGNvbnN0IHJldHJ5SW50ZXJ2YWxzID0gWzEwMDAsIDMwMDAsIDUwMDAsIDEwMDAwXTsgLy8gMXMsIDNzLCA1cywgMTBzDQoNCiAgICAgICAgICAgIHJldHJ5SW50ZXJ2YWxzLmZvckVhY2goKGRlbGF5LCBpbmRleCkgPT4gew0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuc2VsbGVySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5k",
        "ZWJ1Zyhg56ysJHtpbmRleCArIDF95qyh6YeN6K+V5o+Q5Y+Wc2VsbGVyX2lkYCwgeyBkZWxheSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudHJ5RXh0cmFjdEZyb21QYWdlRGF0YSgpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSwgZGVsYXkpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWwneivleS7jumhtemdouaVsOaNruaPkOWPlnNlbGxlcl9pZOeahOaguOW/g+mAu+i+kQ0KICAgICAgICAgKi8NCiAgICAgICAgdHJ5RXh0cmFjdEZyb21QYWdlRGF0YSgpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLnNlbGxlcklkKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOyAvLyDlt7Lnu4/ojrflj5bliLDkuoYNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/CflI0g5byA5aeL5LuO6aG16Z2i5pWw5o2u5o+Q5Y+Wc2VsbGVyX2lkJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5UxOiDku47lhajlsYDlj5jph4/kuK3mj5Dlj5YNCiAgICAgICAgICAgICAgICBjb25zdCBnbG9iYWxTb3VyY2VzID0gWw0KICAgICAgICAgICAgICAgICAgICAoKSA9PiB3aW5kb3cuX19JTklUSUFMX1NUQVRFX18/LnNlbGxlcj8uaWQsDQogICAgICAgICAgICAgICAgICAgICgpID0+IHdpbmRvdy5fX0lOSVRJQUxfU1RBVEVfXz8udXNlcj8uc2VsbGVySWQsDQogICAgICAgICAgICAgICAgICAgICgpID0+IHdpbmRvdy5fX0lOSVRJQUxfU1RBVEVfXz8uYWNjb3VudD8uc2VsbGVySWQsDQogICAgICAgICAgICAgICAgICAgICgpID0+IHdpbmRvdy5nX2NvbmZpZz8uc2VsbGVySWQsDQogICAgICAgICAgICAgICAgICAgICgpID0+IHdpbmRvdy5BUFBfQ09ORklHPy5zZWxsZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgKCkgPT4gd2luZG93LlVTRVJfSU5GTz8uc2VsbGVySWQsDQogICAgICAgICAgICAgICAgICAgICgpID0+IHdpbmRvdy5TRUxMRVJfSU5GTz8uaWQNCiAgICAgICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBnZXRTb3VyY2Ugb2YgZ2xvYmFsU291cmNlcykgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VsbGVySWQgPSBnZXRTb3VyY2UoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWxsZXJJZCAmJiB0aGlzLnZhbGlkYXRlU2VsbGVySWQoc2VsbGVySWQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxsZXJJZCA9IHNlbGxlcklkOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg5LuO5YWo5bGA5Y+Y6YeP5o+Q5Y+Wc2VsbGVyX2lk5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2U6IGdldFNvdXJjZS50b1N0cmluZygpLm1hdGNoKC93aW5kb3dcLihbXj9dKykvKT8uWzFdIHx8ICd1bmtub3duJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOW/veeVpeWNleS4qua6kOeahOmUmeivrw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMjog5LuObG9jYWxTdG9yYWdlL3Nlc3Npb25TdG9yYWdl5o+Q5Y+WDQogICAgICAgICAgICAgICAgY29uc3Qgc3RvcmFnZUtleXMgPSBbDQogICAgICAgICAgICAgICAgICAgICdzZWxsZXJfaWQnLCAnc2VsbGVySWQnLCAnU0VMTEVSX0lEJywNCiAgICAgICAgICAgICAgICAgICAgJ3VzZXJfaWQnLCAndXNlcklkJywgJ1VTRVJfSUQnLA0KICAgICAgICAgICAgICAgICAgICAnYWNjb3VudF9pZCcsICdhY2NvdW50SWQnLCAnQUNDT1VOVF9JRCcNCiAgICAgICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgb2Ygc3RvcmFnZUtleXMpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0b3JlZElkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KSB8fCBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKGtleSk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3RvcmVkSWQgJiYgdGhpcy52YWxpZGF0ZVNlbGxlcklkKHN0b3JlZElkKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsbGVySWQgPSBzdG9yZWRJZDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOS7juWtmOWCqOS4reaPkOWPlnNlbGxlcl9pZOaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsbGVySWQ6IHN0b3JlZElkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RvcmFnZUtleToga2V5DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5b+955Wl5a2Y5YKo6K6/6Zeu6ZSZ6K+vDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5UzOiDku45ET03lhYPntKDkuK3mj5Dlj5YNCiAgICAgICAgICAgICAgICBjb25zdCBkb21TZWxlY3RvcnMgPSBbDQogICAgICAgICAgICAgICAgICAgICdbZGF0",
        "YS1zZWxsZXItaWRdJywNCiAgICAgICAgICAgICAgICAgICAgJ1tzZWxsZXItaWRdJywNCiAgICAgICAgICAgICAgICAgICAgJ1tkYXRhLXVzZXItaWRdJywNCiAgICAgICAgICAgICAgICAgICAgJ1t1c2VyLWlkXScsDQogICAgICAgICAgICAgICAgICAgICcuc2VsbGVyLWluZm9bZGF0YS1pZF0nLA0KICAgICAgICAgICAgICAgICAgICAnLnVzZXItaW5mb1tkYXRhLWlkXScsDQogICAgICAgICAgICAgICAgICAgICdtZXRhW25hbWU9InNlbGxlci1pZCJdJywNCiAgICAgICAgICAgICAgICAgICAgJ21ldGFbcHJvcGVydHk9InNlbGxlci1pZCJdJw0KICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdG9yIG9mIGRvbVNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZWxlbWVudCBvZiBlbGVtZW50cykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGxlcklkID0gZWxlbWVudC5kYXRhc2V0Py5zZWxsZXJJZCB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmRhdGFzZXQ/LnVzZXJJZCB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmRhdGFzZXQ/LmlkIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdzZWxsZXItaWQnKSB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmdldEF0dHJpYnV0ZSgndXNlci1pZCcpIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdjb250ZW50Jyk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VsbGVySWQgJiYgdGhpcy52YWxpZGF0ZVNlbGxlcklkKHNlbGxlcklkKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGxlcklkID0gc2VsbGVySWQ7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg5LuORE9N5YWD57Sg5o+Q5Y+Wc2VsbGVyX2lk5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsbGVySWQ6IHNlbGxlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFnTmFtZTogZWxlbWVudC50YWdOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBy",
        "ZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5b+955WlRE9N5p+l6K+i6ZSZ6K+vDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5U0OiDku47pobXpnaLohJrmnKzmoIfnrb7kuK3mj5Dlj5YNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzY3JpcHRUYWdzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc2NyaXB0Jyk7DQogICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2NyaXB0IG9mIHNjcmlwdFRhZ3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzY3JpcHQudGV4dENvbnRlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzZWxsZXJJZE1hdGNoID0gc2NyaXB0LnRleHRDb250ZW50Lm1hdGNoKC9bIiddc2VsbGVyX2lkWyInXVxzKjpccypbIiddKFteIiddKylbIiddLyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlcklkTWF0Y2ggPSBzY3JpcHQudGV4dENvbnRlbnQubWF0Y2goL1siJ111c2VySWRbIiddXHMqOlxzKlsiJ10oW14iJ10rKVsiJ10vKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZvdW5kSWQgPSBzZWxsZXJJZE1hdGNoPy5bMV0gfHwgdXNlcklkTWF0Y2g/LlsxXTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZm91bmRJZCAmJiB0aGlzLnZhbGlkYXRlU2VsbGVySWQoZm91bmRJZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxsZXJJZCA9IGZvdW5kSWQ7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg5LuO6ISa5pys5qCH562+5o+Q5Y+Wc2VsbGVyX2lk5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsbGVySWQ6IGZvdW5kSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfku47ohJrmnKzmoIfnrb7mj5Dlj5blpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn4p2MIOmhtemdouaVsOaNruaPkOWPluacquaJvuWIsOacieaViOeahHNlbGxlcl9pZCcpOw0KDQogICAgICAgICAg",
        "ICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6aG16Z2i5pWw5o2u5o+Q5Y+W6L+H56iL5Ye66ZSZJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+Wc2VsbGVyX2lkDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIGdldFNlbGxlcklkKCkgew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2VsbGVySWQ7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaJi+WKqOiuvue9rnNlbGxlcl9pZA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VsbGVySWQNCiAgICAgICAgICovDQogICAgICAgIHNldFNlbGxlcklkKHNlbGxlcklkKSB7DQogICAgICAgICAgICBpZiAoc2VsbGVySWQgJiYgdHlwZW9mIHNlbGxlcklkID09PSAnc3RyaW5nJykgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnZhbGlkYXRlU2VsbGVySWQoc2VsbGVySWQpKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsbGVySWQgPSBzZWxsZXJJZDsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDmiYvliqjorr7nva5zZWxsZXJfaWTmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfinYwg5omL5Yqo6K6+572uc2VsbGVyX2lk5aSx6LSl77ya5qC85byP5peg5pWIJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgc2VsbGVySWQ6IHNlbGxlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOW8uuWItumHjeaWsOaPkOWPlnNlbGxlcl9pZA0KICAgICAgICAgKi8NCiAgICAgICAgZm9yY2VSZWZyZXNoKCkgew0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CflIQg5by65Yi26YeN5paw5o+Q5Y+Wc2VsbGVyX2lkJyk7DQogICAgICAgICAgICB0aGlzLnNlbGxlcklkID0gbnVsbDsNCiAgICAgICAgICAgIHRoaXMuaW5pdGlhbGl6ZWQgPSBmYWxzZTsNCiAgICAgICAgICAgIHRoaXMuaW5pdCgpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmj5Dlj5bnirbmgIHmiqXlkYoNCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g54q25oCB5oql5ZGKDQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0dXNSZXBvcnQoKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIGluaXRpYWxpemVkOiB0aGlzLmluaXRpYWxpemVkLA0KICAgICAgICAgICAg",
        "ICAgIGhhc1NlbGxlcklkOiAhIXRoaXMuc2VsbGVySWQsDQogICAgICAgICAgICAgICAgc2VsbGVySWQ6IHRoaXMuc2VsbGVySWQgPyB0aGlzLnNlbGxlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJyA6IG51bGwsDQogICAgICAgICAgICAgICAgY3VycmVudFVybDogd2luZG93LmxvY2F0aW9uLmhyZWYsDQogICAgICAgICAgICAgICAgaXNQcm9QYWdlOiB3aW5kb3cubG9jYXRpb24uaHJlZi5pbmNsdWRlcygncHJvLnhpYW9ob25nc2h1LmNvbScpLA0KICAgICAgICAgICAgICAgIGV4dHJhY3Rpb25NZXRob2RzOiB7DQogICAgICAgICAgICAgICAgICAgIHVybDogdGhpcy5zZWxsZXJJZCA/ICflt7LlsJ3or5UnIDogJ+acquaIkOWKnycsDQogICAgICAgICAgICAgICAgICAgIG5ldHdvcms6ICfnm5HlkKzkuK0nLA0KICAgICAgICAgICAgICAgICAgICBwYWdlRGF0YTogJ+W3suWwneivlScsDQogICAgICAgICAgICAgICAgICAgIG1hbnVhbDogJ+WPr+eUqCcNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmtYvor5VzZWxsZXJfaWTmj5Dlj5blip/og70NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHRlc3RFeHRyYWN0aW9uKCkgew0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfp6og5byA5aeL5rWL6K+Vc2VsbGVyX2lk5o+Q5Y+W5Yqf6IO9Jyk7DQoNCiAgICAgICAgICAgIGNvbnN0IHJlcG9ydCA9IHRoaXMuZ2V0U3RhdHVzUmVwb3J0KCk7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+TiiDlvZPliY3nirbmgIHmiqXlkYonLCByZXBvcnQpOw0KDQogICAgICAgICAgICAvLyDmtYvor5VVUkzmj5Dlj5YNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5SNIOa1i+ivlVVSTOaPkOWPli4uLicpOw0KICAgICAgICAgICAgdGhpcy5leHRyYWN0RnJvbVVSTCgpOw0KDQogICAgICAgICAgICAvLyDmtYvor5XpobXpnaLmlbDmja7mj5Dlj5YNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5SNIOa1i+ivlemhtemdouaVsOaNruaPkOWPli4uLicpOw0KICAgICAgICAgICAgdGhpcy50cnlFeHRyYWN0RnJvbVBhZ2VEYXRhKCk7DQoNCiAgICAgICAgICAgIC8vIOetieW+hee9kee7nOivt+axgg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CflI0g562J5b6F572R57uc6K+35rGC55uR5ZCsLi4uJyk7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+SoSDor7flnKjpobXpnaLkuK3ov5vooYzkuIDkupvmk43kvZzvvIjlpoLliIfmjaLmoIfnrb7pobXjgIHliLfmlrDnrYnvvInmnaXop6blj5HnvZHnu5zor7fmsYInKTsNCg0KICAgICAgICAgICAgLy8gNeenkuWQjui+k+WHuuacgOe7iOe7k+aenA0KICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgICAgICAgICAgY29uc3QgZmluYWxSZXBvcnQgPSB0aGlzLmdldFN0YXR1c1JlcG9ydCgpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5OLIOa1i+ivleWujOaI",
        "kCAtIOacgOe7iOeKtuaAgeaKpeWRiicsIGZpbmFsUmVwb3J0KTsNCg0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnNlbGxlcklkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUgc2VsbGVyX2lk5o+Q5Y+W5oiQ5Yqf77yBJyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KdjCBzZWxsZXJfaWTmj5Dlj5blpLHotKXvvIzor7fmo4Dmn6XvvJonKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJzEuIOaYr+WQpuWcqOWwj+e6ouS5puS4k+S4mueJiOmhtemdoiAocHJvLnhpYW9ob25nc2h1LmNvbSknKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJzIuIOaYr+WQpuW3sueZu+W9lei0puaItycpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2FybignMy4g5bCd6K+V5Yi35paw6aG16Z2i5oiW5YiH5o2i5qCH562+6aG1Jyk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCc0LiDlj6/ku6XmiYvliqjorr7nva7vvJpTZWxsZXJJZEV4dHJhY3Rvci5zZXRTZWxsZXJJZCgieW91cl9zZWxsZXJfaWQiKScpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sIDUwMDApOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDovpPlh7rosIPor5Xkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIGRlYnVnKCkgew0KICAgICAgICAgICAgY29uc3QgcmVwb3J0ID0gdGhpcy5nZXRTdGF0dXNSZXBvcnQoKTsNCiAgICAgICAgICAgIGNvbnNvbGUuZ3JvdXAoJ/CflI0gU2VsbGVySWRFeHRyYWN0b3Ig6LCD6K+V5L+h5oGvJyk7DQogICAgICAgICAgICBjb25zb2xlLmxvZygn54q25oCB5oql5ZGKOicsIHJlcG9ydCk7DQogICAgICAgICAgICBjb25zb2xlLmxvZygn5b2T5YmNVVJMOicsIHdpbmRvdy5sb2NhdGlvbi5ocmVmKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfpobXpnaLmoIfpopg6JywgZG9jdW1lbnQudGl0bGUpOw0KICAgICAgICAgICAgY29uc29sZS5sb2coJ+WFqOWxgOWPmOmHj+ajgOafpTonKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCcgIC0gd2luZG93Ll9fSU5JVElBTF9TVEFURV9fOicsICEhd2luZG93Ll9fSU5JVElBTF9TVEFURV9fKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCcgIC0gd2luZG93LmdfY29uZmlnOicsICEhd2luZG93LmdfY29uZmlnKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCcgIC0gd2luZG93LkFQUF9DT05GSUc6JywgISF3aW5kb3cuQVBQX0NPTkZJRyk7DQogICAgICAgICAgICBjb25zb2xlLmxvZygnbG9jYWxTdG9yYWdl5qOA5p+lOicpOw0KICAgICAgICAgICAgY29uc29sZS5sb2coJyAgLSBzZWxsZXJfaWQ6JywgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3NlbGxlcl9pZCcpKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCcgIC0gdXNlcklkOicsIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VySWQnKSk7DQogICAg",
        "ICAgICAgICBjb25zb2xlLmxvZygnRE9N5YWD57Sg5qOA5p+lOicpOw0KICAgICAgICAgICAgY29uc29sZS5sb2coJyAgLSBbZGF0YS1zZWxsZXItaWRdOicsIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXNlbGxlci1pZF0nKS5sZW5ndGgpOw0KICAgICAgICAgICAgY29uc29sZS5sb2coJyAgLSBbZGF0YS11c2VyLWlkXTonLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS11c2VyLWlkXScpLmxlbmd0aCk7DQogICAgICAgICAgICBjb25zb2xlLmdyb3VwRW5kKCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiHquWKqOS/ruWkjeacuuWItiAtIOW9k3NlbGxlcl9pZOS4uuepuuaXtuiHquWKqOinpuWPkeS8muivneeCueWHuw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgc3RhcnRBdXRvUmVwYWlyKCkgew0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CflKcg5ZCv5YqoU2VsbGVyIElE6Ieq5Yqo5L+u5aSN5py65Yi2Jyk7DQoNCiAgICAgICAgICAgIGNvbnN0IG1heFJldHJpZXMgPSAzOw0KICAgICAgICAgICAgbGV0IGN1cnJlbnRSZXRyeSA9IDA7DQoNCiAgICAgICAgICAgIHdoaWxlIChjdXJyZW50UmV0cnkgPCBtYXhSZXRyaWVzICYmICF0aGlzLnNlbGxlcklkKSB7DQogICAgICAgICAgICAgICAgY3VycmVudFJldHJ5Kys7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oYPCflIQg56ysJHtjdXJyZW50UmV0cnl95qyh6Ieq5Yqo5L+u5aSN5bCd6K+VICjlhbEke21heFJldHJpZXN95qyhKWApOw0KDQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3VjY2VzcyA9IGF3YWl0IHRoaXMuYXR0ZW1wdEF1dG9SZXBhaXIoY3VycmVudFJldHJ5KTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg6Ieq5Yqo5L+u5aSN5oiQ5Yqf77yBc2VsbGVyX2lk5bey6I635Y+WJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGxlcklkOiB0aGlzLnNlbGxlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXRyeUNvdW50OiBjdXJyZW50UmV0cnkNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKGDinYwg56ysJHtjdXJyZW50UmV0cnl95qyh6Ieq5Yqo5L+u5aSN5aSx6LSlYCwgew0KICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICByZXRyeUNvdW50OiBjdXJyZW50UmV0cnkNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAg",
        "Ly8g562J5b6F5LiA5q615pe26Ze05YaN6YeN6K+VDQogICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRSZXRyeSA8IG1heFJldHJpZXMpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgd2FpdFRpbWUgPSBjdXJyZW50UmV0cnkgKiAyMDAwOyAvLyDpgJLlop7nrYnlvoXml7bpl7TvvJoycywgNHMsIDZzDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKGDij7Mg562J5b6FJHt3YWl0VGltZS8xMDAwfeenkuWQjui/m+ihjOS4i+asoemHjeivlS4uLmApOw0KICAgICAgICAgICAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgd2FpdFRpbWUpKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOaJgOaciemHjeivlemDveWksei0pQ0KICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfinYwg6Ieq5Yqo5L+u5aSN5py65Yi25aSx6LSl77yM5omA5pyJ6YeN6K+V6YO95pyq5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgIHRvdGFsUmV0cmllczogbWF4UmV0cmllcywNCiAgICAgICAgICAgICAgICBzdWdnZXN0aW9uczogWw0KICAgICAgICAgICAgICAgICAgICAnMS4g6K+35omL5Yqo5Yi35paw6aG16Z2iJywNCiAgICAgICAgICAgICAgICAgICAgJzIuIOehruiupOaYr+WQpuWcqOWwj+e6ouS5puS4k+S4mueJiOmhtemdoiAocHJvLnhpYW9ob25nc2h1LmNvbSknLA0KICAgICAgICAgICAgICAgICAgICAnMy4g5qOA5p+l572R57uc6L+e5o6l54q25oCBJywNCiAgICAgICAgICAgICAgICAgICAgJzQuIOWwneivleaJi+WKqOeCueWHu+S7u+aEj+S8muivnemhuScsDQogICAgICAgICAgICAgICAgICAgICc1LiDmiafooYwgU2VsbGVySWRFeHRyYWN0b3IuZm9yY2VSZWZyZXNoKCknDQogICAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaJp+ihjOWNleasoeiHquWKqOS/ruWkjeWwneivlQ0KICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gcmV0cnlDb3VudCDlvZPliY3ph43or5XmrKHmlbANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgYXR0ZW1wdEF1dG9SZXBhaXIocmV0cnlDb3VudCkgew0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDwn5SNIOW8gOWni+esrCR7cmV0cnlDb3VudH3mrKHoh6rliqjkv67lpI3lsJ3or5VgKTsNCg0KICAgICAgICAgICAgLy8gMS4g6I635Y+W5Y+v6KeB55qE5Lya6K+d6aG5DQogICAgICAgICAgICBjb25zdCB2aXNpYmxlQ29udGFjdEl0ZW1zID0gdGhpcy5nZXRWaXNpYmxlQ29udGFjdEl0ZW1zKCk7DQogICAgICAgICAgICBpZiAodmlzaWJsZUNvbnRhY3RJdGVtcy5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4pqg77iPIOacquaJvuWIsOWPr+ingeeahOS8muivnemhue+8jOaXoOazleaJp+ihjOiH",
        "quWKqOS/ruWkjScpOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oYPCfk4sg5om+5YiwJHt2aXNpYmxlQ29udGFjdEl0ZW1zLmxlbmd0aH3kuKrlj6/op4HkvJror53poblgKTsNCg0KICAgICAgICAgICAgLy8gMi4g6ZqP5py66YCJ5oup5LiA5Liq5Lya6K+d6aG577yI6YG/5YWN5oC75piv6YCJ5oup5ZCM5LiA5Liq77yJDQogICAgICAgICAgICBjb25zdCByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHZpc2libGVDb250YWN0SXRlbXMubGVuZ3RoKTsNCiAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkSXRlbSA9IHZpc2libGVDb250YWN0SXRlbXNbcmFuZG9tSW5kZXhdOw0KDQogICAgICAgICAgICAvLyAzLiDmj5Dlj5bkvJror53kv6Hmga/nlKjkuo7ml6Xlv5cNCiAgICAgICAgICAgIGNvbnN0IHVzZXJOYW1lID0gdGhpcy5leHRyYWN0VXNlck5hbWVGcm9tQ29udGFjdChzZWxlY3RlZEl0ZW0pIHx8ICfmnKrnn6XnlKjmiLcnOw0KICAgICAgICAgICAgY29uc3QgY29udmVyc2F0aW9uSWQgPSBzZWxlY3RlZEl0ZW0uZGF0YXNldD8ua2V5IHx8ICfmnKrnn6VJRCc7DQoNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKGDwn46vIOmAieS4reS8muivnemhuei/m+ihjOS/ruWkjeWwneivlWAsIHsNCiAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDE1KSArICcuLi4nLA0KICAgICAgICAgICAgICAgIGl0ZW1JbmRleDogcmFuZG9tSW5kZXgsDQogICAgICAgICAgICAgICAgdG90YWxJdGVtczogdmlzaWJsZUNvbnRhY3RJdGVtcy5sZW5ndGgNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAvLyA0LiDmiafooYzngrnlh7vmk43kvZwNCiAgICAgICAgICAgIGNvbnN0IGNsaWNrU3VjY2VzcyA9IHRoaXMuY2xpY2tDb250YWN0SXRlbUZvclJlcGFpcihzZWxlY3RlZEl0ZW0sIHVzZXJOYW1lKTsNCiAgICAgICAgICAgIGlmICghY2xpY2tTdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oYOKdjCDngrnlh7vkvJror53pobnlpLHotKU6ICR7dXNlck5hbWV9YCk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyA1LiDnrYnlvoVBUEnor7fmsYLop6blj5Hlkozlk43lupQNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfij7Mg562J5b6FQVBJ6K+35rGC6Kem5Y+RLi4uJyk7DQogICAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMzAwMCkpOyAvLyDnrYnlvoUz56eS6K6pQVBJ6K+35rGC5a6M5oiQDQoNCiAgICAgICAgICAgIC8vIDYuIOajgOafpXNlbGxlcl9pZOaYr+WQpuW3suiOt+WPlg0KICAgICAgICAgICAgaWYgKHRoaXMuc2VsbGVySWQpIHsNCiAgICAgICAgICAgICAgICBMb2dn",
        "ZXIuaW5mbygn4pyFIOiHquWKqOS/ruWkjeaIkOWKn++8gemAmui/h+eCueWHu+S8muivnemhueiOt+WPluWIsHNlbGxlcl9pZCcsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIHNlbGxlcklkOiB0aGlzLnNlbGxlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybihg4pqg77iPIOeCueWHu+S8muivnemhueWQjuS7jeacquiOt+WPluWIsHNlbGxlcl9pZDogJHt1c2VyTmFtZX1gKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluWPr+ingeeahOS8muivnemhuQ0KICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXk8RWxlbWVudD59IOWPr+ingeeahOS8muivnemhueaVsOe7hA0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0VmlzaWJsZUNvbnRhY3RJdGVtcygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYWxsSXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc3gtY29udGFjdC1pdGVtJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdmlzaWJsZUl0ZW1zID0gW107DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgYWxsSXRlbXMpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNDb250YWN0SXRlbVZpc2libGUoaXRlbSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHZpc2libGVJdGVtcy5wdXNoKGl0ZW0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDwn5OKIOS8muivnemhueWPr+ingeaAp+e7n+iuoWAsIHsNCiAgICAgICAgICAgICAgICAgICAgdG90YWxJdGVtczogYWxsSXRlbXMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICB2aXNpYmxlSXRlbXM6IHZpc2libGVJdGVtcy5sZW5ndGgNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB2aXNpYmxlSXRlbXM7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6I635Y+W5Y+v6KeB5Lya6K+d6aG55pe25Ye66ZSZJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gW107DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpeS8muivnemhueaYr+WQpuWPr+ingQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGl0ZW0g5Lya6K+d6aG55YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKblj6/op4ENCiAgICAgICAgICovDQogICAgICAgIGlzQ29u",
        "dGFjdEl0ZW1WaXNpYmxlKGl0ZW0pIHsNCiAgICAgICAgICAgIGlmICghaXRlbSB8fCAhaXRlbS5pc0Nvbm5lY3RlZCkgew0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlhYPntKDmmK/lkKblnKhET03lm57mlLbnirbmgIHvvIh2dWUtcmVjeWNsZS1zY3JvbGxlcueJueacie+8iQ0KICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1WaWV3ID0gaXRlbS5jbG9zZXN0KCcudnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0tdmlldycpOw0KICAgICAgICAgICAgICAgIGlmIChpdGVtVmlldykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm0gPSBpdGVtVmlldy5zdHlsZS50cmFuc2Zvcm07DQogICAgICAgICAgICAgICAgICAgIGlmICh0cmFuc2Zvcm0gJiYgdHJhbnNmb3JtLmluY2x1ZGVzKCd0cmFuc2xhdGVZKC05OTk5cHgpJykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8g5YWD57Sg6KKr5Zue5pS25Yiw5LiN5Y+v6KeB5Yy65Z+fDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6Xln7rmnKzlj6/op4HmgKcNCiAgICAgICAgICAgICAgICBjb25zdCByZWN0ID0gaXRlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBpc0luVmlld3BvcnQgPSByZWN0LnRvcCA+PSAwICYmIHJlY3QubGVmdCA+PSAwICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY3QuYm90dG9tIDw9IHdpbmRvdy5pbm5lckhlaWdodCAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWN0LnJpZ2h0IDw9IHdpbmRvdy5pbm5lcldpZHRoOw0KDQogICAgICAgICAgICAgICAgY29uc3QgY29tcHV0ZWRTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGl0ZW0pOw0KICAgICAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IGNvbXB1dGVkU3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wdXRlZFN0eWxlLnZpc2liaWxpdHkgIT09ICdoaWRkZW4nICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wdXRlZFN0eWxlLm9wYWNpdHkgIT09ICcwJzsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBpc0luVmlld3BvcnQgJiYgaXNWaXNpYmxlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+ajgOafpeS8muivnemhueWPr+ingeaAp+aXtuWHuumUmScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDku47kvJror53pobnkuK3mj5Dlj5bnlKjm",
        "iLflkI0NCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBjb250YWN0SXRlbSDkvJror53pobnlhYPntKANCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30g55So5oi35ZCNDQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0VXNlck5hbWVGcm9tQ29udGFjdChjb250YWN0SXRlbSkgew0KICAgICAgICAgICAgY29uc3Qgc2VsZWN0b3JzID0gWw0KICAgICAgICAgICAgICAgICcuc3gtY29udGFjdC1pdGVtIC5uaWNrLW5hbWUnLA0KICAgICAgICAgICAgICAgICcubmljay1uYW1lJywNCiAgICAgICAgICAgICAgICAnLmQtdGV4dC5uaWNrLW5hbWUnLA0KICAgICAgICAgICAgICAgICcuaXRlbS1tYWluLXRvcCAubmljay1uYW1lJywNCiAgICAgICAgICAgICAgICAnLnN4LWNvbnRhY3QtaXRlbS1uYW1lJywNCiAgICAgICAgICAgICAgICAnLmNvbnRhY3QtbmFtZScsDQogICAgICAgICAgICAgICAgJy51c2VyLW5hbWUnDQogICAgICAgICAgICBdOw0KDQogICAgICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdG9yIG9mIHNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBjb250YWN0SXRlbS5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQgJiYgZWxlbWVudC50ZXh0Q29udGVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5b+955Wl6YCJ5oup5Zmo6ZSZ6K+v77yM57un57ut5bCd6K+V5LiL5LiA5LiqDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Li65L+u5aSN55uu55qE54K55Ye75Lya6K+d6aG5DQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gY29udGFjdEl0ZW0g5Lya6K+d6aG55YWD57SgDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI3vvIjnlKjkuo7ml6Xlv5fvvIkNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpueCueWHu+aIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgY2xpY2tDb250YWN0SXRlbUZvclJlcGFpcihjb250YWN0SXRlbSwgdXNlck5hbWUpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDwn5ax77iPIOWHhuWkh+eCueWHu+S8muivnemhuei/m+ihjOS/ruWkjTogJHt1c2VyTmFtZX1gKTsNCg0KICAgICAgICAgICAgICAgIC8vIOehruS/neWFg+e0oOWPr+S6pOS6kg0KICAgICAgICAgICAgICAgIGlmICghY29udGFjdEl0ZW0uaXNDb25uZWN0ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+S8muivnemh",
        "ueWFg+e0oOW3suS7jkRPTeS4reenu+mZpCcpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5L2/55So6aG555uu5Lit5bey5pyJ55qEVXRpbHMuc2ltdWxhdGVDbGlja+aWueazlQ0KICAgICAgICAgICAgICAgIGNvbnN0IGNsaWNrZWQgPSBVdGlscy5zaW11bGF0ZUNsaWNrKGNvbnRhY3RJdGVtKTsNCg0KICAgICAgICAgICAgICAgIGlmIChjbGlja2VkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKGDinIUg5oiQ5Yqf54K55Ye75Lya6K+d6aG5OiAke3VzZXJOYW1lfWApOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybihg4pqg77iPIOeCueWHu+S8muivnemhueWksei0pTogJHt1c2VyTmFtZX1gKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoYOKdjCDngrnlh7vkvJror53pobnml7blj5HnlJ/plJnor686ICR7dXNlck5hbWV9YCwgew0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOeVmeWuoui1hEFQSeajgOa1i+WZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgTGVhZHNBUElEZXRlY3RvciA9IHsNCiAgICAgICAgLy8gQVBJ6K+35rGC6Zif5YiX77yM6YG/5YWN5bm25Y+R6L+H5aSaDQogICAgICAgIHJlcXVlc3RRdWV1ZTogW10sDQogICAgICAgIGlzUHJvY2Vzc2luZzogZmFsc2UsDQogICAgICAgIG1heENvbmN1cnJlbnQ6IDIsDQoNCiAgICAgICAgLy8g6K+35rGC6Ze06ZqU77yI5q+r56eS77yJLSDlrp7ml7bmqKHlvI/kuIvnqI3lvq7nvKnnn63pl7TpmpQNCiAgICAgICAgUkVRVUVTVF9JTlRFUlZBTDogMTUwLA0KDQogICAgICAgIC8vIOeUqOaIt+S/oeaBr+e8k+WtmA0KICAgICAgICB1c2VySW5mb0NhY2hlOiBuZXcgTWFwKCksDQoNCiAgICAgICAgLy8g57yT5a2Y6L+H5pyf5pe26Ze077yIMTDliIbpkp/vvIkNCiAgICAgICAgVVNFUl9JTkZPX0NBQ0hFX0VYUElSRTogMTAgKiA2MCAqIDEwMDAsDQoNCiAgICAgICAgLy8g5oCn6IO957uf6K6hDQogICAgICAgIHN0YXRzOiB7DQogICAgICAgICAgICB0b3RhbFJlcXVlc3RzOiAwLA0KICAgICAgICAgICAgc3VjY2Vzc2Z1bFJlcXVlc3RzOiAwLA0KICAgICAgICAgICAgZmFpbGVkUmVxdWVzdHM6IDAsDQogICAgICAgICAgICBhdmVyYWdlUmVzcG9uc2VUaW1lOiAwLA0K",
        "ICAgICAgICAgICAgbGFzdFJlcXVlc3RUaW1lOiAwLA0KICAgICAgICAgICAgcmVhbHRpbWVSZXF1ZXN0czogMA0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpgJrov4dBUEnmo4DmtYvnlZnlrqLotYTnirbmgIHvvIjluKbmgKfog73nu5/orqHvvIkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCDnlKjmiLdJRA0KICAgICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGlzUmVhbHRpbWUg5piv5ZCm5Li65a6e5pe25qOA5rWLDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdHxudWxsPn0g5qOA5rWL57uT5p6cDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBkZXRlY3RMZWFkc1N0YXR1c1ZpYUFQSSh1c2VySWQsIGlzUmVhbHRpbWUgPSBmYWxzZSkgew0KICAgICAgICAgICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIHRoaXMuc3RhdHMudG90YWxSZXF1ZXN0cysrOw0KDQogICAgICAgICAgICBpZiAoaXNSZWFsdGltZSkgew0KICAgICAgICAgICAgICAgIHRoaXMuc3RhdHMucmVhbHRpbWVSZXF1ZXN0cysrOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghdXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdBUEnmo4DmtYvvvJrnlKjmiLdJROS4uuepuicpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRzLmZhaWxlZFJlcXVlc3RzKys7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WPlnNlbGxlcl9pZA0KICAgICAgICAgICAgICAgIGNvbnN0IHNlbGxlcklkID0gU2VsbGVySWRFeHRyYWN0b3IuZ2V0U2VsbGVySWQoKTsNCiAgICAgICAgICAgICAgICBpZiAoIXNlbGxlcklkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfinYwgQVBJ5qOA5rWL5aSx6LSl77ya5peg5rOV6I635Y+Wc2VsbGVyX2lkJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgaXNSZWFsdGltZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIOino+WGs+aWueahiDogWw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICcxLiDliLfmlrDpobXpnaLph43mlrDliqDovb0nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICcyLiDmiafooYwgU2VsbGVySWRFeHRyYWN0b3IudGVzdEV4dHJhY3Rpb24oKScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJzMuIOaJp+ihjCBTZWxsZXJJZEV4dHJhY3Rvci5mb3JjZVJlZnJlc2goKScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJzQuIOajgOafpeaYr+WQpuWcqOWwj+e6ouS5puS4k+S4mueJiOmhtemdoicNCiAgICAgICAgICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgICAgICAgICAg",
        "fSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5bCd6K+V5by65Yi25Yi35paw5LiA5qyhc2VsbGVyX2lk5o+Q5Y+WDQogICAgICAgICAgICAgICAgICAgIGlmICghU2VsbGVySWRFeHRyYWN0b3IuaW5pdGlhbGl6ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5SEIOWwneivlemHjeaWsOWIneWni+WMllNlbGxlcklkRXh0cmFjdG9yJyk7DQogICAgICAgICAgICAgICAgICAgICAgICBTZWxsZXJJZEV4dHJhY3Rvci5pbml0KCk7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRzLmZhaWxlZFJlcXVlc3RzKys7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWunuaXtuajgOa1i+aXtueahOmikeeOh+aOp+WItg0KICAgICAgICAgICAgICAgIGlmIChpc1JlYWx0aW1lKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVTaW5jZUxhc3RSZXF1ZXN0ID0gRGF0ZS5ub3coKSAtIHRoaXMuc3RhdHMubGFzdFJlcXVlc3RUaW1lOw0KICAgICAgICAgICAgICAgICAgICBpZiAodGltZVNpbmNlTGFzdFJlcXVlc3QgPCB0aGlzLlJFUVVFU1RfSU5URVJWQUwpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHdhaXRUaW1lID0gdGhpcy5SRVFVRVNUX0lOVEVSVkFMIC0gdGltZVNpbmNlTGFzdFJlcXVlc3Q7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WunuaXtuajgOa1i++8muetieW+heivt+axgumXtOmalCcsIHsgd2FpdFRpbWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgd2FpdFRpbWUpKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IGBodHRwczovL3Byby54aWFvaG9uZ3NodS5jb20vYXBpL2VkaXRoL2Fkcy9wcm8vY2hhdC9jcy90b29scy9tYXJrLWxlYWRzYDsNCiAgICAgICAgICAgICAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcl9pZDogdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICBzZWxsZXJfaWQ6IHNlbGxlcklkLA0KICAgICAgICAgICAgICAgICAgICBzb3VyY2U6ICcxJw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCdBUEnmo4DmtYvvvJrlj5Hotbfor7fmsYInLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgc2VsbGVySWQ6IHNlbGxlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgaXNSZWFsdGltZSwNCiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdENvdW50",
        "OiB0aGlzLnN0YXRzLnRvdGFsUmVxdWVzdHMNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuc3RhdHMubGFzdFJlcXVlc3RUaW1lID0gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaehOW7uuWujOaVtOeahOivt+axguWktO+8jOaooeaLn+ato+W4uOa1j+iniOWZqOivt+axgg0KICAgICAgICAgICAgICAgIGNvbnN0IHJlcXVlc3RIZWFkZXJzID0gew0KICAgICAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKicsDQogICAgICAgICAgICAgICAgICAgICdBY2NlcHQtTGFuZ3VhZ2UnOiAnemgtQ04semg7cT0wLjksZW47cT0wLjgnLA0KICAgICAgICAgICAgICAgICAgICAnQWNjZXB0LUVuY29kaW5nJzogJ2d6aXAsIGRlZmxhdGUsIGJyJywNCiAgICAgICAgICAgICAgICAgICAgJ0NhY2hlLUNvbnRyb2wnOiAnbm8tY2FjaGUnLA0KICAgICAgICAgICAgICAgICAgICAnUHJhZ21hJzogJ25vLWNhY2hlJywNCiAgICAgICAgICAgICAgICAgICAgJ1JlZmVyZXInOiB3aW5kb3cubG9jYXRpb24uaHJlZiwNCiAgICAgICAgICAgICAgICAgICAgJ09yaWdpbic6IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4sDQogICAgICAgICAgICAgICAgICAgICdYLVJlcXVlc3RlZC1XaXRoJzogJ1hNTEh0dHBSZXF1ZXN0JywNCiAgICAgICAgICAgICAgICAgICAgJ1VzZXItQWdlbnQnOiBuYXZpZ2F0b3IudXNlckFnZW50LA0KICAgICAgICAgICAgICAgICAgICAnU2VjLUZldGNoLURlc3QnOiAnZW1wdHknLA0KICAgICAgICAgICAgICAgICAgICAnU2VjLUZldGNoLU1vZGUnOiAnY29ycycsDQogICAgICAgICAgICAgICAgICAgICdTZWMtRmV0Y2gtU2l0ZSc6ICdzYW1lLW9yaWdpbicNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgLy8g5bCd6K+V6I635Y+WQ1NSRiB0b2tlbg0KICAgICAgICAgICAgICAgIGNvbnN0IGNzcmZUb2tlbiA9IHRoaXMuZ2V0Q1NSRlRva2VuKCk7DQogICAgICAgICAgICAgICAgaWYgKGNzcmZUb2tlbikgew0KICAgICAgICAgICAgICAgICAgICByZXF1ZXN0SGVhZGVyc1snWC1DU1JGLVRva2VuJ10gPSBjc3JmVG9rZW47DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5re75YqgQ1NSRiBUb2tlbuWIsOivt+axguWktCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuOiBjc3JmVG9rZW4uc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWwneivleiOt+WPluWFtuS7luWPr+iDvemcgOimgeeahOiupOivgeWktA0KICAgICAgICAgICAgICAgIGNvbnN0IGF1dGhIZWFkZXJzID0gdGhpcy5nZXRBdXRoSGVhZGVycygpOw0KICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ocmVxdWVzdEhlYWRlcnMsIGF1dGhIZWFkZXJzKTsNCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WP",
        "luaOiOadg+S7pOeJjA0KICAgICAgICAgICAgICAgIGNvbnN0IHRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Byby1hY2Nlc3NUb2tlbicpOw0KICAgICAgICAgICAgICAgIGlmICghdG9rZW4pIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ0FQSeajgOa1i++8muacquaJvuWIsOaOiOadg+S7pOeJjCcpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRzLmZhaWxlZFJlcXVlc3RzKys7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1ZygnQVBJ6K+35rGC6YWN572uJywgew0KICAgICAgICAgICAgICAgICAgICB1cmw6IGAke3VybH0/JHtwYXJhbXN9YCwNCiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnR0VUJywNCiAgICAgICAgICAgICAgICAgICAgaGFzVG9rZW46ICEhdG9rZW4NCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOS9v+eUqOeugOWMlueahGZldGNoIEFQSeWPkemAgeW4puacieaOiOadg+WktOeahOivt+axgg0KICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dXJsfT8ke3BhcmFtc31gLCB7DQogICAgICAgICAgICAgICAgICAgIG1ldGhvZDogIkdFVCIsDQogICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOi/meaYr+aIkOWKn+eahOWFs+mUru+8gQ0KICAgICAgICAgICAgICAgICAgICAgICAgIkF1dGhvcml6YXRpb24iOiB0b2tlbiwNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Yqg5LiK6L+Z5Lqb5LuOIGNVUkwg5ZG95Luk5Lit56Gu6K6k6L+H55qE5aS077yM5pu05L+d6ZmpDQogICAgICAgICAgICAgICAgICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKiIsDQogICAgICAgICAgICAgICAgICAgICAgICAieC1zdWJzeXN0ZW0iOiAiYXJlcyINCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2FybignQVBJ5qOA5rWL77ya6K+35rGC5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXMsDQogICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiByZXNwb25zZS5zdGF0dXNUZXh0LA0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgaXNSZWFsdGltZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0cy5mYWlsZWRSZXF1ZXN0cysrOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAg",
        "ICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpOw0KDQogICAgICAgICAgICAgICAgaWYgKGRhdGEuc3VjY2VzcyAmJiBkYXRhLmNvZGUgPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgbGVhZHNUYWcgPSBkYXRhLmRhdGE/Lm1hcmtfbGVhZHNfZGV0YWlsPy5sZWFkc190YWcgfHwgMDsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlckluZm8gPSBkYXRhLmRhdGE/LnVzZXJfbWFya19sZWFkc19kZXRhaWwgfHwge307DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlc3Npb25JbmZvID0gZGF0YS5kYXRhPy5zZXNzaW9uIHx8IHt9Ow0KDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0xlYWRzOiBsZWFkc1RhZyA9PT0gMiwNCiAgICAgICAgICAgICAgICAgICAgICAgIGxlYWRzVGFnOiBsZWFkc1RhZywNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJbmZvOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmlja05hbWU6IHVzZXJJbmZvLnVzZXJfbmlja19uYW1lIHx8ICcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBob25lOiB1c2VySW5mby5waG9uZV9udW0gfHwgJycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2VjaGF0OiB1c2VySW5mby53ZWNoYXQgfHwgdXNlckluZm8ud2VfY2hhdCB8fCAnJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1hcms6IHVzZXJJbmZvLnJlbWFyayB8fCAnJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm92aW5jZTogdXNlckluZm8ucHJvdmluY2UgfHwgJycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2l0eTogdXNlckluZm8uY2l0eSB8fCAnJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdmF0YXI6IHVzZXJJbmZvLmF2YXRhciB8fCAnJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRJZDogdXNlckluZm8ucmVkX2lkIHx8ICcnDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbkluZm86IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXNzaW9uSWQ6IHNlc3Npb25JbmZvLnNlc3Npb25faWQgfHwgJycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGU6IHNlc3Npb25JbmZvLnN0YXRlIHx8ICcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdGVUaXRsZTogc2Vzc2lvbkluZm8ubm90ZV90aXRsZSB8fCAnJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub3RlVXJsOiBzZXNzaW9uSW5mby5ub3RlX3VybCB8fCAnJw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGlzUmVhbHRpbWUNCiAgICAgICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAg",
        "ICAgICAgICAgICAvLyDnvJPlrZjnlKjmiLfkv6Hmga8NCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jYWNoZVVzZXJJbmZvKHVzZXJJZCwgcmVzdWx0KTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDmm7TmlrDmgKfog73nu5/orqENCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0cy5zdWNjZXNzZnVsUmVxdWVzdHMrKzsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VUaW1lID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0cy5hdmVyYWdlUmVzcG9uc2VUaW1lID0gTWF0aC5yb3VuZCgNCiAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzLnN0YXRzLmF2ZXJhZ2VSZXNwb25zZVRpbWUgKiAodGhpcy5zdGF0cy5zdWNjZXNzZnVsUmVxdWVzdHMgLSAxKSArIHJlc3BvbnNlVGltZSkgLyB0aGlzLnN0YXRzLnN1Y2Nlc3NmdWxSZXF1ZXN0cw0KICAgICAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKGlzUmVhbHRpbWUgPyAn8J+UhCDlrp7ml7ZBUEnmo4DmtYvmiJDlip8nIDogJ/Cfjq8gQVBJ5qOA5rWL5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgaGFzTGVhZHM6IHJlc3VsdC5oYXNMZWFkcywNCiAgICAgICAgICAgICAgICAgICAgICAgIGxlYWRzVGFnOiBsZWFkc1RhZywNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiByZXN1bHQudXNlckluZm8ubmlja05hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVRpbWU6IHJlc3BvbnNlVGltZSArICdtcycsDQogICAgICAgICAgICAgICAgICAgICAgICBpc1JlYWx0aW1lDQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ0FQSeajgOa1i++8muWTjeW6lOW8guW4uCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvZGU6IGRhdGEuY29kZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG1zZzogZGF0YS5tc2csDQogICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICBpc1JlYWx0aW1lDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRzLmZhaWxlZFJlcXVlc3RzKys7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ0FQSeajgOa1i++8muivt+axguW8guW4uCcsIHsNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVy",
        "cm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkID8gdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJyA6ICdudWxsJywNCiAgICAgICAgICAgICAgICAgICAgaXNSZWFsdGltZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc3RhdHMuZmFpbGVkUmVxdWVzdHMrKzsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+WQVBJ5qOA5rWL5oCn6IO957uf6K6hDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOaAp+iDvee7n+iuoeS/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0U3RhdHMoKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIC4uLnRoaXMuc3RhdHMsDQogICAgICAgICAgICAgICAgc3VjY2Vzc1JhdGU6IHRoaXMuc3RhdHMudG90YWxSZXF1ZXN0cyA+IDAgPw0KICAgICAgICAgICAgICAgICAgICBNYXRoLnJvdW5kKCh0aGlzLnN0YXRzLnN1Y2Nlc3NmdWxSZXF1ZXN0cyAvIHRoaXMuc3RhdHMudG90YWxSZXF1ZXN0cykgKiAxMDApIDogMCwNCiAgICAgICAgICAgICAgICByZWFsdGltZVJhdGU6IHRoaXMuc3RhdHMudG90YWxSZXF1ZXN0cyA+IDAgPw0KICAgICAgICAgICAgICAgICAgICBNYXRoLnJvdW5kKCh0aGlzLnN0YXRzLnJlYWx0aW1lUmVxdWVzdHMgLyB0aGlzLnN0YXRzLnRvdGFsUmVxdWVzdHMpICogMTAwKSA6IDANCiAgICAgICAgICAgIH07DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPlkNTUkYgVG9rZW4NCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ3xudWxsfSBDU1JGIFRva2VuDQogICAgICAgICAqLw0KICAgICAgICBnZXRDU1JGVG9rZW4oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOaWueazlTE6IOS7jm1ldGHmoIfnrb7ojrflj5YNCiAgICAgICAgICAgICAgICBjb25zdCBtZXRhVG9rZW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9ImNzcmYtdG9rZW4iXScpPy5nZXRBdHRyaWJ1dGUoJ2NvbnRlbnQnKTsNCiAgICAgICAgICAgICAgICBpZiAobWV0YVRva2VuKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBtZXRhVG9rZW47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMjog5LuOY29va2llc+iOt+WPlg0KICAgICAgICAgICAgICAgIGNvbnN0IGNvb2tpZXMgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsnKTsNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGNvb2tpZSBvZiBjb29raWVzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IFtuYW1lLCB2YWx1ZV0gPSBjb29raWUudHJpbSgpLnNwbGl0KCc9Jyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lID09PSAnY3NyZl90b2tlbicgfHwgbmFtZSA9PT0gJ1hTUkYtVE9LRU4nIHx8IG5h",
        "bWUgPT09ICdfdG9rZW4nKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTM6IOS7jmxvY2FsU3RvcmFnZeiOt+WPlg0KICAgICAgICAgICAgICAgIGNvbnN0IHN0b3JhZ2VUb2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjc3JmX3Rva2VuJykgfHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgneHNyZl90b2tlbicpIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnY3NyZl90b2tlbicpOw0KICAgICAgICAgICAgICAgIGlmIChzdG9yYWdlVG9rZW4pIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0b3JhZ2VUb2tlbjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5U0OiDku47pobXpnaLohJrmnKzkuK3mj5Dlj5YNCiAgICAgICAgICAgICAgICBjb25zdCBzY3JpcHRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc2NyaXB0Jyk7DQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBzY3JpcHQgb2Ygc2NyaXB0cykgew0KICAgICAgICAgICAgICAgICAgICBpZiAoc2NyaXB0LnRleHRDb250ZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0b2tlbk1hdGNoID0gc2NyaXB0LnRleHRDb250ZW50Lm1hdGNoKC9jc3JmW18tXT90b2tlblsiJ11ccyo6XHMqWyInXShbXiInXSspWyInXS9pKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0b2tlbk1hdGNoKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRva2VuTWF0Y2hbMV07DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfojrflj5ZDU1JGIFRva2Vu5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W6K6k6K+B55u45YWz55qE6K+35rGC5aS0DQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOiupOivgeivt+axguWktA0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0QXV0aEhlYWRlcnMoKSB7DQogICAgICAgICAgICBjb25zdCBoZWFkZXJzID0ge307DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g55u05o6l5LuObG9jYWxTdG9yYWdl5Yqo5oCB6I635Y+W5o6I5p2D5Luk54mMDQogICAgICAgICAgICAgICAgY29uc3QgdG9rZW4gPSBsb2NhbFN0",
        "b3JhZ2UuZ2V0SXRlbSgncHJvLWFjY2Vzc1Rva2VuJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAodG9rZW4pIHsNCiAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1snYXV0aG9yaXphdGlvbiddID0gdG9rZW47IC8vIOazqOaEj++8muWwj+WGmeeahGF1dGhvcml6YXRpb27vvIzkuI3mmK9BdXRob3JpemF0aW9uDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5LuObG9jYWxTdG9yYWdl6I635Y+W5YiwYWNjZXNzLXRva2VuJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW46IHRva2VuLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5pyq5om+5YiwbG9jYWxTdG9yYWdl5Lit55qEcHJvLWFjY2Vzc1Rva2VuJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5re75Yqg5YW25LuW5Y+v6IO96ZyA6KaB55qE5aS0DQogICAgICAgICAgICAgICAgY29uc3QgZGV2aWNlSWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZGV2aWNlX2lkJykgfHwgdGhpcy5nZW5lcmF0ZURldmljZUlkKCk7DQogICAgICAgICAgICAgICAgaWYgKGRldmljZUlkKSB7DQogICAgICAgICAgICAgICAgICAgIGhlYWRlcnNbJ1gtRGV2aWNlLUlkJ10gPSBkZXZpY2VJZDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBzZXNzaW9uSWQgPSB0aGlzLmdldFNlc3Npb25JZCgpOw0KICAgICAgICAgICAgICAgIGlmIChzZXNzaW9uSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1snWC1TZXNzaW9uLUlkJ10gPSBzZXNzaW9uSWQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6I635Y+W6K6k6K+B5aS05aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIGhlYWRlcnM7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOeUn+aIkOiuvuWkh0lEDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IOiuvuWkh0lEDQogICAgICAgICAqLw0KICAgICAgICBnZW5lcmF0ZURldmljZUlkKCkgew0KICAgICAgICAgICAgY29uc3QgZGV2aWNlSWQgPSAnd2ViXycgKyBEYXRlLm5vdygpICsgJ18nICsgTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpOw0KICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2RldmljZV9pZCcsIGRldmljZUlkKTsNCiAgICAgICAgICAgIHJldHVybiBkZXZpY2VJZDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5Lya6K+dSUQNCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ3xudWxsfSDkvJror51JRA0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0",
        "U2Vzc2lvbklkKCkgew0KICAgICAgICAgICAgLy8g5LuOVVJM5Y+C5pWw6I635Y+WDQogICAgICAgICAgICBjb25zdCB1cmxQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpOw0KICAgICAgICAgICAgY29uc3Qgc2Vzc2lvbklkID0gdXJsUGFyYW1zLmdldCgnc2Vzc2lvbl9pZCcpIHx8IHVybFBhcmFtcy5nZXQoJ3NpZCcpOw0KICAgICAgICAgICAgaWYgKHNlc3Npb25JZCkgew0KICAgICAgICAgICAgICAgIHJldHVybiBzZXNzaW9uSWQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOS7jmNvb2tpZXPojrflj5YNCiAgICAgICAgICAgIGNvbnN0IGNvb2tpZXMgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsnKTsNCiAgICAgICAgICAgIGZvciAoY29uc3QgY29va2llIG9mIGNvb2tpZXMpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBbbmFtZSwgdmFsdWVdID0gY29va2llLnRyaW0oKS5zcGxpdCgnPScpOw0KICAgICAgICAgICAgICAgIGlmIChuYW1lID09PSAnc2Vzc2lvbl9pZCcgfHwgbmFtZSA9PT0gJ3NpZCcgfHwgbmFtZSA9PT0gJ0pTRVNTSU9OSUQnKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQodmFsdWUpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOi+k+WHuuaAp+iDvee7n+iuoeaKpeWRig0KICAgICAgICAgKi8NCiAgICAgICAgbG9nUGVyZm9ybWFuY2VTdGF0cygpIHsNCiAgICAgICAgICAgIGNvbnN0IHN0YXRzID0gdGhpcy5nZXRTdGF0cygpOw0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfk4og55WZ5a6i6LWEQVBJ5qOA5rWL5oCn6IO957uf6K6hJywgew0KICAgICAgICAgICAgICAgIOaAu+ivt+axguaVsDogc3RhdHMudG90YWxSZXF1ZXN0cywNCiAgICAgICAgICAgICAgICDmiJDlip/or7fmsYLmlbA6IHN0YXRzLnN1Y2Nlc3NmdWxSZXF1ZXN0cywNCiAgICAgICAgICAgICAgICDlpLHotKXor7fmsYLmlbA6IHN0YXRzLmZhaWxlZFJlcXVlc3RzLA0KICAgICAgICAgICAgICAgIOaIkOWKn+eOhzogc3RhdHMuc3VjY2Vzc1JhdGUgKyAnJScsDQogICAgICAgICAgICAgICAg5a6e5pe25qOA5rWL5pWwOiBzdGF0cy5yZWFsdGltZVJlcXVlc3RzLA0KICAgICAgICAgICAgICAgIOWunuaXtuajgOa1i+eOhzogc3RhdHMucmVhbHRpbWVSYXRlICsgJyUnLA0KICAgICAgICAgICAgICAgIOW5s+Wdh+WTjeW6lOaXtumXtDogc3RhdHMuYXZlcmFnZVJlc3BvbnNlVGltZSArICdtcycsDQogICAgICAgICAgICAgICAg5pyA5ZCO6K+35rGC5pe26Ze0OiBzdGF0cy5sYXN0UmVxdWVzdFRpbWUgPyBuZXcgRGF0ZShzdGF0cy5sYXN0UmVxdWVzdFRpbWUpLnRvTG9jYWxlVGltZVN0cmluZygpIDogJ+aXoCcNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAg",
        "ICAgKiDku45jb252ZXJzYXRpb25JZOaPkOWPlnVzZXJJZA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5qC85byP77yaVG90YWwtNWJmNzZjNGRjZmFhMmUwMDAxNGEzZGMzDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd8bnVsbH0g55So5oi3SUQNCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RVc2VySWRGcm9tQ29udmVyc2F0aW9uKGNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICBpZiAoIWNvbnZlcnNhdGlvbklkIHx8IHR5cGVvZiBjb252ZXJzYXRpb25JZCAhPT0gJ3N0cmluZycpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5LuOIFRvdGFsLXt1c2VySWR9IOagvOW8j+S4reaPkOWPlnVzZXJJZA0KICAgICAgICAgICAgY29uc3QgbWF0Y2ggPSBjb252ZXJzYXRpb25JZC5tYXRjaCgvXlRvdGFsLSguKykkLyk7DQogICAgICAgICAgICBpZiAobWF0Y2ggJiYgbWF0Y2hbMV0pIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aIkOWKn+aPkOWPlnVzZXJJZCcsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAyMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkOiBtYXRjaFsxXS5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbWF0Y2hbMV07DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5peg5rOV5LuOY29udmVyc2F0aW9uSWTmj5Dlj5Z1c2VySWQnLCB7DQogICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAyMCkgKyAnLi4uJw0KICAgICAgICAgICAgfSk7DQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog57yT5a2Y55So5oi35L+h5oGvDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VySWQg55So5oi3SUQNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHVzZXJJbmZvIOeUqOaIt+S/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgY2FjaGVVc2VySW5mbyh1c2VySWQsIHVzZXJJbmZvKSB7DQogICAgICAgICAgICBpZiAoIXVzZXJJZCB8fCAhdXNlckluZm8pIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMudXNlckluZm9DYWNoZS5zZXQodXNlcklkLCB7DQogICAgICAgICAgICAgICAgLi4udXNlckluZm8sDQogICAgICAgICAgICAgICAgY2FjaGVkQXQ6IERhdGUubm93KCkNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAvLyDmuIXnkIbov4fmnJ/nvJPlrZgNCiAgICAgICAgICAgIHRoaXMuY2xlYW5FeHBpcmVkVXNlckluZm9DYWNoZSgpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAg",
        "ICAgICAgKiDojrflj5bnvJPlrZjnmoTnlKjmiLfkv6Hmga8NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCDnlKjmiLdJRA0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBnZXRDYWNoZWRVc2VySW5mbyh1c2VySWQpIHsNCiAgICAgICAgICAgIGlmICghdXNlcklkKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGNvbnN0IGNhY2hlZCA9IHRoaXMudXNlckluZm9DYWNoZS5nZXQodXNlcklkKTsNCiAgICAgICAgICAgIGlmICghY2FjaGVkKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpui/h+acnw0KICAgICAgICAgICAgaWYgKERhdGUubm93KCkgLSBjYWNoZWQuY2FjaGVkQXQgPiB0aGlzLlVTRVJfSU5GT19DQUNIRV9FWFBJUkUpIHsNCiAgICAgICAgICAgICAgICB0aGlzLnVzZXJJbmZvQ2FjaGUuZGVsZXRlKHVzZXJJZCk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBjYWNoZWQ7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heeQhui/h+acn+eahOeUqOaIt+S/oeaBr+e8k+WtmA0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYW5FeHBpcmVkVXNlckluZm9DYWNoZSgpIHsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBsZXQgY2xlYW5lZENvdW50ID0gMDsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCBbdXNlcklkLCBpbmZvXSBvZiB0aGlzLnVzZXJJbmZvQ2FjaGUuZW50cmllcygpKSB7DQogICAgICAgICAgICAgICAgaWYgKG5vdyAtIGluZm8uY2FjaGVkQXQgPiB0aGlzLlVTRVJfSU5GT19DQUNIRV9FWFBJUkUpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51c2VySW5mb0NhY2hlLmRlbGV0ZSh1c2VySWQpOw0KICAgICAgICAgICAgICAgICAgICBjbGVhbmVkQ291bnQrKzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmIChjbGVhbmVkQ291bnQgPiAwKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmuIXnkIbov4fmnJ/nlKjmiLfkv6Hmga/nvJPlrZgnLCB7DQogICAgICAgICAgICAgICAgICAgIGNsZWFuZWRDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgcmVtYWluaW5nQ291bnQ6IHRoaXMudXNlckluZm9DYWNoZS5zaXplDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmYn+WIl+WMlkFQSeivt+axgu+8iOmBv+WFjeW5tuWPkei/h+Wkmu+8iQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkIOeUqOaIt0lEDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdHxudWxsPn0NCiAg",
        "ICAgICAgICovDQogICAgICAgIGFzeW5jIHF1ZXVlQVBJUmVxdWVzdCh1c2VySWQpIHsNCiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMucmVxdWVzdFF1ZXVlLnB1c2goeyB1c2VySWQsIHJlc29sdmUgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzUXVldWUoKTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbor7fmsYLpmJ/liJcNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHByb2Nlc3NRdWV1ZSgpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmlzUHJvY2Vzc2luZyB8fCB0aGlzLnJlcXVlc3RRdWV1ZS5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMuaXNQcm9jZXNzaW5nID0gdHJ1ZTsNCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBiYXRjaCA9IHRoaXMucmVxdWVzdFF1ZXVlLnNwbGljZSgwLCB0aGlzLm1heENvbmN1cnJlbnQpOw0KDQogICAgICAgICAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBiYXRjaC5tYXAoYXN5bmMgKHsgdXNlcklkLCByZXNvbHZlIH0pID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuZGV0ZWN0TGVhZHNTdGF0dXNWaWFBUEkodXNlcklkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmVzdWx0KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6K+35rGC6Ze06ZqUDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5SRVFVRVNUX0lOVEVSVkFMID4gMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCB0aGlzLlJFUVVFU1RfSU5URVJWQUwpKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6Zif5YiX5aSE55CGQVBJ6K+35rGC5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKG51bGwpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChwcm9taXNlcyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5aSE55CGQVBJ6K+3",
        "5rGC6Zif5YiX5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0gZmluYWxseSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc1Byb2Nlc3NpbmcgPSBmYWxzZTsNCg0KICAgICAgICAgICAgICAgIC8vIOe7p+e7reWkhOeQhumYn+WIlw0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnJlcXVlc3RRdWV1ZS5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy5wcm9jZXNzUXVldWUoKSwgMTAwKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDnlZnlrqLotYTnirbmgIHnrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IExlYWRzU3RhdHVzTWFuYWdlciA9IHsNCiAgICAgICAgLy8g54q25oCB57yT5a2Y77yaY29udmVyc2F0aW9uSWQgLT4geyBoYXNMZWFkc1RhZzogYm9vbGVhbiwgbGFzdENoZWNrZWQ6IHRpbWVzdGFtcCwgc291cmNlOiBzdHJpbmcgfQ0KICAgICAgICBzdGF0dXNDYWNoZTogbmV3IE1hcCgpLA0KDQogICAgICAgIC8vIOeUqOaIt+mineWkluS/oeaBr+e8k+WtmO+8mmNvbnZlcnNhdGlvbklkIC0+IHVzZXJJbmZvDQogICAgICAgIHVzZXJJbmZvQ2FjaGU6IG5ldyBNYXAoKSwNCg0KICAgICAgICAvLyDpu5jorqTnvJPlrZjov4fmnJ/ml7bpl7TvvIg15YiG6ZKf77yM55So5LqORE9N5qOA5rWL77yJDQogICAgICAgIERFRkFVTFRfQ0FDSEVfRVhQSVJFX1RJTUU6IDUgKiA2MCAqIDEwMDAsDQoNCiAgICAgICAgLy8g6buY6K6kQVBJ5qOA5rWL57yT5a2Y6L+H5pyf5pe26Ze077yIMzDnp5LvvIzmlK/mjIHlrp7ml7bmo4DmtYvvvIkNCiAgICAgICAgREVGQVVMVF9BUElfQ0FDSEVfRVhQSVJFX1RJTUU6IDMwICogMTAwMCwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5rWL5a+56K+d5YWD57Sg55qE55WZ5a6i6LWE54q25oCBDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gY29udGFjdEVsZW1lbnQg5a+56K+d5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKblhbfmnInnlZnlrqLotYTmoIfnrb4NCiAgICAgICAgICovDQogICAgICAgIGRldGVjdExlYWRzU3RhdHVzKGNvbnRhY3RFbGVtZW50KSB7DQogICAgICAgICAgICBpZiAoIWNvbnRhY3RFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfnlZnlrqLotYTmo4DmtYvvvJrlhYPntKDkuLrnqbonKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5aSa56eN6YCJ5oup5Zmo562W55Wl56Gu5L+d5YW85a655oCnDQogICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0b3JzID0gWw0KICAgICAgICAgICAgICAgICAgICAnLmxl",
        "YWRzLXRhZyAuZC10YWctY29udGVudCcsICAvLyDkuLvpgInmi6nlmagNCiAgICAgICAgICAgICAgICAgICAgJy5sZWFkcy10YWcnLCAgICAgICAgICAgICAgICAgLy8g5aSH55So6YCJ5oup5ZmoMQ0KICAgICAgICAgICAgICAgICAgICAnW2NsYXNzKj0ibGVhZHMiXScsICAgICAgICAgICAvLyDlpIfnlKjpgInmi6nlmagyDQogICAgICAgICAgICAgICAgICAgICcuZC10YWctY29udGVudCcgICAgICAgICAgICAgIC8vIOmAmueUqOagh+etvumAieaLqeWZqA0KICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdG9yIG9mIHNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50cyA9IGNvbnRhY3RFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpOw0KICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgZWxlbWVudHMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRleHQgPSBlbGVtZW50LnRleHRDb250ZW50Py50cmltKCk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGV4dCAmJiB0ZXh0LmluY2x1ZGVzKCfnlZnlrqLotYQnKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn55WZ5a6i6LWE5qOA5rWL77ya5Y+R546w55WZ5a6i6LWE5qCH562+Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvciwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudENsYXNzOiBlbGVtZW50LmNsYXNzTmFtZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfnlZnlrqLotYTmo4DmtYvvvJrmnKrlj5HnjrDnlZnlrqLotYTmoIfnrb4nKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign55WZ5a6i6LWE5qOA5rWL5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluWKqOaAgee8k+WtmOi/h+acn+aXtumXtA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc291cmNlIOaVsOaNrua6kOexu+Weiw0KICAgICAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSDnvJPlrZjov4fmnJ/ml7bpl7TvvIjmr6vnp5LvvIkNCiAgICAgICAgICovDQogICAgICAgIGdldENhY2hlRXhwaXJlVGltZShzb3VyY2UpIHsNCiAgICAgICAgICAgIGNv",
        "bnN0IHJlYWx0aW1lQ2hlY2sgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBSZWFsdGltZUxlYWRzQ2hlY2snLCB0cnVlKTsNCiAgICAgICAgICAgIGNvbnN0IGN1c3RvbUNhY2hlVGltZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcExlYWRzQ2FjaGVUaW1lJywgMzApOw0KDQogICAgICAgICAgICAvLyDlpoLmnpzlkK/nlKjlvLrliLblrp7ml7bmo4DmtYvkuJTnvJPlrZjml7bpl7TkuLow77yM5YiZ56aB55So57yT5a2YDQogICAgICAgICAgICBpZiAocmVhbHRpbWVDaGVjayAmJiBjdXN0b21DYWNoZVRpbWUgPT09IDApIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gMDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5L2/55So6Ieq5a6a5LmJ57yT5a2Y5pe26Ze0DQogICAgICAgICAgICBpZiAoY3VzdG9tQ2FjaGVUaW1lID4gMCkgew0KICAgICAgICAgICAgICAgIHJldHVybiBjdXN0b21DYWNoZVRpbWUgKiAxMDAwOyAvLyDovazmjaLkuLrmr6vnp5INCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5L2/55So6buY6K6k57yT5a2Y5pe26Ze0DQogICAgICAgICAgICByZXR1cm4gc291cmNlID09PSAnYXBpJyA/IHRoaXMuREVGQVVMVF9BUElfQ0FDSEVfRVhQSVJFX1RJTUUgOiB0aGlzLkRFRkFVTFRfQ0FDSEVfRVhQSVJFX1RJTUU7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluWvueivneeahOeVmeWuoui1hOeKtuaAge+8iOWunuaXtuajgOa1i+S8mOWFiO+8iQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5a+56K+dSUQNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBjb250YWN0RWxlbWVudCDlr7nor53lhYPntKDvvIjnlKjkuo7ph43mlrDmo4DmtYvvvIkNCiAgICAgICAgICogQHBhcmFtIHtib29sZWFufSBmb3JjZVJlYWx0aW1lIOaYr+WQpuW8uuWItuWunuaXtuajgOa1i++8iOW/veeVpee8k+WtmO+8iQ0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0g5piv5ZCm5YW35pyJ55WZ5a6i6LWE5qCH562+DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBnZXRMZWFkc1N0YXR1cyhjb252ZXJzYXRpb25JZCwgY29udGFjdEVsZW1lbnQgPSBudWxsLCBmb3JjZVJlYWx0aW1lID0gZmFsc2UpIHsNCiAgICAgICAgICAgIGlmICghY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGNvbnN0IHJlYWx0aW1lRW5hYmxlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcFJlYWx0aW1lTGVhZHNDaGVjaycsIHRydWUpOw0KICAgICAgICAgICAgY29uc3Qgc2hvdWxkRm9yY2VSZWFsdGltZSA9IGZvcmNlUmVhbHRpbWUgfHwgcmVhbHRpbWVFbmFibGVkOw0KDQogICAgICAgICAgICAvLyDmo4Dmn6XnvJPlrZjvvIjku4XlnKjpnZ7lvLrliLblrp7ml7bmqKHlvI/kuIvvvIkNCiAgICAgICAgICAgIGlmICghc2hvdWxkRm9y",
        "Y2VSZWFsdGltZSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNhY2hlZCA9IHRoaXMuc3RhdHVzQ2FjaGUuZ2V0KGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGV4cGlyZVRpbWUgPSB0aGlzLmdldENhY2hlRXhwaXJlVGltZShjYWNoZWQ/LnNvdXJjZSB8fCAnZG9tJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoY2FjaGVkICYmIGV4cGlyZVRpbWUgPiAwICYmIChub3cgLSBjYWNoZWQubGFzdENoZWNrZWQpIDwgZXhwaXJlVGltZSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eVmeWuoui1hOeKtuaAge+8muS9v+eUqOe8k+WtmOe7k+aenCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICBoYXNMZWFkc1RhZzogY2FjaGVkLmhhc0xlYWRzVGFnLA0KICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlOiBjYWNoZWQuc291cmNlIHx8ICdkb20nLA0KICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVBZ2U6IGAke01hdGgucm91bmQoKG5vdyAtIGNhY2hlZC5sYXN0Q2hlY2tlZCkgLyAxMDAwKX1zYA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlZC5oYXNMZWFkc1RhZzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOaJp+ihjOWunuaXtuajgOa1iw0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfnlZnlrqLotYTnirbmgIHvvJrmiafooYzlrp7ml7bmo4DmtYsnLCB7DQogICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICBmb3JjZVJlYWx0aW1lOiBzaG91bGRGb3JjZVJlYWx0aW1lLA0KICAgICAgICAgICAgICAgIHJlYXNvbjogc2hvdWxkRm9yY2VSZWFsdGltZSA/ICflvLrliLblrp7ml7bmo4DmtYsnIDogJ+e8k+WtmOi/h+acnycNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAvLyDkvJjlhYjlsJ3or5VBUEnmo4DmtYvvvIjlpoLmnpzlkK/nlKjvvIkNCiAgICAgICAgICAgIGlmIChDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBBcGlMZWFkc0NoZWNrJywgdHJ1ZSkpIHsNCiAgICAgICAgICAgICAgICBjb25zdCB1c2VySWQgPSBMZWFkc0FQSURldGVjdG9yLmV4dHJhY3RVc2VySWRGcm9tQ29udmVyc2F0aW9uKGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICBpZiAodXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhcGlSZXN1bHQgPSBhd2FpdCBMZWFkc0FQSURldGVjdG9yLmRldGVjdExlYWRzU3RhdHVzVmlhQVBJKHVzZXJJZCwgc2hvdWxkRm9yY2VSZWFs",
        "dGltZSk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXBpUmVzdWx0ICE9PSBudWxsKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5pu05paw57yT5a2Y77yIQVBJ5pWw5o2u77yJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVMZWFkc1N0YXR1cyhjb252ZXJzYXRpb25JZCwgYXBpUmVzdWx0Lmhhc0xlYWRzLCAnYXBpJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlrZjlgqjnlKjmiLfpop3lpJbkv6Hmga8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVVzZXJFeHRyYUluZm8oY29udmVyc2F0aW9uSWQsIGFwaVJlc3VsdC51c2VySW5mbyk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbyhzaG91bGRGb3JjZVJlYWx0aW1lID8gJ/CflIQg5by65Yi25a6e5pe2QVBJ5qOA5rWL5a6M5oiQJyA6ICfwn46vIEFQSeajgOa1i+WujOaIkCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxNSkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzTGVhZHM6IGFwaVJlc3VsdC5oYXNMZWFkcywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IGFwaVJlc3VsdC51c2VySW5mbz8ubmlja05hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWx0aW1lOiBzaG91bGRGb3JjZVJlYWx0aW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWNoZVRpbWU6IHRoaXMuZ2V0Q2FjaGVFeHBpcmVUaW1lKCdhcGknKSAvIDEwMDAgKyAncycNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhcGlSZXN1bHQuaGFzTGVhZHM7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5a6e5pe2QVBJ5qOA5rWL5aSx6LSl77yM6ZmN57qn5YiwRE9N5qOA5rWLJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhbHRpbWU6IHNob3VsZEZvcmNlUmVhbHRpbWUNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyBBUEnmo4DmtYvlpLHotKXvvIzpmY3nuqfliLBET03mo4DmtYsNCiAgICAgICAgICAgIGlmIChjb250YWN0RWxlbWVudCkgew0KICAgICAgICAgICAgICAg",
        "IGNvbnN0IGhhc0xlYWRzVGFnID0gdGhpcy5kZXRlY3RMZWFkc1N0YXR1cyhjb250YWN0RWxlbWVudCk7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVMZWFkc1N0YXR1cyhjb252ZXJzYXRpb25JZCwgaGFzTGVhZHNUYWcsICdkb20nKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+UjSDlrp7ml7ZET03mo4DmtYvlrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTUpICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgIGhhc0xlYWRzOiBoYXNMZWFkc1RhZywNCiAgICAgICAgICAgICAgICAgICAgcmVhbHRpbWU6IHNob3VsZEZvcmNlUmVhbHRpbWUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBoYXNMZWFkc1RhZzsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5peg5rOV6YeN5paw5qOA5rWL77yM6L+U5Zue57yT5a2Y5YC85oiW6buY6K6k5YC877yI5LuF5Zyo6Z2e5by65Yi25a6e5pe25qih5byP5LiL77yJDQogICAgICAgICAgICBpZiAoIXNob3VsZEZvcmNlUmVhbHRpbWUpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBjYWNoZWQgPSB0aGlzLnN0YXR1c0NhY2hlLmdldChjb252ZXJzYXRpb25JZCk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlZCA/IGNhY2hlZC5oYXNMZWFkc1RhZyA6IGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDlvLrliLblrp7ml7bmqKHlvI/kuIvml6Dms5Xmo4DmtYvvvIzov5Tlm55mYWxzZQ0KICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+W8uuWItuWunuaXtuajgOa1i+Wksei0pe+8jOaXoOWPr+eUqOajgOa1i+aWueazlScsIHsNCiAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5ZCM5q2l54mI5pys55qEZ2V0TGVhZHNTdGF0dXPvvIjkv53mjIHlkJHlkI7lhbzlrrnvvIkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIOWvueivnUlEDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gY29udGFjdEVsZW1lbnQg5a+56K+d5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKblhbfmnInnlZnlrqLotYTmoIfnrb4NCiAgICAgICAgICovDQogICAgICAgIGdldExlYWRzU3RhdHVzU3luYyhjb252ZXJzYXRpb25JZCwgY29udGFjdEVsZW1lbnQgPSBudWxsKSB7DQogICAgICAgICAgICBpZiAoIWNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6XnvJPlrZgNCiAgICAgICAgICAgIGNvbnN0IGNhY2hlZCA9IHRoaXMuc3RhdHVzQ2Fj",
        "aGUuZ2V0KGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBjb25zdCBleHBpcmVUaW1lID0gY2FjaGVkPy5zb3VyY2UgPT09ICdhcGknID8gdGhpcy5BUElfQ0FDSEVfRVhQSVJFX1RJTUUgOiB0aGlzLkNBQ0hFX0VYUElSRV9USU1FOw0KDQogICAgICAgICAgICBpZiAoY2FjaGVkICYmIChub3cgLSBjYWNoZWQubGFzdENoZWNrZWQpIDwgZXhwaXJlVGltZSkgew0KICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZWQuaGFzTGVhZHNUYWc7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOWPqui/m+ihjERPTeajgOa1i++8iOWQjOatpe+8iQ0KICAgICAgICAgICAgaWYgKGNvbnRhY3RFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgY29uc3QgaGFzTGVhZHNUYWcgPSB0aGlzLmRldGVjdExlYWRzU3RhdHVzKGNvbnRhY3RFbGVtZW50KTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUxlYWRzU3RhdHVzKGNvbnZlcnNhdGlvbklkLCBoYXNMZWFkc1RhZywgJ2RvbScpOw0KICAgICAgICAgICAgICAgIHJldHVybiBoYXNMZWFkc1RhZzsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIGNhY2hlZCA/IGNhY2hlZC5oYXNMZWFkc1RhZyA6IGZhbHNlOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmm7TmlrDnlZnlrqLotYTnirbmgIHnvJPlrZgNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIOWvueivnUlEDQogICAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gaGFzTGVhZHNUYWcg5piv5ZCm5YW35pyJ55WZ5a6i6LWE5qCH562+DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzb3VyY2Ug5pWw5o2u5rqQ77yaJ2FwaScg5oiWICdkb20nDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVMZWFkc1N0YXR1cyhjb252ZXJzYXRpb25JZCwgaGFzTGVhZHNUYWcsIHNvdXJjZSA9ICdkb20nKSB7DQogICAgICAgICAgICBpZiAoIWNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0aGlzLnN0YXR1c0NhY2hlLnNldChjb252ZXJzYXRpb25JZCwgew0KICAgICAgICAgICAgICAgIGhhc0xlYWRzVGFnLA0KICAgICAgICAgICAgICAgIGxhc3RDaGVja2VkOiBEYXRlLm5vdygpLA0KICAgICAgICAgICAgICAgIHNvdXJjZTogc291cmNlDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfnlZnlrqLotYTnirbmgIHvvJrnvJPlrZjlt7Lmm7TmlrAnLCB7DQogICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICBoYXNMZWFkc1RhZywNCiAgICAgICAgICAgICAgICBzb3VyY2UsDQogICAgICAgICAgICAgICAgY2FjaGVTaXplOiB0aGlzLnN0YXR1c0NhY2hlLnNpemUNCiAgICAgICAgICAg",
        "IH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlrZjlgqjnlKjmiLfpop3lpJbkv6Hmga8NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIOS8muivnUlEDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSB1c2VySW5mbyDnlKjmiLfkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZVVzZXJFeHRyYUluZm8oY29udmVyc2F0aW9uSWQsIHVzZXJJbmZvKSB7DQogICAgICAgICAgICBpZiAoIWNvbnZlcnNhdGlvbklkIHx8ICF1c2VySW5mbykgew0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdGhpcy51c2VySW5mb0NhY2hlLnNldChjb252ZXJzYXRpb25JZCwgew0KICAgICAgICAgICAgICAgIC4uLnVzZXJJbmZvLA0KICAgICAgICAgICAgICAgIGxhc3RVcGRhdGVkOiBEYXRlLm5vdygpDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfnlKjmiLfkv6Hmga/vvJrnvJPlrZjlt7Lmm7TmlrAnLCB7DQogICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8ubmlja05hbWUsDQogICAgICAgICAgICAgICAgaGFzUGhvbmU6ICEhdXNlckluZm8ucGhvbmUsDQogICAgICAgICAgICAgICAgaGFzV2VjaGF0OiAhIXVzZXJJbmZvLndlY2hhdA0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPlueUqOaIt+mineWkluS/oeaBrw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5Lya6K+dSUQNCiAgICAgICAgICogQHJldHVybnMge09iamVjdHxudWxsfSDnlKjmiLfkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIGdldFVzZXJFeHRyYUluZm8oY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgIGlmICghY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgdXNlckluZm8gPSB0aGlzLnVzZXJJbmZvQ2FjaGUuZ2V0KGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgIGlmICghdXNlckluZm8pIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm6L+H5pyf77yI55So5oi35L+h5oGv57yT5a2Y5pe26Ze06L6D6ZW/77yMMzDliIbpkp/vvIkNCiAgICAgICAgICAgIGlmIChEYXRlLm5vdygpIC0gdXNlckluZm8ubGFzdFVwZGF0ZWQgPiAzMCAqIDYwICogMTAwMCkgew0KICAgICAgICAgICAgICAgIHRoaXMudXNlckluZm9DYWNoZS5kZWxldGUoY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gdXNl",
        "ckluZm87DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heeQhui/h+acn+eahOe8k+WtmOadoeebrg0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYXJFeHBpcmVkQ2FjaGUoKSB7DQogICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgbGV0IGNsZWFyZWRDb3VudCA9IDA7DQoNCiAgICAgICAgICAgIGZvciAoY29uc3QgW2NvbnZlcnNhdGlvbklkLCBkYXRhXSBvZiB0aGlzLnN0YXR1c0NhY2hlLmVudHJpZXMoKSkgew0KICAgICAgICAgICAgICAgIGlmICgobm93IC0gZGF0YS5sYXN0Q2hlY2tlZCkgPj0gdGhpcy5DQUNIRV9FWFBJUkVfVElNRSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXR1c0NhY2hlLmRlbGV0ZShjb252ZXJzYXRpb25JZCk7DQogICAgICAgICAgICAgICAgICAgIGNsZWFyZWRDb3VudCsrOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKGNsZWFyZWRDb3VudCA+IDApIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eVmeWuoui1hOeKtuaAge+8mua4heeQhui/h+acn+e8k+WtmCcsIHsNCiAgICAgICAgICAgICAgICAgICAgY2xlYXJlZENvdW50LA0KICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdDb3VudDogdGhpcy5zdGF0dXNDYWNoZS5zaXplDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPlue8k+WtmOe7n+iuoeS/oeaBrw0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDnvJPlrZjnu5/orqENCiAgICAgICAgICovDQogICAgICAgIGdldENhY2hlU3RhdHMoKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIHRvdGFsRW50cmllczogdGhpcy5zdGF0dXNDYWNoZS5zaXplLA0KICAgICAgICAgICAgICAgIGV4cGlyZVRpbWU6IHRoaXMuQ0FDSEVfRVhQSVJFX1RJTUUNCiAgICAgICAgICAgIH07DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDlm57orr/pu5HlkI3ljZXnrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IEZvbGxvd1VwQmxhY2tsaXN0TWFuYWdlciA9IHsNCiAgICAgICAgLy8g5a2Y5YKo6ZSuDQogICAgICAgIFNUT1JBR0VfS0VZOiAneGhzX2ZvbGxvd3VwX2JsYWNrbGlzdCcsDQoNCiAgICAgICAgLy8g5YaF5a2Y57yT5a2Y77yadXNlcklkIC0+IGJsYWNrbGlzdERhdGENCiAgICAgICAgYmxhY2tsaXN0Q2FjaGU6IG5ldyBNYXAoKSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yid5aeL5YyW5Zue6K6/6buR5ZCN5Y2V566h55CG5ZmoDQogICAgICAgICAqLw0KICAgICAgICBpbml0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICB0aGlzLmxvYWRCbGFja2xpc3RGcm9tU3Rv",
        "cmFnZSgpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflm57orr/pu5HlkI3ljZXnrqHnkIblmajliJ3lp4vljJblrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgIGJsYWNrbGlzdENvdW50OiB0aGlzLmJsYWNrbGlzdENhY2hlLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflm57orr/pu5HlkI3ljZXnrqHnkIblmajliJ3lp4vljJblpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDku45sb2NhbFN0b3JhZ2XliqDovb3pu5HlkI3ljZXmlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGxvYWRCbGFja2xpc3RGcm9tU3RvcmFnZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc3RvcmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5TVE9SQUdFX0tFWSk7DQogICAgICAgICAgICAgICAgaWYgKHN0b3JlZCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBibGFja2xpc3QgPSBKU09OLnBhcnNlKHN0b3JlZCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuYmxhY2tsaXN0Q2FjaGUuY2xlYXIoKTsNCg0KICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFt1c2VySWQsIGRhdGFdIG9mIE9iamVjdC5lbnRyaWVzKGJsYWNrbGlzdCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYmxhY2tsaXN0Q2FjaGUuc2V0KHVzZXJJZCwgZGF0YSk7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Zue6K6/6buR5ZCN5Y2V77ya5LuO5a2Y5YKo5Yqg6L295pWw5o2uJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgbG9hZGVkQ291bnQ6IHRoaXMuYmxhY2tsaXN0Q2FjaGUuc2l6ZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Zue6K6/6buR5ZCN5Y2V77ya5Yqg6L295a2Y5YKo5pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLmJsYWNrbGlzdENhY2hlLmNsZWFyKCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS/neWtmOm7keWQjeWNleaVsOaNruWIsGxvY2FsU3RvcmFnZQ0KICAgICAgICAgKi8NCiAgICAgICAgc2F2ZUJsYWNrbGlzdFRvU3RvcmFnZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0ID0gT2JqZWN0LmZyb21FbnRyaWVzKHRoaXMuYmxhY2tsaXN0Q2FjaGUpOw0KICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuU1RPUkFHRV9LRVksIEpTT04u",
        "c3RyaW5naWZ5KGJsYWNrbGlzdCkpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflm57orr/pu5HlkI3ljZXvvJrkv53lrZjliLDlrZjlgqgnLCB7DQogICAgICAgICAgICAgICAgICAgIGJsYWNrbGlzdENvdW50OiB0aGlzLmJsYWNrbGlzdENhY2hlLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflm57orr/pu5HlkI3ljZXvvJrkv53lrZjlrZjlgqjmlbDmja7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmt7vliqDnlKjmiLfliLDlm57orr/pu5HlkI3ljZUNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCDnlKjmiLdJRA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCNDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSByZWFzb24g5re75Yqg5Y6f5ZugDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKbmt7vliqDmiJDlip8NCiAgICAgICAgICovDQogICAgICAgIGFkZCh1c2VySWQsIHVzZXJOYW1lLCByZWFzb24gPSAnbWFudWFsJykgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5Zue6K6/6buR5ZCN5Y2V77ya55So5oi3SUTkuLrnqbonKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuW3suWtmOWcqA0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmJsYWNrbGlzdENhY2hlLmhhcyh1c2VySWQpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5Zue6K6/6buR5ZCN5Y2V77ya55So5oi35bey5a2Y5ZyoJywgeyB1c2VySWQsIHVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmt7vliqDmlrDmnaHnm64NCiAgICAgICAgICAgICAgICBjb25zdCBibGFja2xpc3RFbnRyeSA9IHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlck5hbWUgfHwgJ+acquefpeeUqOaItycsDQogICAgICAgICAgICAgICAgICAgIGFkZGVkQXQ6IERhdGUubm93KCksDQogICAgICAgICAgICAgICAgICAgIHJlYXNvbg0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICB0aGlzLmJsYWNrbGlzdENhY2hlLnNldCh1c2VySWQsIGJsYWNrbGlzdEVudHJ5KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNhdmVCbGFja2xpc3RUb1N0b3JhZ2UoKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5qrIOeUqOaIt+W3sua3u+WKoOWI",
        "sOWbnuiuv+m7keWQjeWNlScsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgcmVhc29uLA0KICAgICAgICAgICAgICAgICAgICB0b3RhbDogdGhpcy5ibGFja2xpc3RDYWNoZS5zaXplDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Zue6K6/6buR5ZCN5Y2V77ya5re75Yqg5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7juWbnuiuv+m7keWQjeWNleenu+mZpOeUqOaItw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkIOeUqOaIt0lEDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKbnp7vpmaTmiJDlip8NCiAgICAgICAgICovDQogICAgICAgIHJlbW92ZSh1c2VySWQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCF1c2VySWQpIHJldHVybiBmYWxzZTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHJlbW92ZWQgPSB0aGlzLmJsYWNrbGlzdENhY2hlLmRlbGV0ZSh1c2VySWQpOw0KICAgICAgICAgICAgICAgIGlmIChyZW1vdmVkKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2F2ZUJsYWNrbGlzdFRvU3RvcmFnZSgpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOeUqOaIt+W3suS7juWbnuiuv+m7keWQjeWNleenu+mZpCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZzogdGhpcy5ibGFja2xpc3RDYWNoZS5zaXplDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICByZXR1cm4gcmVtb3ZlZDsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflm57orr/pu5HlkI3ljZXvvJrnp7vpmaTlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l55So5oi35piv5ZCm5Zyo5Zue6K6/6buR5ZCN5Y2V5LitDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VySWQg55So5oi3SUQNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuWcqOm7keWQjeWNleS4rQ0KICAgICAgICAgKi8NCiAgICAgICAgaXNCbGFja2xpc3RlZCh1c2Vy",
        "SWQpIHsNCiAgICAgICAgICAgIGlmICghdXNlcklkKSByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICByZXR1cm4gdGhpcy5ibGFja2xpc3RDYWNoZS5oYXModXNlcklkKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5omA5pyJ5Zue6K6/6buR5ZCN5Y2V55So5oi3DQogICAgICAgICAqIEByZXR1cm5zIHtBcnJheX0g6buR5ZCN5Y2V5YiX6KGoDQogICAgICAgICAqLw0KICAgICAgICBnZXRBbGwoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuYmxhY2tsaXN0Q2FjaGUudmFsdWVzKCkpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+Wbnuiuv+m7keWQjeWNle+8muiOt+WPluWIl+ihqOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuIXnqbrlm57orr/pu5HlkI3ljZUNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpua4heepuuaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYXIoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvdW50ID0gdGhpcy5ibGFja2xpc3RDYWNoZS5zaXplOw0KICAgICAgICAgICAgICAgIHRoaXMuYmxhY2tsaXN0Q2FjaGUuY2xlYXIoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnNhdmVCbGFja2xpc3RUb1N0b3JhZ2UoKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+Xke+4jyDlm57orr/pu5HlkI3ljZXlt7LmuIXnqbonLCB7IGNsZWFyZWRDb3VudDogY291bnQgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Zue6K6/6buR5ZCN5Y2V77ya5riF56m65aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluWbnuiuv+m7keWQjeWNlee7n+iuoeS/oeaBrw0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDnu5/orqHkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIGdldFN0YXRzKCkgew0KICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0ID0gdGhpcy5nZXRBbGwoKTsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBjb25zdCBvbmVEYXkgPSAyNCAqIDYwICogNjAgKiAxMDAwOw0KDQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIHRvdGFsOiBibGFja2xpc3QubGVuZ3RoLA0KICAgICAgICAgICAgICAgIG1hbnVhbDogYmxhY2tsaXN0LmZpbHRlcihp",
        "dGVtID0+IGl0ZW0ucmVhc29uID09PSAnbWFudWFsJykubGVuZ3RoLA0KICAgICAgICAgICAgICAgIHJlY2VudGx5QWRkZWQ6IGJsYWNrbGlzdC5maWx0ZXIoaXRlbSA9PiBub3cgLSBpdGVtLmFkZGVkQXQgPCBvbmVEYXkpLmxlbmd0aA0KICAgICAgICAgICAgfTsNCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOi/veeyieiusOW9leeuoeeQhuWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgRm9sbG93VXBSZWNvcmRNYW5hZ2VyID0gew0KICAgICAgICAvLyDlrZjlgqjplK4NCiAgICAgICAgU1RPUkFHRV9LRVk6ICd4aHNfZm9sbG93dXBfcmVjb3JkcycsDQoNCiAgICAgICAgLy8g5YaF5a2Y57yT5a2Y77yadXNlcklkIC0+IHJlY29yZERhdGENCiAgICAgICAgcmVjb3JkQ2FjaGU6IG5ldyBNYXAoKSwNCg0KICAgICAgICAvLyDnvJPlrZjlkIzmraXml7bpl7Tpl7TpmpTvvIg15YiG6ZKf77yJDQogICAgICAgIENBQ0hFX1NZTkNfSU5URVJWQUw6IDUgKiA2MCAqIDEwMDAsDQoNCiAgICAgICAgLy8g5LiK5qyh5ZCM5q2l5pe26Ze0DQogICAgICAgIGxhc3RTeW5jVGltZTogMCwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yid5aeL5YyW6L+957KJ6K6w5b2V566h55CG5ZmoDQogICAgICAgICAqLw0KICAgICAgICBpbml0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICB0aGlzLmxvYWRSZWNvcmRzRnJvbVN0b3JhZ2UoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0UGVyaW9kaWNTeW5jKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiusOW9leeuoeeQhuWZqOWIneWni+WMluWujOaIkCcsIHsNCiAgICAgICAgICAgICAgICAgICAgcmVjb3JkQ291bnQ6IHRoaXMucmVjb3JkQ2FjaGUuc2l6ZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9leeuoeeQhuWZqOWIneWni+WMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7jmxvY2FsU3RvcmFnZeWKoOi9veiusOW9leaVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgbG9hZFJlY29yZHNGcm9tU3RvcmFnZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc3RvcmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5TVE9SQUdFX0tFWSk7DQogICAgICAgICAgICAgICAgaWYgKHN0b3JlZCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCByZWNvcmRzID0gSlNPTi5wYXJzZShzdG9yZWQpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnJlY29yZENhY2hlLmNsZWFyKCk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5Yqg6L296K6w",
        "5b2V5bm25riF55CG6L+H5pyf5pWw5o2uDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4cGlyZURheXMgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBTY2FuRGF5cycsIDMpICsgMzA7IC8vIOS/neeVmTMw5aSp6aKd5aSW5pWw5o2uDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4cGlyZVRpbWUgPSBleHBpcmVEYXlzICogMjQgKiA2MCAqIDYwICogMTAwMDsNCiAgICAgICAgICAgICAgICAgICAgbGV0IGxvYWRlZENvdW50ID0gMDsNCg0KICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFt1c2VySWQsIHJlY29yZF0gb2YgT2JqZWN0LmVudHJpZXMocmVjb3JkcykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIPCflKcg5L+u5aSN77ya5pS56L+b6L+H5pyf5Yik5pat6YC76L6R77yM5L+d55WZ5bey5Zue6K6/55So5oi355qE6K6w5b2VDQogICAgICAgICAgICAgICAgICAgICAgICBsZXQgc2hvdWxkS2VlcCA9IGZhbHNlOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVjb3JkLmZpcnN0Q29udGFjdCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWvueS6juacquWbnuiuv+eahOeUqOaIt++8jOajgOafpemmluasoeiBlOezu+aXtumXtA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcmVjb3JkLmxhc3RGb2xsb3dVcCAmJiAobm93IC0gcmVjb3JkLmZpcnN0Q29udGFjdCkgPCBleHBpcmVUaW1lKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3VsZEtlZXAgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlr7nkuo7lt7Llm57orr/nmoTnlKjmiLfvvIzkvb/nlKjmm7Tplb/nmoTkv53nlZnml7bpl7TvvIg5MOWkqe+8iQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKHJlY29yZC5sYXN0Rm9sbG93VXApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXh0ZW5kZWRFeHBpcmVUaW1lID0gOTAgKiAyNCAqIDYwICogNjAgKiAxMDAwOyAvLyA5MOWkqQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBsYXN0QWN0aXZpdHlUaW1lID0gTWF0aC5tYXgocmVjb3JkLmZpcnN0Q29udGFjdCwgcmVjb3JkLmxhc3RGb2xsb3dVcCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgobm93IC0gbGFzdEFjdGl2aXR5VGltZSkgPCBleHRlbmRlZEV4cGlyZVRpbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3VsZEtlZXAgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2hvdWxkS2VlcCkgew0KICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVjb3JkQ2FjaGUuc2V0KHVzZXJJZCwgcmVjb3JkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2FkZWRDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiusOW9le+8muS7juWtmOWCqOWKoOi9veiusOW9lScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsU3RvcmVkOiBPYmplY3Qua2V5cyhyZWNvcmRzKS5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgICAgICBsb2FkZWRDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGlyZWRDb3VudDogT2JqZWN0LmtleXMocmVjb3JkcykubGVuZ3RoIC0gbG9hZGVkQ291bnQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8muWKoOi9veWtmOWCqOaVsOaNruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5yZWNvcmRDYWNoZS5jbGVhcigpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDkv53lrZjorrDlvZXmlbDmja7liLBsb2NhbFN0b3JhZ2UNCiAgICAgICAgICovDQogICAgICAgIHNhdmVSZWNvcmRzVG9TdG9yYWdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCByZWNvcmRzID0gT2JqZWN0LmZyb21FbnRyaWVzKHRoaXMucmVjb3JkQ2FjaGUpOw0KICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuU1RPUkFHRV9LRVksIEpTT04uc3RyaW5naWZ5KHJlY29yZHMpKTsNCiAgICAgICAgICAgICAgICB0aGlzLmxhc3RTeW5jVGltZSA9IERhdGUubm93KCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8muS/neWtmOWIsOWtmOWCqCcsIHsNCiAgICAgICAgICAgICAgICAgICAgcmVjb3JkQ291bnQ6IHRoaXMucmVjb3JkQ2FjaGUuc2l6ZSwNCiAgICAgICAgICAgICAgICAgICAgc3RvcmFnZVNpemU6IEpTT04uc3RyaW5naWZ5KHJlY29yZHMpLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8muS/neWtmOWtmOWCqOaVsOaNruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWumuacn+WQjOatpeWIsOWtmOWCqO+8iOmBv+WFjemikee5geWGmeWFpe+8iQ0KICAgICAgICAgKi8NCiAgICAgICAgc3luY1RvU3RvcmFnZUlmTmVlZGVkKCkgew0KICAgICAgICAgICAgY29u",
        "c3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGlmICgobm93IC0gdGhpcy5sYXN0U3luY1RpbWUpID4gdGhpcy5DQUNIRV9TWU5DX0lOVEVSVkFMKSB7DQogICAgICAgICAgICAgICAgdGhpcy5zYXZlUmVjb3Jkc1RvU3RvcmFnZSgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlkK/liqjlrprmnJ/lkIzmraUNCiAgICAgICAgICovDQogICAgICAgIHN0YXJ0UGVyaW9kaWNTeW5jKCkgew0KICAgICAgICAgICAgc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMuc3luY1RvU3RvcmFnZUlmTmVlZGVkKCk7DQogICAgICAgICAgICB9LCB0aGlzLkNBQ0hFX1NZTkNfSU5URVJWQUwpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlkK/liqjnlZnlrqLotYTnirbmgIHnm5HmjqcNCiAgICAgICAgICovDQogICAgICAgIHN0YXJ0TGVhZHNNb25pdG9yaW5nKCkgew0KICAgICAgICAgICAgaWYgKCFDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBMZWFkc01vbml0b3InLCB0cnVlKSkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6K6w5b2V77ya55WZ5a6i6LWE55uR5o6n5bey56aB55SoJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb25zdCBjaGVja0ludGVydmFsID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwTGVhZHNDaGVja0ludGVydmFsJywgMzApICogNjAgKiAxMDAwOyAvLyDovazmjaLkuLrmr6vnp5INCg0KICAgICAgICAgICAgc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tBbmRVcGRhdGVMZWFkc1N0YXR1cygpOw0KICAgICAgICAgICAgfSwgY2hlY2tJbnRlcnZhbCk7DQoNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonorrDlvZXvvJrnlZnlrqLotYTnm5Hmjqflt7LlkK/liqgnLCB7DQogICAgICAgICAgICAgICAgY2hlY2tJbnRlcnZhbDogY2hlY2tJbnRlcnZhbCAvIDYwIC8gMTAwMCArICfliIbpkp8nDQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l5bm25pu05paw55WZ5a6i6LWE54q25oCBDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBjaGVja0FuZFVwZGF0ZUxlYWRzU3RhdHVzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5yZWNvcmRDYWNoZS5zaXplID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8muW8gOWni+ajgOafpeeVmeWuoui1hOeKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgdG90YWxSZWNvcmRzOiB0aGlzLnJlY29yZENhY2hlLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIGxl",
        "dCB1cGRhdGVkQ291bnQgPSAwOw0KICAgICAgICAgICAgICAgIGNvbnN0IHJlY29yZHNUb0NoZWNrID0gQXJyYXkuZnJvbSh0aGlzLnJlY29yZENhY2hlLmVudHJpZXMoKSkNCiAgICAgICAgICAgICAgICAgICAgLmZpbHRlcigoW3VzZXJJZCwgcmVjb3JkXSkgPT4NCiAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZC5zdGF0dXMgPT09ICdwZW5kaW5nJyB8fCByZWNvcmQuc3RhdHVzID09PSAnZm9sbG93aW5nJw0KICAgICAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBbdXNlcklkLCByZWNvcmRdIG9mIHJlY29yZHNUb0NoZWNrKSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDkvb/nlKjlvILmraVBUEnkvJjlhYjmo4Dmn6XnlZnlrqLotYTnirbmgIENCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhc0xlYWRzVGFnID0gYXdhaXQgRm9sbG93VXBNYW5hZ2VyLmNoZWNrVXNlckxlYWRzU3RhdHVzRmFzdEFzeW5jKHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHJlY29yZC51c2VySWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHJlY29yZC51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogcmVjb3JkLmNvbnZlcnNhdGlvbklkDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhhc0xlYWRzVGFnKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5pu05paw54q25oCB5Li65bey5a6M5oiQ77yI6I635b6X55WZ5a6i6LWE77yJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3JkLnN0YXR1cyA9ICdsZWFkc19hY3F1aXJlZCc7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3JkLmxlYWRzQWNxdWlyZWRUaW1lID0gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVjb3JkQ2FjaGUuc2V0KHVzZXJJZCwgcmVjb3JkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVkQ291bnQrKzsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonorrDlvZXvvJrnlKjmiLflt7LojrflvpfnlZnlrqLotYTvvIznp7vlh7rov73nsonliJfooagnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiByZWNvcmQudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBDb3VudDogcmVjb3JkLmZvbGxvd1VwQ291bnQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOajgOa1i+aWueW8jzogJ0FQSeS8mOWFiOW8guatpeajgOa1iycNCiAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya5qOA5p+l55So5oi355WZ5a6i6LWE54q25oCB5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiByZWNvcmQudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5re75Yqg5bu26L+f5Lul6YCC5bqUQVBJ6LCD55SoDQogICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDIwMCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHVwZGF0ZWRDb3VudCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zeW5jVG9TdG9yYWdlSWZOZWVkZWQoKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiusOW9le+8mueVmeWuoui1hOeKtuaAgeajgOafpeWujOaIkCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWRSZWNvcmRzOiByZWNvcmRzVG9DaGVjay5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVkQ291bnQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya55WZ5a6i6LWE54q25oCB5qOA5p+l5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K6w5b2V5Zue6K6/5pON5L2cDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VySWQg55So5oi3SUQNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5Lya6K+dSUQNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRlbXBsYXRlIOS9v+eUqOeahOivneacr+aooeadvw0KICAgICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHN1Y2Nlc3Mg5piv5ZCm5Y+R6YCB5oiQ5YqfDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKborrDlvZXmiJDlip8NCiAgICAgICAgICovDQogICAgICAgIHJlY29yZEZvbGxvd1VwKHVzZXJJZCwgdXNlck5hbWUsIGNvbnZlcnNhdGlvbklkLCB0ZW1wbGF0ZSwgc3VjY2Vzcykgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ6K6w5b2V77ya55So5oi3SUTkuLrnqbonKTsN",
        "CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgbGV0IHJlY29yZCA9IHRoaXMucmVjb3JkQ2FjaGUuZ2V0KHVzZXJJZCk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIXJlY29yZCkgew0KICAgICAgICAgICAgICAgICAgICAvLyDliJvlu7rmlrDorrDlvZUNCiAgICAgICAgICAgICAgICAgICAgcmVjb3JkID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJOYW1lIHx8ICfmnKrnn6XnlKjmiLcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQsDQogICAgICAgICAgICAgICAgICAgICAgICBmaXJzdENvbnRhY3Q6IG5vdywNCiAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RGb2xsb3dVcDogbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwQ291bnQ6IDAsDQogICAgICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcEhpc3Rvcnk6IFtdLA0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAncGVuZGluZycNCiAgICAgICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDorrDlvZUNCiAgICAgICAgICAgICAgICByZWNvcmQubGFzdEZvbGxvd1VwID0gbm93Ow0KICAgICAgICAgICAgICAgIHJlY29yZC5mb2xsb3dVcENvdW50Kys7DQogICAgICAgICAgICAgICAgcmVjb3JkLmZvbGxvd1VwSGlzdG9yeS5wdXNoKHsNCiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBub3csDQogICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlOiB0ZW1wbGF0ZS5zdWJzdHJpbmcoMCwgMTAwKSArICcuLi4nLCAvLyDlj6rkv53lrZjliY0xMDDlrZfnrKYNCiAgICAgICAgICAgICAgICAgICAgc3VjY2VzcywNCiAgICAgICAgICAgICAgICAgICAgZGVsYXk6IDAgLy8g5Y+v5Lul6K6w5b2V5a6e6ZmF5bu26L+f5pe26Ze0DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDnirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBtYXhDb3VudCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcE1heENvdW50JywgMik7DQogICAgICAgICAgICAgICAgaWYgKHJlY29yZC5mb2xsb3dVcENvdW50ID49IG1heENvdW50KSB7DQogICAgICAgICAgICAgICAgICAgIHJlY29yZC5zdGF0dXMgPSAnY29tcGxldGVkJzsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICByZWNvcmQuc3RhdHVzID0gJ2ZvbGxvd2luZyc7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy5yZWNvcmRDYWNoZS5zZXQodXNlcklkLCByZWNvcmQpOw0KDQogICAgICAgICAgICAgICAgLy8g8J+UpyBCVUfkv67lpI3vvJrnq4vljbPlkIzmraXlm57o",
        "rr/orrDlvZXliLDlrZjlgqjvvIzpgb/lhY3ph43lpI3lm57orr8NCiAgICAgICAgICAgICAgICAvLyDljp/mnaXkvb/nlKggc3luY1RvU3RvcmFnZUlmTmVlZGVkKCkg5Lya5pyJ5bu26L+f77yM5a+86Ie056ue5oCB5p2h5Lu2DQogICAgICAgICAgICAgICAgdGhpcy5zYXZlUmVjb3Jkc1RvU3RvcmFnZSgpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiusOW9le+8muiusOW9leWbnuiuv+aTjeS9nCcsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBDb3VudDogcmVjb3JkLmZvbGxvd1VwQ291bnQsDQogICAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVjb3JkLnN0YXR1cywNCiAgICAgICAgICAgICAgICAgICAgc3VjY2VzcywNCiAgICAgICAgICAgICAgICAgICAgbGFzdEZvbGxvd1VwOiBuZXcgRGF0ZShyZWNvcmQubGFzdEZvbGxvd1VwKS50b0xvY2FsZVN0cmluZygpDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonorrDlvZXvvJrorrDlvZXlm57orr/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l55So5oi35piv5ZCm5Y+v5Lul6L+b6KGM5Zue6K6/DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VySWQg55So5oi3SUQNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuWPr+S7peWbnuiuvw0KICAgICAgICAgKi8NCiAgICAgICAgY2FuRm9sbG93VXAodXNlcklkKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghdXNlcklkIHx8ICFDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBFbmFibGVkJywgZmFsc2UpKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCByZWNvcmQgPSB0aGlzLnJlY29yZENhY2hlLmdldCh1c2VySWQpOw0KICAgICAgICAgICAgICAgIGlmICghcmVjb3JkKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOyAvLyDmlrDnlKjmiLflj6/ku6Xlm57orr8NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblt7LlrozmiJDmiJbooqvpmLvmraINCiAgICAgICAgICAgICAgICBpZiAocmVjb3JkLnN0YXR1cyA9PT0gJ2NvbXBsZXRlZCcgfHwgcmVjb3JkLnN0YXR1cyA9PT0gJ2Jsb2NrZWQnKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAg",
        "ICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6Xlm57orr/mrKHmlbDpmZDliLYNCiAgICAgICAgICAgICAgICBjb25zdCBtYXhDb3VudCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcE1heENvdW50JywgMik7DQogICAgICAgICAgICAgICAgaWYgKHJlY29yZC5mb2xsb3dVcENvdW50ID49IG1heENvdW50KSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6Xml7bpl7Tpl7TpmpQNCiAgICAgICAgICAgICAgICBjb25zdCBpbnRlcnZhbEhvdXJzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwSW50ZXJ2YWwnLCAyNCk7DQoNCiAgICAgICAgICAgICAgICAvLyDpqozor4Hpl7TpmpTphY3nva7nmoTmnInmlYjmgKcNCiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGludGVydmFsSG91cnMgIT09ICdudW1iZXInIHx8IGlzTmFOKGludGVydmFsSG91cnMpIHx8IGludGVydmFsSG91cnMgPD0gMCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8muWbnuiuv+mXtOmalOmFjee9ruaXoOaViCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGludGVydmFsSG91cnMsDQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiB0eXBlb2YgaW50ZXJ2YWxIb3Vycw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGludGVydmFsID0gaW50ZXJ2YWxIb3VycyAqIDYwICogNjAgKiAxMDAwOyAvLyDovazmjaLkuLrmr6vnp5INCiAgICAgICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICAgICAgLy8g5L+u5aSN77ya5ZCM5pe25qOA5p+l6aaW5qyh6IGU57O75pe26Ze05ZKM5pyA5ZCO5Zue6K6/5pe26Ze0DQogICAgICAgICAgICAgICAgaWYgKCFyZWNvcmQubGFzdEZvbGxvd1VwKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOS7juacquWbnuiuv+i/h++8jOajgOafpei3neemu+mmluasoeiBlOezu+eahOaXtumXtA0KICAgICAgICAgICAgICAgICAgICBpZiAocmVjb3JkLmZpcnN0Q29udGFjdCAmJiAobm93IC0gcmVjb3JkLmZpcnN0Q29udGFjdCkgPCBpbnRlcnZhbCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonorrDlvZXvvJrpppbmrKHogZTns7vml7bpl7Tpl7TpmpTmnKrmu6HotrMnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0Q29udGFjdDogbmV3IERhdGUocmVjb3JkLmZpcnN0Q29udGFjdCkudG9Mb2NhbGVTdHJpbmcoKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbEhvdXJz",
        "LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ0hvdXJzOiBNYXRoLmNlaWwoKGludGVydmFsIC0gKG5vdyAtIHJlY29yZC5maXJzdENvbnRhY3QpKSAvICg2MCAqIDYwICogMTAwMCkpDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOW3sue7j+Wbnuiuv+i/h++8jOajgOafpei3neemu+S4iuasoeWbnuiuv+eahOaXtumXtA0KICAgICAgICAgICAgICAgICAgICBpZiAoKG5vdyAtIHJlY29yZC5sYXN0Rm9sbG93VXApIDwgaW50ZXJ2YWwpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6K6w5b2V77ya5Zue6K6/5pe26Ze06Ze06ZqU5pyq5ruh6LazJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0Rm9sbG93VXA6IG5ldyBEYXRlKHJlY29yZC5sYXN0Rm9sbG93VXApLnRvTG9jYWxlU3RyaW5nKCksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWxIb3VycywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdIb3VyczogTWF0aC5jZWlsKChpbnRlcnZhbCAtIChub3cgLSByZWNvcmQubGFzdEZvbGxvd1VwKSkgLyAoNjAgKiA2MCAqIDEwMDApKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonorrDlvZXvvJrmo4Dmn6Xlm57orr/mnYPpmZDlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5b6F5Zue6K6/55So5oi35YiX6KGoDQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzY2FuRGF5cyDmiavmj4/lpKnmlbANCiAgICAgICAgICogQHJldHVybnMge0FycmF5fSDlvoXlm57orr/nlKjmiLfliJfooagNCiAgICAgICAgICovDQogICAgICAgIGdldFBlbmRpbmdVc2VycyhzY2FuRGF5cyA9IG51bGwpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g56Gu5L+d57yT5a2Y5bey5Yid5aeL5YyWDQogICAgICAgICAgICAgICAgaWYgKCF0aGlzLnJlY29yZENhY2hlKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonorrDlvZXvvJrnvJPlrZjmnKrl",
        "iJ3lp4vljJbvvIzlsJ3or5XliqDovb0nKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkUmVjb3Jkc0Zyb21TdG9yYWdlKCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKCF0aGlzLnJlY29yZENhY2hlIHx8IHRoaXMucmVjb3JkQ2FjaGUuc2l6ZSA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8muaXoOiusOW9leaVsOaNru+8jOi/lOWbnuepuuWIl+ihqCcpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gW107DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgZGF5cyA9IHNjYW5EYXlzIHx8IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcFNjYW5EYXlzJywgMyk7DQogICAgICAgICAgICAgICAgY29uc3Qgc2NhblRpbWUgPSBkYXlzICogMjQgKiA2MCAqIDYwICogMTAwMDsNCiAgICAgICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHBlbmRpbmdVc2VycyA9IFtdOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFsbFJlY29yZHMgPSBbXTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6K6w5b2V77ya5byA5aeL6I635Y+W5b6F5Zue6K6/55So5oi3Jywgew0KICAgICAgICAgICAgICAgICAgICBzY2FuRGF5czogZGF5cywNCiAgICAgICAgICAgICAgICAgICAgdG90YWxSZWNvcmRzOiB0aGlzLnJlY29yZENhY2hlLnNpemUsDQogICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwRW5hYmxlZDogQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwRW5hYmxlZCcsIGZhbHNlKQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBbdXNlcklkLCByZWNvcmRdIG9mIHRoaXMucmVjb3JkQ2FjaGUuZW50cmllcygpKSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDpqozor4HorrDlvZXmlbDmja7lrozmlbTmgKcNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcmVjb3JkIHx8ICF1c2VySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8mui3s+i/h+aXoOaViOiusOW9lScsIHsgdXNlcklkLCByZWNvcmQgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOaehOW7uuiusOW9leaRmOimge+8iOeUqOS6juiwg+ivle+8iQ0KICAgICAgICAgICAgICAgICAgICAgICAgYWxsUmVjb3Jkcy5wdXNoKHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHJlY29yZC51c2VyTmFtZSB8fCAn5pyq55+l55So5oi3JywNCiAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHJlY29yZC5zdGF0dXMgfHwgJ3BlbmRpbmcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwQ291bnQ6IHJlY29yZC5mb2xsb3dVcENvdW50IHx8IDAsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RDb250YWN0OiByZWNvcmQuZmlyc3RDb250YWN0ID8gbmV3IERhdGUocmVjb3JkLmZpcnN0Q29udGFjdCkudG9Mb2NhbGVTdHJpbmcoKSA6ICdOL0EnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RGb2xsb3dVcDogcmVjb3JkLmxhc3RGb2xsb3dVcCA/IG5ldyBEYXRlKHJlY29yZC5sYXN0Rm9sbG93VXApLnRvTG9jYWxlU3RyaW5nKCkgOiAnTi9BJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXlzU2luY2VGaXJzdDogcmVjb3JkLmZpcnN0Q29udGFjdCA/IE1hdGgucm91bmQoKG5vdyAtIHJlY29yZC5maXJzdENvbnRhY3QpIC8gKDI0ICogNjAgKiA2MCAqIDEwMDApICogMTApIC8gMTAgOiAnTi9BJw0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOaOkumZpOW3suiOt+W+l+eVmeWuoui1hOeahOeUqOaItw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlY29yZC5zdGF0dXMgPT09ICdsZWFkc19hY3F1aXJlZCcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8mueUqOaIt+W3suiOt+W+l+eVmeWuoui1hO+8jOi3s+i/h+WbnuiuvycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHJlY29yZC51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVhZHNBY3F1aXJlZFRpbWU6IHJlY29yZC5sZWFkc0FjcXVpcmVkVGltZSA/IG5ldyBEYXRlKHJlY29yZC5sZWFkc0FjcXVpcmVkVGltZSkudG9Mb2NhbGVTdHJpbmcoKSA6ICdOL0EnDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeWbnuiuv+m7keWQjeWNlQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKEZvbGxvd1VwQmxhY2tsaXN0TWFuYWdlciAmJiB0eXBlb2YgRm9sbG93VXBCbGFja2xpc3RNYW5hZ2VyLmlzQmxhY2tsaXN0ZWQgPT09ICdmdW5jdGlvbicpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoRm9sbG93VXBCbGFja2xpc3RNYW5hZ2VyLmlzQmxhY2tsaXN0ZWQodXNlcklkKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonorrDlvZXvvJrnlKjmiLflnKjlm57orr/pu5HlkI3ljZXkuK3vvIzot7Pov4flm57orr8nLCB7DQogICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHJlY29yZC51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGJsYWNrbGlzdEVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya5qOA5p+l6buR5ZCN5Y2V5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGJsYWNrbGlzdEVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOm7keWQjeWNleajgOafpeWksei0peaXtue7p+e7reWkhOeQhu+8jOS4jei3s+i/h+eUqOaItw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5Zyo5omr5o+P5pe26Ze06IyD5Zu05YaFDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVjb3JkLmZpcnN0Q29udGFjdCAmJiB0eXBlb2YgcmVjb3JkLmZpcnN0Q29udGFjdCA9PT0gJ251bWJlcicgJiYgKG5vdyAtIHJlY29yZC5maXJzdENvbnRhY3QpIDw9IHNjYW5UaW1lKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5Y+v5Lul5Zue6K6/DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGNhbkZvbGxvd1VwID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuRm9sbG93VXAgPSB0aGlzLmNhbkZvbGxvd1VwKHVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoY2FuRm9sbG93VXBFcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8muajgOafpeWbnuiuv+adoeS7tuWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBjYW5Gb2xsb3dVcEVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbkZvbGxvd1VwID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQog",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonorrDlvZXvvJrmo4Dmn6XnlKjmiLflm57orr/mnaHku7YnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiByZWNvcmQudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVjb3JkLnN0YXR1cywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBDb3VudDogcmVjb3JkLmZvbGxvd1VwQ291bnQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheXNTaW5jZUZpcnN0OiBNYXRoLnJvdW5kKChub3cgLSByZWNvcmQuZmlyc3RDb250YWN0KSAvICgyNCAqIDYwICogNjAgKiAxMDAwKSAqIDEwKSAvIDEwLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNMYXN0Rm9sbG93VXA6ICEhcmVjb3JkLmxhc3RGb2xsb3dVcCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdEZvbGxvd1VwOiByZWNvcmQubGFzdEZvbGxvd1VwID8gbmV3IERhdGUocmVjb3JkLmxhc3RGb2xsb3dVcCkudG9Mb2NhbGVTdHJpbmcoKSA6ICfku47mnKrlm57orr8nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJzdENvbnRhY3Q6IHJlY29yZC5maXJzdENvbnRhY3QgPyBuZXcgRGF0ZShyZWNvcmQuZmlyc3RDb250YWN0KS50b0xvY2FsZVN0cmluZygpIDogJ04vQScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbkZvbGxvd1VwDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2FuRm9sbG93VXApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHByaW9yaXR5ID0gdGhpcy5jYWxjdWxhdGVQcmlvcml0eShyZWNvcmQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVuZGluZ1VzZXJzLnB1c2goew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogcmVjb3JkLnVzZXJOYW1lIHx8ICfmnKrnn6XnlKjmiLcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiByZWNvcmQuY29udmVyc2F0aW9uSWQgfHwgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0Q29udGFjdDogcmVjb3JkLmZpcnN0Q29udGFjdCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0Rm9sbG93VXA6IHJlY29yZC5sYXN0Rm9sbG93VXAgfHwgbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcENvdW50OiByZWNvcmQuZm9sbG93VXBDb3VudCB8",
        "fCAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW9yaXR5OiBwcmlvcml0eQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKHByaW9yaXR5RXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya6K6h566X5LyY5YWI57qn5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogcHJpb3JpdHlFcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOS8mOWFiOe6p+iuoeeul+Wksei0peaXtuS9v+eUqOm7mOiupOS8mOWFiOe6pw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGVuZGluZ1VzZXJzLnB1c2goew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogcmVjb3JkLnVzZXJOYW1lIHx8ICfmnKrnn6XnlKjmiLcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiByZWNvcmQuY29udmVyc2F0aW9uSWQgfHwgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0Q29udGFjdDogcmVjb3JkLmZpcnN0Q29udGFjdCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0Rm9sbG93VXA6IHJlY29yZC5sYXN0Rm9sbG93VXAgfHwgbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcENvdW50OiByZWNvcmQuZm9sbG93VXBDb3VudCB8fCAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW9yaXR5OiAwDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonorrDlvZXvvJrnlKjmiLfotoXlh7rmiavmj4/ml7bpl7TojIPlm7QnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiByZWNvcmQudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheXNTaW5jZUZpcnN0OiByZWNvcmQuZmlyc3RDb250YWN0ID8gTWF0aC5yb3VuZCgobm93IC0gcmVj",
        "b3JkLmZpcnN0Q29udGFjdCkgLyAoMjQgKiA2MCAqIDYwICogMTAwMCkgKiAxMCkgLyAxMCA6ICdOL0EnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2FuRGF5czogZGF5cywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzRmlyc3RDb250YWN0OiAhIXJlY29yZC5maXJzdENvbnRhY3QsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0Q29udGFjdFR5cGU6IHR5cGVvZiByZWNvcmQuZmlyc3RDb250YWN0DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKHJlY29yZEVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8muWkhOeQhuWNleS4quiusOW9leWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZD8uc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiByZWNvcmRFcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOe7p+e7reWkhOeQhuS4i+S4gOS4quiusOW9lQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmjInkvJjlhYjnuqfmjpLluo8NCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBwZW5kaW5nVXNlcnMuc29ydCgoYSwgYikgPT4gKGIucHJpb3JpdHkgfHwgMCkgLSAoYS5wcmlvcml0eSB8fCAwKSk7DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoc29ydEVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya5o6S5bqP5aSx6LSlJywgeyBlcnJvcjogc29ydEVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgIC8vIOaOkuW6j+Wksei0peaXtuS/neaMgeWOn+mhuuW6jw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenOayoeacieW+heWbnuiuv+eUqOaIt++8jOaPkOS+m+ivpue7hueahOiviuaWreS/oeaBrw0KICAgICAgICAgICAgICAgIGlmIChwZW5kaW5nVXNlcnMubGVuZ3RoID09PSAwICYmIHRoaXMucmVjb3JkQ2FjaGUuc2l6ZSA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonorrDlvZXvvJrmnInnlKjmiLforrDlvZXkvYbml6DlvoXlm57orr/nlKjmiLcnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB0b3RhbFJlY29yZHM6IHRoaXMucmVjb3JkQ2FjaGUuc2l6ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHNjYW5EYXlzOiBkYXlzLA0KICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBFbmFibGVkOiBDb25m",
        "aWdNYW5hZ2VyLmdldCgnZm9sbG93VXBFbmFibGVkJywgZmFsc2UpLA0KICAgICAgICAgICAgICAgICAgICAgICAgc2FtcGxlUmVjb3JkczogYWxsUmVjb3Jkcy5zbGljZSgwLCAzKSAvLyDmmL7npLrliY0z5p2h6K6w5b2V5L2c5Li65qC35pysDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6K6w5b2V77ya6I635Y+W5b6F5Zue6K6/55So5oi35a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICBzY2FuRGF5czogZGF5cywNCiAgICAgICAgICAgICAgICAgICAgdG90YWxSZWNvcmRzOiB0aGlzLnJlY29yZENhY2hlLnNpemUsDQogICAgICAgICAgICAgICAgICAgIHBlbmRpbmdDb3VudDogcGVuZGluZ1VzZXJzLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgYWxsUmVjb3JkczogYWxsUmVjb3Jkcy5zbGljZSgwLCA1KSAvLyDlj6rmmL7npLrliY015p2h6K6w5b2VDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gcGVuZGluZ1VzZXJzOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya6I635Y+W5b6F5Zue6K6/55So5oi35aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgc3RhY2s6IGVycm9yLnN0YWNrDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorqHnrpfnlKjmiLflm57orr/kvJjlhYjnuqcNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHJlY29yZCDnlKjmiLforrDlvZUNCiAgICAgICAgICogQHJldHVybnMge251bWJlcn0g5LyY5YWI57qn5YiG5pWwDQogICAgICAgICAqLw0KICAgICAgICBjYWxjdWxhdGVQcmlvcml0eShyZWNvcmQpIHsNCiAgICAgICAgICAgIGxldCBwcmlvcml0eSA9IDA7DQogICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICAvLyDln7rkuo7pppbmrKHmjqXop6bml7bpl7TvvIjotorml6nkvJjlhYjnuqfotorpq5jvvIkNCiAgICAgICAgICAgIGNvbnN0IGRheXNTaW5jZUZpcnN0Q29udGFjdCA9IChub3cgLSByZWNvcmQuZmlyc3RDb250YWN0KSAvICgyNCAqIDYwICogNjAgKiAxMDAwKTsNCiAgICAgICAgICAgIHByaW9yaXR5ICs9IE1hdGgubWF4KDAsIDEwIC0gZGF5c1NpbmNlRmlyc3RDb250YWN0KTsNCg0KICAgICAgICAgICAgLy8g5Z+65LqO5Zue6K6/5qyh5pWw77yI5Zue6K6/5qyh5pWw5bCR55qE5LyY5YWI57qn6auY77yJDQogICAgICAgICAgICBwcmlvcml0eSArPSAoMyAtIHJlY29yZC5mb2xsb3dVcENvdW50KSAqIDI7DQoNCiAgICAgICAgICAgIC8vIOWfuuS6juS4iuasoeWbnuiuv+aXtumXtO+8",
        "iOi2iuS5heayoeWbnuiuv+S8mOWFiOe6p+i2iumrmO+8iQ0KICAgICAgICAgICAgaWYgKHJlY29yZC5sYXN0Rm9sbG93VXApIHsNCiAgICAgICAgICAgICAgICBjb25zdCBob3Vyc1NpbmNlTGFzdEZvbGxvd1VwID0gKG5vdyAtIHJlY29yZC5sYXN0Rm9sbG93VXApIC8gKDYwICogNjAgKiAxMDAwKTsNCiAgICAgICAgICAgICAgICBwcmlvcml0eSArPSBNYXRoLm1pbihob3Vyc1NpbmNlTGFzdEZvbGxvd1VwIC8gMjQsIDUpOyAvLyDmnIDlpJrliqA15YiGDQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHByaW9yaXR5ICs9IDU7IC8vIOS7juacquWbnuiuv+eahOeUqOaIt+S8mOWFiOe6p+i+g+mrmA0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gcHJpb3JpdHk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOeUqOaIt+eKtuaAgQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkIOeUqOaIt0lEDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzdGF0dXMg5paw54q25oCBDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKbmm7TmlrDmiJDlip8NCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZVVzZXJTdGF0dXModXNlcklkLCBzdGF0dXMpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgcmVjb3JkID0gdGhpcy5yZWNvcmRDYWNoZS5nZXQodXNlcklkKTsNCiAgICAgICAgICAgICAgICBpZiAocmVjb3JkKSB7DQogICAgICAgICAgICAgICAgICAgIHJlY29yZC5zdGF0dXMgPSBzdGF0dXM7DQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVjb3JkQ2FjaGUuc2V0KHVzZXJJZCwgcmVjb3JkKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zeW5jVG9TdG9yYWdlSWZOZWVkZWQoKTsNCg0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8muabtOaWsOeUqOaIt+eKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1cw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonorrDlvZXvvJrmm7TmlrDnlKjmiLfnirbmgIHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W57uf6K6h5L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOe7n+iuoeS/oeaBrw0KICAgICAgICAgKi8NCiAgICAg",
        "ICAgZ2V0U3RhdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOehruS/nee8k+WtmOW3suWIneWni+WMlg0KICAgICAgICAgICAgICAgIGlmICghdGhpcy5yZWNvcmRDYWNoZSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ6K6w5b2V77ya57yT5a2Y5pyq5Yid5aeL5YyW77yM5bCd6K+V5Yqg6L29Jyk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZFJlY29yZHNGcm9tU3RvcmFnZSgpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzID0gew0KICAgICAgICAgICAgICAgICAgICB0b3RhbFVzZXJzOiB0aGlzLnJlY29yZENhY2hlID8gdGhpcy5yZWNvcmRDYWNoZS5zaXplIDogMCwNCiAgICAgICAgICAgICAgICAgICAgcGVuZGluZ1VzZXJzOiAwLA0KICAgICAgICAgICAgICAgICAgICBmb2xsb3dpbmdVc2VyczogMCwNCiAgICAgICAgICAgICAgICAgICAgY29tcGxldGVkVXNlcnM6IDAsDQogICAgICAgICAgICAgICAgICAgIGJsb2NrZWRVc2VyczogMCwNCiAgICAgICAgICAgICAgICAgICAgbGVhZHNBY3F1aXJlZFVzZXJzOiAwLCAvLyDmlrDlop7vvJrlt7LojrflvpfnlZnlrqLotYTnmoTnlKjmiLcNCiAgICAgICAgICAgICAgICAgICAgdG90YWxGb2xsb3dVcHM6IDANCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgaWYgKHRoaXMucmVjb3JkQ2FjaGUgJiYgdGhpcy5yZWNvcmRDYWNoZS5zaXplID4gMCkgew0KICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHJlY29yZCBvZiB0aGlzLnJlY29yZENhY2hlLnZhbHVlcygpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWuieWFqOWcsOe0r+WKoOWbnuiuv+asoeaVsA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZWNvcmQuZm9sbG93VXBDb3VudCAmJiB0eXBlb2YgcmVjb3JkLmZvbGxvd1VwQ291bnQgPT09ICdudW1iZXInKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRzLnRvdGFsRm9sbG93VXBzICs9IHJlY29yZC5mb2xsb3dVcENvdW50Ow0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWuieWFqOWcsOe7n+iuoeeKtuaAgQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1cyA9IHJlY29yZC5zdGF0dXMgfHwgJ3BlbmRpbmcnOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoc3RhdHVzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3BlbmRpbmcnOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHMucGVuZGluZ1VzZXJzKys7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2Fz",
        "ZSAnZm9sbG93aW5nJzoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRzLmZvbGxvd2luZ1VzZXJzKys7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnY29tcGxldGVkJzoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRzLmNvbXBsZXRlZFVzZXJzKys7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnYmxvY2tlZCc6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0cy5ibG9ja2VkVXNlcnMrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdsZWFkc19hY3F1aXJlZCc6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0cy5sZWFkc0FjcXVpcmVkVXNlcnMrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Og0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5pyq55+l54q25oCB6buY6K6k5Li6cGVuZGluZw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHMucGVuZGluZ1VzZXJzKys7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8muWPkeeOsOacquefpeeKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHJlY29yZC51c2VySWQ/LnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXMNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAocmVjb3JkRXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8muWkhOeQhuWNleS4quiusOW9lee7n+iuoeWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiByZWNvcmQudXNlcklkPy5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiByZWNvcmRFcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Ye66ZSZ55qE6K6w5b2V6buY6K6k6K6h5YWlcGVuZGluZw0KICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgIHN0YXRzLnBlbmRpbmdVc2VycysrOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonorrDlvZXvvJrnu5/orqHkv6Hmga/orqHnrpflrozmiJAnLCBzdGF0cyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHN0YXRzOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya6I635Y+W57uf6K6h5L+h5oGv5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgc3RhY2s6IGVycm9yLnN0YWNrDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDov5Tlm57lronlhajnmoTpu5jorqTlgLwNCiAgICAgICAgICAgICAgICBjb25zdCBkZWZhdWx0U3RhdHMgPSB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsVXNlcnM6IDAsDQogICAgICAgICAgICAgICAgICAgIHBlbmRpbmdVc2VyczogMCwNCiAgICAgICAgICAgICAgICAgICAgZm9sbG93aW5nVXNlcnM6IDAsDQogICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlZFVzZXJzOiAwLA0KICAgICAgICAgICAgICAgICAgICBibG9ja2VkVXNlcnM6IDAsDQogICAgICAgICAgICAgICAgICAgIGxlYWRzQWNxdWlyZWRVc2VyczogMCwNCiAgICAgICAgICAgICAgICAgICAgdG90YWxGb2xsb3dVcHM6IDANCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonorrDlvZXvvJrov5Tlm57pu5jorqTnu5/orqHkv6Hmga8nLCBkZWZhdWx0U3RhdHMpOw0KICAgICAgICAgICAgICAgIHJldHVybiBkZWZhdWx0U3RhdHM7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heeQhui/h+acn+iusOW9lQ0KICAgICAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSDmuIXnkIbnmoTorrDlvZXmlbDph48NCiAgICAgICAgICovDQogICAgICAgIGNsZWFuRXhwaXJlZFJlY29yZHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgY29uc3QgZXhwaXJlRGF5cyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcFNjYW5EYXlzJywgMykgKyAzMDsgLy8g5L+d55WZMzDlpKnpop3lpJbmlbDmja4NCiAgICAgICAgICAgICAgICBjb25zdCBleHBpcmVUaW1lID0gZXhwaXJlRGF5cyAqIDI0ICogNjAgKiA2MCAqIDEwMDA7DQogICAgICAgICAgICAgICAgbGV0IGNsZWFuZWRDb3VudCA9IDA7DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFt1c2VySWQsIHJlY29yZF0gb2YgdGhpcy5yZWNvcmRDYWNoZS5lbnRyaWVzKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYg",
        "KHJlY29yZC5maXJzdENvbnRhY3QgJiYgKG5vdyAtIHJlY29yZC5maXJzdENvbnRhY3QpID49IGV4cGlyZVRpbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVjb3JkQ2FjaGUuZGVsZXRlKHVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgICAgICBjbGVhbmVkQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChjbGVhbmVkQ291bnQgPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2F2ZVJlY29yZHNUb1N0b3JhZ2UoKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiusOW9le+8mua4heeQhui/h+acn+iusOW9lScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFuZWRDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ0NvdW50OiB0aGlzLnJlY29yZENhY2hlLnNpemUNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGNsZWFuZWRDb3VudDsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonorrDlvZXvvJrmuIXnkIbov4fmnJ/orrDlvZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiAwOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlr7zlh7rorrDlvZXmlbDmja4NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g5a+85Ye655qE5pWw5o2uDQogICAgICAgICAqLw0KICAgICAgICBleHBvcnREYXRhKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gew0KICAgICAgICAgICAgICAgICAgICB2ZXJzaW9uOiAnMS4wJywNCiAgICAgICAgICAgICAgICAgICAgZXhwb3J0VGltZTogRGF0ZS5ub3coKSwNCiAgICAgICAgICAgICAgICAgICAgcmVjb3JkczogT2JqZWN0LmZyb21FbnRyaWVzKHRoaXMucmVjb3JkQ2FjaGUpLA0KICAgICAgICAgICAgICAgICAgICBzdGF0czogdGhpcy5nZXRTdGF0cygpDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonorrDlvZXvvJrlr7zlh7rmlbDmja4nLCB7DQogICAgICAgICAgICAgICAgICAgIHJlY29yZENvdW50OiB0aGlzLnJlY29yZENhY2hlLnNpemUsDQogICAgICAgICAgICAgICAgICAgIGRhdGFTaXplOiBKU09OLnN0cmluZ2lmeShkYXRhKS5sZW5ndGgNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBkYXRhOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8muWvvOWHuuaVsOaNruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQog",
        "ICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWvvOWFpeiusOW9leaVsOaNrg0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSDlr7zlhaXnmoTmlbDmja4NCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuWvvOWFpeaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgaW1wb3J0RGF0YShkYXRhKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghZGF0YSB8fCAhZGF0YS5yZWNvcmRzKSB7DQogICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcign5pWw5o2u5qC85byP5peg5pWIJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6aqM6K+B5pWw5o2u5qC85byPDQogICAgICAgICAgICAgICAgbGV0IGltcG9ydGVkQ291bnQgPSAwOw0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW3VzZXJJZCwgcmVjb3JkXSBvZiBPYmplY3QuZW50cmllcyhkYXRhLnJlY29yZHMpKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChyZWNvcmQgJiYgdHlwZW9mIHJlY29yZCA9PT0gJ29iamVjdCcgJiYgcmVjb3JkLnVzZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNvcmRDYWNoZS5zZXQodXNlcklkLCByZWNvcmQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaW1wb3J0ZWRDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy5zYXZlUmVjb3Jkc1RvU3RvcmFnZSgpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiusOW9le+8muWvvOWFpeaVsOaNruaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgaW1wb3J0ZWRDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgdG90YWxSZWNvcmRzOiB0aGlzLnJlY29yZENhY2hlLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8muWvvOWFpeaVsOaNruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuIXnqbrmiYDmnInorrDlvZUNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpua4heepuuaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYXJBbGxSZWNvcmRzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb3VudCA9IHRoaXMucmVjb3JkQ2FjaGUuc2l6ZTsNCiAgICAgICAgICAgICAgICB0aGlzLnJlY29yZENhY2hlLmNsZWFyKCk7DQogICAgICAgICAgICAgICAgbG9jYWxT",
        "dG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5TVE9SQUdFX0tFWSk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6K6w5b2V77ya5riF56m65omA5pyJ6K6w5b2VJywgeyBjbGVhcmVkQ291bnQ6IGNvdW50IH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8mua4heepuuiusOW9leWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g6L+957KJ6LCD5bqm5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBGb2xsb3dVcFNjaGVkdWxlciA9IHsNCiAgICAgICAgLy8g6LCD5bqm5Zmo54q25oCBDQogICAgICAgIGlzUnVubmluZzogZmFsc2UsDQogICAgICAgIHNjaGVkdWxlclRpbWVyOiBudWxsLA0KDQogICAgICAgIC8vIOajgOafpemXtOmalO+8iDMw5YiG6ZKf77yJDQogICAgICAgIENIRUNLX0lOVEVSVkFMOiAzMCAqIDYwICogMTAwMCwNCg0KICAgICAgICAvLyDlvZPliY3lpITnkIbnirbmgIENCiAgICAgICAgaXNQcm9jZXNzaW5nOiBmYWxzZSwNCg0KICAgICAgICAvLyDku4rml6Xlt7LlpITnkIbmlbDph48NCiAgICAgICAgdG9kYXlQcm9jZXNzZWRDb3VudDogMCwNCiAgICAgICAgbGFzdFJlc2V0RGF0ZTogbnVsbCwNCg0KICAgICAgICAvLyDwn5SnIEJVR+S/ruWkje+8mua3u+WKoOaVsOaNruaMgeS5heWMluWtmOWCqOmUrg0KICAgICAgICBEQUlMWV9TVEFUU19LRVk6ICd4aHNfZm9sbG93dXBfZGFpbHlfc3RhdHMnLA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDwn5SnIEJVR+S/ruWkje+8muS/neWtmOavj+aXpee7n+iuoeaVsOaNruWIsGxvY2FsU3RvcmFnZQ0KICAgICAgICAgKi8NCiAgICAgICAgc2F2ZURhaWx5U3RhdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzID0gew0KICAgICAgICAgICAgICAgICAgICB0b2RheVByb2Nlc3NlZENvdW50OiB0aGlzLnRvZGF5UHJvY2Vzc2VkQ291bnQsDQogICAgICAgICAgICAgICAgICAgIGxhc3RSZXNldERhdGU6IHRoaXMubGFzdFJlc2V0RGF0ZSwNCiAgICAgICAgICAgICAgICAgICAgbGFzdFNhdmVUaW1lOiBEYXRlLm5vdygpDQogICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLkRBSUxZX1NUQVRTX0tFWSwgSlNPTi5zdHJpbmdpZnkoc3RhdHMpKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiwg+W6puWZqO+8muavj+aXpee7n+iuoeaVsOaNruW3suS/neWtmCcsIHN0YXRzKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVy",
        "cm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonosIPluqblmajvvJrkv53lrZjmr4/ml6Xnu5/orqHmlbDmja7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDwn5SnIEJVR+S/ruWkje+8muS7jmxvY2FsU3RvcmFnZeWKoOi9veavj+aXpee7n+iuoeaVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgbG9hZERhaWx5U3RhdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHNhdmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5EQUlMWV9TVEFUU19LRVkpOw0KICAgICAgICAgICAgICAgIGlmIChzYXZlZCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0cyA9IEpTT04ucGFyc2Uoc2F2ZWQpOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCkudG9EYXRlU3RyaW5nKCk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5piv5ZCM5LiA5aSp55qE5pWw5o2u77yM5oGi5aSN57uf6K6hDQogICAgICAgICAgICAgICAgICAgIGlmIChzdGF0cy5sYXN0UmVzZXREYXRlID09PSB0b2RheSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50b2RheVByb2Nlc3NlZENvdW50ID0gc3RhdHMudG9kYXlQcm9jZXNzZWRDb3VudCB8fCAwOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sYXN0UmVzZXREYXRlID0gc3RhdHMubGFzdFJlc2V0RGF0ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonosIPluqblmajvvJrlt7LmgaLlpI3ku4rml6Xnu5/orqHmlbDmja4nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9kYXlQcm9jZXNzZWRDb3VudDogdGhpcy50b2RheVByb2Nlc3NlZENvdW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RSZXNldERhdGU6IHRoaXMubGFzdFJlc2V0RGF0ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmmK/mlrDnmoTkuIDlpKnvvIzph43nva7orqHmlbDlmagNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudG9kYXlQcm9jZXNzZWRDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxhc3RSZXNldERhdGUgPSB0b2RheTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2F2ZURhaWx5U3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonosIPluqblmajvvJrmo4DmtYvliLDmlrDnmoTkuIDlpKnvvIzlt7Lph43nva7nu5/orqHmlbDmja4nKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOmmluasoei/kOihjO+8jOWIneWni+WMluaV",
        "sOaNrg0KICAgICAgICAgICAgICAgICAgICB0aGlzLnRvZGF5UHJvY2Vzc2VkQ291bnQgPSAwOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmxhc3RSZXNldERhdGUgPSBuZXcgRGF0ZSgpLnRvRGF0ZVN0cmluZygpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNhdmVEYWlseVN0YXRzKCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonosIPluqblmajvvJrpppbmrKHov5DooYzvvIzlt7LliJ3lp4vljJbnu5/orqHmlbDmja4nKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6LCD5bqm5Zmo77ya5Yqg6L295q+P5pel57uf6K6h5pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAvLyDlh7rplJnml7bph43nva7kuLrpu5jorqTlgLwNCiAgICAgICAgICAgICAgICB0aGlzLnRvZGF5UHJvY2Vzc2VkQ291bnQgPSAwOw0KICAgICAgICAgICAgICAgIHRoaXMubGFzdFJlc2V0RGF0ZSA9IG5ldyBEYXRlKCkudG9EYXRlU3RyaW5nKCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWQr+WKqOiwg+W6puWZqA0KICAgICAgICAgKi8NCiAgICAgICAgc3RhcnQoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzUnVubmluZykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ6LCD5bqm5Zmo77ya5bey5Zyo6L+Q6KGM5LitJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEVuYWJsZWQnLCBmYWxzZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieiwg+W6puWZqO+8muWKn+iDveacquWQr+eUqCcpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g8J+UpyBCVUfkv67lpI3vvJrlkK/liqjml7bliqDovb3mr4/ml6Xnu5/orqHmlbDmja4NCiAgICAgICAgICAgICAgICB0aGlzLmxvYWREYWlseVN0YXRzKCk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLmlzUnVubmluZyA9IHRydWU7DQogICAgICAgICAgICAgICAgdGhpcy5yZXNldERhaWx5Q291bnRJZk5lZWRlZCgpOw0KDQogICAgICAgICAgICAgICAgLy8g56uL5Y2z5omn6KGM5LiA5qyh5qOA5p+lDQogICAgICAgICAgICAgICAgdGhpcy5jaGVja0FuZEV4ZWN1dGVGb2xsb3dVcHMoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOiuvue9ruWumuaXtuajgOafpQ0KICAgICAgICAgICAgICAgIHRoaXMuc2NoZWR1bGVyVGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tBbmRFeGVjdXRlRm9sbG93",
        "VXBzKCk7DQogICAgICAgICAgICAgICAgfSwgdGhpcy5DSEVDS19JTlRFUlZBTCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6LCD5bqm5Zmo77ya5bey5ZCv5YqoJywgew0KICAgICAgICAgICAgICAgICAgICBjaGVja0ludGVydmFsOiB0aGlzLkNIRUNLX0lOVEVSVkFMIC8gMTAwMCAvIDYwICsgJ+WIhumSnycsDQogICAgICAgICAgICAgICAgICAgIHRvZGF5UHJvY2Vzc2VkOiB0aGlzLnRvZGF5UHJvY2Vzc2VkQ291bnQNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonosIPluqblmajvvJrlkK/liqjlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuaXNSdW5uaW5nID0gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWBnOatouiwg+W6puWZqA0KICAgICAgICAgKi8NCiAgICAgICAgc3RvcCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzUnVubmluZykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ6LCD5bqm5Zmo77ya5pyq5Zyo6L+Q6KGMJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0aGlzLmlzUnVubmluZyA9IGZhbHNlOw0KDQogICAgICAgICAgICAgICAgaWYgKHRoaXMuc2NoZWR1bGVyVGltZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnNjaGVkdWxlclRpbWVyKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zY2hlZHVsZXJUaW1lciA9IG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiwg+W6puWZqO+8muW3suWBnOatoicpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiwg+W6puWZqO+8muWBnOatouWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpeW5tuaJp+ihjOWbnuiuvw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgY2hlY2tBbmRFeGVjdXRlRm9sbG93VXBzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc1Byb2Nlc3NpbmcpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonosIPluqblmajvvJrmraPlnKjlpITnkIbkuK3vvIzot7Pov4fmnKzmrKHmo4Dmn6UnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICghQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1Vw",
        "RW5hYmxlZCcsIGZhbHNlKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiwg+W6puWZqO+8muWKn+iDveW3suemgeeUqCcpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5Zyo5YWB6K6455qE5pe26Ze05q615YaFDQogICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzSW5BbGxvd2VkVGltZVJhbmdlKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonosIPluqblmajvvJrkuI3lnKjlhYHorrjnmoTml7bpl7TmrrXlhoUnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeS7iuaXpeWkhOeQhumZkOWItg0KICAgICAgICAgICAgICAgIHRoaXMucmVzZXREYWlseUNvdW50SWZOZWVkZWQoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkYWlseUxpbWl0ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwRGFpbHlMaW1pdCcsIDEwKTsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy50b2RheVByb2Nlc3NlZENvdW50ID49IGRhaWx5TGltaXQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonosIPluqblmajvvJrlt7Lovr7liLDku4rml6XlpITnkIbpmZDliLYnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzZWQ6IHRoaXMudG9kYXlQcm9jZXNzZWRDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGxpbWl0OiBkYWlseUxpbWl0DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy5pc1Byb2Nlc3NpbmcgPSB0cnVlOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonosIPluqblmajvvJrlvIDlp4vmo4Dmn6Xlm57orr/ku7vliqEnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WPluW+heWbnuiuv+eUqOaItw0KICAgICAgICAgICAgICAgIGNvbnN0IHBlbmRpbmdVc2VycyA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5nZXRQZW5kaW5nVXNlcnMoKTsNCiAgICAgICAgICAgICAgICBpZiAocGVuZGluZ1VzZXJzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiwg+W6puWZqO+8muaXoOW+heWbnuiuv+eUqOaItycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6ZmQ5Yi25Y2V5qyh5aSE55CG5pWw6YePIC0g5aKe5Yqg5om56YeP5aSE55CG6IO95YqbDQogICAgICAgICAgICAgICAgY29uc3QgbWF4QmF0Y2hTaXplID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwQmF0Y2hTaXplJywgMTApOyAvLyDpu5jorqQxMOS4queUqOaItw0KICAgICAgICAgICAgICAgIGNv",
        "bnN0IGJhdGNoU2l6ZSA9IE1hdGgubWluKG1heEJhdGNoU2l6ZSwgZGFpbHlMaW1pdCAtIHRoaXMudG9kYXlQcm9jZXNzZWRDb3VudCk7DQogICAgICAgICAgICAgICAgY29uc3QgdXNlcnNUb1Byb2Nlc3MgPSBwZW5kaW5nVXNlcnMuc2xpY2UoMCwgYmF0Y2hTaXplKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonosIPluqblmajvvJrlh4blpIflpITnkIblm57orr8nLCB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsUGVuZGluZzogcGVuZGluZ1VzZXJzLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgYmF0Y2hTaXplOiB1c2Vyc1RvUHJvY2Vzcy5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIHRvZGF5UHJvY2Vzc2VkOiB0aGlzLnRvZGF5UHJvY2Vzc2VkQ291bnQNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOmAkOS4quWkhOeQhueUqOaItyAtIOWinuW8uumUmeivr+WkhOeQhuWSjOi/m+W6pui3n+i4qg0KICAgICAgICAgICAgICAgIGxldCBzdWNjZXNzQ291bnQgPSAwOw0KICAgICAgICAgICAgICAgIGxldCBmYWlsdXJlQ291bnQgPSAwOw0KDQogICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB1c2Vyc1RvUHJvY2Vzcy5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VyID0gdXNlcnNUb1Byb2Nlc3NbaV07DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6LCD5bqm5Zmo77ya5aSE55CG6L+b5bqmJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQ6IGkgKyAxLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsOiB1c2Vyc1RvUHJvY2Vzcy5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXIudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2Vzc0NvdW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhaWx1cmVDb3VudA0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMucHJvY2Vzc0ZvbGxvd1VwVXNlcih1c2VyKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudG9kYXlQcm9jZXNzZWRDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g8J+UpyBCVUfkv67lpI3vvJrmr4/mrKHlop7liqDorqHmlbDlkI7nq4vljbPkv53lrZgNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2F2ZURhaWx5U3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NDb3VudCsrOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmt7vliqDpmo/mnLrlu7bov58NCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlbGF5ID0gdGhpcy5nZXRSYW5kb21EZWxheSgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRl",
        "YnVnKCfov73nsonosIPluqblmajvvJrnrYnlvoXlu7bov58nLCB7IGRlbGF5OiBkZWxheSArICdtcycgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheShkZWxheSk7DQoNCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGZhaWx1cmVDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonosIPluqblmajvvJrlpITnkIbnlKjmiLflpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VyLnVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXIudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhY2s6IGVycm9yLnN0YWNrLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2dyZXNzOiBgJHtpICsgMX0vJHt1c2Vyc1RvUHJvY2Vzcy5sZW5ndGh9YA0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWksei0peWQjuefreaaguW7tui/n++8jOmBv+WFjei/nue7reWksei0pQ0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMjAwMCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6LCD5bqm5Zmo77ya5pys6L2u5aSE55CG5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICB0b3RhbFVzZXJzOiB1c2Vyc1RvUHJvY2Vzcy5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgZmFpbHVyZUNvdW50LA0KICAgICAgICAgICAgICAgICAgICBzdWNjZXNzUmF0ZTogdXNlcnNUb1Byb2Nlc3MubGVuZ3RoID4gMCA/IChzdWNjZXNzQ291bnQgLyB1c2Vyc1RvUHJvY2Vzcy5sZW5ndGggKiAxMDApLnRvRml4ZWQoMSkgKyAnJScgOiAnMCUnLA0KICAgICAgICAgICAgICAgICAgICB0b2RheVRvdGFsOiB0aGlzLnRvZGF5UHJvY2Vzc2VkQ291bnQNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOiHquWKqOWbnuiuv+WujOaIkOWQju+8jOa7muWKqOWbnuWIsOWIl+ihqOmhtumDqOW5tuWIt+aWsFVJ5pi+56S6DQogICAgICAgICAgICAgICAgaWYgKHN1Y2Nlc3NDb3VudCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOa7muWKqOWbnuWIsOWIl+ihqOmhtumDqO+8jOaWueS+v+WkhOeQhuaWsOa2iOaBrw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Nyb2xsZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZC1jb2xsYXBzZS1jb250",
        "ZW50LXdyYXBwZXI6bm90KFtzdHlsZSo9Im1heC1oZWlnaHQ6IDBweCJdKSAudnVlLXJlY3ljbGUtc2Nyb2xsZXIuc2Nyb2xsZXInKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzY3JvbGxlcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonosIPluqblmajvvJroh6rliqjlm57orr/lrozmiJDvvIzmraPlnKjmu5rliqjlm57liLDliJfooajpobbpg6guLi4nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgPSAwOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOetieW+hea7muWKqOWujOaIkA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAzMDApKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6LCD5bqm5Zmo77ya5bey5Zue5Yiw5YiX6KGo6aG26YOo77yM5YeG5aSH5aSE55CG5paw5raI5oGvJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgVUlNYW5hZ2VyICE9PSAndW5kZWZpbmVkJyAmJiBVSU1hbmFnZXIucmVuZGVyRm9sbG93VXBMaXN0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnJlbmRlckZvbGxvd1VwTGlzdCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6LCD5bqm5Zmo77ya6Ieq5Yqo5Zue6K6/5ZCO5bey5Yi35paw6L+957KJ5ZCN5Y2VVUknKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgVUlNYW5hZ2VyICE9PSAndW5kZWZpbmVkJyAmJiBVSU1hbmFnZXIudXBkYXRlRm9sbG93VXBTdGF0cykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVJTWFuYWdlci51cGRhdGVGb2xsb3dVcFN0YXRzKCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonosIPluqblmajvvJroh6rliqjlm57orr/lkI7lt7LliLfmlrDnu5/orqHkv6Hmga8nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAodWlFcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonosIPluqblmajvvJroh6rliqjlm57orr/lkI7lpITnkIblpLHotKUnLCB7IGVycm9yOiB1aUVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonosIPluqblmajvvJrmo4Dmn6XmiafooYzlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfSBmaW5hbGx5IHsNCiAgICAg",
        "ICAgICAgICAgICB0aGlzLmlzUHJvY2Vzc2luZyA9IGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XmmK/lkKblnKjlhYHorrjnmoTml7bpl7TojIPlm7TlhoUNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBpc0luQWxsb3dlZFRpbWVSYW5nZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50SG91ciA9IG5vdy5nZXRIb3VycygpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFsbG93ZWRIb3VycyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcFNjaGVkdWxlSG91cnMnLCBbOSwgMTQsIDE4XSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblnKjlhYHorrjnmoTml7bpl7TngrnpmYTov5HvvIjCsTHlsI/ml7bvvIkNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGhvdXIgb2YgYWxsb3dlZEhvdXJzKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyhjdXJyZW50SG91ciAtIGhvdXIpIDw9IDEpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiwg+W6puWZqO+8muajgOafpeaXtumXtOiMg+WbtOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDph43nva7mr4/ml6XorqHmlbDlmagNCiAgICAgICAgICovDQogICAgICAgIHJlc2V0RGFpbHlDb3VudElmTmVlZGVkKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCkudG9EYXRlU3RyaW5nKCk7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMubGFzdFJlc2V0RGF0ZSAhPT0gdG9kYXkpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy50b2RheVByb2Nlc3NlZENvdW50ID0gMDsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5sYXN0UmVzZXREYXRlID0gdG9kYXk7DQogICAgICAgICAgICAgICAgICAgIC8vIPCflKcgQlVH5L+u5aSN77ya6YeN572u5ZCO56uL5Y2z5L+d5a2Y5pWw5o2uDQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2F2ZURhaWx5U3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonosIPluqblmajvvJrph43nva7mr4/ml6XorqHmlbDlmagnKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAg",
        "IExvZ2dlci5lcnJvcign6L+957KJ6LCD5bqm5Zmo77ya6YeN572u6K6h5pWw5Zmo5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W6ZqP5py65bu26L+f5pe26Ze0DQogICAgICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IOW7tui/n+aXtumXtO+8iOavq+enku+8iQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0UmFuZG9tRGVsYXkoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwUmFuZG9tRGVsYXknLCB0cnVlKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gMTAwMDsgLy8g6buY6K6kMeenkuW7tui/nw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IG1pbkRlbGF5ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwTWluRGVsYXknLCAzMCkgKiAxMDAwOw0KICAgICAgICAgICAgICAgIGNvbnN0IG1heERlbGF5ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwTWF4RGVsYXknLCAzMDApICogMTAwMDsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4RGVsYXkgLSBtaW5EZWxheSArIDEpKSArIG1pbkRlbGF5Ow0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiwg+W6puWZqO+8muiOt+WPlumaj+acuuW7tui/n+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIDYwMDAwOyAvLyDpu5jorqQ2MOenkg0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbljZXkuKrnlKjmiLfnmoTlm57orr8NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHVzZXIg55So5oi35L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBwcm9jZXNzRm9sbG93VXBVc2VyKHVzZXIpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiwg+W6puWZqO+8muW8gOWni+WkhOeQhueUqOaIt+WbnuiuvycsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VyLnVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcENvdW50OiB1c2VyLmZvbGxvd1VwQ291bnQNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeeUqOaIt+m7keWQjeWNlQ0KICAgICAgICAgICAgICAgIGlmIChCbGFja2xpc3RNYW5hZ2VyLmlzQmxhY2tsaXN0ZWQodXNlci51c2VySWQpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonosIPluqblmajvvJrn",
        "lKjmiLflnKjnlKjmiLfpu5HlkI3ljZXkuK3vvIzot7Pov4cnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXIudXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnVwZGF0ZVVzZXJTdGF0dXModXNlci51c2VySWQsICdibG9ja2VkJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6Xlm57orr/pu5HlkI3ljZUNCiAgICAgICAgICAgICAgICBpZiAoRm9sbG93VXBCbGFja2xpc3RNYW5hZ2VyICYmIEZvbGxvd1VwQmxhY2tsaXN0TWFuYWdlci5pc0JsYWNrbGlzdGVkKHVzZXIudXNlcklkKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ6LCD5bqm5Zmo77ya55So5oi35Zyo5Zue6K6/6buR5ZCN5Y2V5Lit77yM6Lez6L+HJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VyLnVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlci51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WPluivneacr+aooeadvw0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlID0gdGhpcy5nZXRGb2xsb3dVcFRlbXBsYXRlKHVzZXIpOw0KICAgICAgICAgICAgICAgIGlmICghdGVtcGxhdGUpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonosIPluqblmajvvJrojrflj5bor53mnK/mqKHmnb/lpLHotKUnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWPkemAgeWbnuiuv+a2iOaBrw0KICAgICAgICAgICAgICAgIGNvbnN0IHN1Y2Nlc3MgPSBhd2FpdCBGb2xsb3dVcE1hbmFnZXIuc2VuZEZvbGxvd1VwTWVzc2FnZSh1c2VyLCB0ZW1wbGF0ZSk7DQoNCiAgICAgICAgICAgICAgICAvLyDorrDlvZXlm57orr/nu5PmnpwNCiAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkRm9sbG93VXAoDQogICAgICAgICAgICAgICAgICAgIHVzZXIudXNlcklkLA0KICAgICAgICAgICAgICAgICAgICB1c2VyLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICB1c2VyLmNvbnZlcnNhdGlvbklkLA0KICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZSwNCiAgICAgICAgICAgICAgICAgICAgc3VjY2Vzcw0KICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6LCD5bqm5Zmo77ya55So5oi35Zue6K6/5aSE55CG5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQ6",
        "IHVzZXIudXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgc3VjY2Vzcw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6LCD5bqm5Zmo77ya5aSE55CG55So5oi35Zue6K6/5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXIudXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5Zue6K6/6K+d5pyv5qih5p2/DQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSB1c2VyIOeUqOaIt+S/oeaBrw0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSDlpITnkIblkI7nmoTor53mnK8NCiAgICAgICAgICovDQogICAgICAgIGdldEZvbGxvd1VwVGVtcGxhdGUodXNlcikgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZU1vZGUgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBUZW1wbGF0ZU1vZGUnLCAnc2VxdWVuY2UnKTsNCiAgICAgICAgICAgICAgICBsZXQgdGVtcGxhdGUgPSAnJzsNCg0KICAgICAgICAgICAgICAgIGlmICh0ZW1wbGF0ZU1vZGUgPT09ICdhaScpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8gQUnnlJ/miJDmqKHlvI8NCiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGUgPSB0aGlzLmdlbmVyYXRlQUlUZW1wbGF0ZSh1c2VyKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAvLyDojrflj5blpJrlpZfor53mnK/mqKHmnb8NCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwVGVtcGxhdGVzJywgW10pOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBmYWxsYmFja1RlbXBsYXRlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwVGVtcGxhdGUnLCAn5oKo5aW9e+eUqOaIt+WQjX3vvIzmiJHmmK/mgqjnmoTkuJPlsZ7pob7pl64uLi4nKTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAodGVtcGxhdGVzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGUgPSBmYWxsYmFja1RlbXBsYXRlOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRlbXBsYXRlTW9kZSA9PT0gJ3JhbmRvbScpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOmaj+acuumAieaLqeaooeW8jw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmFuZG9tSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0ZW1wbGF0ZXMubGVuZ3RoKTsNCiAgICAgICAgICAgICAgICAg",
        "ICAgICAgIHRlbXBsYXRlID0gdGVtcGxhdGVzW3JhbmRvbUluZGV4XTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOaMieasoeW6j+mAieaLqeaooeW8j++8iOm7mOiupO+8iQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVJbmRleCA9IE1hdGgubWluKHVzZXIuZm9sbG93VXBDb3VudCwgdGVtcGxhdGVzLmxlbmd0aCAtIDEpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGUgPSB0ZW1wbGF0ZXNbdGVtcGxhdGVJbmRleF07DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlj5jph4/mm7/mjaINCiAgICAgICAgICAgICAgICB0ZW1wbGF0ZSA9IHRlbXBsYXRlLnJlcGxhY2UoL1x755So5oi35ZCNXH0vZywgdXNlci51c2VyTmFtZSB8fCAnJyk7DQogICAgICAgICAgICAgICAgdGVtcGxhdGUgPSB0ZW1wbGF0ZS5yZXBsYWNlKC9ce+Wbnuiuv+asoeaVsFx9L2csICh1c2VyLmZvbGxvd1VwQ291bnQgKyAxKS50b1N0cmluZygpKTsNCiAgICAgICAgICAgICAgICB0ZW1wbGF0ZSA9IHRlbXBsYXRlLnJlcGxhY2UoL1xcbi9nLCAnXG4nKTsgLy8g5aSE55CG5o2i6KGM56ymDQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiwg+W6puWZqO+8mumAieaLqeivneacr+aooeadvycsIHsNCiAgICAgICAgICAgICAgICAgICAgbW9kZTogdGVtcGxhdGVNb2RlLA0KICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcENvdW50OiB1c2VyLmZvbGxvd1VwQ291bnQsDQogICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlTGVuZ3RoOiB0ZW1wbGF0ZS5sZW5ndGgNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB0ZW1wbGF0ZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonosIPluqblmajvvJrojrflj5bor53mnK/mqKHmnb/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnlJ/miJBBSeivneacr+aooeadvw0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gdXNlciDnlKjmiLfkv6Hmga8NCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30gQUnnlJ/miJDnmoTor53mnK8NCiAgICAgICAgICovDQogICAgICAgIGdlbmVyYXRlQUlUZW1wbGF0ZSh1c2VyKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOaehOW7ukFJ55Sf5oiQ6K+d5pyv55qE5o+Q56S66K+NDQogICAgICAgICAgICAgICAgY29uc3QgcHJvbXB0cyA9IFsNCiAgICAgICAgICAgICAgICAgICAgYOivt+S4uuesrCR7dXNlci5mb2xsb3dVcENvdW50ICsgMX3mrKHlm57orr/nlKjmiLciJHt1c2VyLnVzZXJOYW1lfSLn",
        "lJ/miJDkuIDmrrXkuJPkuJrjgIHlj4vlpb3nmoTov73nsonor53mnK/jgILopoHmsYLvvJox77yJ6K+t5rCU6Ieq54S25Lqy5YiHIDLvvInkvZPnjrDkuJPkuJrmgKcgM++8ieW8leWvvOa3u+WKoOW+ruS/oSA077yJ5LiN6LaF6L+HMTAw5a2XYCwNCiAgICAgICAgICAgICAgICAgICAgYOS4uueUqOaItyIke3VzZXIudXNlck5hbWV9IuWGmeS4gOauteesrCR7dXNlci5mb2xsb3dVcENvdW50ICsgMX3mrKHlm57orr/nmoTor53mnK/vvIzopoHmsYLmuKnlkozkuI3miZPmibDvvIzkvZPnjrDlhbPmgIDvvIzlvJXlr7zov5vkuIDmraXmsp/pgJrvvIznuqY4MOWtl+W3puWPs2AsDQogICAgICAgICAgICAgICAgICAgIGDnlJ/miJDkuIDmrrXpkojlr7kiJHt1c2VyLnVzZXJOYW1lfSLnmoTlm57orr/mtojmga/vvIzov5nmmK/nrKwke3VzZXIuZm9sbG93VXBDb3VudCArIDF95qyh6IGU57O777yM6ZyA6KaB5L2T546w5Lu35YC877yM5bu656uL5L+h5Lu777yM5byV5a+85Yqg5b6u5L+h77yM6K+t6KiA566A5rSB5pyJ5YqbYA0KICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICAvLyDmoLnmja7lm57orr/mrKHmlbDpgInmi6nkuI3lkIznmoTmj5DnpLror43po47moLwNCiAgICAgICAgICAgICAgICBjb25zdCBwcm9tcHRJbmRleCA9IE1hdGgubWluKHVzZXIuZm9sbG93VXBDb3VudCwgcHJvbXB0cy5sZW5ndGggLSAxKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RlZFByb21wdCA9IHByb21wdHNbcHJvbXB0SW5kZXhdOw0KDQogICAgICAgICAgICAgICAgLy8g6L+Z6YeM5Y+v5Lul6ZuG5oiQQUkgQVBJ55Sf5oiQ6K+d5pyvDQogICAgICAgICAgICAgICAgLy8g5pqC5pe26L+U5Zue5Z+65LqO5qih5p2/55qE5pm66IO96K+d5pyvDQogICAgICAgICAgICAgICAgY29uc3QgYWlUZW1wbGF0ZXMgPSBbDQogICAgICAgICAgICAgICAgICAgIGDmgqjlpb0ke3VzZXIudXNlck5hbWV977yM5oiR5piv5oKo55qE5LiT5bGe6aG+6Zeu44CC55yL5Yiw5oKo5LmL5YmN5a+55oiR5Lus55qE5Lqn5ZOB5pyJ5YW06Laj77yM5oOz5LqG6Kej5LiA5LiL5oKo546w5Zyo55qE6ZyA5rGC5oOF5Ya144CC5aaC5p6c5pa55L6/55qE6K+d77yM5Y+v5Lul5re75Yqg5oiR55qE5b6u5L+h6K+m57uG5rKf6YCa77yM5oiR5Lya5Li65oKo5o+Q5L6b5LiT5Lia5bu66K6u44CC5pyf5b6F5oKo55qE5Zue5aSN77yB8J+YimAsDQogICAgICAgICAgICAgICAgICAgIGAke3VzZXIudXNlck5hbWV95oKo5aW977yB5oSf6LCi5oKo5LmL5YmN55qE5YWz5rOo44CC5oiR5oOz5YaN5qyh5Li65oKo5LuL57uN5oiR5Lus55qE5LyY5Yq/5ZKM5pyA5paw5LyY5oOg44CC5aaC5p6c5oKo5pyJ5Lu75L2V55aR6Zeu77yM6ZqP5pe25Y+v5Lul6IGU57O75oiR77yM5oiR5Lya56ys5LiA5pe26Ze05Li65oKo6Kej562U44CC5pyf5b6F6L+b5LiA5q2l5Lqk5rWB77yBYCwNCiAgICAgICAgICAgICAgICAgICAgYOS6sueIseeahCR7dXNlci51c2VyTmFtZX3vvIzluIzm",
        "nJvmgqjkuIDliIfpg73lpb3vvIHmg7Pot5/ov5vkuIDkuIvmgqjkuYvliY3lkqjor6LnmoTkuqflk4HvvIznnIvnnIvov5jmnInku4DkuYjlj6/ku6XluK7liqnmgqjnmoTjgILmiJHku6zmnIDov5HmnInmlrDnmoTkvJjmg6DmlL/nrZbvvIznm7jkv6HkvJrlr7nmgqjmnInluK7liqnjgILmlrnkvr/nmoTor53miJHku6zlj6/ku6Xor6bnu4bmsp/pgJrkuIDkuIvjgIJgDQogICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlSW5kZXggPSBNYXRoLm1pbih1c2VyLmZvbGxvd1VwQ291bnQsIGFpVGVtcGxhdGVzLmxlbmd0aCAtIDEpOw0KICAgICAgICAgICAgICAgIHJldHVybiBhaVRlbXBsYXRlc1t0ZW1wbGF0ZUluZGV4XTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiwg+W6puWZqO+8mkFJ6K+d5pyv55Sf5oiQ5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAvLyDov5Tlm57pu5jorqTor53mnK8NCiAgICAgICAgICAgICAgICByZXR1cm4gYOaCqOWlvSR7dXNlci51c2VyTmFtZX3vvIzmiJHmmK/mgqjnmoTkuJPlsZ7pob7pl67vvIzmg7Pkuobop6PkuIDkuIvmgqjnmoTpnIDmsYLmg4XlhrXvvIzmnJ/lvoXkuI7mgqjov5vkuIDmraXkuqTmtYHvvIFgOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bosIPluqblmajnirbmgIENCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g54q25oCB5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0dXMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOehruS/neavj+aXpeiuoeaVsOWZqOaYr+acgOaWsOeahA0KICAgICAgICAgICAgICAgIHRoaXMucmVzZXREYWlseUNvdW50SWZOZWVkZWQoKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1cyA9IHsNCiAgICAgICAgICAgICAgICAgICAgaXNSdW5uaW5nOiBCb29sZWFuKHRoaXMuaXNSdW5uaW5nKSwNCiAgICAgICAgICAgICAgICAgICAgaXNQcm9jZXNzaW5nOiBCb29sZWFuKHRoaXMuaXNQcm9jZXNzaW5nKSwNCiAgICAgICAgICAgICAgICAgICAgdG9kYXlQcm9jZXNzZWRDb3VudDogTnVtYmVyKHRoaXMudG9kYXlQcm9jZXNzZWRDb3VudCkgfHwgMCwNCiAgICAgICAgICAgICAgICAgICAgbGFzdFJlc2V0RGF0ZTogdGhpcy5sYXN0UmVzZXREYXRlIHx8IG51bGwsDQogICAgICAgICAgICAgICAgICAgIG5leHRDaGVja1RpbWU6IHRoaXMuc2NoZWR1bGVyVGltZXIgPyBEYXRlLm5vdygpICsgdGhpcy5DSEVDS19JTlRFUlZBTCA6IG51bGwsDQogICAgICAgICAgICAgICAgICAgIGNoZWNrSW50ZXJ2YWw6IHRoaXMuQ0hFQ0tfSU5URVJWQUwsDQogICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEVuYWJsZWQnLCBmYWxz",
        "ZSkNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonosIPluqblmajvvJrnirbmgIHkv6Hmga8nLCBzdGF0dXMpOw0KICAgICAgICAgICAgICAgIHJldHVybiBzdGF0dXM7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonosIPluqblmajvvJrojrflj5bnirbmgIHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g6L+U5Zue5a6J5YWo55qE6buY6K6k54q25oCBDQogICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgaXNSdW5uaW5nOiBmYWxzZSwNCiAgICAgICAgICAgICAgICAgICAgaXNQcm9jZXNzaW5nOiBmYWxzZSwNCiAgICAgICAgICAgICAgICAgICAgdG9kYXlQcm9jZXNzZWRDb3VudDogMCwNCiAgICAgICAgICAgICAgICAgICAgbGFzdFJlc2V0RGF0ZTogbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgbmV4dENoZWNrVGltZTogbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgY2hlY2tJbnRlcnZhbDogdGhpcy5DSEVDS19JTlRFUlZBTCB8fCAzMCAqIDYwICogMTAwMCwNCiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogZmFsc2UNCiAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g6L+957KJ566h55CG5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBGb2xsb3dVcE1hbmFnZXIgPSB7DQogICAgICAgIC8vIOWIneWni+WMlueKtuaAgQ0KICAgICAgICBpc0luaXRpYWxpemVkOiBmYWxzZSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yid5aeL5YyW6L+957KJ566h55CG5ZmoDQogICAgICAgICAqLw0KICAgICAgICBpbml0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc0luaXRpYWxpemVkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajvvJrlt7LliJ3lp4vljJYnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWIneWni+WMluWbnuiuv+m7keWQjeWNleeuoeeQhuWZqA0KICAgICAgICAgICAgICAgIEZvbGxvd1VwQmxhY2tsaXN0TWFuYWdlci5pbml0KCk7DQoNCiAgICAgICAgICAgICAgICAvLyDliJ3lp4vljJborrDlvZXnrqHnkIblmagNCiAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIuaW5pdCgpOw0KDQogICAgICAgICAgICAgICAgLy8g5ZCv5Yqo55WZ5a6i6LWE55uR5o6nDQogICAgICAgICAgICAgICAgRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnN0YXJ0TGVhZHNNb25pdG9yaW5nKCk7DQoNCiAgICAgICAgICAgICAgICB0aGlz",
        "LmlzSW5pdGlhbGl6ZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrliJ3lp4vljJblrozmiJAnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenOWKn+iDveW3suWQr+eUqO+8jOiHquWKqOWQr+WKqOiwg+W6puWZqA0KICAgICAgICAgICAgICAgIGlmIChDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBFbmFibGVkJywgZmFsc2UpKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhcnQoKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5Yid5aeL5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5ZCv5Yqo6L+957KJ5Yqf6IO9DQogICAgICAgICAqLw0KICAgICAgICBzdGFydCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCFDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBFbmFibGVkJywgZmFsc2UpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajvvJrlip/og73mnKrlkK/nlKgnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIEZvbGxvd1VwU2NoZWR1bGVyLnN0YXJ0KCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW3suWQr+WKqCcpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muWQr+WKqOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWBnOatoui/veeyieWKn+iDvQ0KICAgICAgICAgKi8NCiAgICAgICAgc3RvcCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgRm9sbG93VXBTY2hlZHVsZXIuc3RvcCgpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlt7LlgZzmraInKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrlgZzmraLlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmiavmj4/lubbmt7vliqDmvZzlnKjnmoTov73nsonnlKjmiLfvvIjmlK/mjIHomZrmi5/mu5rliqjlrozmlbTmiavmj4/vvIkNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHNjYW5BbmRBZGRVc2VycygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAg",
        "ICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW8gOWni+WujOaVtOaJq+aPj+eUqOaIt++8iOWMheWQq+iZmuaLn+a7muWKqO+8iScpOw0KDQogICAgICAgICAgICAgICAgbGV0IHNjYW5uZWRDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgbGV0IGFkZGVkQ291bnQgPSAwOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNjYW5EYXlzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwU2NhbkRheXMnLCAzKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzY2FuVGltZSA9IHNjYW5EYXlzICogMjQgKiA2MCAqIDYwICogMTAwMDsNCiAgICAgICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICAgICAgLy8g5omn6KGM5a6M5pW055qE6Jma5ouf5rua5Yqo5omr5o+PDQogICAgICAgICAgICAgICAgY29uc3QgYWxsVXNlcnMgPSBhd2FpdCB0aGlzLnBlcmZvcm1GdWxsVmlydHVhbFNjcm9sbFNjYW4oKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJromZrmi5/mu5rliqjmiavmj4/lrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsRm91bmQ6IGFsbFVzZXJzLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgbGV0IGZpbHRlcmVkQnlUaW1lQ291bnQgPSAwOw0KICAgICAgICAgICAgICAgIGxldCBmaWx0ZXJlZEJ5TGVhZHNDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgbGV0IGZpbHRlcmVkQnlCbGFja2xpc3RDb3VudCA9IDA7DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHVzZXJJbmZvIG9mIGFsbFVzZXJzKSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXVzZXJJbmZvIHx8ICF1c2VySW5mby51c2VySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgc2Nhbm5lZENvdW50Kys7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuWcqOaJq+aPj+aXtumXtOiMg+WbtOWGhQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzVXNlckluU2NhblJhbmdlKHVzZXJJbmZvLCBzY2FuRGF5cykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWx0ZXJlZEJ5VGltZUNvdW50Kys7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrnlKjmiLfotoXlh7rml7bpl7TojIPlm7TvvIzot7Pov4cnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZVRleHQ6IHVzZXJJbmZvLnRpbWVUZXh0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2FuRGF5cw0KICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XnlZnlrqLotYTnirbmgIHvvIjkvb/nlKhBUEnkvJjlhYjnmoTlvILmraXlv6vpgJ/mo4Dmn6XvvIkNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhc0xlYWRzVGFnID0gYXdhaXQgdGhpcy5jaGVja1VzZXJMZWFkc1N0YXR1c0Zhc3RBc3luYyh1c2VySW5mbyk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGFzTGVhZHNUYWcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWx0ZXJlZEJ5TGVhZHNDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya55So5oi35bey5pyJ55WZ5a6i6LWE5qCH562+77yM6Lez6L+HJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l6buR5ZCN5Y2VDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoQmxhY2tsaXN0TWFuYWdlci5pc0JsYWNrbGlzdGVkKHVzZXJJbmZvLnVzZXJJZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWx0ZXJlZEJ5QmxhY2tsaXN0Q291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8mueUqOaIt+WcqOm7keWQjeWNleS4re+8jOi3s+i/hycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuW3suWtmOWcqOiusOW9lQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdSZWNvcmQgPSBGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkQ2FjaGUuZ2V0KHVzZXJJbmZvLnVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWV4aXN0aW5nUmVjb3JkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Yib5bu65paw55qE6L+957KJ6K6w5b2VDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5L2/55So5a6e6ZmF55qE5Lya6K+d5pe26Ze05L2c5Li66aaW5qyh6IGU57O75pe26Ze077yM6ICM5LiN5piv5omr5o+P5pe26Ze0DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmlyc3RDb250YWN0",
        "VGltZSA9IHVzZXJJbmZvLmxhc3RBY3Rpdml0eVRpbWUgfHwgbm93Ow0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVjb3JkID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJbmZvLnVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogdXNlckluZm8uY29udmVyc2F0aW9uSWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0Q29udGFjdDogZmlyc3RDb250YWN0VGltZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdEZvbGxvd1VwOiBudWxsLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcENvdW50OiAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcEhpc3Rvcnk6IFtdLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICdwZW5kaW5nJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWIm+W7uuaWsOeUqOaIt+iusOW9lScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJbmZvLnVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0Q29udGFjdFRpbWU6IG5ldyBEYXRlKGZpcnN0Q29udGFjdFRpbWUpLnRvTG9jYWxlU3RyaW5nKCksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVUZXh0OiB1c2VySW5mby50aW1lVGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlZFNjYW5UaW1lOiAhdXNlckluZm8ubGFzdEFjdGl2aXR5VGltZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlLnNldCh1c2VySW5mby51c2VySWQsIHJlY29yZCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkZWRDb3VudCsrOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmt7vliqDmlrDnlKjmiLfliLDov73nsonliJfooagnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySW5mby51c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7",
        "DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5aSE55CG55So5oi35aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mbz8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5L+d5a2Y6K6w5b2VDQogICAgICAgICAgICAgICAgRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnN5bmNUb1N0b3JhZ2VJZk5lZWRlZCgpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8mueUqOaIt+aJq+aPj+WujOaIkCcsIHsNCiAgICAgICAgICAgICAgICAgICAgdG90YWxGb3VuZDogYWxsVXNlcnMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICBzY2FubmVkQ291bnQsDQogICAgICAgICAgICAgICAgICAgIGFkZGVkQ291bnQsDQogICAgICAgICAgICAgICAgICAgIGZpbHRlcmVkQnlUaW1lOiBmaWx0ZXJlZEJ5VGltZUNvdW50LA0KICAgICAgICAgICAgICAgICAgICBmaWx0ZXJlZEJ5TGVhZHM6IGZpbHRlcmVkQnlMZWFkc0NvdW50LA0KICAgICAgICAgICAgICAgICAgICBmaWx0ZXJlZEJ5QmxhY2tsaXN0OiBmaWx0ZXJlZEJ5QmxhY2tsaXN0Q291bnQsDQogICAgICAgICAgICAgICAgICAgIHNjYW5EYXlzLA0KICAgICAgICAgICAgICAgICAgICB0b3RhbFJlY29yZHM6IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5zaXplDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmmL7npLror6bnu4bnmoTov4fmu6Tnu5/orqENCiAgICAgICAgICAgICAgICBpZiAoZmlsdGVyZWRCeVRpbWVDb3VudCA+IDAgfHwgZmlsdGVyZWRCeUxlYWRzQ291bnQgPiAwIHx8IGZpbHRlcmVkQnlCbGFja2xpc3RDb3VudCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8mui/h+a7pOe7n+iuoeivpuaDhScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVGaWx0ZXI6IGAke2ZpbHRlcmVkQnlUaW1lQ291bnR95Liq55So5oi36LaF5Ye6JHtzY2FuRGF5c33lpKnmiavmj4/ojIPlm7RgLA0KICAgICAgICAgICAgICAgICAgICAgICAgbGVhZHNGaWx0ZXI6IGAke2ZpbHRlcmVkQnlMZWFkc0NvdW50feS4queUqOaIt+W3suacieeVmeWuoui1hOagh+etvmAsDQogICAgICAgICAgICAgICAgICAgICAgICBibGFja2xpc3RGaWx0ZXI6IGAke2ZpbHRlcmVkQnlCbGFja2xpc3RDb3VudH3kuKrnlKjmiLflnKjpu5HlkI3ljZXkuK1gLA0KICAgICAgICAgICAgICAgICAgICAgICAgZmluYWxBZGRlZDogYOac",
        "gOe7iOa3u+WKoCR7YWRkZWRDb3VudH3kuKrmlrDnlKjmiLfliLDov73nsonliJfooahgDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaJq+aPj+eUqOaIt+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaJp+ihjOWujOaVtOeahOiZmuaLn+a7muWKqOaJq+aPjyAtIOS9v+eUqOe7j+i/h+a1i+ivlemqjOivgeeahOa7muWKqOaWueazlQ0KICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9IOaJgOacieeUqOaIt+S/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgcGVyZm9ybUZ1bGxWaXJ0dWFsU2Nyb2xsU2NhbigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW8gOWni+S9v+eUqOS8mOWMlueahOa7muWKqOaJq+aPj+aWueazlScpOw0KDQogICAgICAgICAgICAgICAgLy8g5L2/55So57uP6L+H5rWL6K+V6aqM6K+B55qE5rua5Yqo5omr5o+P5pa55rOV6I635Y+W5omA5pyJ5Lya6K+d5pWw5o2uDQogICAgICAgICAgICAgICAgY29uc3QgYWxsQ29udmVyc2F0aW9ucyA9IGF3YWl0IHRoaXMuZ2V0QWxsQ29udmVyc2F0aW9uc0J5U2Nyb2xsaW5nKCk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWFsbENvbnZlcnNhdGlvbnMgfHwgYWxsQ29udmVyc2F0aW9ucy5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8mua7muWKqOaJq+aPj+acquiOt+WPluWIsOS7u+S9leS8muivneaVsOaNru+8jOS9v+eUqOaZrumAmuaJq+aPjycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5wZXJmb3JtTm9ybWFsU2NhbigpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrmu5rliqjmiavmj4/ojrflj5bliLDkvJror53mlbDmja4nLCB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsQ29udmVyc2F0aW9uczogYWxsQ29udmVyc2F0aW9ucy5sZW5ndGgNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOWwhuS8muivneaVsOaNrui9rOaNouS4uueUqOaIt+S/oeaBr+agvOW8jw0KICAgICAgICAgICAgICAgIGNvbnN0IGFsbFVzZXJzID0gW107DQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBjb252ZXJzYXRpb24gb2YgYWxsQ29udmVyc2F0aW9ucykgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlckluZm8gPSB0aGlzLmNvbnZlcnRDb252ZXJzYXRpb25Ub1VzZXJJbmZvKGNvbnZlcnNhdGlvbik7DQogICAgICAgICAgICAgICAg",
        "ICAgICAgICBpZiAodXNlckluZm8gJiYgdXNlckluZm8udXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxsVXNlcnMucHVzaCh1c2VySW5mbyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8mui9rOaNouS8muivneaVsOaNruWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuaWNrbmFtZTogY29udmVyc2F0aW9uLm5pY2tuYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrkvJror53mlbDmja7ovazmjaLlrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsVXNlcnM6IGFsbFVzZXJzLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGFsbFVzZXJzOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5LyY5YyW5rua5Yqo5omr5o+P5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAvLyDpmY3nuqfliLDmma7pgJrmiavmj48NCiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5wZXJmb3JtTm9ybWFsU2NhbigpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDkvb/nlKjnu4/ov4fmtYvor5Xpqozor4HnmoTmu5rliqjmiavmj4/mlrnms5Xojrflj5bmiYDmnInkvJror53mlbDmja4NCiAgICAgICAgICogQHJldHVybnMge0FycmF5fSDmiYDmnInkvJror53mlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGdldEFsbENvbnZlcnNhdGlvbnNCeVNjcm9sbGluZygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5om+5Yiw5rua5Yqo55qE5a655ZmoIC0g5pSv5oyB5aSa56eN5Y+v6IO955qE5a655Zmo6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgY29uc3QgcG9zc2libGVTZWxlY3RvcnMgPSBbDQogICAgICAgICAgICAgICAgICAgICcuZC1jb2xsYXBzZS1jb250ZW50LXdyYXBwZXI6bm90KFtzdHlsZSo9Im1heC1oZWlnaHQ6IDBweCJdKSAudnVlLXJlY3ljbGUtc2Nyb2xsZXIuc2Nyb2xsZXInLA0KICAgICAgICAgICAgICAgICAgICAnLmNoYXQtbGlzdC1ib3ggLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyJywNCiAgICAgICAgICAgICAgICAgICAgJy52dWUtcmVjeWNsZS1zY3JvbGxlci5zY3JvbGxlcicsDQogICAgICAgICAgICAgICAgICAgICcudnVlLXJlY3ljbGUtc2Nyb2xsZXIn",
        "DQogICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgIGxldCBzY3JvbGxlciA9IG51bGw7DQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiBwb3NzaWJsZVNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5om+5Yiw5rua5Yqo5a655ZmoJywgeyBzZWxlY3RvciB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKCFzY3JvbGxlcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaJvuS4jeWIsOa0u+WKqOeahOa7muWKqOWuueWZqOOAguivt+ehruS/nSLlhajpg6jkvJror50i5bey5bGV5byA44CCJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBbXTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkvb/nlKggTWFwIOadpeWtmOWCqOe7k+aenO+8jOS7pSBkYXRhLWtleSDkvZzkuLrllK/kuIDplK7vvIzpgb/lhY3ph43lpI3mt7vliqANCiAgICAgICAgICAgICAgICBjb25zdCBjb252ZXJzYXRpb25zID0gbmV3IE1hcCgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IFNDUk9MTF9ERUxBWV9NUyA9IDMwMDsgLy8g5q+P5qyh5rua5Yqo5ZCO562J5b6FMzAw5q+r56eS6K6p5paw5YaF5a655riy5p+TDQoNCiAgICAgICAgICAgICAgICAvLyDmmbrog73mipPlj5blj6/op4HlhYPntKDlh73mlbAgLSDlop7lvLrlhYPntKDlj6/op4HmgKfmo4DmtYsNCiAgICAgICAgICAgICAgICBjb25zdCBzY3JhcGVWaXNpYmxlSXRlbXNTbWFydCA9ICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXRlbXMgPSBzY3JvbGxlci5xdWVyeVNlbGVjdG9yQWxsKCcuc3gtY29udGFjdC1pdGVtJyk7DQogICAgICAgICAgICAgICAgICAgIGxldCB2YWxpZEl0ZW1zQ291bnQgPSAwOw0KDQogICAgICAgICAgICAgICAgICAgIGl0ZW1zLmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBpdGVtLmdldEF0dHJpYnV0ZSgnZGF0YS1rZXknKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChrZXkgJiYgIWNvbnZlcnNhdGlvbnMuaGFzKGtleSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlhYPntKDmmK/lkKblnKhET03lm57mlLbnirbmgIENCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpdGVtVmlldyA9IGl0ZW0uY2xvc2VzdCgnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXRl",
        "bVZpZXcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdHJhbnNmb3JtID0gaXRlbVZpZXcuc3R5bGUudHJhbnNmb3JtOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHJhbnNmb3JtICYmIHRyYW5zZm9ybS5pbmNsdWRlcygndHJhbnNsYXRlWSgtOTk5OXB4KScpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8mui3s+i/h0RPTeWbnuaUtueKtuaAgeeahOWFg+e0oCcsIHsga2V5OiBrZXkuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOyAvLyDot7Pov4fooqvlm57mlLbnmoTlhYPntKANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuecn+ato+WPr+ingQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlY3QgPSBpdGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lclJlY3QgPSBzY3JvbGxlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1Zpc2libGUgPSByZWN0LnRvcCA+PSBjb250YWluZXJSZWN0LnRvcCAtIDUwICYmIC8vIOWFgeiuuOS4gOS6m+WuueW3rg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWN0LmJvdHRvbSA8PSBjb250YWluZXJSZWN0LmJvdHRvbSArIDUwICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY3QuaGVpZ2h0ID4gMDsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1Zpc2libGUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29udmVyc2F0aW9uRGF0YSA9IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5pY2tuYW1lOiBpdGVtLnF1ZXJ5U2VsZWN0b3IoJy5uaWNrLW5hbWUnKT8udGV4dENvbnRlbnQudHJpbSgpIHx8ICcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdE1lc3NhZ2U6IGl0ZW0ucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKT8udGV4dENvbnRlbnQudHJpbSgpIHx8ICcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZTogaXRlbS5xdWVyeVNlbGVjdG9yKCcudGltZScpPy50ZXh0Q29udGVudC50cmltKCkgfHwgJycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWc6IGl0ZW0ucXVlcnlTZWxlY3RvcignLmxlYWRzLXRhZyAuZC10YWctY29udGVudCcpPy50ZXh0Q29udGVudC50cmltKCkgfHwgbnVsbCwNCiAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgIGlzVW5yZWFkOiAhIWl0ZW0ucXVlcnlTZWxlY3RvcignLmQtYmFkZ2UtZG90JyksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhS2V5OiBrZXkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9ucy5zZXQoa2V5LCBjb252ZXJzYXRpb25EYXRhKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWRJdGVtc0NvdW50Kys7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYOi/veeyieeuoeeQhuWZqO+8muacrOasoeaKk+WPluWIsCAke3ZhbGlkSXRlbXNDb3VudH0g5Liq5pyJ5pWI5Lya6K+d6aG5YCk7DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIC8vIOiusOW9leWOn+Wni+a7muWKqOS9jee9rg0KICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsU2Nyb2xsVG9wID0gc2Nyb2xsZXIuc2Nyb2xsVG9wOw0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya6K6w5b2V5Y6f5aeL5rua5Yqo5L2N572uJywgeyBvcmlnaW5hbFNjcm9sbFRvcCB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOWFiOWbnuWIsOmhtumDqOmHjeaWsOW8gOWni+aJq+aPjw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlvIDlp4vmmbrog73mu5rliqjmiavmj4/vvIzlhYjlm57liLDpobbpg6guLi4nKTsNCiAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgPSAwOw0KICAgICAgICAgICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAzMDApKTsNCg0KICAgICAgICAgICAgICAgIC8vIOS7jumhtumDqOW8gOWni+aKk+WPlg0KICAgICAgICAgICAgICAgIHNjcmFwZVZpc2libGVJdGVtc1NtYXJ0KCk7DQoNCiAgICAgICAgICAgICAgICAvLyAtLS0g5pm66IO95rua5Yqo5Li75b6q546vIC0tLQ0KICAgICAgICAgICAgICAgIGxldCBsYXN0U2Nyb2xsVG9wID0gLTE7DQogICAgICAgICAgICAgICAgY29uc3QgTUFYX1NDUk9MTF9BVFRFTVBUUyA9IDEwMDsgLy8g5pyA5aSn5rua5Yqo5qyh5pWw77yM6YG/5YWN5peg6ZmQ5rua5YqoDQogICAgICAgICAgICAgICAgbGV0IHNjcm9sbEF0dGVtcHRzID0gMDsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlvIDlp4vmmbrog73mu5rliqjmiavmj4/kuLvlvqrnjq8uLi4nKTsNCiAgICAgICAgICAgICAgICB3aGlsZSAoc2Nyb2xsZXIuc2Nyb2xsVG9wICE9PSBsYXN0U2Nyb2xsVG9wICYmIHNjcm9sbEF0dGVtcHRzIDwgTUFYX1NDUk9MTF9BVFRFTVBUUykgew0KICAgICAgICAgICAgICAgICAg",
        "ICBsYXN0U2Nyb2xsVG9wID0gc2Nyb2xsZXIuc2Nyb2xsVG9wOw0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxBdHRlbXB0cysrOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWQkeS4i+a7muWKqOS4gOS4quWxj+W5leeahOmrmOW6pg0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgKz0gc2Nyb2xsZXIuY2xpZW50SGVpZ2h0Ow0KDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zyhg6L+957KJ566h55CG5Zmo77ya5pm66IO95rua5Yqo5LitLi4uICgke3Njcm9sbEF0dGVtcHRzfS8ke01BWF9TQ1JPTExfQVRURU1QVFN9KSDlt7Llj5HnjrAgJHtjb252ZXJzYXRpb25zLnNpemV9IOadoeS4jemHjeWkjeeahOS8muivneOAgmApOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOetieW+heaWsOWGheWuueWKoOi9vQ0KICAgICAgICAgICAgICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgU0NST0xMX0RFTEFZX01TKSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5pm66IO95oqT5Y+W5b2T5YmN5bGP5bmV55qE5YaF5a65DQogICAgICAgICAgICAgICAgICAgIHNjcmFwZVZpc2libGVJdGVtc1NtYXJ0KCk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5bey5Yiw6L6+5bqV6YOoDQogICAgICAgICAgICAgICAgICAgIGlmIChzY3JvbGxlci5zY3JvbGxUb3AgKyBzY3JvbGxlci5jbGllbnRIZWlnaHQgPj0gc2Nyb2xsZXIuc2Nyb2xsSGVpZ2h0IC0gMTApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5bey5Yiw6L6+5YiX6KGo5bqV6YOoJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmnIDlkI7mipPlj5bkuIDmrKENCiAgICAgICAgICAgICAgICAgICAgICAgIHNjcmFwZVZpc2libGVJdGVtc1NtYXJ0KCk7DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenOi+vuWIsOacgOWkp+a7muWKqOasoeaVsOmZkOWItg0KICAgICAgICAgICAgICAgIGlmIChzY3JvbGxBdHRlbXB0cyA+PSBNQVhfU0NST0xMX0FUVEVNUFRTKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKGDov73nsonnrqHnkIblmajvvJrovr7liLDmnIDlpKfmu5rliqjmrKHmlbDpmZDliLYgKCR7TUFYX1NDUk9MTF9BVFRFTVBUU30p77yM5YGc5q2i5omr5o+PYCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6L2s5o2i5Li65pWw57uE5bm26L+U5ZueDQogICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0cyA9IEFycmF5LmZyb20oY29udmVyc2F0aW9ucy52YWx1ZXMoKSk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muaZuuiDvea7muWKqOaJq+aPj+WujOaIkCcsIHsNCiAgICAg",
        "ICAgICAgICAgICAgICAgdG90YWxDb252ZXJzYXRpb25zOiByZXN1bHRzLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgdW5pcXVlS2V5czogY29udmVyc2F0aW9ucy5zaXplLA0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxBdHRlbXB0cywNCiAgICAgICAgICAgICAgICAgICAgbWF4U2Nyb2xsQXR0ZW1wdHM6IE1BWF9TQ1JPTExfQVRURU1QVFMNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOWcqOaOp+WItuWPsOi+k+WHuuaJq+aPj+e7k+aenOihqOagvA0KICAgICAgICAgICAgICAgIGlmIChyZXN1bHRzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS50YWJsZShyZXN1bHRzLnNsaWNlKDAsIDEwKSk7IC8vIOWPquaYvuekuuWJjTEw5p2h77yM6YG/5YWN5o6n5Yi25Y+w6L+H5LqO5oul5oykDQogICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHRzLmxlbmd0aCA+IDEwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbyhg6L+957KJ566h55CG5Zmo77ya6L+Y5pyJICR7cmVzdWx0cy5sZW5ndGggLSAxMH0g5p2h5Lya6K+d5pWw5o2u5pyq5Zyo6KGo5qC85Lit5pi+56S6YCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmiavmj4/lrozmr5XlkI7vvIzlsIbmu5rliqjmnaHmu5rlm57pobbpg6jvvIzmlrnkvr/lpITnkIbmlrDmtojmga8NCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5omr5o+P5a6M5oiQ77yM5q2j5Zyo5rua5Yqo5Zue5Yiw5YiX6KGo6aG26YOoLi4uJyk7DQogICAgICAgICAgICAgICAgc2Nyb2xsZXIuc2Nyb2xsVG9wID0gMDsNCg0KICAgICAgICAgICAgICAgIC8vIOetieW+hea7muWKqOWujOaIkA0KICAgICAgICAgICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAzMDApKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5bey5Zue5Yiw5YiX6KGo6aG26YOo77yM5YeG5aSH5aSE55CG5paw5raI5oGvJyk7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0czsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8mua7muWKqOaJq+aPj+i/h+eoi+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlsIbkvJror53mlbDmja7ovazmjaLkuLrnlKjmiLfkv6Hmga/moLzlvI8NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGNvbnZlcnNhdGlvbiDkvJror53mlbDmja4NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g55So5oi35L+h5oGvDQogICAgICAgICAqLw0KICAg",
        "ICAgICBjb252ZXJ0Q29udmVyc2F0aW9uVG9Vc2VySW5mbyhjb252ZXJzYXRpb24pIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g55Sf5oiQ55So5oi3SUTvvIjkvb/nlKhkYXRhS2V55L2c5Li6Y29udmVyc2F0aW9uSWTvvIkNCiAgICAgICAgICAgICAgICBjb25zdCBjb252ZXJzYXRpb25JZCA9IGNvbnZlcnNhdGlvbi5kYXRhS2V5Ow0KICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IGNvbnZlcnNhdGlvbklkOyAvLyDlnKjlsI/nuqLkuabkuK3vvIxjb252ZXJzYXRpb25JZOmAmuW4uOWwseaYr3VzZXJJZA0KDQogICAgICAgICAgICAgICAgLy8g6Kej5p6Q5pe26Ze05L+h5oGvDQogICAgICAgICAgICAgICAgY29uc3QgbGFzdEFjdGl2aXR5VGltZSA9IHRoaXMucGFyc2VUaW1lVGV4dChjb252ZXJzYXRpb24udGltZSk7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IGNvbnZlcnNhdGlvbi5uaWNrbmFtZSB8fCAn5pyq55+l55So5oi3JywNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLA0KICAgICAgICAgICAgICAgICAgICBsYXN0TWVzc2FnZTogY29udmVyc2F0aW9uLmxhc3RNZXNzYWdlIHx8ICcnLA0KICAgICAgICAgICAgICAgICAgICB0aW1lVGV4dDogY29udmVyc2F0aW9uLnRpbWUgfHwgJycsDQogICAgICAgICAgICAgICAgICAgIGxhc3RBY3Rpdml0eVRpbWU6IGxhc3RBY3Rpdml0eVRpbWUsDQogICAgICAgICAgICAgICAgICAgIGhhc0xlYWRzVGFnOiAhIWNvbnZlcnNhdGlvbi50YWcsIC8vIOaYr+WQpuacieeVmeWuoui1hOagh+etvg0KICAgICAgICAgICAgICAgICAgICBpc1VucmVhZDogY29udmVyc2F0aW9uLmlzVW5yZWFkIHx8IGZhbHNlDQogICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrovazmjaLkvJror53mlbDmja7lpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbiwNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6Kej5p6Q5pe26Ze05paH5pys5Li65pe26Ze05oizDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0aW1lVGV4dCDml7bpl7TmlofmnKzvvIjlpoIgIjIwOjQxOjEyIiDmiJYgIjA3LzExIu+8iQ0KICAgICAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSDml7bpl7TmiLMNCiAgICAgICAgICovDQogICAgICAgIHBhcnNlVGltZVRleHQodGltZVRleHQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCF0aW1l",
        "VGV4dCkgcmV0dXJuIERhdGUubm93KCk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpOw0KDQogICAgICAgICAgICAgICAgLy8g5aSE55CG5LuK5aSp55qE5pe26Ze05qC85byP77yaSEg6TU06U1MNCiAgICAgICAgICAgICAgICBpZiAodGltZVRleHQuaW5jbHVkZXMoJzonKSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0aW1lUGFydHMgPSB0aW1lVGV4dC5zcGxpdCgnOicpOw0KICAgICAgICAgICAgICAgICAgICBpZiAodGltZVBhcnRzLmxlbmd0aCA+PSAyKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBob3VycyA9IHBhcnNlSW50KHRpbWVQYXJ0c1swXSwgMTApOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWludXRlcyA9IHBhcnNlSW50KHRpbWVQYXJ0c1sxXSwgMTApOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Vjb25kcyA9IHRpbWVQYXJ0cy5sZW5ndGggPiAyID8gcGFyc2VJbnQodGltZVBhcnRzWzJdLCAxMCkgOiAwOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7DQogICAgICAgICAgICAgICAgICAgICAgICB0b2RheS5zZXRIb3Vycyhob3VycywgbWludXRlcywgc2Vjb25kcywgMCk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaXtumXtOaYr+acquadpeaXtumXtO+8jOivtOaYjuaYr+aYqOWkqeeahA0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRvZGF5ID4gbm93KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9kYXkuc2V0RGF0ZSh0b2RheS5nZXREYXRlKCkgLSAxKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRvZGF5LmdldFRpbWUoKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWkhOeQhuaXpeacn+agvOW8j++8mk1NL0REDQogICAgICAgICAgICAgICAgaWYgKHRpbWVUZXh0LmluY2x1ZGVzKCcvJykpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0ZVBhcnRzID0gdGltZVRleHQuc3BsaXQoJy8nKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGVQYXJ0cy5sZW5ndGggPT09IDIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vbnRoID0gcGFyc2VJbnQoZGF0ZVBhcnRzWzBdLCAxMCkgLSAxOyAvLyDmnIjku73ku44w5byA5aeLDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXkgPSBwYXJzZUludChkYXRlUGFydHNbMV0sIDEwKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKG5vdy5nZXRGdWxsWWVhcigpLCBtb250aCwgZGF5KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5pel5pyf5piv5pyq5p2l5pel5pyf77yM6K+05piO5piv5Y675bm055qEDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAo",
        "ZGF0ZSA+IG5vdykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGUuc2V0RnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpIC0gMSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRlLmdldFRpbWUoKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaXoOazleino+aekO+8jOi/lOWbnuW9k+WJjeaXtumXtA0KICAgICAgICAgICAgICAgIHJldHVybiBEYXRlLm5vdygpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muino+aekOaXtumXtOaWh+acrOWksei0pScsIHsgdGltZVRleHQsIGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBEYXRlLm5vdygpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmiavmj4/lvZPliY3lj6/op4HnmoTnlKjmiLfvvIjkv53nlZnljp/mnInmlrnms5XkvZzkuLrpmY3nuqfmlrnmoYjvvIkNCiAgICAgICAgICogQHJldHVybnMge0FycmF5fSDlvZPliY3lj6/op4HnmoTnlKjmiLfkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHNjYW5DdXJyZW50VmlzaWJsZVVzZXJzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCB1c2VycyA9IFtdOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhY3RFbGVtZW50cyA9IEVsZW1lbnRNYW5hZ2VyLmdldFZpc2libGVDb250YWN0SXRlbXMoKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5omr5o+P5b2T5YmN5Y+v6KeB55So5oi3Jywgew0KICAgICAgICAgICAgICAgICAgICBlbGVtZW50Q291bnQ6IGNvbnRhY3RFbGVtZW50cy5sZW5ndGgNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZWxlbWVudCBvZiBjb250YWN0RWxlbWVudHMpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuecn+ato+WPr+inge+8iOS4jeWcqOWbnuaUtuS9jee9ru+8iS0g5L2/55So5pu05a695p2+55qE5qOA5rWLDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaXNFbGVtZW50VHJ1bHlWaXNpYmxlKGVsZW1lbnQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5bCd6K+V5r+A5rS75YWD57Sg5ZCO5YaN5qyh5qOA5p+lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVmlydHVhbFNjcm9sbE1hbmFnZXIuZW5zdXJlRWxlbWVudFZpc2libGUoZWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3",
        "YWl0IFV0aWxzLmRlbGF5KDIwMCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5pc0VsZW1lbnRUcnVseVZpc2libGUoZWxlbWVudCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlhYPntKDmv4DmtLvlpLHotKXvvIzot7Pov4cnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJbmZvID0gdGhpcy5leHRyYWN0VXNlckluZm8oZWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodXNlckluZm8gJiYgdXNlckluZm8udXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcnMucHVzaCh1c2VySW5mbyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmj5Dlj5bnlKjmiLfkv6Hmga/miJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZVRleHQ6IHVzZXJJbmZvLnRpbWVUZXh0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0QWN0aXZpdHk6IHVzZXJJbmZvLmxhc3RBY3Rpdml0eVRpbWUgPyBuZXcgRGF0ZSh1c2VySW5mby5sYXN0QWN0aXZpdHlUaW1lKS50b0xvY2FsZVN0cmluZygpIDogJ04vQScNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5o+Q5Y+W55So5oi35L+h5oGv5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5b2T5YmN5Y+v6KeB55So5oi35omr5o+P5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICBmb3VuZFVzZXJzOiB1c2Vycy5sZW5ndGgNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB1c2VyczsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIbl",
        "majvvJrmiavmj4/lvZPliY3lj6/op4HnlKjmiLflpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBbXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l5YWD57Sg5piv5ZCm55yf5q2j5Y+v6KeB77yI5LiN5Zyo6Jma5ouf5rua5Yqo5Zue5pS25L2N572u77yJDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGlzRWxlbWVudFRydWx5VmlzaWJsZShlbGVtZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuWtmOWcqA0KICAgICAgICAgICAgICAgIGlmICghZWxlbWVudCB8fCAhZWxlbWVudC5wYXJlbnRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbooqvnp7vliqjliLDlm57mlLbkvY3nva4NCiAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm0gPSBlbGVtZW50LnN0eWxlLnRyYW5zZm9ybTsNCiAgICAgICAgICAgICAgICBpZiAodHJhbnNmb3JtICYmIHRyYW5zZm9ybS5pbmNsdWRlcygndHJhbnNsYXRlWSgtOTk5OXB4KScpKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlhYPntKDmmK/lkKblnKjop4blj6PlhoUNCiAgICAgICAgICAgICAgICBjb25zdCByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWluZXJSZWN0ID0gZWxlbWVudC5jbG9zZXN0KCcudnVlLXJlY3ljbGUtc2Nyb2xsZXInKT8uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7DQoNCiAgICAgICAgICAgICAgICBpZiAoY29udGFpbmVyUmVjdCkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVjdC50b3AgPj0gY29udGFpbmVyUmVjdC50b3AgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY3QuYm90dG9tIDw9IGNvbnRhaW5lclJlY3QuYm90dG9tICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICByZWN0LmhlaWdodCA+IDA7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHJlY3QuaGVpZ2h0ID4gMCAmJiByZWN0LndpZHRoID4gMDsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmiafooYzmma7pgJrmiavmj4/vvIjpmY3nuqfmlrnmoYjvvIkNCiAgICAgICAgICogQHJldHVybnMge0FycmF5fSDnlKjmiLfkv6Hmga/liJfooagNCiAgICAgICAgICovDQogICAg",
        "ICAgIHBlcmZvcm1Ob3JtYWxTY2FuKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCB1c2VycyA9IFtdOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhY3RFbGVtZW50cyA9IEVsZW1lbnRNYW5hZ2VyLmdldFZpc2libGVDb250YWN0SXRlbXMoKTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZWxlbWVudCBvZiBjb250YWN0RWxlbWVudHMpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghRWxlbWVudE1hbmFnZXIuaXNFbGVtZW50VmlzaWJsZShlbGVtZW50KSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySW5mbyA9IHRoaXMuZXh0cmFjdFVzZXJJbmZvKGVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHVzZXJJbmZvICYmIHVzZXJJbmZvLnVzZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJzLnB1c2godXNlckluZm8pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmma7pgJrmiavmj4/mj5Dlj5bnlKjmiLflpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmma7pgJrmiavmj4/lrozmiJAnLCB7IHVzZXJDb3VudDogdXNlcnMubGVuZ3RoIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiB1c2VyczsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrmma7pgJrmiavmj4/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBbXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5b+r6YCf5qOA5p+l55So5oi355qE55WZ5a6i6LWE54q25oCB77yI5LiN5YiH5o2i5Lya6K+d77yJDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSB1c2VySW5mbyDnlKjmiLfkv6Hmga8NCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuacieeVmeWuoui1hOagh+etvg0KICAgICAgICAgKi8NCiAgICAgICAgY2hlY2tVc2VyTGVhZHNTdGF0dXNGYXN0KHVzZXJJbmZvKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIPCflKcgQlVH5L+u5aSN77ya5qOA5p+l5b+F6KaB55qE5Y+C5pWwDQogICAgICAgICAgICAgICAgaWYgKCF1c2VySW5mbyB8fCAhdXNlckluZm8uY29udmVyc2F0aW9u",
        "SWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8muW/q+mAn+ajgOafpeeVmeWuoui1hOeKtuaAgeWksei0pSAtIOe8uuWwkeW/heimgeWPguaVsCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mbz8udXNlck5hbWUgfHwgJ+acquefpeeUqOaItycsDQogICAgICAgICAgICAgICAgICAgICAgICBoYXNDb252ZXJzYXRpb25JZDogISF1c2VySW5mbz8uY29udmVyc2F0aW9uSWQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Ux77ya5aaC5p6c55So5oi35L+h5oGv5Lit5bey57uP5YyF5ZCr55WZ5a6i6LWE5qCH562+5L+h5oGv77yM55u05o6l5L2/55SoDQogICAgICAgICAgICAgICAgaWYgKHVzZXJJbmZvLmhhc0xlYWRzVGFnICE9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrku47nlKjmiLfkv6Hmga/kuK3ojrflj5bnlZnlrqLotYTnirbmgIEnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICBoYXNMZWFkc1RhZzogdXNlckluZm8uaGFzTGVhZHNUYWcNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB1c2VySW5mby5oYXNMZWFkc1RhZzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Uy77ya5LyY5YWI5qOA5p+lQVBJ57yT5a2Y5Lit55qE55WZ5a6i6LWE54q25oCBDQogICAgICAgICAgICAgICAgY29uc3QgY2FjaGVkU3RhdHVzID0gTGVhZHNTdGF0dXNNYW5hZ2VyLnN0YXR1c0NhY2hlLmdldCh1c2VySW5mby5jb252ZXJzYXRpb25JZCk7DQogICAgICAgICAgICAgICAgaWYgKGNhY2hlZFN0YXR1cykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBleHBpcmVUaW1lID0gTGVhZHNTdGF0dXNNYW5hZ2VyLmdldENhY2hlRXhwaXJlVGltZShjYWNoZWRTdGF0dXMuc291cmNlKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XnvJPlrZjmmK/lkKbmnInmlYgNCiAgICAgICAgICAgICAgICAgICAgaWYgKGV4cGlyZVRpbWUgPiAwICYmIChub3cgLSBjYWNoZWRTdGF0dXMubGFzdENoZWNrZWQpIDwgZXhwaXJlVGltZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrkvb/nlKjmnInmlYjnvJPlrZjkuK3nmoTnlZnlrqLotYTnirbmgIEnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc0xlYWRz",
        "VGFnOiBjYWNoZWRTdGF0dXMuaGFzTGVhZHNUYWcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlOiBjYWNoZWRTdGF0dXMuc291cmNlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlQWdlOiBgJHtNYXRoLnJvdW5kKChub3cgLSBjYWNoZWRTdGF0dXMubGFzdENoZWNrZWQpIC8gMTAwMCl9c2ANCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFN0YXR1cy5oYXNMZWFkc1RhZzsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTPvvJrlsJ3or5Xku47lvZPliY3lj6/op4HnmoTkvJror53lhYPntKDkuK3mo4Dmn6XnlZnlrqLotYTnirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWN0RWxlbWVudHMgPSBFbGVtZW50TWFuYWdlci5nZXRWaXNpYmxlQ29udGFjdEl0ZW1zKCk7DQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGNvbnRhY3RFbGVtZW50cykgew0KICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5kYXRhc2V0Py5rZXkgPT09IHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlhYPntKDmmK/lkKbnnJ/mraPlj6/op4ENCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzRWxlbWVudFRydWx5VmlzaWJsZShlbGVtZW50KSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOS9v+eUqOWQjOatpeeJiOacrO+8jOmBv+WFjeWcqOW/q+mAn+ajgOafpeS4reS9v+eUqOW8guatpQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhc0xlYWRzID0gTGVhZHNTdGF0dXNNYW5hZ2VyLmdldExlYWRzU3RhdHVzU3luYyh1c2VySW5mby5jb252ZXJzYXRpb25JZCwgZWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhhc0xlYWRzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5Zyo5Y+v6KeB5YWD57Sg5Lit5Y+R546w55WZ5a6i6LWE5qCH562+Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5b+r6YCf5qOA5p+l5pyq5Y+R546w55WZ5a6i6LWE5qCH562+Jywgew0KICAgICAgICAgICAg",
        "ICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiB1c2VySW5mby5jb252ZXJzYXRpb25JZCA/IHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJyA6ICdOL0EnDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5b+r6YCf5qOA5p+l55WZ5a6i6LWE54q25oCB5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8/LnVzZXJOYW1lIHx8ICfmnKrnn6XnlKjmiLcnLA0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8g5Ye66ZSZ5pe26buY6K6k6K6k5Li65rKh5pyJ55WZ5a6i6LWEDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOW8guatpeW/q+mAn+ajgOafpeeUqOaIt+eahOeVmeWuoui1hOeKtuaAge+8iOaUr+aMgUFQSeS8mOWFiO+8iQ0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gdXNlckluZm8g55So5oi35L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fSDmmK/lkKbmnInnlZnlrqLotYTmoIfnrb4NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGNoZWNrVXNlckxlYWRzU3RhdHVzRmFzdEFzeW5jKHVzZXJJbmZvKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIPCflKcgQlVH5L+u5aSN77ya5qOA5p+l5b+F6KaB55qE5Y+C5pWwDQogICAgICAgICAgICAgICAgaWYgKCF1c2VySW5mbyB8fCAhdXNlckluZm8uY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8muW8guatpeW/q+mAn+ajgOafpeeVmeWuoui1hOeKtuaAgeWksei0pSAtIOe8uuWwkeW/heimgeWPguaVsCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mbz8udXNlck5hbWUgfHwgJ+acquefpeeUqOaItycsDQogICAgICAgICAgICAgICAgICAgICAgICBoYXNDb252ZXJzYXRpb25JZDogISF1c2VySW5mbz8uY29udmVyc2F0aW9uSWQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Ux77ya5aaC5p6c55So5oi35L+h5oGv5Lit5bey57uP5YyF5ZCr55WZ5a6i6LWE5qCH562+5L+h5oGv77yM55u05o6l5L2/55SoDQogICAgICAgICAgICAgICAgaWYgKHVzZXJJbmZvLmhhc0xlYWRzVGFnICE9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9n",
        "Z2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrku47nlKjmiLfkv6Hmga/kuK3ojrflj5bnlZnlrqLotYTnirbmgIEnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICBoYXNMZWFkc1RhZzogdXNlckluZm8uaGFzTGVhZHNUYWcNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB1c2VySW5mby5oYXNMZWFkc1RhZzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Uy77ya5LyY5YWI5bCd6K+VQVBJ5qOA5rWL77yI5aaC5p6c5ZCv55So77yJDQogICAgICAgICAgICAgICAgaWYgKENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEFwaUxlYWRzQ2hlY2snLCB0cnVlKSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySWQgPSBMZWFkc0FQSURldGVjdG9yLmV4dHJhY3RVc2VySWRGcm9tQ29udmVyc2F0aW9uKHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHVzZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhcGlSZXN1bHQgPSBhd2FpdCBMZWFkc0FQSURldGVjdG9yLmRldGVjdExlYWRzU3RhdHVzVmlhQVBJKHVzZXJJZCwgZmFsc2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcGlSZXN1bHQgIT09IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5pu05paw57yT5a2Y77yIQVBJ5pWw5o2u77yJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExlYWRzU3RhdHVzTWFuYWdlci51cGRhdGVMZWFkc1N0YXR1cyh1c2VySW5mby5jb252ZXJzYXRpb25JZCwgYXBpUmVzdWx0Lmhhc0xlYWRzLCAnYXBpJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlvILmraXlv6vpgJ9BUEnmo4DmtYvlrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNMZWFkczogYXBpUmVzdWx0Lmhhc0xlYWRzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlOiAnYXBpJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXBpUmVzdWx0Lmhhc0xlYWRzOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8muW8guatpeW/q+mAn0FQSeajgOa1i+Wksei0pe+8jOmZ",
        "jee6p+WIsOe8k+WtmC9ET03mo4DmtYsnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTPvvJrmo4Dmn6XnvJPlrZjkuK3nmoTnlZnlrqLotYTnirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBjYWNoZWRTdGF0dXMgPSBMZWFkc1N0YXR1c01hbmFnZXIuc3RhdHVzQ2FjaGUuZ2V0KHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICBpZiAoY2FjaGVkU3RhdHVzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4cGlyZVRpbWUgPSBMZWFkc1N0YXR1c01hbmFnZXIuZ2V0Q2FjaGVFeHBpcmVUaW1lKGNhY2hlZFN0YXR1cy5zb3VyY2UpOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOajgOafpee8k+WtmOaYr+WQpuacieaViA0KICAgICAgICAgICAgICAgICAgICBpZiAoZXhwaXJlVGltZSA+IDAgJiYgKG5vdyAtIGNhY2hlZFN0YXR1cy5sYXN0Q2hlY2tlZCkgPCBleHBpcmVUaW1lKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muS9v+eUqOacieaViOe8k+WtmOS4reeahOeVmeWuoui1hOeKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzTGVhZHNUYWc6IGNhY2hlZFN0YXR1cy5oYXNMZWFkc1RhZywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2U6IGNhY2hlZFN0YXR1cy5zb3VyY2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVBZ2U6IGAke01hdGgucm91bmQoKG5vdyAtIGNhY2hlZFN0YXR1cy5sYXN0Q2hlY2tlZCkgLyAxMDAwKX1zYA0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGVkU3RhdHVzLmhhc0xlYWRzVGFnOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVNO+8muWwneivleS7juW9k+WJjeWPr+ingeeahOS8muivneWFg+e0oOS4reajgOafpeeVmeWuoui1hOeKtuaAgQ0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhY3RFbGVtZW50cyA9IEVsZW1lbnRNYW5hZ2VyLmdldFZpc2libGVDb250YWN0SXRlbXMoKTsNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgY29udGFjdEVsZW1lbnRzKSB7DQogICAgICAgICAgICAgICAgICAg",
        "IGlmIChlbGVtZW50LmRhdGFzZXQ/LmtleSA9PT0gdXNlckluZm8uY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuecn+ato+WPr+ingQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNFbGVtZW50VHJ1bHlWaXNpYmxlKGVsZW1lbnQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5L2/55So5ZCM5q2l54mI5pys77yM6YG/5YWN5Zyo5b+r6YCf5qOA5p+l5Lit5L2/55So5byC5q2lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaGFzTGVhZHMgPSBMZWFkc1N0YXR1c01hbmFnZXIuZ2V0TGVhZHNTdGF0dXNTeW5jKHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkLCBlbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGFzTGVhZHMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlnKjlj6/op4HlhYPntKDkuK3lj5HnjrDnlZnlrqLotYTmoIfnrb4nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlvILmraXlv6vpgJ/mo4Dmn6XmnKrlj5HnjrDnlZnlrqLotYTmoIfnrb4nLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkID8gdXNlckluZm8uY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nIDogJ04vQScNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrlvILmraXlv6vpgJ/mo4Dmn6XnlZnlrqLotYTnirbmgIHlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mbz8udXNlck5hbWUgfHwgJ+acquefpeeUqOaItycsDQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyDlh7rplJnml7bpu5jorqTorqTkuLrmsqHmnInnlZnlrqLotYQNCiAgICAgICAgICAgIH0NCiAgICAgICAg",
        "fSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l55So5oi355qE55WZ5a6i6LWE54q25oCB77yI5rex5bqm5qOA5p+l77yM5pSv5oyBQVBJ5LyY5YWI77yJDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSB1c2VySW5mbyDnlKjmiLfkv6Hmga8NCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59IOaYr+WQpuacieeVmeWuoui1hOagh+etvg0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgY2hlY2tVc2VyTGVhZHNTdGF0dXModXNlckluZm8pIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g8J+UpyBCVUfkv67lpI3vvJrmo4Dmn6Xlv4XopoHnmoTlj4LmlbANCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJbmZvIHx8ICF1c2VySW5mby5jb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5qOA5p+l55WZ5a6i6LWE54q25oCB5aSx6LSlIC0g57y65bCR5b+F6KaB5Y+C5pWwJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvPy51c2VyTmFtZSB8fCAn5pyq55+l55So5oi3JywNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0NvbnZlcnNhdGlvbklkOiAhIXVzZXJJbmZvPy5jb252ZXJzYXRpb25JZA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTHvvJrkvJjlhYjlsJ3or5VBUEnmo4DmtYvvvIjlpoLmnpzlkK/nlKjvvIkNCiAgICAgICAgICAgICAgICBpZiAoQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwQXBpTGVhZHNDaGVjaycsIHRydWUpKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IExlYWRzQVBJRGV0ZWN0b3IuZXh0cmFjdFVzZXJJZEZyb21Db252ZXJzYXRpb24odXNlckluZm8uY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgICAgICBpZiAodXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5bCd6K+VQVBJ5qOA5rWL55WZ5a6i6LWE54q25oCBJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYXBpUmVzdWx0ID0gYXdhaXQgTGVhZHNBUElEZXRlY3Rvci5kZXRlY3RMZWFkc1N0YXR1c1ZpYUFQSSh1c2VySWQsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXBpUmVzdWx0ICE9PSBudWxsKSB7DQogICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOabtOaWsOe8k+WtmO+8iEFQSeaVsOaNru+8iQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMZWFkc1N0YXR1c01hbmFnZXIudXBkYXRlTGVhZHNTdGF0dXModXNlckluZm8uY29udmVyc2F0aW9uSWQsIGFwaVJlc3VsdC5oYXNMZWFkcywgJ2FwaScpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77yaQVBJ5qOA5rWL5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzTGVhZHM6IGFwaVJlc3VsdC5oYXNMZWFkcywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZTogJ2FwaScNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFwaVJlc3VsdC5oYXNMZWFkczsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajvvJpBUEnmo4DmtYvlpLHotKXvvIzpmY3nuqfliLBET03mo4DmtYsnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTLvvJrlsJ3or5Xku47lvZPliY3lj6/op4HnmoTkvJror53lhYPntKDkuK3mo4Dmn6XnlZnlrqLotYTnirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWN0RWxlbWVudHMgPSBFbGVtZW50TWFuYWdlci5nZXRWaXNpYmxlQ29udGFjdEl0ZW1zKCk7DQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGNvbnRhY3RFbGVtZW50cykgew0KICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5kYXRhc2V0Py5rZXkgPT09IHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDkvb/nlKjlvILmraXniYjmnKzov5vooYzlrozmlbTmo4DmtYsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhc0xlYWRzID0gYXdhaXQgTGVhZHNTdGF0dXNNYW5hZ2VyLmdldExlYWRzU3RhdHVzKHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkLCBlbGVtZW50LCBmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGFzTGVhZHMpIHsNCiAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWcqOWPr+ingeWFg+e0oOS4reWPkeeOsOeVmeWuoui1hOagh+etvicsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTPvvJrmo4Dmn6XnvJPlrZjkuK3nmoTnlZnlrqLotYTnirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBjYWNoZWRTdGF0dXMgPSBMZWFkc1N0YXR1c01hbmFnZXIuc3RhdHVzQ2FjaGUuZ2V0KHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICBpZiAoY2FjaGVkU3RhdHVzICYmIGNhY2hlZFN0YXR1cy5oYXNMZWFkc1RhZykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWcqOe8k+WtmOS4reWPkeeOsOeVmeWuoui1hOagh+etvicsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZTogY2FjaGVkU3RhdHVzLnNvdXJjZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVNO+8muWwneivleWIh+aNouWIsOS8muivnei/m+ihjOajgOafpe+8iOabtOWHhuehruS9hui+g+aFou+8iQ0KICAgICAgICAgICAgICAgIGlmIChDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBEZWVwTGVhZHNDaGVjaycsIGZhbHNlKSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzd2l0Y2hlZCA9IGF3YWl0IHRoaXMuc3dpdGNoVG9Db252ZXJzYXRpb24odXNlckluZm8uY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoc3dpdGNoZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDEwMDApOyAvLyDnrYnlvoXpobXpnaLliqDovb0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5p+l5om+55WZ5a6i6LWE5qCH562+DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBsZWFkc0VsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmxlYWRzLXRhZyAuZC10YWctY29udGVudCcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGxlYWRzRWxlbWVudHMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC50ZXh0Q29udGVudD8uaW5jbHVkZXMoJ+eVmeWuoui1hCcpKSB7DQog",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOabtOaWsOe8k+WtmA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMZWFkc1N0YXR1c01hbmFnZXIudXBkYXRlTGVhZHNTdGF0dXModXNlckluZm8uY29udmVyc2F0aW9uSWQsIHRydWUsICdkb21fZGVlcCcpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya6YCa6L+H5rex5bqm5qOA5p+l5Y+R546w55WZ5a6i6LWE5qCH562+Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muacquWPkeeOsOeVmeWuoui1hOagh+etvicsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogdXNlckluZm8uY29udmVyc2F0aW9uSWQgPyB1c2VySW5mby5jb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicgOiAnTi9BJw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muajgOafpeeVmeWuoui1hOeKtuaAgeWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvPy51c2VyTmFtZSB8fCAn5pyq55+l55So5oi3JywNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7IC8vIOWHuumUmeaXtum7mOiupOiupOS4uuayoeacieeVmeWuoui1hA0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDku47kvJror53lhYPntKDmj5Dlj5bnlKjmiLfkv6Hmga8NCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOS8muivneWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fG51bGx9IOeUqOaIt+S/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdFVzZXJJbmZvKGVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5o+Q5Y+WY29udmVyc2F0aW9uSWQNCiAgICAgICAgICAgICAgICBjb25zdCBjb252ZXJzYXRpb25JZCA9IGVsZW1lbnQuZGF0YXNldD8ua2V5Ow0KICAg",
        "ICAgICAgICAgICAgIGlmICghY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlhYPntKDnvLrlsJFkYXRhLWtleeWxnuaApycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRUYWc6IGVsZW1lbnQudGFnTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRDbGFzczogZWxlbWVudC5jbGFzc05hbWUNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaPkOWPlueUqOaIt+WQjSAtIOS9v+eUqOWkmuenjemAieaLqeWZqOehruS/neWFvOWuueaApw0KICAgICAgICAgICAgICAgIGNvbnN0IG5hbWVTZWxlY3RvcnMgPSBbDQogICAgICAgICAgICAgICAgICAgICcuc3gtY29udGFjdC1pdGVtLW5hbWUnLCAgLy8g5Li76KaB6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgICAgICcuc3gtY29udGFjdC1uYW1lJywgICAgICAgLy8g5aSH55So6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgICAgICcuY29udGFjdC1uYW1lJywgICAgICAgICAgLy8g6YCa55So6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgICAgICcudXNlci1uYW1lJywgICAgICAgICAgICAgLy8g55So5oi35ZCN6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgICAgICdbY2xhc3MqPSJuYW1lIl0nLCAgICAgICAgLy8g5YyF5ZCrbmFtZeeahOexuw0KICAgICAgICAgICAgICAgICAgICAnLm5hbWUnLCAgICAgICAgICAgICAgICAgIC8vIOeugOWNlW5hbWXnsbsNCiAgICAgICAgICAgICAgICAgICAgJy50aXRsZScgICAgICAgICAgICAgICAgICAvLyDmoIfpopjnsbsNCiAgICAgICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAgICAgbGV0IHVzZXJOYW1lID0gJ+acquefpeeUqOaItyc7DQogICAgICAgICAgICAgICAgbGV0IG5hbWVFbGVtZW50ID0gbnVsbDsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2VsZWN0b3Igb2YgbmFtZVNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgICAgICBuYW1lRWxlbWVudCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7DQogICAgICAgICAgICAgICAgICAgIGlmIChuYW1lRWxlbWVudCAmJiBuYW1lRWxlbWVudC50ZXh0Q29udGVudD8udHJpbSgpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSA9IG5hbWVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5o+Q5Y+W5pe26Ze05L+h5oGvDQogICAgICAgICAgICAgICAgY29uc3QgdGltZUVsZW1lbnQgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy50aW1lJyk7DQogICAgICAgICAgICAgICAgY29uc3QgbGFzdEFjdGl2aXR5VGltZSA9IHRoaXMucGFy",
        "c2VDb252ZXJzYXRpb25UaW1lKHRpbWVFbGVtZW50KTsNCg0KICAgICAgICAgICAgICAgIC8vIOeUn+aIkHVzZXJJZO+8iOS9v+eUqGNvbnZlcnNhdGlvbklk5L2c5Li6dXNlcklk77yJDQogICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gY29udmVyc2F0aW9uSWQ7DQoNCiAgICAgICAgICAgICAgICBjb25zdCB1c2VySW5mbyA9IHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQsDQogICAgICAgICAgICAgICAgICAgIGxhc3RBY3Rpdml0eVRpbWUsDQogICAgICAgICAgICAgICAgICAgIHRpbWVUZXh0OiB0aW1lRWxlbWVudCA/IHRpbWVFbGVtZW50LnRleHRDb250ZW50Py50cmltKCkgOiBudWxsDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5oiQ5Yqf5o+Q5Y+W55So5oi35L+h5oGvJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgaGFzVGltZTogISFsYXN0QWN0aXZpdHlUaW1lLA0KICAgICAgICAgICAgICAgICAgICB0aW1lVGV4dDogdXNlckluZm8udGltZVRleHQNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB1c2VySW5mbzsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrmj5Dlj5bnlKjmiLfkv6Hmga/lpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICBlbGVtZW50VGFnOiBlbGVtZW50Py50YWdOYW1lLA0KICAgICAgICAgICAgICAgICAgICBlbGVtZW50Q2xhc3M6IGVsZW1lbnQ/LmNsYXNzTmFtZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDop6PmnpDkvJror53ml7bpl7Tkv6Hmga8NCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSB0aW1lRWxlbWVudCDml7bpl7TlhYPntKANCiAgICAgICAgICogQHJldHVybnMge251bWJlcnxudWxsfSDml7bpl7TmiLMNCiAgICAgICAgICovDQogICAgICAgIHBhcnNlQ29udmVyc2F0aW9uVGltZSh0aW1lRWxlbWVudCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIXRpbWVFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVUZXh0ID0gdGltZUVsZW1lbnQudGV4dENvbnRlbnQ/LnRyaW0oKTsN",
        "CiAgICAgICAgICAgICAgICBpZiAoIXRpbWVUZXh0KSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7DQogICAgICAgICAgICAgICAgbGV0IHRhcmdldERhdGU7DQoNCiAgICAgICAgICAgICAgICAvLyDliKTmlq3ml7bpl7TmoLzlvI8NCiAgICAgICAgICAgICAgICBpZiAodGltZVRleHQuaW5jbHVkZXMoJy8nKSkgew0KICAgICAgICAgICAgICAgICAgICAvLyDml6XmnJ/moLzlvI/vvJowNy8xMSDmiJYgMjAyNC8wNy8xMQ0KICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXJ0cyA9IHRpbWVUZXh0LnNwbGl0KCcvJyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPT09IDIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIE1NL0REIOagvOW8j++8jOWBh+iuvuaYr+W9k+W5tA0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbW9udGggPSBwYXJzZUludChwYXJ0c1swXSkgLSAxOyAvLyDmnIjku73ku44w5byA5aeLDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXkgPSBwYXJzZUludChwYXJ0c1sxXSk7DQogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXREYXRlID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIG1vbnRoLCBkYXkpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzml6XmnJ/lnKjmnKrmnaXvvIzor7TmmI7mmK/ljrvlubTnmoQNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXREYXRlID4gbm93KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0RGF0ZS5zZXRGdWxsWWVhcihub3cuZ2V0RnVsbFllYXIoKSAtIDEpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMykgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8gWVlZWS9NTS9ERCDmoLzlvI8NCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHllYXIgPSBwYXJzZUludChwYXJ0c1swXSk7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtb250aCA9IHBhcnNlSW50KHBhcnRzWzFdKSAtIDE7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXkgPSBwYXJzZUludChwYXJ0c1syXSk7DQogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXREYXRlID0gbmV3IERhdGUoeWVhciwgbW9udGgsIGRheSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRpbWVUZXh0LmluY2x1ZGVzKCc6JykpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5pe26Ze05qC85byP77yaMjA6NDE6MTIg5oiWIDIwOjQx77yM6KGo56S65LuK5aSpDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVQYXJ0cyA9IHRpbWVUZXh0LnNwbGl0KCc6Jyk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGhv",
        "dXJzID0gcGFyc2VJbnQodGltZVBhcnRzWzBdKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWludXRlcyA9IHBhcnNlSW50KHRpbWVQYXJ0c1sxXSk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlY29uZHMgPSB0aW1lUGFydHNbMl0gPyBwYXJzZUludCh0aW1lUGFydHNbMl0pIDogMDsNCg0KICAgICAgICAgICAgICAgICAgICB0YXJnZXREYXRlID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIG5vdy5nZXRNb250aCgpLCBub3cuZ2V0RGF0ZSgpLCBob3VycywgbWludXRlcywgc2Vjb25kcyk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5pe26Ze05Zyo5pyq5p2l77yM6K+05piO5piv5pio5aSp55qEDQogICAgICAgICAgICAgICAgICAgIGlmICh0YXJnZXREYXRlID4gbm93KSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXREYXRlLnNldERhdGUodGFyZ2V0RGF0ZS5nZXREYXRlKCkgLSAxKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWFtuS7luagvOW8j++8jOWwneivleebtOaOpeino+aekA0KICAgICAgICAgICAgICAgICAgICB0YXJnZXREYXRlID0gbmV3IERhdGUodGltZVRleHQpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoaXNOYU4odGFyZ2V0RGF0ZS5nZXRUaW1lKCkpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5peg5rOV6Kej5p6Q5pe26Ze05qC85byPJywgeyB0aW1lVGV4dCB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgdGltZXN0YW1wID0gdGFyZ2V0RGF0ZS5nZXRUaW1lKCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muino+aekOS8muivneaXtumXtCcsIHsNCiAgICAgICAgICAgICAgICAgICAgdGltZVRleHQsDQogICAgICAgICAgICAgICAgICAgIHBhcnNlZERhdGU6IHRhcmdldERhdGUudG9Mb2NhbGVTdHJpbmcoKSwNCiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gdGltZXN0YW1wOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muino+aekOS8muivneaXtumXtOWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgdGltZVRleHQ6IHRpbWVFbGVtZW50Py50ZXh0Q29udGVudCwNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog",
        "5qOA5p+l55So5oi35piv5ZCm5Zyo5omr5o+P5pe26Ze06IyD5Zu05YaFDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSB1c2VySW5mbyDnlKjmiLfkv6Hmga8NCiAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IHNjYW5EYXlzIOaJq+aPj+WkqeaVsA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5Zyo6IyD5Zu05YaFDQogICAgICAgICAqLw0KICAgICAgICBpc1VzZXJJblNjYW5SYW5nZSh1c2VySW5mbywgc2NhbkRheXMpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCF1c2VySW5mby5sYXN0QWN0aXZpdHlUaW1lKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOayoeacieaXtumXtOS/oeaBr++8jOm7mOiupOWMheWQq+WcqOaJq+aPj+iMg+WbtOWGhQ0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8mueUqOaIt+aXoOaXtumXtOS/oeaBr++8jOm7mOiupOWMheWQqycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzY2FuVGltZSA9IHNjYW5EYXlzICogMjQgKiA2MCAqIDYwICogMTAwMDsgLy8g6L2s5o2i5Li65q+r56eSDQogICAgICAgICAgICAgICAgY29uc3QgdGltZVNpbmNlTGFzdEFjdGl2aXR5ID0gbm93IC0gdXNlckluZm8ubGFzdEFjdGl2aXR5VGltZTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IGluUmFuZ2UgPSB0aW1lU2luY2VMYXN0QWN0aXZpdHkgPD0gc2NhblRpbWU7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muajgOafpeeUqOaIt+aXtumXtOiMg+WbtCcsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICB0aW1lVGV4dDogdXNlckluZm8udGltZVRleHQsDQogICAgICAgICAgICAgICAgICAgIGxhc3RBY3Rpdml0eTogbmV3IERhdGUodXNlckluZm8ubGFzdEFjdGl2aXR5VGltZSkudG9Mb2NhbGVTdHJpbmcoKSwNCiAgICAgICAgICAgICAgICAgICAgZGF5c1NpbmNlOiBNYXRoLnJvdW5kKHRpbWVTaW5jZUxhc3RBY3Rpdml0eSAvICgyNCAqIDYwICogNjAgKiAxMDAwKSAqIDEwKSAvIDEwLA0KICAgICAgICAgICAgICAgICAgICBzY2FuRGF5cywNCiAgICAgICAgICAgICAgICAgICAgaW5SYW5nZQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGluUmFuZ2U7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5qOA5p+l5pe26Ze06IyD5Zu05aSx6LSl",
        "JywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsgLy8g5Ye66ZSZ5pe26buY6K6k5YyF5ZCrDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWPkemAgeWbnuiuv+a2iOaBryAtIOWinuW8uuWuoui1hOeKtuaAgeajgOa1iw0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gdXNlciDnlKjmiLfkv6Hmga8NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRlbXBsYXRlIOivneacr+aooeadvw0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5Y+R6YCB5oiQ5YqfDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzZW5kRm9sbG93VXBNZXNzYWdlKHVzZXIsIHRlbXBsYXRlKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlvIDlp4vlj5HpgIHlm57orr/mtojmga8nLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZUxlbmd0aDogdGVtcGxhdGUubGVuZ3RoDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDwn5SnIOaWsOWinu+8muaJp+ihjOWbnuiuv+WJjeW8uuWItuajgOa1i+Wuoui1hOeKtuaAgQ0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrmiafooYzlm57orr/liY3mo4DmtYvlrqLotYTnirbmgIEnLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAvLyDkvb/nlKhBUEnkvJjlhYjnmoTlvILmraXlv6vpgJ/mo4Dmn6XnlZnlrqLotYTnirbmgIENCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaGFzTGVhZHNUYWcgPSBhd2FpdCB0aGlzLmNoZWNrVXNlckxlYWRzU3RhdHVzRmFzdEFzeW5jKHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlci51c2VySWQsDQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlci51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiB1c2VyLmNvbnZlcnNhdGlvbklkDQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChoYXNMZWFkc1RhZykgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfjq8g6L+957KJ566h55CG5Zmo77ya55So5oi35bey6I635b6X55WZ5a6i6LWE5qCH562+77yM6Lez6L+H5Zue6K6/5pON5L2cJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlci51c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgIOajgOa1i+aWueW8jzogJ0FQSeS8mOWFiOW8guatpeajgOa1iycNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmm7TmlrDnlKjmiLfnirbmgIHkuLrlt7LojrflvpfnlZnlrqLotYQNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkQ2FjaGUuaGFzKHVzZXIudXNlcklkKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlY29yZCA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5nZXQodXNlci51c2VySWQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZC5zdGF0dXMgPSAnbGVhZHNfYWNxdWlyZWQnOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZC5sZWFkc0FjcXVpcmVkVGltZSA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlLnNldCh1c2VyLnVzZXJJZCwgcmVjb3JkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIuc3luY1RvU3RvcmFnZUlmTmVlZGVkKCk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5bey5pu05paw55So5oi354q25oCB5Li65bey6I635b6X55WZ5a6i6LWEJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlci51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlm57liLDpobbpg6gNCiAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuc2Nyb2xsVG9Ub3AoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOyAvLyDov5Tlm550cnVl6KGo56S6IuaIkOWKnyLvvIjot7Pov4fkuobkuI3lv4XopoHnmoTlm57orr/vvIkNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlrqLotYTnirbmgIHmo4DmtYvlrozmiJDvvIznlKjmiLfmnKrojrflvpfnlZnlrqLotYTvvIznu6fnu63lm57orr/mtYHnqIsnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlci51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGxlYWRzQ2hlY2tFcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5a6i6LWE54q25oCB5qOA5rWL5aSx6LSl77yM57un57ut5Zue6K6/5rWB56iLJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXIudXNlck5hbWUsDQogICAgICAgICAgICAgICAg",
        "ICAgICAgICBlcnJvcjogbGVhZHNDaGVja0Vycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6aaW5YWI6ZyA6KaB5YiH5o2i5Yiw55uu5qCH5Lya6K+dDQogICAgICAgICAgICAgICAgY29uc3Qgc3dpdGNoZWQgPSBhd2FpdCB0aGlzLnN3aXRjaFRvQ29udmVyc2F0aW9uKHVzZXIuY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgIGlmICghc3dpdGNoZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrliIfmjaLkvJror53lpLHotKUnKTsNCiAgICAgICAgICAgICAgICAgICAgLy8g5Y2z5L2/5YiH5o2i5aSx6LSl5Lmf6KaB5Zue5Yiw6aG26YOoDQogICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuc2Nyb2xsVG9Ub3AoKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOetieW+heS8muivneWKoOi9vQ0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDIwMDApOw0KDQogICAgICAgICAgICAgICAgLy8g5Y+R6YCB5raI5oGvDQogICAgICAgICAgICAgICAgY29uc3Qgc2VudCA9IGF3YWl0IE1lc3NhZ2VQcm9jZXNzb3Iuc2VuZFJlcGx5KHRlbXBsYXRlKTsNCiAgICAgICAgICAgICAgICBpZiAoc2VudCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5Zue6K6/5raI5oGv5Y+R6YCB5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXIudXNlck5hbWUNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrlm57orr/mtojmga/lj5HpgIHlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlci51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDwn5SnIEJVR+S/ruWkje+8muaXoOiuuuWPkemAgeaIkOWKn+i/mOaYr+Wksei0pe+8jOmDveimgeWbnuWIsOmhtumDqO+8jOaWueS+v+WkhOeQhuaWsOa2iOaBrw0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuc2Nyb2xsVG9Ub3AoKTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBzZW50Ow0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muWPkemAgeWbnuiuv+a2iOaBr+Wksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXIudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAg",
        "Ly8g5Y2z5L2/5Ye66ZSZ5Lmf6KaB5Zue5Yiw6aG26YOoDQogICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5zY3JvbGxUb1RvcCgpOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5rua5Yqo5Zue5Yiw5Lya6K+d5YiX6KGo6aG26YOoDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgc2Nyb2xsVG9Ub3AoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlvIDlp4vmu5rliqjlm57liLDliJfooajpobbpg6guLi4nKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHNjcm9sbGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNoYXQtbGlzdC1ib3ggLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyJyk7DQogICAgICAgICAgICAgICAgaWYgKCFzY3JvbGxlcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5pyq5om+5Yiw5rua5Yqo5a655Zmo77yM5peg5rOV5Zue5Yiw6aG26YOoJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmu5rliqjliLDpobbpg6gNCiAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgPSAwOw0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDMwMCk7IC8vIOetieW+hea7muWKqOWujOaIkA0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW3suWbnuWIsOWIl+ihqOmhtumDqCcpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muWbnuWIsOmhtumDqOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIh+aNouWIsOaMh+WumuS8muivne+8iOiZmuaLn+a7muWKqOWFvOWuueeJiO+8iQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5Lya6K+dSUQNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuWIh+aNouaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgc3dpdGNoVG9Db252ZXJzYXRpb24oY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW8gOWni+WIh+aNouS8muivnScsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8gMS4g5riQ6L+b5byP5p+l",
        "5om+55uu5qCH5Lya6K+d5YWD57Sg77yI6Jma5ouf5rua5Yqo5YW85a6577yJDQogICAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IGF3YWl0IHRoaXMuZmluZENvbnZlcnNhdGlvbkVsZW1lbnRXaXRoVmlydHVhbFNjcm9sbChjb252ZXJzYXRpb25JZCk7DQogICAgICAgICAgICAgICAgaWYgKCF0YXJnZXRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5pyq5om+5Yiw55uu5qCH5Lya6K+d5YWD57SgJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIDIuIOehruS/neWFg+e0oOa/gOa0u+WSjOWPr+inge+8iOiZmuaLn+a7muWKqOWFvOWuue+8iQ0KICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2YXRlZCA9IGF3YWl0IHRoaXMuZW5zdXJlRWxlbWVudEFjdGl2YXRlZCh0YXJnZXRFbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAoIWFjdGl2YXRlZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaXoOazlea/gOa0u+ebruagh+S8muivneWFg+e0oCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyAzLiDmiafooYzngrnlh7vmk43kvZwNCiAgICAgICAgICAgICAgICBjb25zdCBjbGlja2VkID0gVXRpbHMuc2ltdWxhdGVDbGljayh0YXJnZXRFbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAoIWNsaWNrZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrngrnlh7vkvJror53lhYPntKDlpLHotKUnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrmiJDlip/liIfmjaLliLDkvJror50nLCB7DQogICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muWIh+aNouS8muivneWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udmVy",
        "c2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiZmuaLn+a7muWKqOWFvOWuueeahOS8muivneWFg+e0oOafpeaJvu+8iOS8mOWMlueJiO+8iQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5Lya6K+dSUQNCiAgICAgICAgICogQHJldHVybnMge0VsZW1lbnR8bnVsbH0g5om+5Yiw55qE5Lya6K+d5YWD57SgDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBmaW5kQ29udmVyc2F0aW9uRWxlbWVudFdpdGhWaXJ0dWFsU2Nyb2xsKGNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5byA5aeL6Jma5ouf5rua5Yqo5YW85a655p+l5om+Jywgew0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDnrZbnlaUx77ya5rua5Yqo5p+l5om+562W55Wl77yI5Li76KaB562W55Wl77yJDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW8gOWni+a7muWKqOafpeaJvuetlueVpScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNjcm9sbEZvdW5kRWxlbWVudCA9IGF3YWl0IHRoaXMuZmluZFVzZXJCeVNjcm9sbGluZyhjb252ZXJzYXRpb25JZCk7DQogICAgICAgICAgICAgICAgaWYgKHNjcm9sbEZvdW5kRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5rua5Yqo5p+l5om+5oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBzY3JvbGxGb3VuZEVsZW1lbnQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g562W55WlMu+8muaZuuiDveaQnOe0ouacuuWItu+8iOWkh+eUqOetlueVpe+8iQ0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajvvJrmu5rliqjmn6Xmib7lpLHotKXvvIzlsJ3or5Xmmbrog73mkJzntKLmnLrliLYnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzZWFyY2hGb3VuZEVsZW1lbnQgPSBhd2FpdCB0aGlzLnNlYXJjaEFuZEZpbmRFbGVtZW50KGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICBpZiAoc2VhcmNoRm91bmRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrmmbrog73mkJzntKLmiJDlip8nKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNlYXJjaEZvdW5kRWxlbWVudDsNCiAg",
        "ICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaJgOacieafpeaJvuetlueVpemDveWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya6Jma5ouf5rua5Yqo5YW85a655p+l5om+5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpgJrov4fmu5rliqjmn6Xmib7nlKjmiLfvvIjln7rkuo5jb252ZXJzYXRpb25JZO+8iS0g5pm66IO95YyW5pS56L+b54mIDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb252ZXJzYXRpb25JZCDkvJror51JRA0KICAgICAgICAgKiBAcmV0dXJucyB7RWxlbWVudHxudWxsfSDmib7liLDnmoTlhYPntKANCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGZpbmRVc2VyQnlTY3JvbGxpbmcoY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW8gOWni+aZuuiDvea7muWKqOafpeaJvicsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5q2l6aqkMTog6I635Y+W5rua5Yqo5a655ZmoIC0g5pSv5oyB5aSa56eN6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgY29uc3QgcG9zc2libGVTZWxlY3RvcnMgPSBbDQogICAgICAgICAgICAgICAgICAgICcuZC1jb2xsYXBzZS1jb250ZW50LXdyYXBwZXI6bm90KFtzdHlsZSo9Im1heC1oZWlnaHQ6IDBweCJdKSAudnVlLXJlY3ljbGUtc2Nyb2xsZXIuc2Nyb2xsZXInLA0KICAgICAgICAgICAgICAgICAgICAnLmNoYXQtbGlzdC1ib3ggLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyJywNCiAgICAgICAgICAgICAgICAgICAgJy52dWUtcmVjeWNsZS1zY3JvbGxlci5zY3JvbGxlcicsDQogICAgICAgICAgICAgICAgICAgICcudnVlLXJlY3ljbGUtc2Nyb2xsZXInDQogICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgIGxldCBzY3JvbGxlciA9IG51bGw7DQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiBw",
        "b3NzaWJsZVNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5om+5Yiw5rua5Yqo5a655ZmoJywgeyBzZWxlY3RvciB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKCFzY3JvbGxlcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaJvuS4jeWIsOa0u+WKqOeahOa7muWKqOWuueWZqO+8jOivt+ehruS/nSLlhajpg6jkvJror50i5YiX6KGo5bey57uP5bGV5byAJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOatpemqpDI6IOaZuuiDveafpeaJvuWHveaVsCAtIOWinuW8uuWFg+e0oOWPr+ingeaAp+ajgOa1iw0KICAgICAgICAgICAgICAgIGNvbnN0IGZpbmRUYXJnZXRFbGVtZW50U21hcnQgPSAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1zID0gc2Nyb2xsZXIucXVlcnlTZWxlY3RvckFsbCgnLnN4LWNvbnRhY3QtaXRlbScpOw0KICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaXRlbXMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLmRhdGFzZXQ/LmtleSA9PT0gY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlhYPntKDmmK/lkKblnKhET03lm57mlLbnirbmgIHvvIh0cmFuc2xhdGVZKC05OTk5cHgp77yJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaXRlbVZpZXcgPSBpdGVtLmNsb3Nlc3QoJy52dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3Jyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW1WaWV3KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybSA9IGl0ZW1WaWV3LnN0eWxlLnRyYW5zZm9ybTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRyYW5zZm9ybSAmJiB0cmFuc2Zvcm0uaW5jbHVkZXMoJ3RyYW5zbGF0ZVkoLTk5OTlweCknKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmo4DmtYvliLDlhYPntKDlnKhET03lm57mlLbnirbmgIHvvIzot7Pov4cnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNv",
        "bnRpbnVlOyAvLyDlhYPntKDooqvlm57mlLbvvIzot7Pov4cNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuecn+ato+WPr+ingQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlY3QgPSBpdGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lclJlY3QgPSBzY3JvbGxlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1Zpc2libGUgPSByZWN0LnRvcCA+PSBjb250YWluZXJSZWN0LnRvcCAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWN0LmJvdHRvbSA8PSBjb250YWluZXJSZWN0LmJvdHRvbSAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWN0LmhlaWdodCA+IDA7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzVmlzaWJsZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWFg+e0oOS4jeWcqOWPr+ingeWMuuWfn++8jOi3s+i/hycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5pm66IO95rua5Yqo5p+l5om+5oiQ5Yqf5om+5Yiw55uu5qCH5YWD57SgJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmu5rliqjliLDlhYPntKDkvb/lhbblrozlhajlj6/op4HlubblsYXkuK3mmL7npLoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ2NlbnRlcicgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgLy8g5q2l6aqkMzog6K6w5b2V5Y6f5aeL5rua5Yqo5L2N572uDQogICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxTY3JvbGxUb3AgPSBzY3JvbGxlci5zY3JvbGxUb3A7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrorrDlvZXljp/lp4vmu5rliqjkvY3nva4nLCB7IG9yaWdpbmFsU2Nyb2xsVG9wIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5q2l6aqkNDog6aaW5YWI5Zue5Yiw6aG26YOo6YeN5paw5byA5aeL5p+l5om+77yI6Kej5Yaz",
        "55So5oi35Zyo5LiL5pa555qE6Zeu6aKY77yJDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlm57liLDpobbpg6jph43mlrDlvIDlp4vmn6Xmib4uLi4nKTsNCiAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgPSAwOw0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDMwMCk7IC8vIOetieW+hea7muWKqOWujOaIkA0KDQogICAgICAgICAgICAgICAgLy8g5LuO6aG26YOo5byA5aeL5p+l5om+DQogICAgICAgICAgICAgICAgbGV0IGZvdW5kRWxlbWVudCA9IGZpbmRUYXJnZXRFbGVtZW50U21hcnQoKTsNCiAgICAgICAgICAgICAgICBpZiAoZm91bmRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlnKjpobbpg6jljLrln5/mib7liLDnm67moIflhYPntKAnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZvdW5kRWxlbWVudDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmraXpqqQ1OiDmmbrog73mu5rliqjkuLvlvqrnjq8gLSDlop7lvLrph43or5XmnLrliLYNCiAgICAgICAgICAgICAgICBsZXQgbGFzdFNjcm9sbFRvcCA9IC0xOw0KICAgICAgICAgICAgICAgIGNvbnN0IFNDUk9MTF9ERUxBWV9NUyA9IDI1MDsgLy8g5aKe5Yqg562J5b6F5pe26Ze056Gu5L+dRE9N5riy5p+TDQogICAgICAgICAgICAgICAgY29uc3QgTUFYX1NDUk9MTF9BVFRFTVBUUyA9IDUwOyAvLyDmnIDlpKfmu5rliqjmrKHmlbDvvIzpgb/lhY3ml6DpmZDmu5rliqgNCiAgICAgICAgICAgICAgICBsZXQgc2Nyb2xsQXR0ZW1wdHMgPSAwOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlvIDlp4vku47pobbpg6jmu5rliqjmn6Xmib4uLi4nKTsNCiAgICAgICAgICAgICAgICB3aGlsZSAoc2Nyb2xsZXIuc2Nyb2xsVG9wICE9PSBsYXN0U2Nyb2xsVG9wICYmIHNjcm9sbEF0dGVtcHRzIDwgTUFYX1NDUk9MTF9BVFRFTVBUUykgew0KICAgICAgICAgICAgICAgICAgICBsYXN0U2Nyb2xsVG9wID0gc2Nyb2xsZXIuc2Nyb2xsVG9wOw0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxBdHRlbXB0cysrOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWQkeS4i+a7muWKqOS4gOS4quWxj+W5leeahOmrmOW6pg0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgKz0gc2Nyb2xsZXIuY2xpZW50SGVpZ2h0Ow0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYOi/veeyieeuoeeQhuWZqO+8muWQkeS4i+a7muWKqOS4gOWxjyAoJHtzY3JvbGxBdHRlbXB0c30vJHtNQVhfU0NST0xMX0FUVEVNUFRTfSkgKOW9k+WJjeS9jee9rjogJHtNYXRoLnJvdW5kKHNjcm9sbGVyLnNjcm9sbFRvcCl9cHgpYCk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g562J5b6F5paw5YaF5a655riy5p+TDQogICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0",
        "aWxzLmRlbGF5KFNDUk9MTF9ERUxBWV9NUyk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5Zyo5paw5riy5p+T55qE5bGP5bmV5YaF5a655Lit5pm66IO95p+l5om+DQogICAgICAgICAgICAgICAgICAgIGZvdW5kRWxlbWVudCA9IGZpbmRUYXJnZXRFbGVtZW50U21hcnQoKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGZvdW5kRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8mua7muWKqOafpeaJvuaIkOWKn++8jOW3suWBnOatoua7muWKqCcsIHsgc2Nyb2xsQXR0ZW1wdHMgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZm91bmRFbGVtZW50Ow0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5bey5Yiw6L6+5bqV6YOoDQogICAgICAgICAgICAgICAgICAgIGlmIChzY3JvbGxlci5zY3JvbGxUb3AgKyBzY3JvbGxlci5jbGllbnRIZWlnaHQgPj0gc2Nyb2xsZXIuc2Nyb2xsSGVpZ2h0IC0gMTApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5bey5rua5Yqo5Yiw5bqV6YOoJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDliLDovr7lupXpg6jlkI7mnIDlkI7mo4Dmn6XkuIDmrKENCiAgICAgICAgICAgICAgICAgICAgICAgIGZvdW5kRWxlbWVudCA9IGZpbmRUYXJnZXRFbGVtZW50U21hcnQoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmb3VuZEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5bqV6YOo5p+l5om+5oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZvdW5kRWxlbWVudDsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8muacquaJvuWIsOebruagh+eUqOaIt++8jOWwneivleaBouWkjeWOn+Wni+a7muWKqOS9jee9ricpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOaBouWkjeWIsOWOn+Wni+a7muWKqOS9jee9rg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjcm9sbGVyLnNjcm9sbFRvcCA9IG9yaWdpbmFsU2Nyb2xsVG9wOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDIwMCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenOi+vuWIsOacgOWkp+a7muWKqOasoeaVsOmZkOWItg0KICAgICAgICAgICAgICAgIGlmIChzY3JvbGxBdHRlbXB0cyA+PSBNQVhfU0NST0xMX0FUVEVNUFRTKSB7DQogICAgICAgICAgICAgICAgICAg",
        "IExvZ2dlci53YXJuKGDov73nsonnrqHnkIblmajvvJrovr7liLDmnIDlpKfmu5rliqjmrKHmlbDpmZDliLYgKCR7TUFYX1NDUk9MTF9BVFRFTVBUU30p77yM5YGc5q2i5p+l5om+YCk7DQogICAgICAgICAgICAgICAgICAgIC8vIOaBouWkjeWIsOWOn+Wni+a7muWKqOS9jee9rg0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgPSBvcmlnaW5hbFNjcm9sbFRvcDsNCiAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMjAwKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaZuuiDvea7muWKqOafpeaJvuWksei0pe+8muacquaJvuWIsOebruagh+eUqOaItycsIHsNCiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsQXR0ZW1wdHMsDQogICAgICAgICAgICAgICAgICAgIG9yaWdpbmFsU2Nyb2xsVG9wLA0KICAgICAgICAgICAgICAgICAgICBmaW5hbFNjcm9sbFRvcDogc2Nyb2xsZXIuc2Nyb2xsVG9wLA0KICAgICAgICAgICAgICAgICAgICBzdWdnZXN0aW9uOiAn6K+35qOA5p+lY29udmVyc2F0aW9uSWTmmK/lkKbmraPnoa7vvIzmiJbnlKjmiLfmmK/lkKblt7Lnprvnur8nDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrmmbrog73mu5rliqjmn6Xmib7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmmbrog73mkJzntKLmnLrliLbvvJrpgJrov4fmkJzntKLlip/og73mn6Xmib7nm67moIfnlKjmiLcNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIOS8muivnUlEDQogICAgICAgICAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9IOaJvuWIsOeahOWFg+e0oA0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgc2VhcmNoQW5kRmluZEVsZW1lbnQoY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW8gOWni+aZuuiDveaQnOe0ouacuuWIticsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8gMS4g5LuOY29udmVyc2F0aW9uSWTkuK3mj5Dlj5bnlKjmiLdJRA0KICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IHRoaXMuZXh0cmFjdFVzZXJJZEZyb21Db252ZXJzYXRpb25JZChjb252ZXJzYXRpb25JZCk7DQogICAgICAgICAgICAgICAgaWYgKCF1c2VySWQpIHsNCiAgICAgICAg",
        "ICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8muaXoOazleS7jmNvbnZlcnNhdGlvbklk5o+Q5Y+W55So5oi3SUQnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muaPkOWPluWIsOeUqOaIt0lEJywgeyB1c2VySWQgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyAyLiDmn6Xmib7mkJzntKLmoYYNCiAgICAgICAgICAgICAgICBjb25zdCBzZWFyY2hJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2gtdG9wIC5kLWlucHV0IGlucHV0W3R5cGU9InRleHQiXScpOw0KICAgICAgICAgICAgICAgIGlmICghc2VhcmNoSW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8muacquaJvuWIsOaQnOe0ouahhicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyAzLiDmuIXnqbrmkJzntKLmoYblubbovpPlhaXnlKjmiLdJRA0KICAgICAgICAgICAgICAgIHNlYXJjaElucHV0LnZhbHVlID0gJyc7DQogICAgICAgICAgICAgICAgc2VhcmNoSW5wdXQuZm9jdXMoKTsNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgyMDApOw0KDQogICAgICAgICAgICAgICAgLy8g5qih5ouf6L6T5YWl55So5oi3SUQNCiAgICAgICAgICAgICAgICBzZWFyY2hJbnB1dC52YWx1ZSA9IHVzZXJJZDsNCg0KICAgICAgICAgICAgICAgIC8vIOinpuWPkWlucHV05LqL5Lu2DQogICAgICAgICAgICAgICAgY29uc3QgaW5wdXRFdmVudCA9IG5ldyBFdmVudCgnaW5wdXQnLCB7IGJ1YmJsZXM6IHRydWUgfSk7DQogICAgICAgICAgICAgICAgc2VhcmNoSW5wdXQuZGlzcGF0Y2hFdmVudChpbnB1dEV2ZW50KTsNCg0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDEwMDApOyAvLyDnrYnlvoXmkJzntKLnu5PmnpwNCg0KICAgICAgICAgICAgICAgIC8vIDQuIOafpeaJvuaQnOe0oue7k+aenOWIl+ihqA0KICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnVzZXItbGlzdCcpOw0KICAgICAgICAgICAgICAgIGlmICghdXNlckxpc3QpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8muacquaJvuWIsOaQnOe0oue7k+aenOWIl+ihqCcpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyA1LiDmn6Xmib7ljLnphY3nmoTmkJzntKLnu5PmnpzpobkNCiAgICAgICAgICAg",
        "ICAgICBjb25zdCBzZWFyY2hJdGVtcyA9IHVzZXJMaXN0LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zZWFyY2gtY29udGFjdC1pdGVtJyk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmib7liLDmkJzntKLnu5PmnpwnLCB7IGNvdW50OiBzZWFyY2hJdGVtcy5sZW5ndGggfSk7DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2Ygc2VhcmNoSXRlbXMpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g54K55Ye75pCc57Si57uT5p6c6aG5DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsaWNrZWQgPSBVdGlscy5zaW11bGF0ZUNsaWNrKGl0ZW0pOw0KICAgICAgICAgICAgICAgICAgICBpZiAoY2xpY2tlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8mueCueWHu+aQnOe0oue7k+aenOaIkOWKnycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMTUwMCk7IC8vIOetieW+hemhtemdouWKoOi9vQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyA2LiDmn6Xmib7mv4DmtLvlkI7nmoTkvJror53lhYPntKANCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2YXRlZEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBbZGF0YS1rZXk9IiR7Y29udmVyc2F0aW9uSWR9Il1gKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhY3RpdmF0ZWRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muaZuuiDveaQnOe0ouaIkOWKn+aJvuWIsOebruagh+WFg+e0oCcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhY3RpdmF0ZWRFbGVtZW50Ow0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmsqHmib7liLDnsr7noa7ljLnphY3vvIzmn6Xmib7lvZPliY3mtLvot4PnmoTkvJror53lhYPntKANCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2ZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3gtY29udGFjdC1pdGVtLmFjdGl2ZSwgLmNvbnRhY3QtaXRlbS5hY3RpdmUnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhY3RpdmVFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muaZuuiDveaQnOe0ouaJvuWIsOa0u+i3g+S8muivneWFg+e0oCcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhY3RpdmVFbGVtZW50Ow0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8muaZuuiDveaQnOe0ouacquaJvuWIsOWMuemFjee7k+aenCcp",
        "Ow0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaZuuiDveaQnOe0ouWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7jmNvbnZlcnNhdGlvbklk5Lit5o+Q5Y+W55So5oi3SUQNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIOS8muivnUlEDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd8bnVsbH0g55So5oi3SUQNCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RVc2VySWRGcm9tQ29udmVyc2F0aW9uSWQ6IGZ1bmN0aW9uKGNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOWkhOeQhuagvOW8j++8mlRvdGFsLTViZjc2YzRkY2ZhYTJlMDAwMTRhM2RjMyAtPiA1YmY3NmM0ZGNmYWEyZTAwMDE0YTNkYzMNCiAgICAgICAgICAgICAgICBpZiAoY29udmVyc2F0aW9uSWQuaW5jbHVkZXMoJy0nKSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXJ0cyA9IGNvbnZlcnNhdGlvbklkLnNwbGl0KCctJyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPj0gMikgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gcGFydHNbcGFydHMubGVuZ3RoIC0gMV07IC8vIOWPluacgOWQjuS4gOmDqOWIhg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHVzZXJJZC5sZW5ndGggPj0gMjApIHsgLy8g55So5oi3SUTpgJrluLjmr5TovoPplb8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdXNlcklkOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5aSE55CG5qC85byP77yaQWN0aXZlLTYwMS4uLiAtPiDlsJ3or5Xmj5Dlj5bmlbDlrZfpg6jliIYNCiAgICAgICAgICAgICAgICBjb25zdCBudW1iZXJNYXRjaCA9IGNvbnZlcnNhdGlvbklkLm1hdGNoKC8oXHd7MjAsfSkvKTsNCiAgICAgICAgICAgICAgICBpZiAobnVtYmVyTWF0Y2gpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bWJlck1hdGNoWzFdOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenGNvbnZlcnNhdGlvbklk5pys6Lqr5bCx5piv55So5oi3SUTmoLzlvI8NCiAgICAgICAgICAgICAgICBpZiAoY29udmVyc2F0aW9uSWQubGVuZ3RoID49IDIwICYmICFjb252ZXJzYXRpb25JZC5pbmNsdWRlcygnLScpKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBjb252ZXJzYXRpb25JZDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1",
        "cm4gbnVsbDsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmj5Dlj5bnlKjmiLdJROWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCg0KDQoNCg0KICAgICAgICAvKioNCiAgICAgICAgICog56Gu5L+d5YWD57Sg5r+A5rS75ZKM5Y+v6KeB77yI6Jma5ouf5rua5Yqo5YW85a6554mI77yJDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDnm67moIflhYPntKANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgZW5zdXJlRWxlbWVudEFjdGl2YXRlZChlbGVtZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5byA5aeL5YWD57Sg5r+A5rS75qOA5p+lJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlhYPntKDmmK/lkKblt7Lnu4/lj6/op4ENCiAgICAgICAgICAgICAgICBpZiAoRWxlbWVudE1hbmFnZXIuaXNFbGVtZW50VmlzaWJsZShlbGVtZW50KSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWFg+e0oOW3suWPr+ingScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDojrflj5blhYPntKDnmoQgY29udmVyc2F0aW9uSWQg55So5LqO6Jma5ouf5rua5Yqo5aSE55CGDQogICAgICAgICAgICAgICAgY29uc3QgY29udmVyc2F0aW9uSWQgPSBlbGVtZW50LmRhdGFzZXQ/LmtleTsNCiAgICAgICAgICAgICAgICBpZiAoIWNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajvvJrlhYPntKDnvLrlsJEgZGF0YS1rZXnvvIzlsJ3or5Xln7rnoYDmv4DmtLvmlrnms5UnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuYmFzaWNFbGVtZW50QWN0aXZhdGlvbihlbGVtZW50KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkvb/nlKjomZrmi5/mu5rliqjlhbzlrrnnmoTmv4DmtLvmlrnms5UNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muS9v+eUqOiZmuaLn+a7muWKqOWFvOWuuea/gOa0u+aWueazlScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2YXRlZEVsZW1lbnQgPSBhd2FpdCB0aGlzLmFjdGl2YXRlRWxlbWVudFdpdGhWaXJ0dWFsU2Nyb2xsKGVsZW1lbnQsIGNvbnZlcnNhdGlvbklkKTsNCg0KICAgICAgICAgICAgICAgIGlmIChhY3RpdmF0ZWRFbGVtZW50ICYmIEVsZW1lbnRNYW5hZ2VyLmlzRWxlbWVudFZpc2libGUoYWN0aXZhdGVkRWxlbWVudCkpIHsNCiAg",
        "ICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muiZmuaLn+a7muWKqOa/gOa0u+aIkOWKnycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya6Jma5ouf5rua5Yqo5r+A5rS75aSx6LSl77yM5bCd6K+V5Z+656GA5pa55rOVJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmJhc2ljRWxlbWVudEFjdGl2YXRpb24oZWxlbWVudCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5YWD57Sg5r+A5rS75Ye66ZSZJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiZmuaLn+a7muWKqOWFvOWuueeahOWFg+e0oOa/gOa0u+aWueazlQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQg55uu5qCH5YWD57SgDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb252ZXJzYXRpb25JZCDkvJror51JRA0KICAgICAgICAgKiBAcmV0dXJucyB7RWxlbWVudHxudWxsfSDmv4DmtLvlkI7nmoTlhYPntKANCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGFjdGl2YXRlRWxlbWVudFdpdGhWaXJ0dWFsU2Nyb2xsKGVsZW1lbnQsIGNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOiOt+WPlua7muWKqOWuueWZqCAtIOaUr+aMgeWkmuenjemAieaLqeWZqA0KICAgICAgICAgICAgICAgIGNvbnN0IHBvc3NpYmxlU2VsZWN0b3JzID0gWw0KICAgICAgICAgICAgICAgICAgICAnLmQtY29sbGFwc2UtY29udGVudC13cmFwcGVyOm5vdChbc3R5bGUqPSJtYXgtaGVpZ2h0OiAwcHgiXSkgLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyLnNjcm9sbGVyJywNCiAgICAgICAgICAgICAgICAgICAgJy5jaGF0LWxpc3QtYm94IC52dWUtcmVjeWNsZS1zY3JvbGxlcicsDQogICAgICAgICAgICAgICAgICAgICcudnVlLXJlY3ljbGUtc2Nyb2xsZXIuc2Nyb2xsZXInLA0KICAgICAgICAgICAgICAgICAgICAnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyJw0KICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICBsZXQgc2Nyb2xsZXIgPSBudWxsOw0KICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2VsZWN0b3Igb2YgcG9zc2libGVTZWxlY3RvcnMpIHsNCiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHNjcm9sbGVyKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veey",
        "ieeuoeeQhuWZqO+8muaJvuWIsOiZmuaLn+a7muWKqOWuueWZqCcsIHsgc2VsZWN0b3IgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICghc2Nyb2xsZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmnKrmib7liLDomZrmi5/mu5rliqjlrrnlmajvvIzkvb/nlKjln7rnoYDmlrnms5UnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pm66IO95p+l5om+5ZKM5r+A5rS75Ye95pWwIC0g5aKe5by65YWD57Sg5Y+v6KeB5oCn5qOA5rWLDQogICAgICAgICAgICAgICAgY29uc3QgZmluZEFuZEFjdGl2YXRlRWxlbWVudFNtYXJ0ID0gKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBpdGVtcyA9IHNjcm9sbGVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zeC1jb250YWN0LWl0ZW0nKTsNCiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGl0ZW1zKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5kYXRhc2V0Py5rZXkgPT09IGNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5YWD57Sg5piv5ZCm5ZyoRE9N5Zue5pS254q25oCB77yIdHJhbnNsYXRlWSgtOTk5OXB4Ke+8iQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1WaWV3ID0gaXRlbS5jbG9zZXN0KCcudnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0tdmlldycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtVmlldykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm0gPSBpdGVtVmlldy5zdHlsZS50cmFuc2Zvcm07DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0cmFuc2Zvcm0gJiYgdHJhbnNmb3JtLmluY2x1ZGVzKCd0cmFuc2xhdGVZKC05OTk5cHgpJykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5qOA5rWL5Yiw5YWD57Sg5ZyoRE9N5Zue5pS254q25oCB77yM6ZyA6KaB5rua5Yqo5r+A5rS7Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsgLy8g6ZyA6KaB57un57ut5rua5YqoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlhYPntKDmmK/lkKbnnJ/mraPlj6/op4ENCiAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZWN0ID0gaXRlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb250YWluZXJSZWN0ID0gc2Nyb2xsZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNWaXNpYmxlID0gcmVjdC50b3AgPj0gY29udGFpbmVyUmVjdC50b3AgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjdC5ib3R0b20gPD0gY29udGFpbmVyUmVjdC5ib3R0b20gJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjdC5oZWlnaHQgPiAwOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1Zpc2libGUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlhYPntKDkuI3lnKjlj6/op4HljLrln5/vvIzpnIDopoHmu5rliqjmv4DmtLsnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5rua5Yqo5Yiw5YWD57Sg5L2/5YW25a6M5YWo5Y+v6KeB5bm25bGF5Lit5pi+56S6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5zY3JvbGxJbnRvVmlldyh7IGJlaGF2aW9yOiAnc21vb3RoJywgYmxvY2s6ICdjZW50ZXInIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5pm66IO95r+A5rS75om+5Yiw5bm25rua5Yqo5Yiw55uu5qCH5YWD57SgJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW07DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIC8vIOiusOW9leWOn+Wni+a7muWKqOS9jee9rg0KICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsU2Nyb2xsVG9wID0gc2Nyb2xsZXIuc2Nyb2xsVG9wOw0KDQogICAgICAgICAgICAgICAgLy8g6aaW5YWI5bCd6K+V5Zyo5b2T5YmN6KeG5Zu+5Lit5p+l5om+DQogICAgICAgICAgICAgICAgbGV0IGFjdGl2YXRlZEVsZW1lbnQgPSBmaW5kQW5kQWN0aXZhdGVFbGVtZW50U21hcnQoKTsNCiAgICAgICAgICAgICAgICBpZiAoYWN0aXZhdGVkRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgzMDApOyAvLyDnrYnlvoXmu5rliqjlrozmiJANCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFjdGl2YXRlZEVsZW1lbnQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5b2T5YmN6KeG5Zu+",
        "5Lit5rKh5pyJ77yM6L+b6KGM5pm66IO95rua5Yqo5p+l5om+DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlvZPliY3op4blm77mnKrmib7liLDvvIzlvIDlp4vmmbrog73mu5rliqjmn6Xmib4nKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWFiOWbnuWIsOmhtumDqOmHjeaWsOW8gOWni+afpeaJvg0KICAgICAgICAgICAgICAgIHNjcm9sbGVyLnNjcm9sbFRvcCA9IDA7DQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMzAwKTsNCg0KICAgICAgICAgICAgICAgIC8vIOS7jumhtumDqOW8gOWni+afpeaJvg0KICAgICAgICAgICAgICAgIGFjdGl2YXRlZEVsZW1lbnQgPSBmaW5kQW5kQWN0aXZhdGVFbGVtZW50U21hcnQoKTsNCiAgICAgICAgICAgICAgICBpZiAoYWN0aXZhdGVkRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8mumhtumDqOWMuuWfn+a/gOa0u+aIkOWKnycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gYWN0aXZhdGVkRWxlbWVudDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmmbrog73mu5rliqjkuLvlvqrnjq8NCiAgICAgICAgICAgICAgICBsZXQgbGFzdFNjcm9sbFRvcCA9IC0xOw0KICAgICAgICAgICAgICAgIGNvbnN0IFNDUk9MTF9ERUxBWV9NUyA9IDI1MDsNCiAgICAgICAgICAgICAgICBjb25zdCBNQVhfU0NST0xMX0FUVEVNUFRTID0gMjA7IC8vIOmZkOWItua7muWKqOasoeaVsA0KICAgICAgICAgICAgICAgIGxldCBzY3JvbGxBdHRlbXB0cyA9IDA7DQoNCiAgICAgICAgICAgICAgICB3aGlsZSAoc2Nyb2xsZXIuc2Nyb2xsVG9wICE9PSBsYXN0U2Nyb2xsVG9wICYmIHNjcm9sbEF0dGVtcHRzIDwgTUFYX1NDUk9MTF9BVFRFTVBUUykgew0KICAgICAgICAgICAgICAgICAgICBsYXN0U2Nyb2xsVG9wID0gc2Nyb2xsZXIuc2Nyb2xsVG9wOw0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxBdHRlbXB0cysrOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWQkeS4i+a7muWKqOS4gOS4quWxj+W5leeahOmrmOW6pg0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgKz0gc2Nyb2xsZXIuY2xpZW50SGVpZ2h0Ow0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYOi/veeyieeuoeeQhuWZqO+8muaZuuiDvea/gOa0u+a7muWKqCAoJHtzY3JvbGxBdHRlbXB0c30vJHtNQVhfU0NST0xMX0FUVEVNUFRTfSlgKTsNCg0KICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheShTQ1JPTExfREVMQVlfTVMpOyAvLyDnrYnlvoXmuLLmn5MNCg0KICAgICAgICAgICAgICAgICAgICAvLyDmn6Xmib7nm67moIflhYPntKANCiAgICAgICAgICAgICAgICAgICAgYWN0aXZhdGVkRWxlbWVudCA9IGZpbmRBbmRBY3RpdmF0ZUVsZW1lbnRTbWFydCgpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aXZhdGVkRWxlbWVudCkgew0K",
        "ICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmmbrog73mu5rliqjmv4DmtLvmiJDlip8nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDMwMCk7IC8vIOetieW+hea7muWKqOWujOaIkA0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFjdGl2YXRlZEVsZW1lbnQ7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbliLDovr7lupXpg6gNCiAgICAgICAgICAgICAgICAgICAgaWYgKHNjcm9sbGVyLnNjcm9sbFRvcCArIHNjcm9sbGVyLmNsaWVudEhlaWdodCA+PSBzY3JvbGxlci5zY3JvbGxIZWlnaHQgLSAxMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmmbrog73mv4DmtLvlt7Lmu5rliqjliLDlupXpg6gnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOacgOWQjuajgOafpeS4gOasoQ0KICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZhdGVkRWxlbWVudCA9IGZpbmRBbmRBY3RpdmF0ZUVsZW1lbnRTbWFydCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFjdGl2YXRlZEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYWN0aXZhdGVkRWxlbWVudDsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5pyq5om+5Yiw77yM5oGi5aSN5Y6f5aeL5rua5Yqo5L2N572uDQogICAgICAgICAgICAgICAgaWYgKCFhY3RpdmF0ZWRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajvvJrmmbrog73mu5rliqjmv4DmtLvmnKrmib7liLDnm67moIflhYPntKDvvIzmgaLlpI3ljp/lp4vkvY3nva4nKTsNCiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsZXIuc2Nyb2xsVG9wID0gb3JpZ2luYWxTY3JvbGxUb3A7DQogICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDIwMCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJromZrmi5/mu5rliqjmv4DmtLvlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDln7rnoYDlhYPntKDmv4DmtLvmlrnms5XvvIjpmY3nuqfmlrnmoYjvvIkNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOebruagh+WFg+e0oA0KICAgICAgICAg",
        "KiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5oiQ5YqfDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBiYXNpY0VsZW1lbnRBY3RpdmF0aW9uKGVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrkvb/nlKjln7rnoYDmv4DmtLvmlrnms5UnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWwneivleS9v+eUqCBFbGVtZW50TWFuYWdlciDnmoTkuJPkuJrmv4DmtLvmlrnms5UNCiAgICAgICAgICAgICAgICBjb25zdCBhY3RpdmF0ZWQgPSBhd2FpdCBFbGVtZW50TWFuYWdlci5maW5kQW5kQWN0aXZhdGVFbGVtZW50KGVsZW1lbnQsIHsNCiAgICAgICAgICAgICAgICAgICAgd2FpdEZvclN0YWJpbGl0eTogZmFsc2UsDQogICAgICAgICAgICAgICAgICAgIG1heFJldHJpZXM6IDMNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIGlmIChhY3RpdmF0ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJpFbGVtZW50TWFuYWdlciDmv4DmtLvmiJDlip8nKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5LiT5Lia5pa55rOV5aSx6LSl77yM5L2/55So566A5Y2V5rua5YqoDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlsJ3or5XnroDljZXmu5rliqjmv4DmtLsnKTsNCiAgICAgICAgICAgICAgICBlbGVtZW50LnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ2NlbnRlcicgfSk7DQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoNTAwKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IEVsZW1lbnRNYW5hZ2VyLmlzRWxlbWVudFZpc2libGUoZWxlbWVudCk7DQogICAgICAgICAgICAgICAgaWYgKGlzVmlzaWJsZSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8mueugOWNlea7muWKqOa/gOa0u+aIkOWKnycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5omA5pyJ5r+A5rS75pa55rOV6YO95aSx6LSlJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrln7rnoYDmv4DmtLvmlrnms5XlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAg",
        "ICAgICAgICog5omL5Yqo6Kem5Y+R5Zue6K6/5qOA5p+l77yI5LiT5rOo5LqO5Zue6K6/546w5pyJ55So5oi377yM5LiN6L+b6KGM5omr5o+P77yJDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyB0cmlnZ2VyRm9sbG93VXBDaGVjaygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muaJi+WKqOinpuWPkeeri+WNs+WbnuiuvycpOw0KDQogICAgICAgICAgICAgICAgLy8g55u05o6l6I635Y+W546w5pyJ55qE5b6F5Zue6K6/55So5oi377yM5LiN6L+b6KGM5omr5o+PDQogICAgICAgICAgICAgICAgY29uc3QgcGVuZGluZ1VzZXJzID0gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLmdldFBlbmRpbmdVc2VycygpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrojrflj5bliLDlvoXlm57orr/nlKjmiLcnLCB7DQogICAgICAgICAgICAgICAgICAgIGNvdW50OiBwZW5kaW5nVXNlcnMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICB1c2VyczogcGVuZGluZ1VzZXJzLm1hcCh1ID0+ICh7DQogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB1LnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBDb3VudDogdS5mb2xsb3dVcENvdW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgZGF5c1NpbmNlRmlyc3Q6IHUuZmlyc3RDb250YWN0ID8gTWF0aC5yb3VuZCgoRGF0ZS5ub3coKSAtIHUuZmlyc3RDb250YWN0KSAvICgyNCAqIDYwICogNjAgKiAxMDAwKSAqIDEwKSAvIDEwIDogJ04vQScNCiAgICAgICAgICAgICAgICAgICAgfSkpDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBpZiAocGVuZGluZ1VzZXJzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5peg5b6F5Zue6K6/55So5oi3Jyk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5pyJ55So5oi36K6w5b2V5L2G6YO95LiN56ym5ZCI5Zue6K6/5p2h5Lu2DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsUmVjb3JkcyA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZSA/IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5zaXplIDogMDsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRvdGFsUmVjb3JkcyA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrmnInnlKjmiLforrDlvZXkvYbml6DlvoXlm57orr/nlKjmiLcnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxSZWNvcmRzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwRW5hYmxlZDogQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwRW5hYmxlZCcsIGZhbHNlKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2FuRGF5czog",
        "Q29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwU2NhbkRheXMnLCAzKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbEhvdXJzOiBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBJbnRlcnZhbCcsIDI0KQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5peg55So5oi36K6w5b2V77yM6K+35YWI5omn6KGMIuaZuuiDveaJq+aPj+eUqOaItyInKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5omL5Yqo5omn6KGM5Zue6K6/77yI5b+955Wl5pe26Ze06ZmQ5Yi277yJDQogICAgICAgICAgICAgICAgY29uc3QgbWFudWFsQmF0Y2hTaXplID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwTWFudWFsQmF0Y2hTaXplJywgMjApOyAvLyDmiYvliqjmqKHlvI/lpITnkIbmm7TlpJrnlKjmiLcNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHVzZXIgb2YgcGVuZGluZ1VzZXJzLnNsaWNlKDAsIG1hbnVhbEJhdGNoU2l6ZSkpIHsgLy8g5Y+v6YWN572u55qE5om56YeP5aSn5bCPDQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5byA5aeL5omL5Yqo5Zue6K6/55So5oi3Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwQ291bnQ6IHVzZXIuZm9sbG93VXBDb3VudA0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOiOt+WPluivneacr+aooeadvw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGUgPSBGb2xsb3dVcFNjaGVkdWxlci5nZXRGb2xsb3dVcFRlbXBsYXRlKHVzZXIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0ZW1wbGF0ZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya6I635Y+W6K+d5pyv5qih5p2/5aSx6LSlJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWPkemAgeWbnuiuv+a2iOaBrw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3VjY2VzcyA9IGF3YWl0IHRoaXMuc2VuZEZvbGxvd1VwTWVzc2FnZSh1c2VyLCB0ZW1wbGF0ZSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOiusOW9leWbnuiuv+e7k+aenA0KICAgICAgICAgICAgICAgICAgICAgICAgRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZEZvbGxv",
        "d1VwKA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIudXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXIudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlci5jb252ZXJzYXRpb25JZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzDQogICAgICAgICAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5omL5Yqo5Zue6K6/5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3MNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmt7vliqDlu7bov58NCiAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDIwMDApOw0KDQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaJi+WKqOWbnuiuv+eUqOaIt+Wksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlci51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5omL5Yqo5Zue6K6/5qOA5p+l5a6M5oiQJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDlm57orr/lrozmiJDlkI7vvIzmu5rliqjlm57liLDliJfooajpobbpg6jvvIzmlrnkvr/lpITnkIbmlrDmtojmga8NCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzY3JvbGxlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5kLWNvbGxhcHNlLWNvbnRlbnQtd3JhcHBlcjpub3QoW3N0eWxlKj0ibWF4LWhlaWdodDogMHB4Il0pIC52dWUtcmVjeWNsZS1zY3JvbGxlci5zY3JvbGxlcicpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlm57orr/lrozmiJDvvIzmraPlnKjmu5rliqjlm57liLDliJfooajpobbpg6guLi4nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHNjcm9sbGVyLnNjcm9sbFRvcCA9IDA7DQogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgzMDApOyAvLyDnrYnlvoXmu5rliqjlrozmiJANCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHn",
        "kIblmajvvJrlt7Llm57liLDliJfooajpobbpg6jvvIzlh4blpIflpITnkIbmlrDmtojmga8nKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKHNjcm9sbEVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajvvJrmu5rliqjlm57pobbpg6jlpLHotKUnLCB7IGVycm9yOiBzY3JvbGxFcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaJi+WKqOWbnuiuv+WujOaIkOWQju+8jOWIt+aWsFVJ5pi+56S6DQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBVSU1hbmFnZXIgIT09ICd1bmRlZmluZWQnICYmIFVJTWFuYWdlci5yZW5kZXJGb2xsb3dVcExpc3QpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFVJTWFuYWdlci5yZW5kZXJGb2xsb3dVcExpc3QoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5omL5Yqo5Zue6K6/5ZCO5bey5Yi35paw6L+957KJ5ZCN5Y2VVUknKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIFVJTWFuYWdlciAhPT0gJ3VuZGVmaW5lZCcgJiYgVUlNYW5hZ2VyLnVwZGF0ZUZvbGxvd1VwU3RhdHMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIFVJTWFuYWdlci51cGRhdGVGb2xsb3dVcFN0YXRzKCk7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muaJi+WKqOWbnuiuv+WQjuW3suWIt+aWsOe7n+iuoeS/oeaBrycpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBjYXRjaCAodWlFcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaJi+WKqOWbnuiuv+WQjuWIt+aWsFVJ5aSx6LSlJywgeyBlcnJvcjogdWlFcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaJi+WKqOWbnuiuv+ajgOafpeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPlui/veeyieWKn+iDveeKtuaAgQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDnirbmgIHkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIGdldFN0YXR1cygpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgaXNJbml0aWFsaXplZDogdGhpcy5pc0luaXRpYWxpemVkLA0KICAgICAgICAgICAgICAgIGlzRW5hYmxlZDogQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwRW5hYmxlZCcsIGZhbHNlKSwNCiAgICAgICAgICAg",
        "ICAgICBzY2hlZHVsZXI6IEZvbGxvd1VwU2NoZWR1bGVyLmdldFN0YXR1cygpLA0KICAgICAgICAgICAgICAgIHJlY29yZHM6IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5nZXRTdGF0cygpDQogICAgICAgICAgICB9Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmmbrog73lhYPntKDlj6/op4HmgKfmo4DmtYsgLSDlop7lvLrniYgNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOebruagh+WFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm55yf5q2j5Y+v6KeBDQogICAgICAgICAqLw0KICAgICAgICBpc0VsZW1lbnRUcnVseVZpc2libGUoZWxlbWVudCkgew0KICAgICAgICAgICAgaWYgKCFlbGVtZW50KSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuiiq+enu+WKqOWIsOWbnuaUtuS9jee9rg0KICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1WaWV3ID0gZWxlbWVudC5jbG9zZXN0KCcudnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0tdmlldycpOw0KICAgICAgICAgICAgICAgIGlmIChpdGVtVmlldykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm0gPSBpdGVtVmlldy5zdHlsZS50cmFuc2Zvcm07DQogICAgICAgICAgICAgICAgICAgIGlmICh0cmFuc2Zvcm0gJiYgdHJhbnNmb3JtLmluY2x1ZGVzKCd0cmFuc2xhdGVZKC05OTk5cHgpJykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5YWD57Sg5ZyoRE9N5Zue5pS254q25oCBJywgeyB0cmFuc2Zvcm0gfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlhYPntKDmmK/lkKblnKjop4blj6PlhoUNCiAgICAgICAgICAgICAgICBjb25zdCByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWluZXJSZWN0ID0gZWxlbWVudC5jbG9zZXN0KCcudnVlLXJlY3ljbGUtc2Nyb2xsZXInKT8uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7DQoNCiAgICAgICAgICAgICAgICBpZiAoY29udGFpbmVyUmVjdCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1Zpc2libGUgPSByZWN0LnRvcCA+PSBjb250YWluZXJSZWN0LnRvcCAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjdC5ib3R0b20gPD0gY29udGFpbmVyUmVjdC5ib3R0b20gJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY3QuaGVpZ2h0ID4gMCAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjdC53aWR0aCA+IDA7DQoNCiAgICAgICAgICAgICAg",
        "ICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlhYPntKDlj6/op4HmgKfmo4DmtYsnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBpc1Zpc2libGUsDQogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50UmVjdDogew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogcmVjdC50b3AsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiByZWN0LmJvdHRvbSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiByZWN0LndpZHRoDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyUmVjdDogew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogY29udGFpbmVyUmVjdC50b3AsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm90dG9tOiBjb250YWluZXJSZWN0LmJvdHRvbQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNWaXNpYmxlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWfuuehgOWPr+ingeaAp+ajgOa1iw0KICAgICAgICAgICAgICAgIHJldHVybiByZWN0LmhlaWdodCA+IDAgJiYgcmVjdC53aWR0aCA+IDA7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrlhYPntKDlj6/op4HmgKfmo4DmtYvlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5a6e5pe25a6i6LWE54q25oCB5pu05paw5ZKM5pel5b+X6K6w5b2VDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VySWQg55So5oi3SUQNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGhhc0xlYWRzVGFnIOaYr+WQpuacieeVmeWuoui1hOagh+etvg0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc291cmNlIOajgOa1i+adpea6kA0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlTGVhZHNTdGF0dXNXaXRoTG9nZ2luZyh1c2VySWQsIHVzZXJOYW1lLCBoYXNMZWFkc1RhZywgc291cmNlID0gJ3Vua25vd24nKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOeVmeWuoui1hOeKtuaAgee8k+WtmA0KICAgICAgICAgICAgICAgIGlmIChMZWFkc1N0YXR1c01hbmFnZXIgJiYgTGVhZHNTdGF0dXNNYW5hZ2VyLnVwZGF0ZUxlYWRzU3RhdHVzKSB7DQogICAgICAgICAgICAgICAgICAgIExlYWRzU3RhdHVzTWFuYWdlci51cGRhdGVMZWFk",
        "c1N0YXR1cyh1c2VySWQsIGhhc0xlYWRzVGFnLCBzb3VyY2UpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenOeUqOaIt+W3suiOt+W+l+eVmeWuoui1hO+8jOabtOaWsOi/veeyieiusOW9leeKtuaAgQ0KICAgICAgICAgICAgICAgIGlmIChoYXNMZWFkc1RhZyAmJiBGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkQ2FjaGUuaGFzKHVzZXJJZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVjb3JkID0gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlLmdldCh1c2VySWQpOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCB3YXNOb3RMZWFkcyA9IHJlY29yZC5zdGF0dXMgIT09ICdsZWFkc19hY3F1aXJlZCc7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKHdhc05vdExlYWRzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZWNvcmQuc3RhdHVzID0gJ2xlYWRzX2FjcXVpcmVkJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZC5sZWFkc0FjcXVpcmVkVGltZSA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkQ2FjaGUuc2V0KHVzZXJJZCwgcmVjb3JkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5zeW5jVG9TdG9yYWdlSWZOZWVkZWQoKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfjq8g6L+957KJ566h55CG5Zmo77ya55So5oi354q25oCB5bey5pu05paw5Li65bey6I635b6X55WZ5a6i6LWEJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNTdGF0dXM6IHJlY29yZC5zdGF0dXMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVhZHNBY3F1aXJlZFRpbWU6IG5ldyBEYXRlKHJlY29yZC5sZWFkc0FjcXVpcmVkVGltZSkudG9Mb2NhbGVTdHJpbmcoKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDorrDlvZXnirbmgIHlj5jmm7Tml6Xlv5cNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWuoui1hOeKtuaAgeabtOaWsOWujOaIkCcsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgaGFzTGVhZHNUYWcsDQogICAgICAgICAgICAgICAgICAgIHNvdXJjZSwNCiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBu",
        "ZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCkNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muWuoui1hOeKtuaAgeabtOaWsOWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIEFJ5Zue5aSN55Sf5oiQ5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBBSVJlcGx5R2VuZXJhdG9yID0gew0KICAgICAgICAvKioNCiAgICAgICAgICog55Sf5oiQQUnlm57lpI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJNZXNzYWdlIOeUqOaIt+a2iOaBrw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCNDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjb250ZXh0IOS4iuS4i+aWh+S/oeaBryAo5YyF5ZCrY29udmVyc2F0aW9uSWQsIGxlYWRzU3RhdHVz562JKQ0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmc+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgZ2VuZXJhdGVSZXBseSh1c2VyTWVzc2FnZSwgdXNlck5hbWUgPSAnJywgY29udGV4dCA9IHt9KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflvIDlp4vnlJ/miJBBSeWbnuWkjScsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VMZW5ndGg6IHVzZXJNZXNzYWdlLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgaGFzQ29udmVyc2F0aW9uSWQ6ICEhY29udGV4dC5jb252ZXJzYXRpb25JZA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g6I635Y+W5oiW5Yib5bu65Lya6K+dDQogICAgICAgICAgICAgICAgbGV0IGNoYXRJZCA9IG51bGw7DQogICAgICAgICAgICAgICAgaWYgKGNvbnRleHQuY29udmVyc2F0aW9uSWQgJiYgQ29uZmlnTWFuYWdlci5nZXQoJ3Nlc3Npb25NZW1vcnlFbmFibGVkJywgdHJ1ZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgY2hhdElkID0gQ2hhdFNlc3Npb25NYW5hZ2VyLmdldE9yQ3JlYXRlU2Vzc2lvbihjb250ZXh0LmNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfkvJror53orrDlv4bvvJrojrflj5ZjaGF0SWQnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udGV4dC5jb252ZXJzYXRpb25JZC5zdWJz",
        "dHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICBjaGF0SWQ6IGNoYXRJZC5zdWJzdHJpbmcoMCwgMjApICsgJy4uLicNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5p6E5bu66K+35rGC5Y+C5pWwDQogICAgICAgICAgICAgICAgY29uc3QgcmVxdWVzdERhdGEgPSB0aGlzLmJ1aWxkUmVxdWVzdERhdGEodXNlck1lc3NhZ2UsIHVzZXJOYW1lLCBjb250ZXh0LCBjaGF0SWQpOw0KDQogICAgICAgICAgICAgICAgLy8g5re75Yqg55WZ5a6i6LWE54q25oCB6LCD6K+V5pel5b+XDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfj7fvuI8g55WZ5a6i6LWE54q25oCB5Lyg6YCS6LCD6K+VJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgbGVhZHNTdGF0dXM6IGNvbnRleHQubGVhZHNTdGF0dXMsDQogICAgICAgICAgICAgICAgICAgIGhhc0NoYXRJZDogISFjaGF0SWQsDQogICAgICAgICAgICAgICAgICAgIOS8oOmAkuaWueW8jzogY2hhdElkID8gJ3ZhcmlhYmxlcy5sZWFkc1N0YXR1cycgOiAn57O757uf5o+Q56S66K+NJywNCiAgICAgICAgICAgICAgICAgICAgdmFyaWFibGVzOiByZXF1ZXN0RGF0YS52YXJpYWJsZXMsDQogICAgICAgICAgICAgICAgICAgIHN5c3RlbVByb21wdDogcmVxdWVzdERhdGEubWVzc2FnZXNbMF0/LmNvbnRlbnQ/LnN1YnN0cmluZygwLCAyMDApICsgJy4uLicNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOiwg+eUqEZhc3RHUFQgQVBJDQogICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNhbGxGYXN0R1BUQVBJKHJlcXVlc3REYXRhKTsNCg0KICAgICAgICAgICAgICAgIC8vIOino+aekOWTjeW6lA0KICAgICAgICAgICAgICAgIGNvbnN0IHJlcGx5ID0gdGhpcy5wYXJzZVJlc3BvbnNlKHJlc3BvbnNlKTsNCg0KICAgICAgICAgICAgICAgIGlmICghcmVwbHkpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBSeWbnuWkjeS4uuepuicpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOS8muivnea2iOaBr+iuoeaVsA0KICAgICAgICAgICAgICAgIGlmIChjb250ZXh0LmNvbnZlcnNhdGlvbklkICYmIGNoYXRJZCkgew0KICAgICAgICAgICAgICAgICAgICBDaGF0U2Vzc2lvbk1hbmFnZXIudXBkYXRlU2Vzc2lvbk1lc3NhZ2VDb3VudChjb250ZXh0LmNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygnQUnlm57lpI3nlJ/miJDmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgIHJlcGx5TGVuZ3RoOiByZXBseS5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIHByZXZpZXc6IHJlcGx5LnN1YnN0cmluZygwLCA1MCkgKyAnLi4uJywNCiAgICAgICAgICAgICAg",
        "ICAgICAgdXNlZENoYXRJZDogISFjaGF0SWQNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiByZXBseTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+eUn+aIkEFJ5Zue5aSN5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIHVzZXJNZXNzYWdlOiB1c2VyTWVzc2FnZS5zdWJzdHJpbmcoMCwgMTAwKQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g6L+U5Zue6buY6K6k5Zue5aSNDQogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0RGVmYXVsdFJlcGx5KCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaehOW7ukFQSeivt+axguaVsOaNrg0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck1lc3NhZ2Ug55So5oi35raI5oGvDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGNvbnRleHQg5LiK5LiL5paHDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjaGF0SWQg5Lya6K+dSUQNCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGJ1aWxkUmVxdWVzdERhdGEodXNlck1lc3NhZ2UsIHVzZXJOYW1lLCBjb250ZXh0LCBjaGF0SWQgPSBudWxsKSB7DQogICAgICAgICAgICBjb25zdCBzeXN0ZW1Qcm9tcHQgPSBDb25maWdNYW5hZ2VyLmdldCgnYXV0b1JlcGx5UHJvbXB0JykgfHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5hdXRvUmVwbHlQcm9tcHQ7DQoNCiAgICAgICAgICAgIC8vIOaehOW7uua2iOaBr+aVsOe7hA0KICAgICAgICAgICAgY29uc3QgbWVzc2FnZXMgPSBbXTsNCg0KICAgICAgICAgICAgLy8g5aaC5p6c5pyJY2hhdElk77yM5Y+q6ZyA6KaB5Lyg6YCS55So5oi35raI5oGv77yMRmFzdEdQVOS8muiHquWKqOWKoOi9veWOhuWPsg0KICAgICAgICAgICAgaWYgKGNoYXRJZCkgew0KICAgICAgICAgICAgICAgIG1lc3NhZ2VzLnB1c2goew0KICAgICAgICAgICAgICAgICAgICByb2xlOiAidXNlciIsDQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IHVzZXJNZXNzYWdlDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIC8vIOaXoGNoYXRJZOaXtuS9v+eUqOS8oOe7n+aWueW8j++8jOWMheWQq+ezu+e7n+aPkOekug0KICAgICAgICAgICAgICAgIG1lc3NhZ2VzLnB1c2goDQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJvbGU6ICJzeXN0ZW0iLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogc3lz",
        "dGVtUHJvbXB0DQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJvbGU6ICJ1c2VyIiwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IHVzZXJNZXNzYWdlDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5pyJ55So5oi35ZCN77yM5re75Yqg5Yiw57O757uf5o+Q56S65LitDQogICAgICAgICAgICAgICAgaWYgKHVzZXJOYW1lKSB7DQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VzWzBdLmNvbnRlbnQgKz0gYFxuXG7lvZPliY3nlKjmiLflkI3vvJoke3VzZXJOYW1lfWA7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5re75Yqg55WZ5a6i6LWE54q25oCB5L+h5oGvDQogICAgICAgICAgICAgICAgaWYgKGNvbnRleHQgJiYgdHlwZW9mIGNvbnRleHQubGVhZHNTdGF0dXMgPT09ICdib29sZWFuJykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXNUZXh0ID0gY29udGV4dC5sZWFkc1N0YXR1cyA/ICflt7LmoIforrDkuLrnlZnlrqLotYTnlKjmiLcnIDogJ+aZrumAmueUqOaItyc7DQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VzWzBdLmNvbnRlbnQgKz0gYFxuXG7nlKjmiLfnlZnlrqLotYTnirbmgIHvvJoke3N0YXR1c1RleHR9YDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOaehOW7uuivt+axguaVsOaNrg0KICAgICAgICAgICAgY29uc3QgcmVxdWVzdERhdGEgPSB7DQogICAgICAgICAgICAgICAgbWVzc2FnZXM6IG1lc3NhZ2VzLA0KICAgICAgICAgICAgICAgIHRlbXBlcmF0dXJlOiAwLjcsDQogICAgICAgICAgICAgICAgbWF4X3Rva2VuczogNTAwLA0KICAgICAgICAgICAgICAgIHN0cmVhbTogZmFsc2UNCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIC8vIOWmguaenOaciWNoYXRJZO+8jOa3u+WKoOWIsOivt+axguS4re+8iEZhc3RHUFTkvJrkvb/nlKhjaGF0SWTnrqHnkIbkuIrkuIvmlofvvIkNCiAgICAgICAgICAgIGlmIChjaGF0SWQpIHsNCiAgICAgICAgICAgICAgICByZXF1ZXN0RGF0YS5jaGF0SWQgPSBjaGF0SWQ7DQoNCiAgICAgICAgICAgICAgICAvLyDlr7nkuo7mnIljaGF0SWTnmoTor7fmsYLvvIzlj6/ku6XpgJrov4d2YXJpYWJsZXPkvKDpgJLpop3lpJbkuIrkuIvmlocNCiAgICAgICAgICAgICAgICBpZiAodXNlck5hbWUgfHwgKGNvbnRleHQgJiYgdHlwZW9mIGNvbnRleHQubGVhZHNTdGF0dXMgPT09ICdib29sZWFuJykpIHsNCiAgICAgICAgICAgICAgICAgICAgcmVxdWVzdERhdGEudmFyaWFibGVzID0ge307DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKHVzZXJOYW1lKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0RGF0YS52YXJpYWJsZXMudXNlck5hbWUgPSB1c2VyTmFtZTsNCiAgICAgICAgICAgICAgICAgICAg",
        "fQ0KDQogICAgICAgICAgICAgICAgICAgIGlmIChjb250ZXh0ICYmIHR5cGVvZiBjb250ZXh0LmxlYWRzU3RhdHVzID09PSAnYm9vbGVhbicpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3REYXRhLnZhcmlhYmxlcy5sZWFkc1N0YXR1cyA9IGNvbnRleHQubGVhZHNTdGF0dXMgPyAn5bey5qCH6K6w5Li655WZ5a6i6LWE55So5oi3JyA6ICfmma7pgJrnlKjmiLcnOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAvLyDml6BjaGF0SWTml7bkv53mjIHljp/mnInnmoRtb2RlbOWPguaVsO+8iOWFvOWuueaAp++8iQ0KICAgICAgICAgICAgICAgIHJlcXVlc3REYXRhLm1vZGVsID0gImdwdC0zLjUtdHVyYm8iOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gcmVxdWVzdERhdGE7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiwg+eUqEZhc3RHUFQgQVBJIC0g5aKe5by654mIDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSByZXF1ZXN0RGF0YSDor7fmsYLmlbDmja4NCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGNhbGxGYXN0R1BUQVBJKHJlcXVlc3REYXRhKSB7DQogICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gew0KICAgICAgICAgICAgICAgIGNvbnN0IGFwaUtleSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdhcGlLZXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhcGlVcmwgPSBDb25maWdNYW5hZ2VyLmdldCgnYXBpVXJsJykgfHwgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuYXBpVXJsOw0KDQogICAgICAgICAgICAgICAgaWYgKCFhcGlLZXkpIHsNCiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcignQVBJ5a+G6ZKl5pyq6YWN572uJykpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6K6w5b2V6K+35rGC5byA5aeL5pe26Ze0DQogICAgICAgICAgICAgICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5Y+R6YCBQVBJ6K+35rGCJywgew0KICAgICAgICAgICAgICAgICAgICB1cmw6IGFwaVVybCwNCiAgICAgICAgICAgICAgICAgICAgaGFzQXBpS2V5OiAhIWFwaUtleSwNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUNvdW50OiByZXF1ZXN0RGF0YS5tZXNzYWdlcy5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIG1vZGVsOiByZXF1ZXN0RGF0YS5tb2RlbCwNCiAgICAgICAgICAgICAgICAgICAgdGVtcGVyYXR1cmU6IHJlcXVlc3REYXRhLnRlbXBlcmF0dXJlDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDlop7lvLrnmoTor7fmsYLlpLQNCiAgICAgICAgICAgICAg",
        "ICBjb25zdCBoZWFkZXJzID0gew0KICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLA0KICAgICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHthcGlLZXl9YCwNCiAgICAgICAgICAgICAgICAgICAgJ1VzZXItQWdlbnQnOiAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMC4wLjAuMCBTYWZhcmkvNTM3LjM2JywNCiAgICAgICAgICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJywNCiAgICAgICAgICAgICAgICAgICAgJ0FjY2VwdC1MYW5ndWFnZSc6ICd6aC1DTix6aDtxPTAuOSxlbjtxPTAuOCcsDQogICAgICAgICAgICAgICAgICAgICdDYWNoZS1Db250cm9sJzogJ25vLWNhY2hlJywNCiAgICAgICAgICAgICAgICAgICAgJ1ByYWdtYSc6ICduby1jYWNoZScNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgR01feG1saHR0cFJlcXVlc3Qoew0KICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywNCiAgICAgICAgICAgICAgICAgICAgdXJsOiBhcGlVcmwsDQogICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IGhlYWRlcnMsDQogICAgICAgICAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHJlcXVlc3REYXRhKSwNCiAgICAgICAgICAgICAgICAgICAgdGltZW91dDogNDUwMDAsIC8vIOWinuWKoOi2heaXtuaXtumXtA0KICAgICAgICAgICAgICAgICAgICBvbmxvYWQ6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZVRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lOw0KDQogICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5pS25YiwQVBJ5ZON5bqUJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHJlc3BvbnNlLnN0YXR1cywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUaW1lOiByZXNwb25zZVRpbWUgKyAnbXMnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZUxlbmd0aDogcmVzcG9uc2UucmVzcG9uc2VUZXh0Lmxlbmd0aA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKHJlc3BvbnNlLnJlc3BvbnNlVGV4dCk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g6aqM6K+B5ZON5bqU5qC85byPDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZGF0YS5jaG9pY2VzIHx8ICFBcnJheS5pc0FycmF5",
        "KGRhdGEuY2hvaWNlcykgfHwgZGF0YS5jaG9pY2VzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdBUEnlk43lupTmoLzlvI/plJnor68nLCB7IGRhdGEgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCdBUEnlk43lupTmoLzlvI/plJnor6/vvJrnvLrlsJFjaG9pY2Vz5a2X5q61JykpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ0FQSeivt+axguaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUaW1lOiByZXNwb25zZVRpbWUgKyAnbXMnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hvaWNlc0NvdW50OiBkYXRhLmNob2ljZXMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNhZ2U6IGRhdGEudXNhZ2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g6K6w5b2V5oCn6IO95pWw5o2uDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuWEhTQXV0b1JlcGx5ICYmIHdpbmRvdy5YSFNBdXRvUmVwbHkucGVyZm9ybWFuY2UpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5YSFNBdXRvUmVwbHkucGVyZm9ybWFuY2UucmVjb3JkQVBJQ2FsbCh0cnVlLCByZXNwb25zZVRpbWUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYXRhKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDor6bnu4bnmoTplJnor6/lpITnkIYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGVycm9yTWVzc2FnZSA9IGBBUEnor7fmsYLlpLHotKU6ICR7cmVzcG9uc2Uuc3RhdHVzfWA7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBlcnJvckRldGFpbHMgPSB7fTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXJyb3JEYXRhID0gSlNPTi5wYXJzZShyZXNwb25zZS5yZXNwb25zZVRleHQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JEZXRhaWxzID0gZXJyb3JEYXRhOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYg",
        "KGVycm9yRGF0YS5lcnJvciAmJiBlcnJvckRhdGEuZXJyb3IubWVzc2FnZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yTWVzc2FnZSArPSBgIC0gJHtlcnJvckRhdGEuZXJyb3IubWVzc2FnZX1gOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvckRldGFpbHMucmF3UmVzcG9uc2UgPSByZXNwb25zZS5yZXNwb25zZVRleHQ7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ0FQSeivt+axguWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzVGV4dDogcmVzcG9uc2Uuc3RhdHVzVGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVGltZTogcmVzcG9uc2VUaW1lICsgJ21zJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yRGV0YWlscw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDorrDlvZXlpLHotKXnmoTmgKfog73mlbDmja4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5YSFNBdXRvUmVwbHkgJiYgd2luZG93LlhIU0F1dG9SZXBseS5wZXJmb3JtYW5jZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LlhIU0F1dG9SZXBseS5wZXJmb3JtYW5jZS5yZWNvcmRBUElDYWxsKGZhbHNlLCByZXNwb25zZVRpbWUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihlcnJvck1lc3NhZ2UpKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6Kej5p6QQVBJ5ZON5bqU5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUZXh0OiByZXNwb25zZS5yZXNwb25zZVRleHQuc3Vic3RyaW5nKDAsIDUwMCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCfop6PmnpBBUEnlk43lupTlpLHotKU6ICcgKyBlcnJvci5tZXNzYWdlKSk7DQogICAgICAgICAgICAgICAg",
        "ICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIG9uZXJyb3I6IGZ1bmN0aW9uKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZVRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdBUEnor7fmsYLnvZHnu5zplJnor68nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUaW1lOiByZXNwb25zZVRpbWUgKyAnbXMnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogYXBpVXJsDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6K6w5b2V5aSx6LSl55qE5oCn6IO95pWw5o2uDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAod2luZG93LlhIU0F1dG9SZXBseSAmJiB3aW5kb3cuWEhTQXV0b1JlcGx5LnBlcmZvcm1hbmNlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LlhIU0F1dG9SZXBseS5wZXJmb3JtYW5jZS5yZWNvcmRBUElDYWxsKGZhbHNlLCByZXNwb25zZVRpbWUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCfnvZHnu5zor7fmsYLlpLHotKXvvIzor7fmo4Dmn6XnvZHnu5zov57mjqXlkoxBUEnlnLDlnYAnKSk7DQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIG9udGltZW91dDogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZVRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdBUEnor7fmsYLotoXml7YnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZW91dDogNDUwMDAsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUaW1lOiByZXNwb25zZVRpbWUgKyAnbXMnDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6K6w5b2V5aSx6LSl55qE5oCn6IO95pWw5o2uDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAod2luZG93LlhIU0F1dG9SZXBseSAmJiB3aW5kb3cuWEhTQXV0b1JlcGx5LnBlcmZvcm1hbmNlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LlhIU0F1dG9SZXBseS5wZXJmb3JtYW5jZS5yZWNvcmRBUElDYWxsKGZhbHNlLCByZXNwb25zZVRpbWUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCfor7fmsYLotoXml7bvvIzor7fmo4Dmn6XnvZHnu5zov57mjqUnKSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KTsNCiAgICAg",
        "ICAgICAgIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDop6PmnpBBUEnlk43lupQNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHJlc3BvbnNlIEFQSeWTjeW6lA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBwYXJzZVJlc3BvbnNlKHJlc3BvbnNlKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2UgfHwgIXJlc3BvbnNlLmNob2ljZXMgfHwgcmVzcG9uc2UuY2hvaWNlcy5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdBUEnlk43lupTmoLzlvI/plJnor68nLCB7IHJlc3BvbnNlIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBjaG9pY2UgPSByZXNwb25zZS5jaG9pY2VzWzBdOw0KICAgICAgICAgICAgICAgIGlmICghY2hvaWNlLm1lc3NhZ2UgfHwgIWNob2ljZS5tZXNzYWdlLmNvbnRlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflk43lupTmtojmga/moLzlvI/plJnor68nLCB7IGNob2ljZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgY29udGVudCA9IGNob2ljZS5tZXNzYWdlLmNvbnRlbnQudHJpbSgpOw0KDQogICAgICAgICAgICAgICAgLy8g5Z+65pys5YaF5a656aqM6K+BDQogICAgICAgICAgICAgICAgaWYgKGNvbnRlbnQubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdBSeWbnuWkjeWGheWuueS4uuepuicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoY29udGVudC5sZW5ndGggPiAxMDAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdBSeWbnuWkjei/h+mVv++8jOi/m+ihjOaIquaWrScsIHsgb3JpZ2luYWxMZW5ndGg6IGNvbnRlbnQubGVuZ3RoIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29udGVudC5zdWJzdHJpbmcoMCwgMTAwMCkgKyAnLi4uJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gY29udGVudDsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+ino+aekOWTjeW6lOaXtuWPkeeUn+mUmeivrycsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPlum7mOiupOWbnuWkjQ0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0RGVmYXVsdFJl",
        "cGx5KCkgew0KICAgICAgICAgICAgY29uc3QgZGVmYXVsdFJlcGxpZXMgPSBbDQogICAgICAgICAgICAgICAgJ+aEn+iwouaCqOeahOa2iOaBr++8jOaIkeS8muWwveW/q+WbnuWkjeaCqOOAgicsDQogICAgICAgICAgICAgICAgJ+aCqOWlve+8jOaIkeW3suaUtuWIsOaCqOeahOa2iOaBr++8jOeojeWQjuS8muivpue7huWbnuWkjeOAgicsDQogICAgICAgICAgICAgICAgJ+iwouiwouaCqOeahOWFs+azqO+8jOaIkeS8muiupOecn+iAg+iZkeaCqOeahOW7uuiuruOAgicsDQogICAgICAgICAgICAgICAgJ+aUtuWIsOaCqOeahOa2iOaBr+S6hu+8jOiuqeaIkeS4uuaCqOafpeeci+S4gOS4i+OAgicNCiAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogZGVmYXVsdFJlcGxpZXMubGVuZ3RoKTsNCiAgICAgICAgICAgIHJldHVybiBkZWZhdWx0UmVwbGllc1tyYW5kb21JbmRleF07DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa1i+ivlUFQSei/nuaOpQ0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHRlc3RBUElDb25uZWN0aW9uKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5rWL6K+VQVBJ6L+e5o6lLi4uJyk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCB0ZXN0TWVzc2FnZSA9ICLkvaDlpb0iOw0KICAgICAgICAgICAgICAgIGNvbnN0IHJlcGx5ID0gYXdhaXQgdGhpcy5nZW5lcmF0ZVJlcGx5KHRlc3RNZXNzYWdlLCAi5rWL6K+V55So5oi3Iik7DQoNCiAgICAgICAgICAgICAgICBpZiAocmVwbHkgJiYgcmVwbHkgIT09IHRoaXMuZ2V0RGVmYXVsdFJlcGx5KCkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ0FQSei/nuaOpea1i+ivleaIkOWKnycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2FybignQVBJ6L+e5o6l5rWL6K+V5aSx6LSl77ya6L+U5Zue6buY6K6k5Zue5aSNJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcignQVBJ6L+e5o6l5rWL6K+V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDmmbrog73ph43or5XnrqHnkIblmaggLSDkuJPpl6jlpITnkIbomZrmi5/mu5rliqjnjq/looPkuIvnmoTph43or5XpgLvovpENCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09",
        "PT09PQ0KICAgIGNvbnN0IFNtYXJ0UmV0cnlNYW5hZ2VyID0gew0KICAgICAgICAvLyDph43or5XphY3nva4NCiAgICAgICAgbWF4UmV0cmllczogNSwNCiAgICAgICAgYmFzZURlbGF5OiA1MDAsDQogICAgICAgIG1heERlbGF5OiA1MDAwLA0KICAgICAgICBiYWNrb2ZmTXVsdGlwbGllcjogMS41LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDluKbmmbrog73ph43or5XnmoTlhYPntKDmk43kvZwgLSDkvJjljJbniYjvvIzpgb/lhY3ph43lpI3mv4DmtLsNCiAgICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gb3BlcmF0aW9uIOimgeaJp+ihjOeahOaTjeS9nA0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQg55uu5qCH5YWD57SgDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBvcGVyYXRpb25OYW1lIOaTjeS9nOWQjeensA0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyDpgInpobkNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGV4ZWN1dGVXaXRoUmV0cnkob3BlcmF0aW9uLCBlbGVtZW50LCBvcGVyYXRpb25OYW1lLCBvcHRpb25zID0ge30pIHsNCiAgICAgICAgICAgIGNvbnN0IG1heFJldHJpZXMgPSBvcHRpb25zLm1heFJldHJpZXMgfHwgdGhpcy5tYXhSZXRyaWVzOw0KICAgICAgICAgICAgY29uc3Qgc2tpcEVsZW1lbnRBY3RpdmF0aW9uID0gb3B0aW9ucy5za2lwRWxlbWVudEFjdGl2YXRpb24gfHwgZmFsc2U7DQogICAgICAgICAgICBsZXQgbGFzdEVycm9yID0gbnVsbDsNCiAgICAgICAgICAgIGxldCBlbGVtZW50QWN0aXZhdGVkID0gZmFsc2U7IC8vIOi3n+i4quWFg+e0oOaYr+WQpuW3sue7j+iiq+a/gOa0u+i/hw0KDQogICAgICAgICAgICBmb3IgKGxldCBhdHRlbXB0ID0gMDsgYXR0ZW1wdCA8IG1heFJldHJpZXM7IGF0dGVtcHQrKykgew0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zyhg5omn6KGM5pON5L2cOiAke29wZXJhdGlvbk5hbWV9ICjlsJ3or5UgJHthdHRlbXB0ICsgMX0vJHttYXhSZXRyaWVzfSlgLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBza2lwRWxlbWVudEFjdGl2YXRpb24sDQogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50QWN0aXZhdGVkDQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOaZuuiDveWFg+e0oOa/gOa0u++8muWPquWcqOmcgOimgeaXtua/gOa0u++8jOmBv+WFjemHjeWkjQ0KICAgICAgICAgICAgICAgICAgICBpZiAoIXNraXBFbGVtZW50QWN0aXZhdGlvbiAmJiBlbGVtZW50ICYmICFlbGVtZW50QWN0aXZhdGVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1Zpc2libGUgPSBFbGVtZW50TWFuYWdlci5pc0VsZW1lbnRWaXNpYmxlKGVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1Zpc2libGUpIHsNCiAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mmluasoeajgOa1i+WIsOWFg+e0oOS4jeWPr+inge+8jOWwneivlea/gOa0uycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2YXRlZCA9IGF3YWl0IEVsZW1lbnRNYW5hZ2VyLmZpbmRBbmRBY3RpdmF0ZUVsZW1lbnQoZWxlbWVudCwgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YWl0Rm9yU3RhYmlsaXR5OiBmYWxzZSwgLy8g6Lez6L+H56iz5a6a5oCn562J5b6F77yI5bey5Zyo5aSW5bGC5aSE55CG77yJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heFJldHJpZXM6IDIgLy8g5YeP5bCR5YaF6YOo6YeN6K+V5qyh5pWwDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWFjdGl2YXRlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+aXoOazlea/gOa0u+WFg+e0oCcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRBY3RpdmF0ZWQgPSB0cnVlOyAvLyDmoIforrDlt7Lmv4DmtLsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WFg+e0oOa/gOa0u+aIkOWKn++8jOWQjue7remHjeivleWwhui3s+i/h+a/gOa0uycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50QWN0aXZhdGVkID0gdHJ1ZTsgLy8g5YWD57Sg5bey5Y+v6KeB77yM5qCH6K6w5Li65bey5r+A5rS7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflhYPntKDlt7Llj6/op4HvvIzot7Pov4fmv4DmtLsnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIC8vIOaJp+ihjOaTjeS9nA0KICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBvcGVyYXRpb24oKTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0ICE9PSBmYWxzZSAmJiByZXN1bHQgIT09IG51bGwgJiYgcmVzdWx0ICE9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zyhg5pON5L2c5oiQ5YqfOiAke29wZXJhdGlvbk5hbWV9ICjlsJ3or5UgJHthdHRlbXB0ICsgMX0pYCk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Ow0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfmk43kvZzov5Tlm57lpLHotKXnu5PmnpwnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgbGFzdEVycm9yID0gZXJyb3I7DQogICAgICAg",
        "ICAgICAgICAgICAgIExvZ2dlci53YXJuKGDmk43kvZzlpLHotKU6ICR7b3BlcmF0aW9uTmFtZX0gKOWwneivlSAke2F0dGVtcHQgKyAxfS8ke21heFJldHJpZXN9KWAsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudEFjdGl2YXRlZA0KICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmmK/lhYPntKDmv4DmtLvnm7jlhbPnmoTplJnor6/vvIzph43nva7mv4DmtLvnirbmgIENCiAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ+a/gOa0uycpIHx8IGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ+WPr+ingScpIHx8IGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ+WFg+e0oCcpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50QWN0aXZhdGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+ajgOa1i+WIsOWFg+e0oOebuOWFs+mUmeivr++8jOmHjee9rua/gOa0u+eKtuaAgScpOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5LiN5piv5pyA5ZCO5LiA5qyh5bCd6K+V77yM562J5b6F5ZCO6YeN6K+VDQogICAgICAgICAgICAgICAgICAgIGlmIChhdHRlbXB0IDwgbWF4UmV0cmllcyAtIDEpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlbGF5ID0gTWF0aC5taW4oDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5iYXNlRGVsYXkgKiBNYXRoLnBvdyh0aGlzLmJhY2tvZmZNdWx0aXBsaWVyLCBhdHRlbXB0KSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1heERlbGF5DQogICAgICAgICAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYOetieW+hSAke2RlbGF5fW1zIOWQjumHjeivlWApOw0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoZGVsYXkpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlj6rlnKjlhYPntKDnm7jlhbPplJnor6/ml7bliLfmlrDlrrnlmagNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZWxlbWVudEFjdGl2YXRlZCAmJiBlbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfliLfmlrDlrrnlmajku6Xlh4blpIfph43or5UnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFbGVtZW50TWFuYWdlci5yZWZyZXNoKCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMTAwKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmVycm9yKGDmk43kvZzmnIDnu4jlpLHotKU6",
        "ICR7b3BlcmF0aW9uTmFtZX1gLCB7DQogICAgICAgICAgICAgICAgbWF4UmV0cmllcywNCiAgICAgICAgICAgICAgICBlbGVtZW50QWN0aXZhdGVkLA0KICAgICAgICAgICAgICAgIGxhc3RFcnJvcjogbGFzdEVycm9yPy5tZXNzYWdlDQogICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIHRocm93IGxhc3RFcnJvciB8fCBuZXcgRXJyb3IoYOaTjeS9nOWksei0pTogJHtvcGVyYXRpb25OYW1lfWApOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDluKbph43or5XnmoTngrnlh7vmk43kvZwNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOimgeeCueWHu+eahOWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGNsaWNrV2l0aFJldHJ5KGVsZW1lbnQpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLmV4ZWN1dGVXaXRoUmV0cnkoDQogICAgICAgICAgICAgICAgKCkgPT4gVXRpbHMuc2ltdWxhdGVDbGljayhlbGVtZW50KSwNCiAgICAgICAgICAgICAgICBlbGVtZW50LA0KICAgICAgICAgICAgICAgICfngrnlh7vlhYPntKAnDQogICAgICAgICAgICApOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDluKbph43or5XnmoTlhYPntKDmn6Xmib4NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHNlbGVjdG9yIOmAieaLqeWZqA0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IHBhcmVudCDniLblhYPntKANCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8RWxlbWVudD59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBmaW5kRWxlbWVudFdpdGhSZXRyeShzZWxlY3RvciwgcGFyZW50ID0gZG9jdW1lbnQpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLmV4ZWN1dGVXaXRoUmV0cnkoDQogICAgICAgICAgICAgICAgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcihzZWxlY3RvciwgcGFyZW50KTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFlbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYOWFg+e0oOacquaJvuWIsDogJHtzZWxlY3Rvcn1gKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudDsNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIG51bGwsDQogICAgICAgICAgICAgICAgYOafpeaJvuWFg+e0oDogJHtzZWxlY3Rvcn1gDQogICAgICAgICAgICApOw0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8gQVBJ6YeN6K+V566h55CG5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBBUElSZXRyeU1hbmFnZXIgPSB7DQogICAgICAgIG1heFJldHJpZXM6IDMsDQogICAgICAg",
        "IHJldHJ5RGVsYXk6IDEwMDAsDQogICAgICAgIGJhY2tvZmZNdWx0aXBsaWVyOiAyLA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDluKbph43or5XnmoRBUEnosIPnlKgNCiAgICAgICAgICogQHBhcmFtIHtGdW5jdGlvbn0gYXBpQ2FsbCBBUEnosIPnlKjlh73mlbANCiAgICAgICAgICogQHBhcmFtIHtBcnJheX0gYXJncyDlj4LmlbANCiAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IHJldHJ5Q291bnQg5b2T5YmN6YeN6K+V5qyh5pWwDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlfQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgY2FsbFdpdGhSZXRyeShhcGlDYWxsLCBhcmdzID0gW10sIHJldHJ5Q291bnQgPSAwKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBhcGlDYWxsLmFwcGx5KEFJUmVwbHlHZW5lcmF0b3IsIGFyZ3MpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBpZiAocmV0cnlDb3VudCA8IHRoaXMubWF4UmV0cmllcykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBkZWxheSA9IHRoaXMucmV0cnlEZWxheSAqIE1hdGgucG93KHRoaXMuYmFja29mZk11bHRpcGxpZXIsIHJldHJ5Q291bnQpOw0KDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKGBBUEnosIPnlKjlpLHotKXvvIwke2RlbGF5fW1z5ZCO6YeN6K+VYCwgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0cnlDb3VudDogcmV0cnlDb3VudCArIDEsDQogICAgICAgICAgICAgICAgICAgICAgICBtYXhSZXRyaWVzOiB0aGlzLm1heFJldHJpZXMsDQogICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheShkZWxheSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNhbGxXaXRoUmV0cnkoYXBpQ2FsbCwgYXJncywgcmV0cnlDb3VudCArIDEpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcignQVBJ6LCD55So6YeN6K+V5qyh5pWw5bey6L6+5LiK6ZmQJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgbWF4UmV0cmllczogdGhpcy5tYXhSZXRyaWVzLA0KICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHRocm93IGVycm9yOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOeUqOaIt+eVjOmdoueuoeeQhuWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgVUlNYW5hZ2VyID0gew0KICAgICAgICBwYW5lbDogbnVsbCwNCiAgICAgICAgbWlu",
        "aUZsb2F0OiBudWxsLA0KICAgICAgICBpc1Zpc2libGU6IGZhbHNlLA0KICAgICAgICBpc01pbmltaXplZDogZmFsc2UsDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIneWni+WMlueUqOaIt+eVjOmdog0KICAgICAgICAgKi8NCiAgICAgICAgaW5pdCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgdGhpcy5jcmVhdGVDb250cm9sUGFuZWwoKTsNCiAgICAgICAgICAgICAgICB0aGlzLmF0dGFjaEV2ZW50TGlzdGVuZXJzKCk7DQogICAgICAgICAgICAgICAgdGhpcy5sb2FkQ29uZmlnKCk7IC8vIOWKoOi9veaJgOaciemFjee9ruWMheaLrOaZuuiDveiOt+Wuouiuvue9rg0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlVUkoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0U3RhdHNVcGRhdGVUaW1lcigpOyAvLyDlkK/liqjnu5/orqHkv6Hmga/lrprmnJ/mm7TmlrANCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn55So5oi355WM6Z2i5Yid5aeL5YyW5a6M5oiQJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign55So5oi355WM6Z2i5Yid5aeL5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5ZCv5Yqo57uf6K6h5L+h5oGv5a6a5pyf5pu05paw5a6a5pe25ZmoDQogICAgICAgICAqLw0KICAgICAgICBzdGFydFN0YXRzVXBkYXRlVGltZXIoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOa4hemZpOeOsOacieWumuaXtuWZqA0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnN0YXRzVXBkYXRlVGltZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnN0YXRzVXBkYXRlVGltZXIpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOavjzMw56eS5pu05paw5LiA5qyh57uf6K6h5L+h5oGvDQogICAgICAgICAgICAgICAgdGhpcy5zdGF0c1VwZGF0ZVRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVGb2xsb3dVcFN0YXRzKCk7DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+Wumuacn+abtOaWsOe7n+iuoeS/oeaBr+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9LCAzMDAwMCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ1VJ566h55CG5Zmo77ya57uf6K6h5L+h5oGv5a6a5pyf5pu05paw5a6a5pe25Zmo5bey5ZCv5YqoJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJv",
        "cignVUnnrqHnkIblmajvvJrlkK/liqjnu5/orqHmm7TmlrDlrprml7blmajlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlgZzmraLnu5/orqHkv6Hmga/lrprmnJ/mm7TmlrDlrprml7blmagNCiAgICAgICAgICovDQogICAgICAgIHN0b3BTdGF0c1VwZGF0ZVRpbWVyKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5zdGF0c1VwZGF0ZVRpbWVyKSB7DQogICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5zdGF0c1VwZGF0ZVRpbWVyKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0c1VwZGF0ZVRpbWVyID0gbnVsbDsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCdVSeeuoeeQhuWZqO+8mue7n+iuoeS/oeaBr+Wumuacn+abtOaWsOWumuaXtuWZqOW3suWBnOatoicpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdVSeeuoeeQhuWZqO+8muWBnOatoue7n+iuoeabtOaWsOWumuaXtuWZqOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIm+W7uuaOp+WItumdouadvw0KICAgICAgICAgKi8NCiAgICAgICAgY3JlYXRlQ29udHJvbFBhbmVsKCkgew0KICAgICAgICAgICAgLy8g5re75YqgQ1NT5qC35byPDQogICAgICAgICAgICB0aGlzLmFkZFN0eWxlcygpOw0KDQogICAgICAgICAgICAvLyDliJvlu7rpnaLmnb/lrrnlmagNCiAgICAgICAgICAgIHRoaXMucGFuZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsNCiAgICAgICAgICAgIHRoaXMucGFuZWwuaWQgPSAneGhzLWFpLWNvbnRyb2wtcGFuZWwnOw0KICAgICAgICAgICAgdGhpcy5wYW5lbC5pbm5lckhUTUwgPSB0aGlzLmdldENvbnRyb2xQYW5lbEhUTUwoKTsNCg0KICAgICAgICAgICAgLy8g5re75Yqg5Yiw6aG16Z2iDQogICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMucGFuZWwpOw0KDQogICAgICAgICAgICAvLyDorr7nva7liJ3lp4vkvY3nva4NCiAgICAgICAgICAgIHRoaXMuc2V0SW5pdGlhbFBvc2l0aW9uKCk7DQoNCiAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuW6lOivpeS7peacgOWwj+WMlueKtuaAgeWQr+WKqA0KICAgICAgICAgICAgY29uc3Qgc2F2ZWRQb3NpdGlvbiA9IHRoaXMubG9hZFBhbmVsUG9zaXRpb24oKTsNCiAgICAgICAgICAgIGlmIChzYXZlZFBvc2l0aW9uICYmIHNhdmVkUG9zaXRpb24uaXNNaW5pbWl6ZWQpIHsNCiAgICAgICAgICAgICAgICAvLyDlu7bov5/mnIDlsI/ljJbvvIznoa7kv53pnaLmnb/lrozlhajliJ3lp4vljJYNCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAg",
        "ICAgICAgICAgICAgdGhpcy5taW5pbWl6ZVRvRmxvYXQoKTsNCiAgICAgICAgICAgICAgICB9LCAxMDApOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aOp+WItumdouadv+W3suWIm+W7uicpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmt7vliqBDU1PmoLflvI8NCiAgICAgICAgICovDQogICAgICAgIGFkZFN0eWxlcygpIHsNCiAgICAgICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgneGhzLWFpLXN0eWxlcycpKSByZXR1cm47DQoNCiAgICAgICAgICAgIGNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTsNCiAgICAgICAgICAgIHN0eWxlLmlkID0gJ3hocy1haS1zdHlsZXMnOw0KICAgICAgICAgICAgc3R5bGUudGV4dENvbnRlbnQgPSBgDQogICAgICAgICAgICAgICAgLyog5Li76Z2i5p2/5qC35byPICovDQogICAgICAgICAgICAgICAgI3hocy1haS1jb250cm9sLXBhbmVsIHsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgJ1NlZ29lIFVJJywgUm9ib3RvLCBzYW5zLXNlcmlmOw0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjNjY3ZWVhIDAlLCAjNzY0YmEyIDEwMCUpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwIDEwcHggMzBweCByZ2JhKDAsIDAsIDAsIDAuMyk7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4Ow0KICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMS40Ow0KICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgICAgICAgICAgICAgICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoMTBweCk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDpnaLmnb/lpLTpg6ggKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLXBhbmVsLWhlYWRlciB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTJweCAxNnB4Ow0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIHVzZXItc2VsZWN0OiBu",
        "b25lOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktcGFuZWwtdGl0bGUgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBnYXA6IDhweDsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktaWNvbiB7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXZlcnNpb24gew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDJweCA2cHg7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMXB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktcGFuZWwtY29udHJvbHMgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBnYXA6IDRweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDpnaLmnb/lhoXlrrkgKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLXBhbmVsLWNvbnRlbnQgew0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxNnB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA3MHZoOw0KICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdy15OiBhdXRvOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOeKtuaAgeWMuuWfnyAqLw0KICAgICAgICAgICAgICAgIC54aHMtYWktc3RhdHVzLXNlY3Rpb24gew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTJweDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTZweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXN0YXR1cy1pdGVtIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAg",
        "ICAgICAgLnhocy1haS1zdGF0dXMtaXRlbTpsYXN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXN0YXR1cy1sYWJlbCB7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7DQogICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuOTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXN0YXR1cy12YWx1ZSB7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3RhdHVzLWluZGljYXRvciB7DQogICAgICAgICAgICAgICAgICAgIHdpZHRoOiA4cHg7DQogICAgICAgICAgICAgICAgICAgIGhlaWdodDogOHB4Ow0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZjQ3NTc7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA4cHg7DQogICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogcHVsc2UgMnMgaW5maW5pdGU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1zdGF0dXMtaW5kaWNhdG9yLnJ1bm5pbmcgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMmVkNTczOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIEBrZXlmcmFtZXMgcHVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAwJSwgMTAwJSB7IG9wYWNpdHk6IDE7IH0NCiAgICAgICAgICAgICAgICAgICAgNTAlIHsgb3BhY2l0eTogMC41OyB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLyog5YWs5ZGK5Yy65Z+fICovDQogICAgICAgICAgICAgICAgLnhocy1haS1hbm5vdW5jZW1lbnQtc2VjdGlvbiB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4Ow0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNnB4Ow0KICAgICAgICAgICAgICAgICAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkICM2NjdlZWE7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1hbm5vdW5jZW1lbnQtaGVhZGVyIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA4cHg7DQogICAgICAgICAg",
        "ICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1hbm5vdW5jZW1lbnQtdGl0bGUgew0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYW5ub3VuY2VtZW50LWNvbnRlbnQgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMik7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWFubm91bmNlbWVudC1pdGVtIHsNCiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYW5ub3VuY2VtZW50LXRleHQgew0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxM3B4Ow0KICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMS40Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA2cHg7DQogICAgICAgICAgICAgICAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWFubm91bmNlbWVudC10aW1lIHsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KTsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMXB4Ow0KICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDlhazlkYrnsbvlnovmoLflvI8gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLWFubm91bmNlbWVudC1zZWN0aW9uLmluZm8gew0KICAgICAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogIzY2N2VlYTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWFubm91bmNlbWVudC1zZWN0aW9uLndhcm5pbmcgew0KICAgICAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogI2ZmYTUwMjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWFubm91bmNlbWVudC1zZWN0aW9uLmVycm9yIHsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6ICNmZjQ3NTc7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1hbm5vdW5jZW1lbnQtc2VjdGlvbi5zdWNjZXNzIHsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6ICMyZWQ1NzM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAg",
        "ICAgICAgICAgICAgLyog5o6n5Yi25Yy65Z+fICovDQogICAgICAgICAgICAgICAgLnhocy1haS1jb250cm9sLXNlY3Rpb24gew0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNnB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktbWFpbi1jb250cm9scyB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGdhcDogOHB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMnB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktcXVpY2stYWN0aW9ucyB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGdhcDogOHB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOaMiemSruagt+W8jyAqLw0KICAgICAgICAgICAgICAgIC54aHMtYWktYnRuIHsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBub25lOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDhweCAxNnB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEzcHg7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7DQogICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7DQogICAgICAgICAgICAgICAgICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1cHgpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYnRuOmhvdmVyIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpOw0KICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1idG46YWN0aXZlIHsNCiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYnRuLXByaW1hcnkgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjZmY2YjZiLCAjZWU1YTI0KTsNCiAgICAgICAgICAgICAgICAgICAgZmxleDogMTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJ0bi1wcmltYXJ5OmhvdmVyIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI2ZmNTI1MiwgI2U1",
        "NTEwMCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1idG4tc2Vjb25kYXJ5IHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KTsNCiAgICAgICAgICAgICAgICAgICAgZmxleDogMTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJ0bi1zbWFsbCB7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDZweCAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1idG4tbWluaW1pemUgew0KICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjRweDsNCiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAyNHB4Ow0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAwOw0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4Ow0KICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDlsI/mgqzmta7moYbmoLflvI8gKi8NCiAgICAgICAgICAgICAgICAjeGhzLWFpLW1pbmktZmxvYXQgew0KICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7DQogICAgICAgICAgICAgICAgICAgIGJvdHRvbTogMjBweDsNCiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IDIwcHg7DQogICAgICAgICAgICAgICAgICAgIHdpZHRoOiA2MHB4Ow0KICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDYwcHg7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICM2NjdlZWEgMCUsICM3NjRiYTIgMTAwJSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsNCiAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMCA0cHggMjBweCByZ2JhKDAsIDAsIDAsIDAuMyk7DQogICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgei1pbmRleDogOTk5OTk5Ow0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDI0cHg7DQogICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSk7DQogICAgICAgICAgICAgICAgICAgIHVzZXItc2VsZWN0",
        "OiBub25lOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7DQogICAgICAgICAgICAgICAgICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cigxMHB4KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAjeGhzLWFpLW1pbmktZmxvYXQ6aG92ZXIgew0KICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7DQogICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgNnB4IDI1cHggcmdiYSgwLCAwLCAwLCAwLjQpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICN4aHMtYWktbWluaS1mbG9hdDphY3RpdmUgew0KICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOTUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOWwj+aCrOa1ruahhuaLluaLveaXtueahOagt+W8jyAqLw0KICAgICAgICAgICAgICAgICN4aHMtYWktbWluaS1mbG9hdC5kcmFnZ2luZyB7DQogICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IG5vbmU7DQogICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7DQogICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgOHB4IDMwcHggcmdiYSgwLCAwLCAwLCAwLjUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYnRuLWNsb3NlOmhvdmVyIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmNDc1NzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDphY3nva7ljLrln58gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLWNvbmZpZy1zZWN0aW9uIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7DQogICAgICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1jb25maWctaGVhZGVyIHsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTJweCAxNnB4Ow0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7DQogICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1jb25maWctY29udGVudCB7DQog",
        "ICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE2cHg7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1jb25maWctY29udGVudC5leHBhbmRlZCB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9ybS1ncm91cCB7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb3JtLWdyb3VwIGxhYmVsIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDRweDsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDsNCiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC45Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9ybS1ncm91cCBpbnB1dCwNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvcm0tZ3JvdXAgdGV4dGFyZWEsDQogICAgICAgICAgICAgICAgLnhocy1haS1mb3JtLWdyb3VwIHNlbGVjdCB7DQogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA4cHggMTJweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEzcHg7DQogICAgICAgICAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb3JtLWdyb3VwIGlucHV0OjpwbGFjZWhvbGRlciwNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvcm0tZ3JvdXAgdGV4dGFyZWE6OnBsYWNlaG9sZGVyIHsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvcm0tZ3JvdXAgaW5wdXQ6Zm9jdXMsDQogICAgICAgICAgICAgICAgLnhocy1haS1mb3JtLWdyb3VwIHRleHRhcmVhOmZvY3VzLA0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9ybS1ncm91cCBzZWxlY3Q6Zm9jdXMgew0KICAgICAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KTsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3Vu",
        "ZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjE1KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvcm0tYWN0aW9ucyB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGdhcDogOHB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxNnB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOaXpeW/l+WMuuWfnyAqLw0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLXNlY3Rpb24gew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDsNCiAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWxvZy1oZWFkZXIgew0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMnB4IDE2cHg7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWxvZy1jb250cm9scyB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGdhcDogOHB4Ow0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWNvbnRyb2xzIHNlbGVjdCB7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDRweCA4cHg7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWNvbnRlbnQgew0KICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiAyMDBweDsNCiAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3cteTogYXV0bzsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTJweDsNCiAgICAgICAgICAgICAg",
        "ICAgICAgZm9udC1mYW1pbHk6ICdDb3VyaWVyIE5ldycsIG1vbm9zcGFjZTsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMS40Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWVtcHR5IHsNCiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjY7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWxvZy1lbnRyeSB7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDRweDsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNHB4IDhweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWVudHJ5LmluZm8gew0KICAgICAgICAgICAgICAgICAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkICMyZWQ1NzM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1sb2ctZW50cnkud2FybiB7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgI2ZmYTUwMjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWxvZy1lbnRyeS5lcnJvciB7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgI2ZmNDc1NzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWxvZy1lbnRyeS5kZWJ1ZyB7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgIzUzNTJlZDsNCiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC44Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLXRpbWUgew0KICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjc7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogOHB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWxldmVsIHsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7DQogICAgICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTFweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDmu5rliqjmnaHmoLflvI8gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLXBhbmVsLWNvbnRlbnQ6Oi13ZWJraXQt",
        "c2Nyb2xsYmFyLA0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWNvbnRlbnQ6Oi13ZWJraXQtc2Nyb2xsYmFyIHsNCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDZweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXBhbmVsLWNvbnRlbnQ6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrLA0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWNvbnRlbnQ6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1wYW5lbC1jb250ZW50Ojotd2Via2l0LXNjcm9sbGJhci10aHVtYiwNCiAgICAgICAgICAgICAgICAueGhzLWFpLWxvZy1jb250ZW50Ojotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktcGFuZWwtY29udGVudDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXIsDQogICAgICAgICAgICAgICAgLnhocy1haS1sb2ctY29udGVudDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXIgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLyog5ZON5bqU5byP6K6+6K6hICovDQogICAgICAgICAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7DQogICAgICAgICAgICAgICAgICAgICN4aHMtYWktY29udHJvbC1wYW5lbCB7DQogICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogY2FsYygxMDB2dyAtIDQwcHgpICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAyMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgICAgICAgICByaWdodDogMjBweCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgLnhocy1haS1tYWluLWNvbnRyb2xzIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAueGhzLWFpLWZvcm0tYWN0aW9ucyB7DQogICAgICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLyog6buR5ZCN5Y2V5qC35byPICovDQogICAgICAgICAgICAgICAgLnhocy1haS1ibGFja2xpc3QtbGlzdCB7DQogICAg",
        "ICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDE1MHB4Ow0KICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdy15OiBhdXRvOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXB4Ow0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1ibGFja2xpc3QtaXRlbSB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNXB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1ibGFja2xpc3QtaXRlbTpsYXN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJsYWNrbGlzdC1pbmZvIHsNCiAgICAgICAgICAgICAgICAgICAgZmxleDogMTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJsYWNrbGlzdC1uYW1lIHsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDJweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJsYWNrbGlzdC1tZXRhIHsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAwLjhlbTsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJsYWNrbGlzdC1yZW1vdmUgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgODcsIDg3LCAwLjIpOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBub25lOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDJweCA1cHg7DQogICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRl",
        "cjsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAwLjhlbTsNCiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYmxhY2tsaXN0LXJlbW92ZTpob3ZlciB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCA4NywgODcsIDAuNSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1ibGFja2xpc3QtZW1wdHkgew0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4Ow0KICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDkvJror53orrDlv4bnrqHnkIbmoLflvI8gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLXNlc3Npb24tc3RhdHMgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3RhdC1pdGVtIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAzcHggMDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXN0YXQtaXRlbTpsYXN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXN0YXQtaXRlbSBzcGFuOmZpcnN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAwLjllbTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXN0YXQtaXRlbSBzcGFuOmxhc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgICAgICAgICAgICAg",
        "fQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1idG4tZGFuZ2VyIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDg3LCA4NywgMC4yKTsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCA4NywgODcsIDAuMyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1idG4tZGFuZ2VyOmhvdmVyIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDg3LCA4NywgMC40KTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiByZ2JhKDI1NSwgODcsIDg3LCAwLjUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktaW5wdXQtZ3JvdXAgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1pbnB1dC1ncm91cCBpbnB1dCB7DQogICAgICAgICAgICAgICAgICAgIGZsZXg6IDE7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNXB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOmFjee9rueuoeeQhuagt+W8jyAqLw0KICAgICAgICAgICAgICAgIC54aHMtYWktYnV0dG9uLWdyb3VwIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAgZ2FwOiA4cHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJ1dHRvbi1ncm91cCAueGhzLWFpLWJ0biB7DQogICAgICAgICAgICAgICAgICAgIGZsZXg6IDE7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWNvbmZpZy1zdGF0cyB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1zdGF0LWl0ZW0gew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDsNCiAgICAgICAgICAgICAgICB9DQoN",
        "CiAgICAgICAgICAgICAgICAueGhzLWFpLXN0YXQtaXRlbTpsYXN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXN0YXQtbGFiZWwgew0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7DQogICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuODsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXN0YXQtdmFsdWUgew0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzRDQUY1MDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDogZrlhYnov5vnur/orr7nva7moLflvI8gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLXNwb3RsaWdodC1zdGF0cyB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLyog5YO15bC45pyq6K+75aSE55CG5qC35byPICovDQogICAgICAgICAgICAgICAgLnhocy1haS16b21iaWUtc3RhdHMgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3BvdGxpZ2h0LXN0YXRzIC54aHMtYWktc3RhdC1pdGVtIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1zcG90bGlnaHQtc3RhdHMgLnhocy1haS1zdGF0LWl0ZW06bGFzdC1jaGlsZCB7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1zcG90bGlnaHQtc3RhdHMgLnhocy1haS1zdGF0LWxhYmVsIHsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXNwb3RsaWdodC1zdGF0cyAueGhzLWFpLXN0YXQtdmFsdWUgew0K",
        "ICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgI3hocy1haS1zcG90bGlnaHQtdGVtcGxhdGUgew0KICAgICAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiAxMjBweDsNCiAgICAgICAgICAgICAgICAgICAgcmVzaXplOiB2ZXJ0aWNhbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDov73nsonlip/og73moLflvI8gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXN0YXRzIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXN0YXRzIC54aHMtYWktc3RhdC1pdGVtIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1zdGF0cyAueGhzLWFpLXN0YXQtaXRlbTpsYXN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXN0YXRzIC54aHMtYWktc3RhdC1sYWJlbCB7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1zdGF0cyAueGhzLWFpLXN0YXQtdmFsdWUgew0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS10aW1lLXNsb3RzIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwOw0KICAgICAgICAgICAgICAgICAgICBnYXA6IDEwcHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXRpbWUtc2xvdHMgbGFiZWwgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAg",
        "ICAgICBnYXA6IDVweDsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpOw0KICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS10aW1lLXNsb3RzIGlucHV0W3R5cGU9ImNoZWNrYm94Il0gew0KICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgI3hocy1haS1mb2xsb3d1cC10ZW1wbGF0ZSB7DQogICAgICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEyMHB4Ow0KICAgICAgICAgICAgICAgICAgICByZXNpemU6IHZlcnRpY2FsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICN4aHMtYWktZm9sbG93dXAtZGVsYXktc2V0dGluZ3Mgew0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4Ow0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS10ZW1wbGF0ZS1pdGVtIHsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweDsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkICNmZjZiNmI7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS10ZW1wbGF0ZS1pdGVtIGxhYmVsIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXRlbXBsYXRlLWl0ZW0gdGV4dGFyZWEgew0KICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgICAgICAgICAgICAgbWluLWhlaWdodDogODBweDsNCiAgICAgICAgICAgICAgICAgICAgcmVzaXplOiB2ZXJ0aWNhbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXRlbXBsYXRlLWFjdGlvbnMgew0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KICAgICAgICAgICAgICAg",
        "ICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBnYXA6IDhweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAjeGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlcy1jb250YWluZXIgew0KICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA0MDBweDsNCiAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3cteTogYXV0bzsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDov73nsonlkI3ljZXnrqHnkIbmoLflvI8gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXNlYXJjaC1jb250YWluZXIgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBnYXA6IDEwcHg7DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1zZWFyY2ggew0KICAgICAgICAgICAgICAgICAgICBmbGV4OiAxOw0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA4cHggMTJweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1zZWFyY2g6OnBsYWNlaG9sZGVyIHsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWZpbHRlciB7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDhweCAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7DQogICAgICAgICAg",
        "ICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWxpc3QtaGVhZGVyIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWxpc3QtY29udGFpbmVyIHsNCiAgICAgICAgICAgICAgICAgICAgbWF4LWhlaWdodDogNDAwcHg7DQogICAgICAgICAgICAgICAgICAgIG92ZXJmbG93LXk6IGF1dG87DQogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4Ow0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMik7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC11c2VyLWl0ZW0gew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEycHg7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpOw0KICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC11c2VyLWl0ZW06aG92ZXIgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtdXNlci1pdGVtOmxhc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIPCfhpUg5om56YeP5pON5L2c55u45YWz5qC35byPICovDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC11c2VyLWNoZWNrYm94IHsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgIH0NCg0K",
        "ICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtdXNlci1jaGVja2JveC1wbGFjZWhvbGRlciB7DQogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyMHB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEycHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1jaGVja2JveCB7DQogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxNnB4Ow0KICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE2cHg7DQogICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJhdGNoLW9wZXJhdGlvbnMtaGVhZGVyIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDEyMywgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDEyMywgMjU1LCAwLjMpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1iYXRjaC1zZWxlY3QtY29udHJvbHMgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBnYXA6IDE1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1iYXRjaC1zZWxlY3QtZ3JvdXAgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBnYXA6IDhweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXNlbGVjdCB7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDRweCA4cHg7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsNCiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc2VsZWN0OmZvY3VzIHsNCiAgICAgICAgICAgICAgICAgICAgb3V0bGluZTogbm9uZTsN",
        "CiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjMDA3YmZmOw0KICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMCAycHggcmdiYSgwLCAxMjMsIDI1NSwgMC4yNSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1zZWxlY3RlZC1jb3VudCB7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjMDA3YmZmOw0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJhdGNoLWFjdGlvbi1idXR0b25zIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAgZ2FwOiAxMHB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtdXNlci1pbmZvIHsNCiAgICAgICAgICAgICAgICAgICAgZmxleDogMTsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgICAgICAgICAgICAgICAgICAgZ2FwOiA0cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC11c2VyLW5hbWUgew0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtdXNlci1tZXRhIHsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjc7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGdhcDogMTVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXVzZXItc3RhdHVzIHsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMnB4IDZweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDExcHg7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtdXNlci1zdGF0dXMucGVuZGluZyB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmE1MDI7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXVzZXItc3RhdHVzLmZvbGxvd2luZyB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMzNzQyZmE7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgICAg",
        "ICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXVzZXItc3RhdHVzLmNvbXBsZXRlZCB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMyZWQ1NzM7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXVzZXItc3RhdHVzLmxlYWRzX2FjcXVpcmVkIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmNmI2YjsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtdXNlci1hY3Rpb25zIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAgZ2FwOiA4cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1hY3Rpb24tYnRuIHsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNHB4IDhweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBub25lOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1hY3Rpb24tYnRuLmJsYWNrbGlzdCB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZjZiNmI7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWFjdGlvbi1idG4uYmxhY2tsaXN0OmhvdmVyIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmNTI1MjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWFjdGlvbi1idG4udW5ibGFja2xpc3Qgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMmVkNTczOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1hY3Rpb24tYnRuLnVuYmxhY2tsaXN0OmhvdmVyIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzI2ZDBjZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXBhZ2luYXRpb24gew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgYWxpZ24t",
        "aXRlbXM6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgZ2FwOiAxNXB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxNXB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtbGlzdC1lbXB0eSB7DQogICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMzBweDsNCiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC42Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLyog5Zue6K6/6buR5ZCN5Y2V5qC35byPICovDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtY29udGFpbmVyIHsNCiAgICAgICAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzAwcHg7DQogICAgICAgICAgICAgICAgICAgIG92ZXJmbG93LXk6IGF1dG87DQogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4Ow0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMik7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtaXRlbSB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtaXRlbTpsYXN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1pbmZvIHsNCiAgICAgICAgICAgICAgICAgICAgZmxleDogMTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1uYW1lIHsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDRweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1tZXRhIHsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAw",
        "Ljc7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtcmVtb3ZlIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzJlZDU3MzsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDRweCA4cHg7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtcmVtb3ZlOmhvdmVyIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzI2ZDBjZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1lbXB0eSB7DQogICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMjBweDsNCiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC42Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLyog6ZSZ6K+v5o6o6YCB5qC35byPICovDQogICAgICAgICAgICAgICAgLnhocy1haS1jaGVja2JveC1ncm91cCB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogICAgICAgICAgICAgICAgICAgIGdhcDogOHB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA4cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1jaGVja2JveC1ncm91cCBsYWJlbCB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIGdhcDogOHB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEzcHg7DQogICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWNoZWNrYm94LWdyb3VwIGlucHV0W3R5cGU9ImNoZWNrYm94Il0gew0KICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDA7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1lcnJvci1ub3RpZmljYXRpb24tc3RhdHMgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMik7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgICAgICAg",
        "ICAgICAgICAgcGFkZGluZzogMTBweDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLXN0YXRzIC54aHMtYWktc3RhdC1pdGVtIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1lcnJvci1ub3RpZmljYXRpb24tc3RhdHMgLnhocy1haS1zdGF0LWl0ZW06bGFzdC1jaGlsZCB7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1lcnJvci1ub3RpZmljYXRpb24tc3RhdHMgLnhocy1haS1zdGF0LWxhYmVsIHsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1zdGF0cyAueGhzLWFpLXN0YXQtdmFsdWUgew0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1lcnJvci1ub3RpZmljYXRpb24taGlzdG9yeSB7DQogICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDIwMHB4Ow0KICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdy15OiBhdXRvOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjIpOw0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1lcnJvci1ub3RpZmljYXRpb24taGlzdG9yeS1pdGVtIHsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogOHB4IDEwcHg7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1lcnJvci1ub3RpZmljYXRpb24taGlzdG9yeS1pdGVtOmxhc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZXJy",
        "b3Itbm90aWZpY2F0aW9uLWhpc3RvcnktdGltZSB7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTFweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1oaXN0b3J5LWxldmVsIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAycHggNnB4Ow0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTBweDsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogNnB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWhpc3RvcnktbGV2ZWwuZXJyb3Igew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgODcsIDg3LCAwLjMpOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmNTc1NzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1oaXN0b3J5LWxldmVsLndhcm4gew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMTkzLCA3LCAwLjMpOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmYzEwNzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1oaXN0b3J5LWxldmVsLmluZm8gew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDIzLCAxNjIsIDE4NCwgMC4zKTsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMxN2EyYjg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1lcnJvci1ub3RpZmljYXRpb24taGlzdG9yeS1tZXNzYWdlIHsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNHB4Ow0KICAgICAgICAgICAgICAgICAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktaGlzdG9yeS1lbXB0eSB7DQogICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMjBweDsNCiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC42Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgc2VsZWN0W211bHRpcGxlXSB7DQogICAgICAgICAgICAgICAgICAg",
        "IG1pbi1oZWlnaHQ6IDgwcHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgc2VsZWN0W211bHRpcGxlXSBvcHRpb24gew0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA0cHggOHB4Ow0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGA7DQoNCiAgICAgICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpOw0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCdDU1PmoLflvI/lt7Lmt7vliqAnKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5o6n5Yi26Z2i5p2/SFRNTA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0Q29udHJvbFBhbmVsSFRNTCgpIHsNCiAgICAgICAgICAgIHJldHVybiBgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXBhbmVsLWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1wYW5lbC10aXRsZSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLWljb24iPvCfpJY8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICDlsI/nuqLkuaZBSeiHquWKqOWbnuWkjQ0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS12ZXJzaW9uIj52JHtDT05GSUcuVkVSU0lPTn08L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktcGFuZWwtY29udHJvbHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLW1pbmltaXplIiB0aXRsZT0i5pyA5bCP5YyWIj7iiJI8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktcGFuZWwtY29udGVudCI+DQogICAgICAgICAgICAgICAgICAgIDwhLS0g54q25oCB5Yy65Z+fIC0tPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdHVzLXNlY3Rpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXR1cy1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXR1cy1sYWJlbCI+6L+Q6KGM54q25oCBOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXR1cy12YWx1ZSIgaWQ9Inhocy1haS1zdGF0dXMiPuW3suWBnOatojwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXR1cy1pbmRpY2F0b3IiIGlkPSJ4aHMtYWktaW5kaWNhdG9yIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAg",
        "IDxkaXYgY2xhc3M9Inhocy1haS1zdGF0dXMtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0dXMtbGFiZWwiPuacjeWKoeerrzo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0dXMtdmFsdWUiIGlkPSJ4aHMtYWktc2VydmVyLXN0YXR1cyI+6L+e5o6l5LitLi4uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdHVzLWluZGljYXRvciIgaWQ9Inhocy1haS1zZXJ2ZXItaW5kaWNhdG9yIj48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0dXMtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0dXMtbGFiZWwiPuaWsOa2iOaBrzo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0dXMtdmFsdWUiIGlkPSJ4aHMtYWktbWVzc2FnZS1jb3VudCI+MDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXR1cy1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXR1cy1sYWJlbCI+5bey5aSE55CGOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXR1cy12YWx1ZSIgaWQ9Inhocy1haS1wcm9jZXNzZWQtY291bnQiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSDlhazlkYrljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1hbm5vdW5jZW1lbnQtc2VjdGlvbiIgaWQ9Inhocy1haS1hbm5vdW5jZW1lbnQtc2VjdGlvbiIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1hbm5vdW5jZW1lbnQtaGVhZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLWFubm91bmNlbWVudC10aXRsZSI+8J+ToiDmnIDmlrDlhazlkYo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLWNsb3NlLWFubm91bmNlbWVudCI+w5c8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWFubm91bmNlbWVudC1jb250ZW50IiBpZD0ieGhzLWFpLWFubm91bmNlbWVudC1jb250ZW50Ij4N",
        "CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktYW5ub3VuY2VtZW50LWl0ZW0iIGlkPSJ4aHMtYWktYW5ub3VuY2VtZW50LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktYW5ub3VuY2VtZW50LXRleHQiIGlkPSJ4aHMtYWktYW5ub3VuY2VtZW50LXRleHQiPuaaguaXoOWFrOWRijwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktYW5ub3VuY2VtZW50LXRpbWUiIGlkPSJ4aHMtYWktYW5ub3VuY2VtZW50LXRpbWUiPjwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDwhLS0g5o6n5Yi25Yy65Z+fIC0tPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29udHJvbC1zZWN0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1tYWluLWNvbnRyb2xzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tcHJpbWFyeSIgaWQ9Inhocy1haS10b2dnbGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0ieGhzLWFpLXRvZ2dsZS10ZXh0Ij7lkK/liqjoh6rliqjlm57lpI08L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNlY29uZGFyeSIgaWQ9Inhocy1haS1jaGVjayI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOajgOafpeaWsOa2iOaBrw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktcXVpY2stYWN0aW9ucyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXRlc3QtYXBpIj7mtYvor5VBUEk8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktZGlhZ25vc2UiPumhtemdouiviuaWrTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS1jbGVhci1sb2dzIj7muIXnqbrml6Xlv5c8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21h",
        "bGwiIGlkPSJ4aHMtYWktaGVscCI+5biu5YqpPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSDphY3nva7ljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctc2VjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+6YWN572u6K6+572uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS10b2dnbGUtY29uZmlnIj7lsZXlvIA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1jb250ZW50IiBpZD0ieGhzLWFpLWNvbmZpZy1jb250ZW50Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1hcGkta2V5Ij5BUEnlr4bpkqU6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBpZD0ieGhzLWFpLWFwaS1rZXkiIHBsYWNlaG9sZGVyPSLor7fovpPlhaVGYXN0R1BUIEFQSeWvhumSpSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktYXBpLXVybCI+QVBJ5Zyw5Z2AOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ieGhzLWFpLWFwaS11cmwiIHBsYWNlaG9sZGVyPSJBUEnlnLDlnYAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLXJlcGx5LWRlbGF5Ij7lm57lpI3lu7bov58obXMpOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGlkPSJ4aHMtYWktcmVwbHktZGVsYXkiIG1pbj0iMTAwMCIgbWF4PSIxMDAwMCIgc3RlcD0iNTAwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1wcm9tcHQiPuezu+e7n+aPkOekuuivjTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgaWQ9Inhocy1haS1wcm9tcHQiIHJvd3M9IjMiIHBsYWNlaG9sZGVyPSLoh6rlrprkuYlBSeWbnuWkjeeahOezu+e7n+aPkOekuuivjSI+PC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1hY3Rpb25zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXByaW1hcnkiIGlkPSJ4aHMtYWktc2F2ZS1jb25maWciPuS/neWtmOmFjee9rjwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc2Vjb25kYXJ5IiBpZD0ieGhzLWFpLXJlc2V0LWNvbmZpZyI+6YeN572uPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSDmmbrog73ojrflrqLphY3nva7ljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctc2VjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+8J+OryDmmbrog73ojrflrqLorr7nva48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXRvZ2dsZS1hY3F1aXNpdGlvbiI+5bGV5byAPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctY29udGVudCIgaWQ9Inhocy1haS1hY3F1aXNpdGlvbi1jb250ZW50IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLWFjcXVpc2l0aW9uLWVuYWJsZWQiPiDlkK/nlKjmmbrog73ojrflrqINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9Inhocy1haS1hY3F1aXNpdGlvbi1z",
        "ZXR0aW5ncyIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLXRyaWdnZXItcm91bmQiPuinpuWPkei9ruasoTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0ieGhzLWFpLXRyaWdnZXItcm91bmQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjEiPuesrDHova7lr7nor53lkI48L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyIiBzZWxlY3RlZD7nrKwy6L2u5a+56K+d5ZCOPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMyI+56ysM+i9ruWvueivneWQjjwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1mYWxsYmFjay1yb3VuZCI+5YWc5bqV6L2u5qyhOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJ4aHMtYWktZmFsbGJhY2stcm91bmQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjIiPuesrDLova7lr7nor53lkI48L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIzIiBzZWxlY3RlZD7nrKwz6L2u5a+56K+d5ZCOPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iNCI+56ysNOi9ruWvueivneWQjjwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjUiPuesrDXova7lr7nor53lkI48L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktaW50ZXJlc3Qta2V5d29yZHMiPuWFtOi2o+WFs+mUruivjTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGlk",
        "PSJ4aHMtYWktaW50ZXJlc3Qta2V5d29yZHMiIHJvd3M9IjIiIHBsYWNlaG9sZGVyPSLku7fmoLws5LqG6KejLOi0reS5sCzlkqjor6Is6K+m57uGLOaAjuS5iOagtyzlpJrlsJHpkrEs6IGU57O7LOW+ruS/oSI+PC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7nlKjpgJflj7fliIbpmpTlpJrkuKrlhbPplK7or408L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktdG9vbC10eXBlIj7lt6Xlhbfnsbvlnos6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9Inhocy1haS10b29sLXR5cGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IueVmei1hOWNoSIgc2VsZWN0ZWQ+55WZ6LWE5Y2hPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0i5ZCN54mHIj7lkI3niYc8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktdG9vbC1uYW1lIj7pgInmi6nlt6Xlhbc6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9Inhocy1haS10b29sLW5hbWUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IiI+6Ieq5Yqo6YCJ5oup56ys5LiA5Liq5Y+v55So5bel5YW3PC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS1yZWZyZXNoLXRvb2xzIj7liLfmlrDlt6XlhbfliJfooag8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWFjcXVpc2l0aW9uLWRlbGF5Ij7lj5HpgIHlu7bov58obXMpOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQg",
        "dHlwZT0ibnVtYmVyIiBpZD0ieGhzLWFpLWFjcXVpc2l0aW9uLWRlbGF5IiBtaW49IjEwMDAiIG1heD0iMTAwMDAiIHN0ZXA9IjUwMCIgdmFsdWU9IjIwMDAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLWFsbG93LXJlcGVhdCI+IOWFgeiuuOmHjeWkjeWPkemAgQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lhYHorrjlr7nlkIzkuIDnlKjmiLflpJrmrKHlj5HpgIHojrflrqLlt6Xlhbc8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWFjdGlvbnMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tcHJpbWFyeSIgaWQ9Inhocy1haS1zYXZlLWFjcXVpc2l0aW9uIj7kv53lrZjojrflrqLphY3nva48L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNlY29uZGFyeSIgaWQ9Inhocy1haS10ZXN0LWFjcXVpc2l0aW9uIj7mtYvor5XojrflrqLlt6Xlhbc8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8IS0tIOm7keWQjeWNleeuoeeQhuWMuuWfnyAtLT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1zZWN0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctaGVhZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7wn5qrIOm7keWQjeWNleeuoeeQhjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktdG9nZ2xlLWJsYWNrbGlzdCI+5bGV5byAPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctY29udGVudCIgaWQ9Inhocy1haS1ibGFja2xpc3QtY29udGVudCIgc3R5bGU9ImRpc3BsYXk6IG5v",
        "bmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOWKn+iDveW8gOWFsyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS1ibGFja2xpc3QtZW5hYmxlZCI+IOWQr+eUqOm7keWQjeWNleWKn+iDvQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLWF1dG8tZGV0ZWN0LWJsb2NrZWQiPiDoh6rliqjmo4DmtYvooqvmi4npu5HnlKjmiLcNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuW9k+WPkemAgea2iOaBr+aPkOekuiLnlKjmiLfooqvlsY/olL0i5pe277yM6Ieq5Yqo5re75Yqg5Yiw6buR5ZCN5Y2VPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5omL5Yqo5re75YqgIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWJsYWNrbGlzdC1pbnB1dCI+5re75Yqg55So5oi35Yiw6buR5ZCN5Y2VOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1pbnB1dC1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9Inhocy1haS1ibGFja2xpc3QtaW5wdXQiIHBsYWNlaG9sZGVyPSLovpPlhaXnlKjmiLflkI3miJbnlKjmiLdJRCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktYWRkLWJsYWNrbGlzdCI+5re75YqgPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDpu5HlkI3ljZXliJfooaggLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+5b2T5YmN6buR5ZCN5Y2VICg8c3BhbiBpZD0ieGhzLWFpLWJsYWNrbGlzdC1jb3VudCI+MDwvc3Bhbj4pOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1ibGFja2xpc3QtbGlzdCIgaWQ9Inhocy1haS1ibGFja2xpc3QtbGlzdCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktYmxhY2tsaXN0LWVtcHR5Ij7mmoLml6Dpu5HlkI3ljZXnlKjmiLc8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOaTjeS9nOaMiemSriAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1hY3Rpb25zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXByaW1hcnkiIGlkPSJ4aHMtYWktc2F2ZS1ibGFja2xpc3QiPuS/neWtmOiuvue9rjwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc2Vjb25kYXJ5IiBpZD0ieGhzLWFpLWNsZWFyLWJsYWNrbGlzdCI+5riF56m66buR5ZCN5Y2VPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS1leHBvcnQtYmxhY2tsaXN0Ij7lr7zlh7o8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLWltcG9ydC1ibGFja2xpc3QiPuWvvOWFpTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktdGVzdC1ibG9ja2VkLWRldGVjdGlvbiI+5rWL6K+V5qOA5rWLPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSDkvJror53orrDlv4bnrqHnkIbljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctc2VjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+8J+noCDkvJror53orrDlv4bnrqHnkIY8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1",
        "dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXRvZ2dsZS1zZXNzaW9uLW1lbW9yeSI+5bGV5byAPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctY29udGVudCIgaWQ9Inhocy1haS1zZXNzaW9uLW1lbW9yeS1jb250ZW50IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5Yqf6IO95byA5YWzIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLXNlc3Npb24tbWVtb3J5LWVuYWJsZWQiPiDlkK/nlKjkvJror53orrDlv4blip/og70NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuW8gOWQr+WQjkFJ5bCG6K6w5L2P5q+P5Liq55So5oi355qE5a+56K+d5Y6G5Y+y77yM5o+Q5L6b5pu06L+e6LSv55qE5Zue5aSNPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g6YWN572u6YCJ6aG5IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLXNlc3Npb24tZXhwaXJlLWRheXMiPuS8muivnei/h+acn+aXtumXtCAo5aSpKTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ieGhzLWFpLXNlc3Npb24tZXhwaXJlLWRheXMiIG1pbj0iMSIgbWF4PSIzMCIgdmFsdWU9IjciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+6LaF6L+H5q2k5pe26Ze05pyq5L2/55So55qE5Lya6K+d5bCG6KKr6Ieq5Yqo5riF55CGPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLW1heC1zZXNzaW9ucyI+5pyA5aSn5Lya6K+d5pWw6YePOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGlkPSJ4aHMtYWktbWF4LXNlc3Npb25zIiBtaW49IjUwIiBtYXg9IjUwMCIgdmFsdWU9IjEwMCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7otoXo",
        "v4fmraTmlbDph4/ml7blsIbmuIXnkIbmnIDml6fnmoTkvJror508L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDkvJror53nu5/orqEgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+5Lya6K+d57uf6K6hOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zZXNzaW9uLXN0YXRzIiBpZD0ieGhzLWFpLXNlc3Npb24tc3RhdHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+5oC75Lya6K+d5pWwOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0ieGhzLWFpLXRvdGFsLXNlc3Npb25zIj4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7mtLvot4PkvJror506PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJ4aHMtYWktYWN0aXZlLXNlc3Npb25zIj4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7mgLvmtojmga/mlbA6PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJ4aHMtYWktdG90YWwtbWVzc2FnZXMiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuWtmOWCqOWkp+Wwjzo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9Inhocy1haS1zdG9yYWdlLXNpemUiPjAgS0I8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICA8IS0tIOaTjeS9nOaMiemSriAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1hY3Rpb25zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXByaW1hcnkiIGlkPSJ4aHMtYWktc2F2ZS1zZXNzaW9uLW1lbW9yeSI+5L+d5a2Y6K6+572uPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zZWNvbmRhcnkiIGlkPSJ4aHMtYWktcmVmcmVzaC1zZXNzaW9uLXN0YXRzIj7liLfmlrDnu5/orqE8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNlY29uZGFyeSIgaWQ9Inhocy1haS1jbGVhbi1leHBpcmVkLXNlc3Npb25zIj7muIXnkIbov4fmnJ88L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLWRhbmdlciIgaWQ9Inhocy1haS1jbGVhci1hbGwtc2Vzc2lvbnMiPua4heepuuWFqOmDqDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktZXhwb3J0LXNlc3Npb25zIj7lr7zlh7o8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLWltcG9ydC1zZXNzaW9ucyI+5a+85YWlPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSDogZrlhYnov5vnur/orr7nva7ljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctc2VjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+8J+SoSDogZrlhYnov5vnur/orr7nva48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXRvZ2dsZS1zcG90bGlnaHQiPuWxleW8gDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWNvbnRlbnQiIGlkPSJ4aHMtYWktc3BvdGxpZ2h0LWNvbnRlbnQiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgPCEtLSDlip/og73lvIDlhbMgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktc3BvdGxpZ2h0LWVuYWJsZWQiPiDlkK/nlKjogZrlhYnov5vnur/oh6rliqjlm57lpI0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuajgOa1i+WIsOiBmuWFiei/m+e6v+a2iOaBr+aXtuiHquWKqOWPkemAgemihOiuvuivneacr++8iOavj+S4qui/m+e6v+WPquWbnuWkjeS4gOasoe+8iTwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOivneacr+aooeadvyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1zcG90bGlnaHQtdGVtcGxhdGUiPuWbnuWkjeivneacr+aooeadvzo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgaWQ9Inhocy1haS1zcG90bGlnaHQtdGVtcGxhdGUiIHJvd3M9IjYiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0i5oKo5aW9e+eUqOaIt+aYteensH3vvIzmhJ/osKLmgqjpgJrov4fjgIx76K++56iL5ZCN56ewfeOAjei/m+WFpeengeS/oe+8geaIkeaYr+S4k+S4mueahOivvueoi+mhvumXru+8jOW+iOmrmOWFtOS4uuaCqOacjeWKoeOAgg0KDQrmiJHms6jmhI/liLDmgqjlr7nmiJHku6znmoTor77nqIvmhJ/lhbTotqPvvIzmiJHlj6/ku6XkuLrmgqjor6bnu4bku4vnu43or77nqIvlhoXlrrnjgIHlrabkuaDmlrnlvI/lkozkvJjmg6DmlL/nrZbjgILor7fpl67mgqjluIzmnJvkuobop6Plk6rmlrnpnaLnmoTkv6Hmga/lkaLvvJ8NCg0K5pyf5b6F5LiO5oKo6L+b5LiA5q2l5Lqk5rWB77yBIPCfmIoiPjwvdGV4dGFyZWE+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7mlK/mjIHlj5jph4/vvJp755So5oi35pi156ewfeOAgXvor77nqIvlkI3np7B944CC5L2/55SoIFxcbiDooajnpLrmjaLooYw8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDkuLvliqjov5vnur/or53mnK/orr7nva4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktc3BvdGxpZ2h0LWFjdGl2ZS13ZWxjb21lIj4g5ZCv55So5Li75Yqo6L+b57q/6K+d5pyvDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lvZPnlKjmiLfov5vlhaXkvJror53kvYbmsqHmnInogZrlhYnov5vnur/mtojmga/lkoznlKjmiLfmtojmga/ml7bvvIzkuLvliqjlj5HpgIHor53mnK88L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLXNwb3RsaWdodC1hY3RpdmUtY291cnNlIj7kuLvliqjor53mnK/or77nqIvlkI3np7A6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJ4aHMtYWktc3BvdGxpZ2h0LWFjdGl2ZS1jb3Vyc2UiIHBsYWNlaG9sZGVyPSLmiJHku6znmoTor77nqIsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5Li75Yqo6L+b57q/6K+d5pyv5Lit5L2/55So55qE6buY6K6k6K++56iL5ZCN56ewPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1zcG90bGlnaHQtZGVmYXVsdC1jb3Vyc2UiPum7mOiupOivvueoi+WQjeensDo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9Inhocy1haS1zcG90bGlnaHQtZGVmYXVsdC1jb3Vyc2UiIHBsYWNlaG9sZGVyPSLmiJHku6znmoTor77nqIsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5b2T5peg5rOV6K+G5Yir6IGa5YWJ6L+b57q/6K++56iL5ZCN56ew5pe25L2/55So55qE6buY6K6k5ZCN56ewPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g57uf6K6h5L+h5oGvIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuWkhOeQhue7n+iuoTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3BvdGxpZ2h0LXN0YXRzIiBpZD0ieGhzLWFpLXNwb3RsaWdodC1zdGF0cyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNs",
        "YXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuW3suWkhOeQhui/m+e6vzo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLXNwb3RsaWdodC1wcm9jZXNzZWQtY291bnQiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+5Yqf6IO954q25oCBOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktc3BvdGxpZ2h0LXN0YXR1cyI+5bey56aB55SoPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmk43kvZzmjInpkq4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tYWN0aW9ucyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1wcmltYXJ5IiBpZD0ieGhzLWFpLXNhdmUtc3BvdGxpZ2h0Ij7kv53lrZjorr7nva48L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNlY29uZGFyeSIgaWQ9Inhocy1haS10ZXN0LXNwb3RsaWdodCI+5rWL6K+V6K+d5pyvPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zZWNvbmRhcnkiIGlkPSJ4aHMtYWktcmVmcmVzaC1zcG90bGlnaHQtc3RhdHMiPuWIt+aWsOe7n+iuoTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tZGFuZ2VyIiBpZD0ieGhzLWFpLWNsZWFyLXNwb3RsaWdodC1jYWNoZSI+5riF56m657yT5a2YPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSDlg7XlsLjmnKror7vlpITnkIborr7nva7ljLrln58gLS0+DQogICAgICAg",
        "ICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctc2VjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+8J+nnyDlg7XlsLjmnKror7vlpITnkIY8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXRvZ2dsZS16b21iaWUiPuWxleW8gDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWNvbnRlbnQiIGlkPSJ4aHMtYWktem9tYmllLWNvbnRlbnQiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDlip/og73lvIDlhbMgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktem9tYmllLWVuYWJsZWQiPiDlkK/nlKjlg7XlsLjmnKror7vlpITnkIYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuiHquWKqOajgOa1i+W5tuWkhOeQhiLmnInmnKror7vnuqLngrnkvYbml6Dlrp7pmYXmtojmga8i55qE5YO15bC454q25oCB77yM6YG/5YWN6YeN5aSN5aSE55CGPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5Ya35Y205pe26Ze06K6+572uIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLXpvbWJpZS1jb29sZG93biI+5Ya35Y205pe26Ze077yI5YiG6ZKf77yJOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGlkPSJ4aHMtYWktem9tYmllLWNvb2xkb3duIiBtaW49IjUiIG1heD0iMTQ0MCIgcGxhY2Vob2xkZXI9IjYwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuajgOa1i+WIsOWDteWwuOacquivu+WQjueahOWGt+WNtOaXtumXtO+8jOacn+mXtOS4jeS8mumHjeWkjeWkhOeQhuebuOWQjOeKtuaAgTwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOiwg+ivleaooeW8jyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS16b21iaWUtZGVidWciPiDlkK/nlKjosIPor5XmqKHlvI8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuaYvuekuuivpue7hueahOWDteWwuOacquivu+ajgOa1i+aXpeW/l++8jOS+v+S6jumXrumimOaOkuafpTwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOiHquWKqOa4heeQhuiuvue9riAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS16b21iaWUtYXV0by1jbGVhbnVwIj4g5ZCv55So6Ieq5Yqo5riF55CGDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7oh6rliqjmuIXnkIbov4fmnJ/nmoTlg7XlsLjmnKror7vorrDlvZU8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLXpvbWJpZS1jbGVhbnVwLWRheXMiPua4heeQhuWkqeaVsDo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ieGhzLWFpLXpvbWJpZS1jbGVhbnVwLWRheXMiIG1pbj0iMSIgbWF4PSIzMCIgcGxhY2Vob2xkZXI9IjciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+6LaF6L+H5oyH5a6a5aSp5pWw55qE6K6w5b2V5bCG6KKr6Ieq5Yqo5riF55CGPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g57uf6K6h5L+h5oGvIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuWkhOeQhue7n+iuoTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktem9tYmllLXN0YXRzIiBpZD0ieGhzLWFpLXpvbWJpZS1zdGF0cyI+DQogICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuWKn+iDveeKtuaAgTo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLXpvbWJpZS1zdGF0dXMiPuW3suemgeeUqDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LWxhYmVsIj7mgLvorrDlvZU6PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC12YWx1ZSIgaWQ9Inhocy1haS16b21iaWUtdG90YWwiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+5Ya35Y205LitOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktem9tYmllLWNvb2xkb3duLWNvdW50Ij4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuaAu+WkhOeQhjo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLXpvbWJpZS1wcm9jZXNzZXMiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOaTjeS9nOaMiemSriAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1hY3Rpb25zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4",
        "aHMtYWktYnRuLXByaW1hcnkiIGlkPSJ4aHMtYWktc2F2ZS16b21iaWUiPuS/neWtmOiuvue9rjwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc2Vjb25kYXJ5IiBpZD0ieGhzLWFpLXJlZnJlc2gtem9tYmllLXN0YXRzIj7liLfmlrDnu5/orqE8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLWRhbmdlciIgaWQ9Inhocy1haS1jbGVhci16b21iaWUtcmVjb3JkcyI+5riF56m66K6w5b2VPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSDplJnor6/mjqjpgIHorr7nva7ljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctc2VjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+8J+aqCDplJnor6/mjqjpgIHorr7nva48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXRvZ2dsZS1lcnJvci1ub3RpZmljYXRpb24iPuWxleW8gDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWNvbnRlbnQiIGlkPSJ4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWNvbnRlbnQiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDlip/og73lvIDlhbMgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWVuYWJsZWQiPiDlkK/nlKjplJnor6/mjqjpgIHpgJrnn6UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuW9k+iEmuacrOWPkeeUn+mUmeivr+aXtuiHquWKqOaOqOmAgemAmuefpeWIsOaMh+Wumua4oOmBkzwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJ4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLXNldHRpbmdzIiBzdHlsZT0iZGlz",
        "cGxheTogbm9uZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIEFQSemFjee9riAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1hcGkta2V5Ij54eHR1aS5jb20gQVBJ5a+G6ZKlOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGlkPSJ4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWFwaS1rZXkiIHBsYWNlaG9sZGVyPSLor7fovpPlhaV4eHR1aS5jb23nmoRBUEnlr4bpkqUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuivt+WFiOWcqCA8YSBocmVmPSJodHRwczovL3d3dy54eHR1aS5jb20vIiB0YXJnZXQ9Il9ibGFuayI+eHh0dWkuY29tPC9hPiDms6jlhozlubbojrflj5ZBUEnlr4bpkqU8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOaOqOmAgea4oOmBkyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1jaGFubmVscyI+5o6o6YCB5rig6YGTOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJ4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWNoYW5uZWxzIiBtdWx0aXBsZT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJXWF9NUCI+5b6u5L+h5YWs5LyX5Y+3PC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iV1hfUVlfUk9CT1QiPuS8geS4muW+ruS/oee+pOacuuWZqOS6ujwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IkRJTkdfUk9CT1QiPumSiemSiee+pOacuuWZqOS6ujwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IkJBUksiPkJhcms8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJDVVNUT01fSFRUUCI+6Ieq5a6a5LmJ5o6l5Y+jPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iU01TX1ZPSUNFIj7nn63kv6Ev6K+t6Z+z55S16K+dPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVj",
        "dD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lj6/pgInmi6nlpJrkuKrmuKDpgZPvvIznlKhDdHJsK+eCueWHu+mAieaLqeWkmumhuTwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g6ZSZ6K+v57qn5Yir6L+H5rukIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+5o6o6YCB6ZSZ6K+v57qn5YirOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY2hlY2tib3gtZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktZXJyb3ItbGV2ZWwtZXJyb3IiIHZhbHVlPSJlcnJvciIgY2hlY2tlZD4gRVJST1IgKOmUmeivryk8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktZXJyb3ItbGV2ZWwtd2FybiIgdmFsdWU9Indhcm4iPiBXQVJOICjorablkYopPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLWVycm9yLWxldmVsLWluZm8iIHZhbHVlPSJpbmZvIj4gSU5GTyAo5L+h5oGvKTwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7pgInmi6npnIDopoHmjqjpgIHnmoTplJnor6/nuqfliKs8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOWFs+mUruivjei/h+a7pCAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWVycm9yLWluY2x1ZGUta2V5d29yZHMiPuWMheWQq+WFs+mUruivjTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJ4aHMtYWktZXJyb3ItaW5jbHVkZS1rZXl3b3JkcyIgcGxhY2Vob2xkZXI9IkFQSSznvZHnu5ws6L+e5o6lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lj6rmjqjpgIHljIXlkKvov5nkupvlhbPplK7or43nmoTplJnor6/vvIzlpJrkuKrlhbPplK7or43nlKjpgJflj7fliIbpmpTvvIznlZnnqbrooajnpLrkuI3ov4fm",
        "u6Q8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZXJyb3ItZXhjbHVkZS1rZXl3b3JkcyI+5o6S6Zmk5YWz6ZSu6K+NOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9Inhocy1haS1lcnJvci1leGNsdWRlLWtleXdvcmRzIiBwbGFjZWhvbGRlcj0i6LCD6K+VLOa1i+ivlSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5LiN5o6o6YCB5YyF5ZCr6L+Z5Lqb5YWz6ZSu6K+N55qE6ZSZ6K+v77yM5aSa5Liq5YWz6ZSu6K+N55So6YCX5Y+35YiG6ZqUPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmjqjpgIHpopHnjofpmZDliLYgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1lcnJvci1yYXRlLWxpbWl0Ij7mjqjpgIHpopHnjofpmZDliLY6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGlkPSJ4aHMtYWktZXJyb3ItcmF0ZS1saW1pdCIgbWluPSIxIiBtYXg9IjIwIiB2YWx1ZT0iNSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5q+P5YiG6ZKf5pyA5aSa5o6o6YCB5qyh5pWw77yM6Ziy5q2i5Yi35bGPPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDplJnor6/ljrvph40gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktZXJyb3ItZGVkdXBsaWNhdGlvbiIgY2hlY2tlZD4g5ZCv55So6ZSZ6K+v5Y676YeNDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuebuOWQjOmUmeivr+WcqOaMh+WumuaXtumXtOeql+WPo+WGheWPquaOqOmAgeS4gOasoTwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1lcnJvci1kZWR1cGxpY2F0aW9uLXdpbmRvdyI+5Y676YeN5pe26Ze056qX5Y+jICjliIbpkp8pOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ieGhzLWFpLWVycm9yLWRlZHVwbGljYXRpb24td2luZG93IiBtaW49IjEiIG1heD0iNjAiIHZhbHVlPSIxMCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+55u45ZCM6ZSZ6K+v5Zyo5q2k5pe26Ze05YaF5LiN5Lya6YeN5aSN5o6o6YCBPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmtYvor5XmqKHlvI8gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktZXJyb3ItdGVzdC1tb2RlIj4g5rWL6K+V5qih5byPDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuWQr+eUqOWQjuWPquiusOW9leaXpeW/l+S4jeWunumZheWPkemAgeaOqOmAge+8jOeUqOS6juiwg+ivlemFjee9rjwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5o6o6YCB5YaF5a655qih5p2/IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZXJyb3ItdGVtcGxhdGUiPuaOqOmAgeWGheWuueaooeadvzo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGlkPSJ4aHMtYWktZXJyb3ItdGVtcGxhdGUiIHJvd3M9IjYiIHBsYWNlaG9sZGVyPSLwn5qoIOWwj+e6ouS5pkFJ6Ieq5Yqo5Zue5aSN5bel5YW36ZSZ6K+v5oql6K2mDQoNCuKPsCDml7bpl7TvvJp7dGltZXN0YW1wfQ0K8J+UjSDplJnor6/nsbvlnovvvJp7bGV2ZWx9DQrwn5OdIOmUmeivr+S/oeaBr++8mnttZXNzYWdlfQ0K8J+RpCDnlKjmiLfvvJp7dXNlcn0NCvCflJcg6K+m5oOF77yae2RldGFpbHN9Ij48L3RleHRhcmVhPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuaUr+aMgeWPmOmHj++8mnt0aW1lc3RhbXB944CBe2xldmVsfeOA",
        "gXttZXNzYWdlfeOAgXt1c2VyfeOAgXtkZXRhaWxzfTwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmjqjpgIHnu5/orqEgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+5o6o6YCB57uf6K6hOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1lcnJvci1ub3RpZmljYXRpb24tc3RhdHMiIGlkPSJ4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLXN0YXRzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+5oC75o6o6YCB5pWwOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktZXJyb3ItdG90YWwtcHVzaGVzIj4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPjI05bCP5pe25YaFOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktZXJyb3ItcHVzaGVzLTI0aCI+MDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LWxhYmVsIj4x5bCP5pe25YaFOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktZXJyb3ItcHVzaGVzLTFoIj4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuWK",
        "n+iDveeKtuaAgTo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1zdGF0dXMiPuW3suemgeeUqDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5o6o6YCB5Y6G5Y+yIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuacgOi/keaOqOmAgeiusOW9lTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWhpc3RvcnkiIGlkPSJ4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWhpc3RvcnkiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWhpc3RvcnktZW1wdHkiPuaaguaXoOaOqOmAgeiusOW9lTwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5pON5L2c5oyJ6ZKuIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWFjdGlvbnMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tcHJpbWFyeSIgaWQ9Inhocy1haS1zYXZlLWVycm9yLW5vdGlmaWNhdGlvbiI+5L+d5a2Y6K6+572uPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zZWNvbmRhcnkiIGlkPSJ4aHMtYWktdGVzdC1lcnJvci1ub3RpZmljYXRpb24iPua1i+ivleaOqOmAgTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc2Vjb25kYXJ5IiBpZD0ieGhzLWFpLXJlZnJlc2gtZXJyb3Itc3RhdHMiPuWIt+aWsOe7n+iuoTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tZGFuZ2VyIiBpZD0ieGhzLWFpLWNsZWFyLWVycm9yLWhpc3RvcnkiPua4heepuuWOhuWPsjwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQog",
        "ICAgICAgICAgICAgICAgICAgIDwhLS0g6Ieq5Yqo6L+957KJ6K6+572u5Yy65Z+fIC0tPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLXNlY3Rpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPvCfjq8g6Ieq5Yqo6L+957KJ6K6+572uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS10b2dnbGUtZm9sbG93dXAiPuWxleW8gDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWNvbnRlbnQiIGlkPSJ4aHMtYWktZm9sbG93dXAtY29udGVudCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOWKn+iDveW8gOWFsyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS1mb2xsb3d1cC1lbmFibGVkIj4g5ZCv55So6Ieq5Yqo6L+957KJ5Yqf6IO9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lr7nmnKrmoIforrAi55WZ5a6i6LWEIueahOeUqOaIt+i/m+ihjOiHquWKqOWbnuiuv++8jOW8leWvvOa3u+WKoOW+ruS/oTwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS1mb2xsb3d1cC1hdXRvLXJlY29yZCIgY2hlY2tlZD4g6Ieq5Yqo6K6w5b2V5paw55So5oi3DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lvZPmlLbliLDmlrDnlKjmiLfmtojmga/ml7bvvIzoh6rliqjmt7vliqDliLDov73nsonliJfooajvvIjml6DpnIDmiYvliqjmiavmj4/vvIk8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ieGhzLWFpLWZvbGxvd3VwLWF1dG8tcmVjb3JkLXNldHRpbmdzIj4NCiAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWZvbGxvd3VwLWF1dG8tcmVjb3JkLWRlbGF5Ij7oh6rliqjorrDlvZXlu7bov58o56eSKTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9Inhocy1haS1mb2xsb3d1cC1hdXRvLXJlY29yZC1kZWxheSIgbWluPSIxIiBtYXg9IjYwIiB2YWx1ZT0iNSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5aSE55CG5a6M5raI5oGv5ZCO5bu26L+f5Yeg56eS5YaN6K6w5b2V77yM6YG/5YWN5b2x5ZON5Zue5aSN6YCf5bqmPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJ4aHMtYWktZm9sbG93dXAtc2V0dGluZ3MiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5omr5o+P6K6+572uIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZm9sbG93dXAtc2Nhbi1kYXlzIj7miavmj4/lpKnmlbA6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9Inhocy1haS1mb2xsb3d1cC1zY2FuLWRheXMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjEiPjHlpKnlhoU8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyIj4y5aSp5YaFPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMyIgc2VsZWN0ZWQ+M+WkqeWGhTwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjUiPjXlpKnlhoU8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI3Ij435aSp5YaFPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7miavmj4/lh6DlpKnlhoXmnInov4flr7nor53kvYbml6DnlZnlrqLotYTmoIfnrb7nmoTnlKjmiLc8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOWbnuiuv+mX",
        "tOmalCAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWZvbGxvd3VwLWludGVydmFsIj7lm57orr/pl7TpmpQ6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9Inhocy1haS1mb2xsb3d1cC1pbnRlcnZhbCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTIiPjEy5bCP5pe2PC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMjQiIHNlbGVjdGVkPjI05bCP5pe2PC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iNDgiPjQ45bCP5pe2PC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iNzIiPjcy5bCP5pe2PC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7kuKTmrKHlm57orr/kuYvpl7TnmoTmnIDlsI/ml7bpl7Tpl7TpmpQ8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOeVmeWuoui1hOajgOa1i+aWueW8jyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPueVmeWuoui1hOajgOa1i+aWueW8jzo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogNXB4OyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPSJkaXNwbGF5OiBibG9jazsgbWFyZ2luLWJvdHRvbTogNXB4OyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS1mb2xsb3d1cC1hcGktbGVhZHMtY2hlY2siIGNoZWNrZWQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOWQr+eUqEFQSeajgOa1i++8iOaOqOiNkO+8iQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsIHN0eWxlPSJjb2xvcjogIzY2NjsgbWFyZ2luLWxlZnQ6IDIwcHg7Ij7kvb/nlKjlrpjmlrlBUEnmo4DmtYvvvIzpgJ/luqblv6vkuJTlh4bnoa7njofpq5g8L3NtYWxsPg0KDQog",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPSJkaXNwbGF5OiBibG9jazsgbWFyZ2luLXRvcDogOHB4OyBtYXJnaW4tYm90dG9tOiA1cHg7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLWZvbGxvd3VwLXJlYWx0aW1lLWxlYWRzLWNoZWNrIiBjaGVja2VkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDlvLrliLblrp7ml7bmo4DmtYvvvIjmjqjojZDvvIkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbCBzdHlsZT0iY29sb3I6ICM2NjY7IG1hcmdpbi1sZWZ0OiAyMHB4OyI+5q+P5qyh5raI5oGv5aSE55CG6YO96YeN5paw5qOA5rWL77yM56Gu5L+d54q25oCB5pyA5pawPC9zbWFsbD4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0iZGlzcGxheTogYmxvY2s7IG1hcmdpbi10b3A6IDhweDsgbWFyZ2luLWJvdHRvbTogNXB4OyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS1mb2xsb3d1cC1kZWVwLWxlYWRzLWNoZWNrIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5ZCv55So5rex5bqm5qOA5rWL77yI5aSH55So77yJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGwgc3R5bGU9ImNvbG9yOiAjNjY2OyBtYXJnaW4tbGVmdDogMjBweDsiPuWIh+aNouS8muivnei/m+ihjOajgOa1i++8jOi+g+aFouS9huWFvOWuueaAp+WlvTwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDnvJPlrZjml7bpl7Torr7nva4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1mb2xsb3d1cC1jYWNoZS10aW1lIj7nvJPlrZjml7bpl7TvvIjnp5LvvIk6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9Inhocy1haS1mb2xsb3d1cC1jYWNoZS10aW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIwIj7npoHnlKjnvJPlrZjvvIjlrozlhajlrp7ml7bvvIk8L29wdGlvbj4NCiAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxMCI+MTDnp5I8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIzMCIgc2VsZWN0ZWQ+MzDnp5I8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI2MCI+MeWIhumSnzwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjMwMCI+NeWIhumSnzwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+55WZ5a6i6LWE54q25oCB57yT5a2Y5pe26Ze077yMMOihqOekuuavj+asoemDvemHjeaWsOajgOa1izwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5Zue6K6/5qyh5pWw6ZmQ5Yi2IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZm9sbG93dXAtbWF4LWNvdW50Ij7mnIDlpKflm57orr/mrKHmlbA6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9Inhocy1haS1mb2xsb3d1cC1tYXgtY291bnQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjEiPjHmrKE8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyIiBzZWxlY3RlZD4y5qyhPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMyI+M+asoTwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjUiPjXmrKE8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuWvueavj+S4queUqOaIt+acgOWkmui/m+ihjOWHoOasoeWbnuiuvzwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5Zue6K6/5pe26Ze054K5IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+5Zue6K6/5pe26Ze054K5OjwvbGFiZWw+DQogICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktdGltZS1zbG90cyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgdmFsdWU9IjkiIGNoZWNrZWQ+IDk6MDA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5wdXQgdHlwZT0iY2hlY2tib3giIHZhbHVlPSIxMSI+IDExOjAwPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IHR5cGU9ImNoZWNrYm94IiB2YWx1ZT0iMTQiIGNoZWNrZWQ+IDE0OjAwPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IHR5cGU9ImNoZWNrYm94IiB2YWx1ZT0iMTYiPiAxNjowMDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgdmFsdWU9IjE4IiBjaGVja2VkPiAxODowMDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgdmFsdWU9IjIwIj4gMjA6MDA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+6YCJ5oup5YWB6K645Y+R6YCB5Zue6K6/5raI5oGv55qE5pe26Ze054K5PC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmr4/ml6XpmZDliLYgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1mb2xsb3d1cC1kYWlseS1saW1pdCI+5q+P5pel5Zue6K6/5LiK6ZmQOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ieGhzLWFpLWZvbGxvd3VwLWRhaWx5LWxpbWl0IiBtaW49IjEiIG1heD0iNTAiIHZhbHVlPSIxMCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5q+P5aSp5pyA5aSa5Zue6K6/5aSa5bCR5Liq55So5oi3PC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmibnph4/lpITnkIborr7nva4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1mb2xs",
        "b3d1cC1iYXRjaC1zaXplIj7ljZXmrKHlpITnkIbmlbDph486PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGlkPSJ4aHMtYWktZm9sbG93dXAtYmF0Y2gtc2l6ZSIgbWluPSIxIiBtYXg9IjIwIiB2YWx1ZT0iMTAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuiHquWKqOaooeW8j+S4i+avj+asoeWkhOeQhueahOeUqOaIt+aVsOmHjzwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1mb2xsb3d1cC1tYW51YWwtYmF0Y2gtc2l6ZSI+5omL5Yqo5aSE55CG5pWw6YePOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ieGhzLWFpLWZvbGxvd3VwLW1hbnVhbC1iYXRjaC1zaXplIiBtaW49IjEiIG1heD0iNTAiIHZhbHVlPSIyMCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5omL5Yqo6Kem5Y+R5pe25aSE55CG55qE55So5oi35pWw6YePPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmiavmj4/kvJjljJborr7nva4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1mb2xsb3d1cC1tYXgtZW1wdHktc2NhbnMiPuacgOWkp+epuuaJq+aPj+asoeaVsDo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9Inhocy1haS1mb2xsb3d1cC1tYXgtZW1wdHktc2NhbnMiIG1pbj0iMyIgbWF4PSIyMCIgdmFsdWU9IjEwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7omZrmi5/mu5rliqjmiavmj4/ml7bov57nu63nqbrmiavmj4/lpJrlsJHmrKHlkI7lgZzmraI8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOmaj+acuuW7tui/n+iuvue9riAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS1mb2xsb3d1",
        "cC1yYW5kb20tZGVsYXkiIGNoZWNrZWQ+IOWQr+eUqOmaj+acuuW7tui/nw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lnKjlm57orr/kuYvpl7Tmt7vliqDpmo/mnLrlu7bov5/vvIzmqKHmi5/kurrlt6Xmk43kvZw8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJ4aHMtYWktZm9sbG93dXAtZGVsYXktc2V0dGluZ3MiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1mb2xsb3d1cC1taW4tZGVsYXkiPuacgOWwj+W7tui/nyjnp5IpOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9Inhocy1haS1mb2xsb3d1cC1taW4tZGVsYXkiIG1pbj0iMTAiIG1heD0iNjAwIiB2YWx1ZT0iMzAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWZvbGxvd3VwLW1heC1kZWxheSI+5pyA5aSn5bu26L+fKOenkik6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ieGhzLWFpLWZvbGxvd3VwLW1heC1kZWxheSIgbWluPSI2MCIgbWF4PSIxODAwIiB2YWx1ZT0iMzAwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOivneacr+aooeW8j+mAieaLqSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlLW1vZGUiPuivneacr+aooeW8jzo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0ieGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlLW1vZGUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9InNlcXVlbmNlIiBzZWxlY3RlZD7mjInmrKHluo/kvb/nlKg8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0",
        "aW9uIHZhbHVlPSJyYW5kb20iPumaj+acuumAieaLqTwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9ImFpIj5BSeaZuuiDveeUn+aIkDwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5oyJ5qyh5bqP77ya56ysMeasoeeUqOesrDHlpZfor53mnK/vvIznrKwy5qyh55So56ysMuWll+ivneacr++8m+maj+acuu+8muavj+asoemaj+acuumAieaLqe+8m0FJ77ya5pm66IO955Sf5oiQ5Liq5oCn5YyW6K+d5pyvPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDor53mnK/mqKHmnb8gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD7lm57orr/or53mnK/mqKHmnb86PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9Inhocy1haS1mb2xsb3d1cC10ZW1wbGF0ZXMtY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktdGVtcGxhdGUtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD7nrKwx5qyh5Zue6K6/6K+d5pyvOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlIiByb3dzPSI0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IuaCqOWlvXvnlKjmiLflkI1977yM5oiR5piv5oKo55qE5LiT5bGe6aG+6Zeu77yM55yL5Yiw5oKo5LmL5YmN5a+55oiR5Lus55qE5Lqn5ZOB5pyJ5YW06Laj44CC5oiR5oOz5LqG6Kej5LiA5LiL5oKo546w5Zyo55qE6ZyA5rGC5oOF5Ya177yM5piv5ZCm6L+Y6ZyA6KaB6L+b5LiA5q2l55qE5ZKo6K+i5ZKM5pyN5Yqh77yf5aaC5p6c5pa55L6/55qE6K+d77yM5Y+v5Lul5re75Yqg5oiR55qE5b6u5L+h6L+b6KGM6K+m57uG5rKf6YCa44CC5pyf5b6F5oKo55qE5Zue5aSN77yB8J+YiiI+PC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktdGVtcGxhdGUtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD7nrKwy5qyh5Zue6K6/6K+d5pyvOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlIiByb3dzPSI0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IuaCqOWlvXvnlKjmiLflkI1977yB5oSf6LCi5oKo5LmL5YmN5a+55oiR5Lus5Lqn5ZOB55qE5YWz5rOo44CC5oiR5rOo5oSP5Yiw5oKo5Y+v6IO96L+Y5Zyo6ICD6JmR5Lit77yM5oOz5YaN5qyh5Li65oKo5LuL57uN5LiA5LiL5oiR5Lus55qE5LyY5Yq/5ZKM5pyA5paw5LyY5oOg44CC5aaC5p6c5oKo5pyJ5Lu75L2V55aR6Zeu77yM6ZqP5pe25Y+v5Lul6IGU57O75oiR44CC5pyf5b6F5LiO5oKo6L+b5LiA5q2l5Lqk5rWB77yBIj48L3RleHRhcmVhPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS10ZW1wbGF0ZS1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuesrDPmrKHlm57orr/or53mnK86PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtdGVtcGxhdGUiIHJvd3M9IjQiDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0i5Lqy54ix55qEe+eUqOaIt+WQjX3vvIzluIzmnJvmgqjkuIDliIfpg73lpb3vvIHmiJHmg7Pot5/ov5vkuIDkuIvmgqjkuYvliY3lkqjor6LnmoTkuqflk4HvvIznnIvnnIvmmK/lkKbov5jmnInku4DkuYjlj6/ku6XluK7liqnmgqjnmoTlnLDmlrnjgILmiJHku6zmnIDov5Hmjqjlh7rkuobkuIDkupvmlrDnmoTkvJjmg6DmlL/nrZbvvIznm7jkv6HkvJrlr7nmgqjmnInmiYDluK7liqnjgIIiPjwvdGV4dGFyZWE+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS10ZW1wbGF0ZS1hY3Rpb25zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS1hZGQtdGVtcGxhdGUiPua3u+WKoOivneacrzwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXJlc2V0LXRlbXBsYXRlcyI+6YeN572u6buY6K6kPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7mlK/mjIHlj5jph4/vvJp755So5oi35ZCNfeOAgXvlm57orr/mrKHmlbB944CC5L2/55SoIFxcbiDooajnpLrmjaLooYzjgIJBSeaooeW8j+S4i+i/meS6m+aooeadv+S9nOS4uuWPguiAgzwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDnu5/orqHkv6Hmga8gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+6L+957KJ57uf6K6hOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1zdGF0cyIgaWQ9Inhocy1haS1mb2xsb3d1cC1zdGF0cyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuW+heWbnuiuv+eUqOaItzo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLWZvbGxvd3VwLXBlbmRpbmctY291bnQiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+5LuK5pel5bey5Zue6K6/Ojwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktZm9sbG93dXAtdG9kYXktY291bnQiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+5oC75Zue6K6/5qyh5pWwOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktZm9sbG93dXAtdG90YWwtY291bnQiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+5bey6I6355WZ5a6i6LWEOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktZm9sbG93dXAtbGVhZHMtY291bnQiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+5Yqf6IO954q25oCBOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktZm9sbG93dXAtc3RhdHVzIj7lt7LnpoHnlKg8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOaTjeS9nOaMiemSriAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1hY3Rpb25zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXByaW1hcnkiIGlkPSJ4aHMtYWktc2F2ZS1mb2xsb3d1cCI+5L+d5a2Y6K6+572uPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zZWNvbmRhcnkiIGlkPSJ4aHMtYWktc2Nhbi11c2VycyIgdGl0bGU9IuS9v+eUqOS8mOWMlueahOa7muWKqOaJq+aPj+aWueazleiOt+WPluaJgOacieS8muivneaVsOaNriI+5pm66IO95omr5o+P55So5oi3PC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zZWNvbmRhcnkiIGlkPSJ4aHMtYWktdHJpZ2dlci1mb2xsb3d1cCIgdGl0bGU9IuWvueeOsOacieW+heWbnuiuv+eUqOaIt+eri+WNs+aJp+ihjOWbnuiuv++8jOS4jei/m+ihjOaWsOeUqOaIt+aJq+aPjyI+56uL5Y2z5Zue6K6/PC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zZWNvbmRhcnkiIGlkPSJ4aHMtYWktcmVmcmVzaC1mb2xsb3d1cC1zdGF0cyI+5Yi35paw57uf6K6hPC9idXR0b24+DQogICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1pbmZvIiBpZD0ieGhzLWFpLWRpYWdub3NlLWZvbGxvd3VwIj7phY3nva7or4rmlq08L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLWRhbmdlciIgaWQ9Inhocy1haS1jbGVhci1mb2xsb3d1cC1yZWNvcmRzIj7muIXnqbrorrDlvZU8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8IS0tIOi/veeyieWQjeWNleeuoeeQhuWMuuWfnyAtLT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1zZWN0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctaGVhZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7wn5OLIOi/veeyieWQjeWNleeuoeeQhjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktdG9nZ2xlLWZvbGxvd3VwLWxpc3QiPuWxleW8gDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWNvbnRlbnQiIGlkPSJ4aHMtYWktZm9sbG93dXAtbGlzdC1jb250ZW50IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5pCc57Si5ZKM562b6YCJIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXNlYXJjaC1jb250YWluZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJ4aHMtYWktZm9sbG93dXAtc2VhcmNoIiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXNlYXJjaCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0i5pCc57Si55So5oi35ZCNLi4uIiAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0ieGhzLWFpLWZvbGxvd3VwLWZpbHRlciIgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1maWx0ZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9ImFsbCI+5YWo6YOo55So5oi3PC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0icGVu",
        "ZGluZyI+5b6F5Zue6K6/PC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iZm9sbG93aW5nIj7lm57orr/kuK08L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJjb21wbGV0ZWQiPuW3suWujOaIkDwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9ImxlYWRzX2FjcXVpcmVkIj7lt7LojrfnlZnlrqLotYQ8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXJlZnJlc2gtZm9sbG93dXAtbGlzdCI+5Yi35pawPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDwn4aVIOaJuemHj+aTjeS9nOaOp+WItuWMuuWfnyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCIgaWQ9Inhocy1haS1iYXRjaC1vcGVyYXRpb25zLWdyb3VwIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktYmF0Y2gtb3BlcmF0aW9ucy1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWJhdGNoLXNlbGVjdC1jb250cm9scyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWJhdGNoLXNlbGVjdC1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9Inhocy1haS1zZWxlY3QtbW9kZSIgY2xhc3M9Inhocy1haS1zZWxlY3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0icGFnZSI+6YCJ5oup5pys6aG1PC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJhbGwiPumAieaLqeWFqOmDqDwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLWV4ZWN1dGUtc2VsZWN0Ij7miafooYw8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXNlbGVjdGVkLWNvdW50Ij7lt7LpgInmi6kgPHNwYW4gaWQ9Inhocy1haS1zZWxlY3RlZC1jb3VudCI+MDwvc3Bhbj4g5Lq6PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktYmF0Y2gtYWN0aW9uLWJ1dHRvbnMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1wcmltYXJ5IiBpZD0ieGhzLWFpLWJhdGNoLW1hcmstdmlzaXRlZCIgZGlzYWJsZWQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOagh+iusOW3suWbnuiuvw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1kYW5nZXIiIGlkPSJ4aHMtYWktYmF0Y2gtZGVsZXRlIiBkaXNhYmxlZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5om56YeP5Yig6ZmkDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNlY29uZGFyeSIgaWQ9Inhocy1haS1jYW5jZWwtYmF0Y2gtc2VsZWN0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5Y+W5raI6YCJ5oupDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOeUqOaIt+WIl+ihqCAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1saXN0LWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7nlKjmiLfliJfooaggKOWFsSA8c3BhbiBpZD0ieGhzLWFpLWZvbGxvd3VwLWxpc3QtY291bnQiPjA8L3NwYW4+IOS6uik8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktdG9nZ2xlLWJhdGNoLW1vZGUi",
        "PuaJuemHj+aTjeS9nDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLWxpc3QtY29udGFpbmVyIiBpZD0ieGhzLWFpLWZvbGxvd3VwLWxpc3QtY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1saXN0LWVtcHR5Ij7mmoLml6DnlKjmiLfmlbDmja48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOWIhumhteaOp+WItiAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1wYWdpbmF0aW9uIiBpZD0ieGhzLWFpLWZvbGxvd3VwLXBhZ2luYXRpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLWZvbGxvd3VwLXByZXYtcGFnZSIgZGlzYWJsZWQ+5LiK5LiA6aG1PC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0ieGhzLWFpLWZvbGxvd3VwLXBhZ2UtaW5mbyI+56ysIDEg6aG177yM5YWxIDEg6aG1PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLWZvbGxvd3VwLW5leHQtcGFnZSIgZGlzYWJsZWQ+5LiL5LiA6aG1PC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDwhLS0g5Zue6K6/6buR5ZCN5Y2V566h55CG5Yy65Z+fIC0tPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLXNlY3Rpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPvCfmqsg5Zue6K6/6buR5ZCN5Y2V566h55CGPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS10b2dnbGUtZm9sbG93dXAtYmxhY2tsaXN0Ij7lsZXlvIA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0K",
        "ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1jb250ZW50IiBpZD0ieGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1jb250ZW50IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g6buR5ZCN5Y2V57uf6K6hIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWJsYWNrbGlzdC1zdGF0cyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7pu5HlkI3ljZXnlKjmiLfmlbA6IDxzdHJvbmcgaWQ9Inhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtY291bnQiPjA8L3N0cm9uZz48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktcmVmcmVzaC1mb2xsb3d1cC1ibGFja2xpc3QiPuWIt+aWsDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLWRhbmdlciB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLWNsZWFyLWZvbGxvd3VwLWJsYWNrbGlzdCI+5riF56m66buR5ZCN5Y2VPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDpu5HlkI3ljZXliJfooaggLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LWNvbnRhaW5lciIgaWQ9Inhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtZW1wdHkiPuaaguaXoOm7keWQjeWNleeUqOaItzwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8IS0tIOmFjee9rueuoeeQhuWMuuWfnyAtLT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1zZWN0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctaGVhZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7impnv",
        "uI8g6YWN572u566h55CGPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS10b2dnbGUtY29uZmlnLW1nbXQiPuWxleW8gDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWNvbnRlbnQiIGlkPSJ4aHMtYWktY29uZmlnLW1nbXQtY29udGVudCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOWvvOWHuuWMuuWfnyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD7lr7zlh7rphY3nva46PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWJ1dHRvbi1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc2Vjb25kYXJ5IiBpZD0ieGhzLWFpLWV4cG9ydC1jb25maWciPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIPCfk4Qg5a+85Ye66YWN572uDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zZWNvbmRhcnkiIGlkPSJ4aHMtYWktZXhwb3J0LWZ1bGwiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIPCfk6Yg5a+85Ye65YWo6YOoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7phY3nva7lr7zlh7rku4XljIXlkKvorr7nva7pobnvvIzlhajpg6jlr7zlh7rljIXlkKvnlKjmiLfmlbDmja48L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDlr7zlhaXljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+5a+85YWl6YWN572uOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1pbnB1dC1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tcHJpbWFyeSIgaWQ9Inhocy1haS1pbXBvcnQtY29u",
        "ZmlnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDwn5OBIOmAieaLqeaWh+S7tuWvvOWFpQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iZmlsZSIgaWQ9Inhocy1haS1pbXBvcnQtZmlsZSIgYWNjZXB0PSIuanNvbiIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7mlK/mjIHlr7zlhaXkuYvliY3lr7zlh7rnmoRKU09O6YWN572u5paH5Lu2PC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5Y2x6Zmp5pON5L2c5Yy65Z+fIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuWNsemZqeaTjeS9nDo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tZGFuZ2VyIiBpZD0ieGhzLWFpLXJlc2V0LWFsbCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDwn5SEIOmHjee9ruaJgOaciemFjee9rg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuWwhuaJgOaciemFjee9ruaBouWkjeS4uum7mOiupOWAvO+8jOatpOaTjeS9nOS4jeWPr+aSpOmUgDwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOmFjee9rue7n+iuoSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD7phY3nva7nu5/orqE6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1zdGF0cyIgaWQ9Inhocy1haS1jb25maWctc3RhdHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LWxhYmVsIj7phY3nva7pobnmlbDph486PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC12YWx1ZSIgaWQ9Inhocy1haS1jb25maWctY291bnQiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+6buR5ZCN5Y2V55So5oi3Ojwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktYmxhY2tsaXN0LXN0YXQiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+5Lya6K+d6K6w5b+GOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktc2Vzc2lvbnMtc3RhdCI+MDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8IS0tIOaXpeW/l+WMuuWfnyAtLT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWxvZy1zZWN0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1sb2ctaGVhZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7ov5DooYzml6Xlv5c8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWxvZy1jb250cm9scyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9Inhocy1haS1sb2ctbGV2ZWwiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iYWxsIj7lhajpg6g8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9ImluZm8iPuS/oeaBrzwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0id2FybiI+6K2m5ZGKPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJlcnJvciI+6ZSZ6K+vPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0",
        "dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktcmVmcmVzaC1sb2dzIj7liLfmlrA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWxvZy1jb250ZW50IiBpZD0ieGhzLWFpLWxvZy1jb250ZW50Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktbG9nLWVtcHR5Ij7mmoLml6Dml6Xlv5c8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIGA7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiuvue9ruWIneWni+S9jee9rg0KICAgICAgICAgKi8NCiAgICAgICAgc2V0SW5pdGlhbFBvc2l0aW9uKCkgew0KICAgICAgICAgICAgaWYgKCF0aGlzLnBhbmVsKSByZXR1cm47DQoNCiAgICAgICAgICAgIC8vIOS7jmxvY2FsU3RvcmFnZeaBouWkjeS9jee9ru+8jOaIluS9v+eUqOm7mOiupOS9jee9rg0KICAgICAgICAgICAgY29uc3Qgc2F2ZWRQb3NpdGlvbiA9IHRoaXMubG9hZFBhbmVsUG9zaXRpb24oKTsNCg0KICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS5wb3NpdGlvbiA9ICdmaXhlZCc7DQogICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLnpJbmRleCA9ICc5OTk5OTknOw0KICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS53aWR0aCA9ICczNTBweCc7DQogICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLm1heEhlaWdodCA9ICc4MHZoJzsNCiAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUudHJhbnNpdGlvbiA9ICdhbGwgMC4zcyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpJzsNCg0KICAgICAgICAgICAgaWYgKHNhdmVkUG9zaXRpb24gJiYgIXNhdmVkUG9zaXRpb24uaXNNaW5pbWl6ZWQpIHsNCiAgICAgICAgICAgICAgICAvLyDmgaLlpI3kv53lrZjnmoTkvY3nva4NCiAgICAgICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLmxlZnQgPSBzYXZlZFBvc2l0aW9uLmxlZnQgKyAncHgnOw0KICAgICAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUudG9wID0gc2F2ZWRQb3NpdGlvbi50b3AgKyAncHgnOw0KICAgICAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUucmlnaHQgPSAnYXV0byc7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIC8vIOm7mOiupOS9jee9ru+8muWPs+S4iuinkg0KICAgICAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUudG9wID0gJzIwcHgnOw0KICAgICAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUucmlnaHQgPSAnMjBweCc7DQogICAgICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS5sZWZ0ID0gJ2F1dG8nOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQog",
        "ICAgICAgIC8qKg0KICAgICAgICAgKiDliqDovb3pnaLmnb/kvY3nva4NCiAgICAgICAgICovDQogICAgICAgIGxvYWRQYW5lbFBvc2l0aW9uKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBzYXZlZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd4aHMtYWktcGFuZWwtcG9zaXRpb24nKTsNCiAgICAgICAgICAgICAgICBpZiAoc2F2ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgcG9zaXRpb24gPSBKU09OLnBhcnNlKHNhdmVkKTsNCiAgICAgICAgICAgICAgICAgICAgLy8g6aqM6K+B5L2N572u5pWw5o2u55qE5pyJ5pWI5oCnDQogICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcG9zaXRpb24ubGVmdCA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHBvc2l0aW9uLnRvcCA9PT0gJ251bWJlcicpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwb3NpdGlvbjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+WKoOi9vemdouadv+S9jee9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5L+d5a2Y6Z2i5p2/5L2N572uDQogICAgICAgICAqLw0KICAgICAgICBzYXZlUGFuZWxQb3NpdGlvbigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCF0aGlzLnBhbmVsKSByZXR1cm47DQoNCiAgICAgICAgICAgICAgICBsZXQgcG9zaXRpb247DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNNaW5pbWl6ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5piv5pyA5bCP5YyW54q25oCB77yM5L+d5a2Y5pyA5bCP5YyW5qCH6K6wDQogICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogMCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogMCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGlzTWluaW1pemVkOiB0cnVlLA0KICAgICAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpDQogICAgICAgICAgICAgICAgICAgIH07DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5L+d5a2Y5a6e6ZmF5L2N572uDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlY3QgPSB0aGlzLnBhbmVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IHJlY3QubGVmdCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogcmVjdC50b3AsDQogICAgICAgICAgICAgICAgICAgICAgICBpc01pbmltaXplZDogZmFsc2UsDQogICAgICAgICAg",
        "ICAgICAgICAgICAgICB0aW1lc3RhbXA6IERhdGUubm93KCkNCiAgICAgICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgneGhzLWFpLXBhbmVsLXBvc2l0aW9uJywgSlNPTi5zdHJpbmdpZnkocG9zaXRpb24pKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mdouadv+S9jee9ruW3suS/neWtmCcsIHBvc2l0aW9uKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+S/neWtmOmdouadv+S9jee9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmZkOWItumdouadv+S9jee9ruWcqOWPr+inhuWMuuWfn+WGhQ0KICAgICAgICAgKi8NCiAgICAgICAgY29uc3RyYWluUGFuZWxQb3NpdGlvbihsZWZ0LCB0b3ApIHsNCiAgICAgICAgICAgIGNvbnN0IHBhbmVsV2lkdGggPSAzNTA7IC8vIOmdouadv+WuveW6pg0KICAgICAgICAgICAgY29uc3QgcGFuZWxIZWlnaHQgPSBNYXRoLm1pbih3aW5kb3cuaW5uZXJIZWlnaHQgKiAwLjgsIDYwMCk7IC8vIOmdouadv+mrmOW6pg0KICAgICAgICAgICAgY29uc3QgbWFyZ2luID0gMTA7IC8vIOi+uei3nQ0KDQogICAgICAgICAgICAvLyDpmZDliLbmsLTlubPkvY3nva4NCiAgICAgICAgICAgIGxlZnQgPSBNYXRoLm1heChtYXJnaW4sIE1hdGgubWluKGxlZnQsIHdpbmRvdy5pbm5lcldpZHRoIC0gcGFuZWxXaWR0aCAtIG1hcmdpbikpOw0KDQogICAgICAgICAgICAvLyDpmZDliLblnoLnm7TkvY3nva4NCiAgICAgICAgICAgIHRvcCA9IE1hdGgubWF4KG1hcmdpbiwgTWF0aC5taW4odG9wLCB3aW5kb3cuaW5uZXJIZWlnaHQgLSBwYW5lbEhlaWdodCAtIG1hcmdpbikpOw0KDQogICAgICAgICAgICByZXR1cm4geyBsZWZ0LCB0b3AgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6ZmE5Yqg5LqL5Lu255uR5ZCs5ZmoDQogICAgICAgICAqLw0KICAgICAgICBhdHRhY2hFdmVudExpc3RlbmVycygpIHsNCiAgICAgICAgICAgIGlmICghdGhpcy5wYW5lbCkgcmV0dXJuOw0KDQogICAgICAgICAgICAvLyDkuLvopoHmjqfliLbmjInpkq4NCiAgICAgICAgICAgIGNvbnN0IHRvZ2dsZUJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUnKTsNCiAgICAgICAgICAgIGNvbnN0IGNoZWNrQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWNoZWNrJyk7DQogICAgICAgICAgICBjb25zdCB0ZXN0QXBpQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRlc3QtYXBpJyk7DQogICAgICAgICAgICBjb25zdCBkaWFnbm9zZUJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1kaWFnbm9zZScpOw0KICAgICAgICAgICAgY29uc3QgY2xlYXJM",
        "b2dzQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWNsZWFyLWxvZ3MnKTsNCiAgICAgICAgICAgIGNvbnN0IGhlbHBCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktaGVscCcpOw0KDQogICAgICAgICAgICAvLyDphY3nva7nm7jlhbPmjInpkq4NCiAgICAgICAgICAgIGNvbnN0IHRvZ2dsZUNvbmZpZ0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtY29uZmlnJyk7DQogICAgICAgICAgICBjb25zdCBzYXZlQ29uZmlnQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNhdmUtY29uZmlnJyk7DQogICAgICAgICAgICBjb25zdCByZXNldENvbmZpZ0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1yZXNldC1jb25maWcnKTsNCg0KICAgICAgICAgICAgLy8g6I635a6i5bel5YW355u45YWz5oyJ6ZKuDQogICAgICAgICAgICBjb25zdCB0b2dnbGVBY3F1aXNpdGlvbkJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtYWNxdWlzaXRpb24nKTsNCiAgICAgICAgICAgIGNvbnN0IGFjcXVpc2l0aW9uRW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWFjcXVpc2l0aW9uLWVuYWJsZWQnKTsNCiAgICAgICAgICAgIGNvbnN0IHNhdmVBY3F1aXNpdGlvbkJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zYXZlLWFjcXVpc2l0aW9uJyk7DQogICAgICAgICAgICBjb25zdCB0ZXN0QWNxdWlzaXRpb25CdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdGVzdC1hY3F1aXNpdGlvbicpOw0KICAgICAgICAgICAgY29uc3QgcmVmcmVzaFRvb2xzQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXJlZnJlc2gtdG9vbHMnKTsNCiAgICAgICAgICAgIGNvbnN0IHRvb2xUeXBlU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvb2wtdHlwZScpOw0KDQogICAgICAgICAgICAvLyDpnaLmnb/mjqfliLbmjInpkq4NCiAgICAgICAgICAgIGNvbnN0IG1pbmltaXplQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcueGhzLWFpLWJ0bi1taW5pbWl6ZScpOw0KDQogICAgICAgICAgICAvLyDml6Xlv5fmjqfliLYNCiAgICAgICAgICAgIGNvbnN0IGxvZ0xldmVsU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWxvZy1sZXZlbCcpOw0KICAgICAgICAgICAgY29uc3QgcmVmcmVzaExvZ3NCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcmVmcmVzaC1sb2dzJyk7DQoNCiAgICAgICAgICAgIC8vIOe7keWumuS6i+S7tg0KICAgICAgICAgICAgaWYgKHRvZ2dsZUJ0bikgdG9nZ2xlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVUb2dnbGUoKSk7DQogICAgICAgICAgICBpZiAoY2hlY2tCdG4pIGNo",
        "ZWNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVDaGVja01lc3NhZ2VzKCkpOw0KICAgICAgICAgICAgaWYgKHRlc3RBcGlCdG4pIHRlc3RBcGlCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRlc3RBUEkoKSk7DQogICAgICAgICAgICBpZiAoZGlhZ25vc2VCdG4pIGRpYWdub3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVEaWFnbm9zZSgpKTsNCiAgICAgICAgICAgIGlmIChjbGVhckxvZ3NCdG4pIGNsZWFyTG9nc0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlQ2xlYXJMb2dzKCkpOw0KICAgICAgICAgICAgaWYgKGhlbHBCdG4pIGhlbHBCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLnNob3dIZWxwKCkpOw0KDQogICAgICAgICAgICBpZiAodG9nZ2xlQ29uZmlnQnRuKSB0b2dnbGVDb25maWdCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRvZ2dsZUNvbmZpZygpKTsNCiAgICAgICAgICAgIGlmIChzYXZlQ29uZmlnQnRuKSBzYXZlQ29uZmlnQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVTYXZlQ29uZmlnKCkpOw0KICAgICAgICAgICAgaWYgKHJlc2V0Q29uZmlnQnRuKSByZXNldENvbmZpZ0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlUmVzZXRDb25maWcoKSk7DQoNCiAgICAgICAgICAgIC8vIOiOt+WuouW3peWFt+S6i+S7tue7keWumg0KICAgICAgICAgICAgaWYgKHRvZ2dsZUFjcXVpc2l0aW9uQnRuKSB0b2dnbGVBY3F1aXNpdGlvbkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVG9nZ2xlQWNxdWlzaXRpb24oKSk7DQogICAgICAgICAgICBpZiAoYWNxdWlzaXRpb25FbmFibGVkQ2hlY2tib3gpIGFjcXVpc2l0aW9uRW5hYmxlZENoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHRoaXMuaGFuZGxlQWNxdWlzaXRpb25FbmFibGVkQ2hhbmdlKCkpOw0KICAgICAgICAgICAgaWYgKHNhdmVBY3F1aXNpdGlvbkJ0bikgc2F2ZUFjcXVpc2l0aW9uQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVTYXZlQWNxdWlzaXRpb24oKSk7DQogICAgICAgICAgICBpZiAodGVzdEFjcXVpc2l0aW9uQnRuKSB0ZXN0QWNxdWlzaXRpb25CdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRlc3RBY3F1aXNpdGlvbigpKTsNCiAgICAgICAgICAgIGlmIChyZWZyZXNoVG9vbHNCdG4pIHJlZnJlc2hUb29sc0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlUmVmcmVzaFRvb2xzKCkpOw0KICAgICAgICAgICAgaWYgKHRvb2xUeXBlU2VsZWN0KSB0b29sVHlwZVNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFu",
        "Z2UnLCAoKSA9PiB0aGlzLmhhbmRsZVRvb2xUeXBlQ2hhbmdlKCkpOw0KDQogICAgICAgICAgICBpZiAobWluaW1pemVCdG4pIG1pbmltaXplQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVNaW5pbWl6ZSgpKTsNCg0KICAgICAgICAgICAgaWYgKGxvZ0xldmVsU2VsZWN0KSBsb2dMZXZlbFNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB0aGlzLnVwZGF0ZUxvZ3MoKSk7DQogICAgICAgICAgICBpZiAocmVmcmVzaExvZ3NCdG4pIHJlZnJlc2hMb2dzQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy51cGRhdGVMb2dzKCkpOw0KDQogICAgICAgICAgICAvLyDpu5HlkI3ljZXnm7jlhbPkuovku7YNCiAgICAgICAgICAgIGNvbnN0IHRvZ2dsZUJsYWNrbGlzdEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtYmxhY2tsaXN0Jyk7DQogICAgICAgICAgICBjb25zdCBibGFja2xpc3RFbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmxhY2tsaXN0LWVuYWJsZWQnKTsNCiAgICAgICAgICAgIGNvbnN0IGF1dG9EZXRlY3RCbG9ja2VkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYXV0by1kZXRlY3QtYmxvY2tlZCcpOw0KICAgICAgICAgICAgY29uc3QgYWRkQmxhY2tsaXN0QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWFkZC1ibGFja2xpc3QnKTsNCiAgICAgICAgICAgIGNvbnN0IHNhdmVCbGFja2xpc3RCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2F2ZS1ibGFja2xpc3QnKTsNCiAgICAgICAgICAgIGNvbnN0IGNsZWFyQmxhY2tsaXN0QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWNsZWFyLWJsYWNrbGlzdCcpOw0KICAgICAgICAgICAgY29uc3QgZXhwb3J0QmxhY2tsaXN0QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWV4cG9ydC1ibGFja2xpc3QnKTsNCiAgICAgICAgICAgIGNvbnN0IGltcG9ydEJsYWNrbGlzdEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1pbXBvcnQtYmxhY2tsaXN0Jyk7DQogICAgICAgICAgICBjb25zdCB0ZXN0QmxvY2tlZERldGVjdGlvbkJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10ZXN0LWJsb2NrZWQtZGV0ZWN0aW9uJyk7DQoNCiAgICAgICAgICAgIGlmICh0b2dnbGVCbGFja2xpc3RCdG4pIHRvZ2dsZUJsYWNrbGlzdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVG9nZ2xlQmxhY2tsaXN0KCkpOw0KICAgICAgICAgICAgaWYgKGJsYWNrbGlzdEVuYWJsZWRDaGVja2JveCkgYmxhY2tsaXN0RW5hYmxlZENoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHRoaXMuaGFuZGxlQmxhY2tsaXN0RW5hYmxlZENoYW5n",
        "ZSgpKTsNCiAgICAgICAgICAgIGlmIChhdXRvRGV0ZWN0QmxvY2tlZENoZWNrYm94KSBhdXRvRGV0ZWN0QmxvY2tlZENoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHRoaXMuaGFuZGxlQXV0b0RldGVjdENoYW5nZSgpKTsNCiAgICAgICAgICAgIGlmIChhZGRCbGFja2xpc3RCdG4pIGFkZEJsYWNrbGlzdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlQWRkQmxhY2tsaXN0KCkpOw0KICAgICAgICAgICAgaWYgKHNhdmVCbGFja2xpc3RCdG4pIHNhdmVCbGFja2xpc3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVNhdmVCbGFja2xpc3QoKSk7DQogICAgICAgICAgICBpZiAoY2xlYXJCbGFja2xpc3RCdG4pIGNsZWFyQmxhY2tsaXN0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVDbGVhckJsYWNrbGlzdCgpKTsNCiAgICAgICAgICAgIGlmIChleHBvcnRCbGFja2xpc3RCdG4pIGV4cG9ydEJsYWNrbGlzdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlRXhwb3J0QmxhY2tsaXN0KCkpOw0KICAgICAgICAgICAgaWYgKGltcG9ydEJsYWNrbGlzdEJ0bikgaW1wb3J0QmxhY2tsaXN0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVJbXBvcnRCbGFja2xpc3QoKSk7DQogICAgICAgICAgICBpZiAodGVzdEJsb2NrZWREZXRlY3Rpb25CdG4pIHRlc3RCbG9ja2VkRGV0ZWN0aW9uQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVUZXN0QmxvY2tlZERldGVjdGlvbigpKTsNCg0KICAgICAgICAgICAgLy8g5Lya6K+d6K6w5b+G566h55CG55u45YWz5LqL5Lu2DQogICAgICAgICAgICBjb25zdCB0b2dnbGVTZXNzaW9uTWVtb3J5QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS1zZXNzaW9uLW1lbW9yeScpOw0KICAgICAgICAgICAgY29uc3Qgc2Vzc2lvbk1lbW9yeUVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zZXNzaW9uLW1lbW9yeS1lbmFibGVkJyk7DQogICAgICAgICAgICBjb25zdCBzYXZlU2Vzc2lvbk1lbW9yeUJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zYXZlLXNlc3Npb24tbWVtb3J5Jyk7DQogICAgICAgICAgICBjb25zdCByZWZyZXNoU2Vzc2lvblN0YXRzQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXJlZnJlc2gtc2Vzc2lvbi1zdGF0cycpOw0KICAgICAgICAgICAgY29uc3QgY2xlYW5FeHBpcmVkU2Vzc2lvbnNCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktY2xlYW4tZXhwaXJlZC1zZXNzaW9ucycpOw0KICAgICAgICAgICAgY29uc3QgY2xlYXJBbGxTZXNzaW9uc0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1jbGVh",
        "ci1hbGwtc2Vzc2lvbnMnKTsNCiAgICAgICAgICAgIGNvbnN0IGV4cG9ydFNlc3Npb25zQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWV4cG9ydC1zZXNzaW9ucycpOw0KICAgICAgICAgICAgY29uc3QgaW1wb3J0U2Vzc2lvbnNCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktaW1wb3J0LXNlc3Npb25zJyk7DQoNCiAgICAgICAgICAgIGlmICh0b2dnbGVTZXNzaW9uTWVtb3J5QnRuKSB0b2dnbGVTZXNzaW9uTWVtb3J5QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVUb2dnbGVTZXNzaW9uTWVtb3J5KCkpOw0KICAgICAgICAgICAgaWYgKHNlc3Npb25NZW1vcnlFbmFibGVkQ2hlY2tib3gpIHNlc3Npb25NZW1vcnlFbmFibGVkQ2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4gdGhpcy5oYW5kbGVTZXNzaW9uTWVtb3J5RW5hYmxlZENoYW5nZSgpKTsNCiAgICAgICAgICAgIGlmIChzYXZlU2Vzc2lvbk1lbW9yeUJ0bikgc2F2ZVNlc3Npb25NZW1vcnlCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVNhdmVTZXNzaW9uTWVtb3J5KCkpOw0KICAgICAgICAgICAgaWYgKHJlZnJlc2hTZXNzaW9uU3RhdHNCdG4pIHJlZnJlc2hTZXNzaW9uU3RhdHNCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVJlZnJlc2hTZXNzaW9uU3RhdHMoKSk7DQogICAgICAgICAgICBpZiAoY2xlYW5FeHBpcmVkU2Vzc2lvbnNCdG4pIGNsZWFuRXhwaXJlZFNlc3Npb25zQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVDbGVhbkV4cGlyZWRTZXNzaW9ucygpKTsNCiAgICAgICAgICAgIGlmIChjbGVhckFsbFNlc3Npb25zQnRuKSBjbGVhckFsbFNlc3Npb25zQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVDbGVhckFsbFNlc3Npb25zKCkpOw0KICAgICAgICAgICAgaWYgKGV4cG9ydFNlc3Npb25zQnRuKSBleHBvcnRTZXNzaW9uc0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlRXhwb3J0U2Vzc2lvbnMoKSk7DQogICAgICAgICAgICBpZiAoaW1wb3J0U2Vzc2lvbnNCdG4pIGltcG9ydFNlc3Npb25zQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVJbXBvcnRTZXNzaW9ucygpKTsNCg0KICAgICAgICAgICAgLy8g6IGa5YWJ6L+b57q/55u45YWz5LqL5Lu2DQogICAgICAgICAgICBjb25zdCB0b2dnbGVTcG90bGlnaHRCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLXNwb3RsaWdodCcpOw0KICAgICAgICAgICAgY29uc3Qgc3BvdGxpZ2h0RW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC1lbmFibGVkJyk7DQogICAgICAgICAgICBjb25zdCBzYXZlU3BvdGxpZ2h0",
        "QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNhdmUtc3BvdGxpZ2h0Jyk7DQogICAgICAgICAgICBjb25zdCB0ZXN0U3BvdGxpZ2h0QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRlc3Qtc3BvdGxpZ2h0Jyk7DQogICAgICAgICAgICBjb25zdCByZWZyZXNoU3BvdGxpZ2h0U3RhdHNCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcmVmcmVzaC1zcG90bGlnaHQtc3RhdHMnKTsNCiAgICAgICAgICAgIGNvbnN0IGNsZWFyU3BvdGxpZ2h0Q2FjaGVCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktY2xlYXItc3BvdGxpZ2h0LWNhY2hlJyk7DQoNCiAgICAgICAgICAgIGlmICh0b2dnbGVTcG90bGlnaHRCdG4pIHRvZ2dsZVNwb3RsaWdodEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVG9nZ2xlU3BvdGxpZ2h0KCkpOw0KICAgICAgICAgICAgaWYgKHNwb3RsaWdodEVuYWJsZWRDaGVja2JveCkgc3BvdGxpZ2h0RW5hYmxlZENoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHRoaXMuaGFuZGxlU3BvdGxpZ2h0RW5hYmxlZENoYW5nZSgpKTsNCiAgICAgICAgICAgIGlmIChzYXZlU3BvdGxpZ2h0QnRuKSBzYXZlU3BvdGxpZ2h0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVTYXZlU3BvdGxpZ2h0KCkpOw0KICAgICAgICAgICAgaWYgKHRlc3RTcG90bGlnaHRCdG4pIHRlc3RTcG90bGlnaHRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRlc3RTcG90bGlnaHQoKSk7DQogICAgICAgICAgICBpZiAocmVmcmVzaFNwb3RsaWdodFN0YXRzQnRuKSByZWZyZXNoU3BvdGxpZ2h0U3RhdHNCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVJlZnJlc2hTcG90bGlnaHRTdGF0cygpKTsNCiAgICAgICAgICAgIGlmIChjbGVhclNwb3RsaWdodENhY2hlQnRuKSBjbGVhclNwb3RsaWdodENhY2hlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVDbGVhclNwb3RsaWdodENhY2hlKCkpOw0KDQogICAgICAgICAgICAvLyDlg7XlsLjmnKror7vlpITnkIbnm7jlhbPkuovku7YNCiAgICAgICAgICAgIGNvbnN0IHRvZ2dsZVpvbWJpZUJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtem9tYmllJyk7DQogICAgICAgICAgICBjb25zdCB6b21iaWVFbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktem9tYmllLWVuYWJsZWQnKTsNCiAgICAgICAgICAgIGNvbnN0IHNhdmVab21iaWVCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2F2ZS16b21iaWUnKTsNCiAgICAgICAgICAgIGNvbnN0IHJlZnJlc2hab21iaWVTdGF0c0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3ho",
        "cy1haS1yZWZyZXNoLXpvbWJpZS1zdGF0cycpOw0KICAgICAgICAgICAgY29uc3QgY2xlYXJab21iaWVSZWNvcmRzQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWNsZWFyLXpvbWJpZS1yZWNvcmRzJyk7DQoNCiAgICAgICAgICAgIGlmICh0b2dnbGVab21iaWVCdG4pIHRvZ2dsZVpvbWJpZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVG9nZ2xlWm9tYmllKCkpOw0KICAgICAgICAgICAgaWYgKHpvbWJpZUVuYWJsZWRDaGVja2JveCkgem9tYmllRW5hYmxlZENoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHRoaXMuaGFuZGxlWm9tYmllRW5hYmxlZENoYW5nZSgpKTsNCiAgICAgICAgICAgIGlmIChzYXZlWm9tYmllQnRuKSBzYXZlWm9tYmllQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVTYXZlWm9tYmllKCkpOw0KICAgICAgICAgICAgaWYgKHJlZnJlc2hab21iaWVTdGF0c0J0bikgcmVmcmVzaFpvbWJpZVN0YXRzQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVSZWZyZXNoWm9tYmllU3RhdHMoKSk7DQogICAgICAgICAgICBpZiAoY2xlYXJab21iaWVSZWNvcmRzQnRuKSBjbGVhclpvbWJpZVJlY29yZHNCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZUNsZWFyWm9tYmllUmVjb3JkcygpKTsNCg0KICAgICAgICAgICAgLy8g6L+957KJ5Yqf6IO955u45YWz5LqL5Lu2DQogICAgICAgICAgICBjb25zdCB0b2dnbGVGb2xsb3dVcEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtZm9sbG93dXAnKTsNCiAgICAgICAgICAgIGNvbnN0IGZvbGxvd1VwRW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWVuYWJsZWQnKTsNCiAgICAgICAgICAgIGNvbnN0IHNhdmVGb2xsb3dVcEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zYXZlLWZvbGxvd3VwJyk7DQogICAgICAgICAgICBjb25zdCBzY2FuVXNlcnNCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2Nhbi11c2VycycpOw0KICAgICAgICAgICAgY29uc3QgdHJpZ2dlckZvbGxvd1VwQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRyaWdnZXItZm9sbG93dXAnKTsNCiAgICAgICAgICAgIGNvbnN0IHJlZnJlc2hGb2xsb3dVcFN0YXRzQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXJlZnJlc2gtZm9sbG93dXAtc3RhdHMnKTsNCiAgICAgICAgICAgIGNvbnN0IGRpYWdub3NlRm9sbG93VXBCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZGlhZ25vc2UtZm9sbG93dXAnKTsNCiAgICAgICAgICAgIGNvbnN0IGNsZWFyRm9sbG93VXBSZWNvcmRzQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9y",
        "KCcjeGhzLWFpLWNsZWFyLWZvbGxvd3VwLXJlY29yZHMnKTsNCiAgICAgICAgICAgIGNvbnN0IGZvbGxvd1VwUmFuZG9tRGVsYXlDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1yYW5kb20tZGVsYXknKTsNCiAgICAgICAgICAgIGNvbnN0IGZvbGxvd1VwQXV0b1JlY29yZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWF1dG8tcmVjb3JkJyk7DQogICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZU1vZGVTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtdGVtcGxhdGUtbW9kZScpOw0KICAgICAgICAgICAgY29uc3QgYWRkVGVtcGxhdGVCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYWRkLXRlbXBsYXRlJyk7DQogICAgICAgICAgICBjb25zdCByZXNldFRlbXBsYXRlc0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1yZXNldC10ZW1wbGF0ZXMnKTsNCg0KICAgICAgICAgICAgaWYgKHRvZ2dsZUZvbGxvd1VwQnRuKSB0b2dnbGVGb2xsb3dVcEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVG9nZ2xlRm9sbG93VXAoKSk7DQogICAgICAgICAgICBpZiAoZm9sbG93VXBFbmFibGVkQ2hlY2tib3gpIGZvbGxvd1VwRW5hYmxlZENoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHRoaXMuaGFuZGxlRm9sbG93VXBFbmFibGVkQ2hhbmdlKCkpOw0KICAgICAgICAgICAgaWYgKHNhdmVGb2xsb3dVcEJ0bikgc2F2ZUZvbGxvd1VwQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVTYXZlRm9sbG93VXAoKSk7DQogICAgICAgICAgICBpZiAoc2NhblVzZXJzQnRuKSBzY2FuVXNlcnNCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVNjYW5Vc2VycygpKTsNCiAgICAgICAgICAgIGlmICh0cmlnZ2VyRm9sbG93VXBCdG4pIHRyaWdnZXJGb2xsb3dVcEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVHJpZ2dlckZvbGxvd1VwKCkpOw0KICAgICAgICAgICAgaWYgKHJlZnJlc2hGb2xsb3dVcFN0YXRzQnRuKSByZWZyZXNoRm9sbG93VXBTdGF0c0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlUmVmcmVzaEZvbGxvd1VwU3RhdHMoKSk7DQogICAgICAgICAgICBpZiAoZGlhZ25vc2VGb2xsb3dVcEJ0bikgZGlhZ25vc2VGb2xsb3dVcEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlRGlhZ25vc2VGb2xsb3dVcCgpKTsNCiAgICAgICAgICAgIGlmIChjbGVhckZvbGxvd1VwUmVjb3Jkc0J0bikgY2xlYXJGb2xsb3dVcFJlY29yZHNCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZUNsZWFyRm9sbG93VXBSZWNvcmRzKCkp",
        "Ow0KICAgICAgICAgICAgaWYgKGZvbGxvd1VwUmFuZG9tRGVsYXlDaGVja2JveCkgZm9sbG93VXBSYW5kb21EZWxheUNoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHRoaXMuaGFuZGxlRm9sbG93VXBSYW5kb21EZWxheUNoYW5nZSgpKTsNCiAgICAgICAgICAgIGlmIChmb2xsb3dVcEF1dG9SZWNvcmRDaGVja2JveCkgZm9sbG93VXBBdXRvUmVjb3JkQ2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4gdGhpcy5oYW5kbGVGb2xsb3dVcEF1dG9SZWNvcmRDaGFuZ2UoKSk7DQogICAgICAgICAgICBpZiAodGVtcGxhdGVNb2RlU2VsZWN0KSB0ZW1wbGF0ZU1vZGVTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4gdGhpcy5oYW5kbGVUZW1wbGF0ZU1vZGVDaGFuZ2UoKSk7DQogICAgICAgICAgICBpZiAoYWRkVGVtcGxhdGVCdG4pIGFkZFRlbXBsYXRlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVBZGRUZW1wbGF0ZSgpKTsNCiAgICAgICAgICAgIGlmIChyZXNldFRlbXBsYXRlc0J0bikgcmVzZXRUZW1wbGF0ZXNCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVJlc2V0VGVtcGxhdGVzKCkpOw0KDQogICAgICAgICAgICAvLyDov73nsonlkI3ljZXnrqHnkIbnm7jlhbPkuovku7YNCiAgICAgICAgICAgIGNvbnN0IHRvZ2dsZUZvbGxvd1VwTGlzdEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtZm9sbG93dXAtbGlzdCcpOw0KICAgICAgICAgICAgY29uc3QgZm9sbG93VXBTZWFyY2hJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1zZWFyY2gnKTsNCiAgICAgICAgICAgIGNvbnN0IGZvbGxvd1VwRmlsdGVyU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWZpbHRlcicpOw0KICAgICAgICAgICAgY29uc3QgcmVmcmVzaEZvbGxvd1VwTGlzdEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1yZWZyZXNoLWZvbGxvd3VwLWxpc3QnKTsNCiAgICAgICAgICAgIGNvbnN0IGZvbGxvd1VwUHJldlBhZ2VCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtcHJldi1wYWdlJyk7DQogICAgICAgICAgICBjb25zdCBmb2xsb3dVcE5leHRQYWdlQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLW5leHQtcGFnZScpOw0KDQogICAgICAgICAgICAvLyDwn4aVIOaJuemHj+aTjeS9nOebuOWFs+S6i+S7tg0KICAgICAgICAgICAgY29uc3QgdG9nZ2xlQmF0Y2hNb2RlQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS1iYXRjaC1tb2RlJyk7DQogICAgICAgICAgICBjb25zdCBleGVjdXRlU2VsZWN0QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWV4ZWN1dGUt",
        "c2VsZWN0Jyk7DQogICAgICAgICAgICBjb25zdCBiYXRjaE1hcmtWaXNpdGVkQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJhdGNoLW1hcmstdmlzaXRlZCcpOw0KICAgICAgICAgICAgY29uc3QgYmF0Y2hEZWxldGVCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmF0Y2gtZGVsZXRlJyk7DQogICAgICAgICAgICBjb25zdCBjYW5jZWxCYXRjaFNlbGVjdGlvbkJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1jYW5jZWwtYmF0Y2gtc2VsZWN0aW9uJyk7DQoNCiAgICAgICAgICAgIGlmICh0b2dnbGVGb2xsb3dVcExpc3RCdG4pIHRvZ2dsZUZvbGxvd1VwTGlzdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVG9nZ2xlRm9sbG93VXBMaXN0KCkpOw0KICAgICAgICAgICAgaWYgKGZvbGxvd1VwU2VhcmNoSW5wdXQpIGZvbGxvd1VwU2VhcmNoSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB0aGlzLmhhbmRsZUZvbGxvd1VwU2VhcmNoKCkpOw0KICAgICAgICAgICAgaWYgKGZvbGxvd1VwRmlsdGVyU2VsZWN0KSBmb2xsb3dVcEZpbHRlclNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB0aGlzLmhhbmRsZUZvbGxvd1VwRmlsdGVyKCkpOw0KICAgICAgICAgICAgaWYgKHJlZnJlc2hGb2xsb3dVcExpc3RCdG4pIHJlZnJlc2hGb2xsb3dVcExpc3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVJlZnJlc2hGb2xsb3dVcExpc3QoKSk7DQogICAgICAgICAgICBpZiAoZm9sbG93VXBQcmV2UGFnZUJ0bikgZm9sbG93VXBQcmV2UGFnZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlRm9sbG93VXBQcmV2UGFnZSgpKTsNCiAgICAgICAgICAgIGlmIChmb2xsb3dVcE5leHRQYWdlQnRuKSBmb2xsb3dVcE5leHRQYWdlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVGb2xsb3dVcE5leHRQYWdlKCkpOw0KDQogICAgICAgICAgICAvLyDwn4aVIOaJuemHj+aTjeS9nOS6i+S7tue7keWumg0KICAgICAgICAgICAgaWYgKHRvZ2dsZUJhdGNoTW9kZUJ0bikgdG9nZ2xlQmF0Y2hNb2RlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVUb2dnbGVCYXRjaE1vZGUoKSk7DQogICAgICAgICAgICBpZiAoZXhlY3V0ZVNlbGVjdEJ0bikgZXhlY3V0ZVNlbGVjdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlRXhlY3V0ZVNlbGVjdCgpKTsNCiAgICAgICAgICAgIGlmIChiYXRjaE1hcmtWaXNpdGVkQnRuKSBiYXRjaE1hcmtWaXNpdGVkQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVCYXRjaE1hcmtWaXNpdGVkKCkpOw0KICAgICAgICAgICAgaWYgKGJhdGNoRGVsZXRlQnRuKSBiYXRjaERlbGV0ZUJ0bi5hZGRF",
        "dmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlQmF0Y2hEZWxldGUoKSk7DQogICAgICAgICAgICBpZiAoY2FuY2VsQmF0Y2hTZWxlY3Rpb25CdG4pIGNhbmNlbEJhdGNoU2VsZWN0aW9uQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVDYW5jZWxCYXRjaFNlbGVjdGlvbigpKTsNCg0KICAgICAgICAgICAgLy8g5Zue6K6/6buR5ZCN5Y2V566h55CG55u45YWz5LqL5Lu2DQogICAgICAgICAgICBjb25zdCB0b2dnbGVGb2xsb3dVcEJsYWNrbGlzdEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtZm9sbG93dXAtYmxhY2tsaXN0Jyk7DQogICAgICAgICAgICBjb25zdCByZWZyZXNoRm9sbG93VXBCbGFja2xpc3RCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcmVmcmVzaC1mb2xsb3d1cC1ibGFja2xpc3QnKTsNCiAgICAgICAgICAgIGNvbnN0IGNsZWFyRm9sbG93VXBCbGFja2xpc3RCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktY2xlYXItZm9sbG93dXAtYmxhY2tsaXN0Jyk7DQoNCiAgICAgICAgICAgIGlmICh0b2dnbGVGb2xsb3dVcEJsYWNrbGlzdEJ0bikgdG9nZ2xlRm9sbG93VXBCbGFja2xpc3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRvZ2dsZUZvbGxvd1VwQmxhY2tsaXN0KCkpOw0KICAgICAgICAgICAgaWYgKHJlZnJlc2hGb2xsb3dVcEJsYWNrbGlzdEJ0bikgcmVmcmVzaEZvbGxvd1VwQmxhY2tsaXN0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVSZWZyZXNoRm9sbG93VXBCbGFja2xpc3QoKSk7DQogICAgICAgICAgICBpZiAoY2xlYXJGb2xsb3dVcEJsYWNrbGlzdEJ0bikgY2xlYXJGb2xsb3dVcEJsYWNrbGlzdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlQ2xlYXJGb2xsb3dVcEJsYWNrbGlzdCgpKTsNCg0KICAgICAgICAgICAgLy8g6YWN572u566h55CG55u45YWz5LqL5Lu2DQogICAgICAgICAgICBjb25zdCB0b2dnbGVDb25maWdNZ210QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS1jb25maWctbWdtdCcpOw0KICAgICAgICAgICAgY29uc3QgZXhwb3J0Q29uZmlnQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWV4cG9ydC1jb25maWcnKTsNCiAgICAgICAgICAgIGNvbnN0IGV4cG9ydEZ1bGxCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXhwb3J0LWZ1bGwnKTsNCiAgICAgICAgICAgIGNvbnN0IGltcG9ydENvbmZpZ0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1pbXBvcnQtY29uZmlnJyk7DQogICAgICAgICAgICBjb25zdCBpbXBvcnRGaWxlSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktaW1wb3J0LWZpbGUnKTsNCiAgICAgICAg",
        "ICAgIGNvbnN0IHJlc2V0QWxsQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXJlc2V0LWFsbCcpOw0KDQogICAgICAgICAgICBpZiAodG9nZ2xlQ29uZmlnTWdtdEJ0bikgdG9nZ2xlQ29uZmlnTWdtdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVG9nZ2xlQ29uZmlnTWdtdCgpKTsNCiAgICAgICAgICAgIGlmIChleHBvcnRDb25maWdCdG4pIGV4cG9ydENvbmZpZ0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IENvbmZpZ0V4cG9ydE1hbmFnZXIuZXhwb3J0Q29uZmlnT25seSgpKTsNCiAgICAgICAgICAgIGlmIChleHBvcnRGdWxsQnRuKSBleHBvcnRGdWxsQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gQ29uZmlnRXhwb3J0TWFuYWdlci5leHBvcnRGdWxsRGF0YSgpKTsNCiAgICAgICAgICAgIGlmIChpbXBvcnRDb25maWdCdG4pIGltcG9ydENvbmZpZ0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IGltcG9ydEZpbGVJbnB1dC5jbGljaygpKTsNCiAgICAgICAgICAgIGlmIChpbXBvcnRGaWxlSW5wdXQpIGltcG9ydEZpbGVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoZSkgPT4gQ29uZmlnSW1wb3J0TWFuYWdlci5oYW5kbGVGaWxlU2VsZWN0KGUpKTsNCiAgICAgICAgICAgIGlmIChyZXNldEFsbEJ0bikgcmVzZXRBbGxCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVJlc2V0QWxsKCkpOw0KDQogICAgICAgICAgICAvLyDplJnor6/mjqjpgIHnm7jlhbPkuovku7YNCiAgICAgICAgICAgIGNvbnN0IHRvZ2dsZUVycm9yTm90aWZpY2F0aW9uQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS1lcnJvci1ub3RpZmljYXRpb24nKTsNCiAgICAgICAgICAgIGNvbnN0IGVycm9yTm90aWZpY2F0aW9uRW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1lbmFibGVkJyk7DQogICAgICAgICAgICBjb25zdCBzYXZlRXJyb3JOb3RpZmljYXRpb25CdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2F2ZS1lcnJvci1ub3RpZmljYXRpb24nKTsNCiAgICAgICAgICAgIGNvbnN0IHRlc3RFcnJvck5vdGlmaWNhdGlvbkJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10ZXN0LWVycm9yLW5vdGlmaWNhdGlvbicpOw0KICAgICAgICAgICAgY29uc3QgcmVmcmVzaEVycm9yU3RhdHNCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcmVmcmVzaC1lcnJvci1zdGF0cycpOw0KICAgICAgICAgICAgY29uc3QgY2xlYXJFcnJvckhpc3RvcnlCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktY2xlYXItZXJyb3ItaGlzdG9yeScpOw0KDQogICAgICAgICAgICBpZiAodG9nZ2xlRXJyb3JOb3RpZmljYXRpb25CdG4pIHRv",
        "Z2dsZUVycm9yTm90aWZpY2F0aW9uQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVUb2dnbGVFcnJvck5vdGlmaWNhdGlvbigpKTsNCiAgICAgICAgICAgIGlmIChlcnJvck5vdGlmaWNhdGlvbkVuYWJsZWRDaGVja2JveCkgZXJyb3JOb3RpZmljYXRpb25FbmFibGVkQ2hlY2tib3guYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4gdGhpcy5oYW5kbGVFcnJvck5vdGlmaWNhdGlvbkVuYWJsZWRDaGFuZ2UoKSk7DQogICAgICAgICAgICBpZiAoc2F2ZUVycm9yTm90aWZpY2F0aW9uQnRuKSBzYXZlRXJyb3JOb3RpZmljYXRpb25CdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVNhdmVFcnJvck5vdGlmaWNhdGlvbigpKTsNCiAgICAgICAgICAgIGlmICh0ZXN0RXJyb3JOb3RpZmljYXRpb25CdG4pIHRlc3RFcnJvck5vdGlmaWNhdGlvbkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVGVzdEVycm9yTm90aWZpY2F0aW9uKCkpOw0KICAgICAgICAgICAgaWYgKHJlZnJlc2hFcnJvclN0YXRzQnRuKSByZWZyZXNoRXJyb3JTdGF0c0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlUmVmcmVzaEVycm9yU3RhdHMoKSk7DQogICAgICAgICAgICBpZiAoY2xlYXJFcnJvckhpc3RvcnlCdG4pIGNsZWFyRXJyb3JIaXN0b3J5QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVDbGVhckVycm9ySGlzdG9yeSgpKTsNCg0KICAgICAgICAgICAgLy8g5YWs5ZGK55u45YWz5LqL5Lu2DQogICAgICAgICAgICBjb25zdCBjbG9zZUFubm91bmNlbWVudEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1jbG9zZS1hbm5vdW5jZW1lbnQnKTsNCiAgICAgICAgICAgIGlmIChjbG9zZUFubm91bmNlbWVudEJ0bikgY2xvc2VBbm5vdW5jZW1lbnRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZUNsb3NlQW5ub3VuY2VtZW50KCkpOw0KDQogICAgICAgICAgICAvLyDmi5bmi73lip/og70NCiAgICAgICAgICAgIHRoaXMubWFrZURyYWdnYWJsZSgpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDkvb/pnaLmnb/lj6/mi5bmi70NCiAgICAgICAgICovDQogICAgICAgIG1ha2VEcmFnZ2FibGUoKSB7DQogICAgICAgICAgICBjb25zdCBoZWFkZXIgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJy54aHMtYWktcGFuZWwtaGVhZGVyJyk7DQogICAgICAgICAgICBpZiAoIWhlYWRlcikgcmV0dXJuOw0KDQogICAgICAgICAgICBsZXQgaXNEcmFnZ2luZyA9IGZhbHNlOw0KICAgICAgICAgICAgbGV0IHN0YXJ0WCwgc3RhcnRZLCBpbml0aWFsTGVmdCwgaW5pdGlhbFRvcDsNCiAgICAgICAgICAgIGxldCBkcmFnU3RhcnRUaW1lID0gMDsNCg0KICAgICAgICAgICAgaGVhZGVyLnN0eWxlLmN1cnNvciA9ICdtb3ZlJzsNCiAg",
        "ICAgICAgICAgIGhlYWRlci5zdHlsZS51c2VyU2VsZWN0ID0gJ25vbmUnOw0KDQogICAgICAgICAgICBjb25zdCBoYW5kbGVNb3VzZURvd24gPSAoZSkgPT4gew0KICAgICAgICAgICAgICAgIC8vIOmBv+WFjeWcqOaMiemSruS4iuinpuWPkeaLluaLvQ0KICAgICAgICAgICAgICAgIGlmIChlLnRhcmdldC5jbG9zZXN0KCcueGhzLWFpLWJ0bicpKSByZXR1cm47DQoNCiAgICAgICAgICAgICAgICBpc0RyYWdnaW5nID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICBkcmFnU3RhcnRUaW1lID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICBzdGFydFggPSBlLmNsaWVudFg7DQogICAgICAgICAgICAgICAgc3RhcnRZID0gZS5jbGllbnRZOw0KDQogICAgICAgICAgICAgICAgLy8g6I635Y+W5b2T5YmN6Z2i5p2/55qE5a6e6ZmF5L2N572uDQogICAgICAgICAgICAgICAgY29uc3QgcmVjdCA9IHRoaXMucGFuZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7DQogICAgICAgICAgICAgICAgaW5pdGlhbExlZnQgPSByZWN0LmxlZnQ7DQogICAgICAgICAgICAgICAgaW5pdGlhbFRvcCA9IHJlY3QudG9wOw0KDQogICAgICAgICAgICAgICAgLy8g56aB55So6L+H5rih5Yqo55S777yM6YG/5YWN5ouW5ou95pe255qE5bu26L+fDQogICAgICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS50cmFuc2l0aW9uID0gJ25vbmUnOw0KICAgICAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUucmlnaHQgPSAnYXV0byc7IC8vIOehruS/neS9v+eUqGxlZnTlrprkvY0NCg0KICAgICAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGhhbmRsZU1vdXNlTW92ZSk7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGhhbmRsZU1vdXNlVXApOw0KICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUudXNlclNlbGVjdCA9ICdub25lJzsgLy8g6Ziy5q2i6YCJ5Lit5paH5pysDQogICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOw0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgY29uc3QgaGFuZGxlTW91c2VNb3ZlID0gKGUpID0+IHsNCiAgICAgICAgICAgICAgICBpZiAoIWlzRHJhZ2dpbmcpIHJldHVybjsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IGRlbHRhWCA9IGUuY2xpZW50WCAtIHN0YXJ0WDsNCiAgICAgICAgICAgICAgICBjb25zdCBkZWx0YVkgPSBlLmNsaWVudFkgLSBzdGFydFk7DQoNCiAgICAgICAgICAgICAgICAvLyDorqHnrpfmlrDkvY3nva4NCiAgICAgICAgICAgICAgICBsZXQgbmV3TGVmdCA9IGluaXRpYWxMZWZ0ICsgZGVsdGFYOw0KICAgICAgICAgICAgICAgIGxldCBuZXdUb3AgPSBpbml0aWFsVG9wICsgZGVsdGFZOw0KDQogICAgICAgICAgICAgICAgLy8g5bqU55So6L6555WM6ZmQ5Yi2DQogICAgICAgICAgICAgICAgY29uc3QgY29uc3RyYWluZWQgPSB0aGlzLmNvbnN0cmFpblBhbmVsUG9zaXRpb24obmV3TGVmdCwgbmV3",
        "VG9wKTsNCg0KICAgICAgICAgICAgICAgIC8vIOW5s+a7keabtOaWsOS9jee9rg0KICAgICAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUubGVmdCA9IGNvbnN0cmFpbmVkLmxlZnQgKyAncHgnOw0KICAgICAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUudG9wID0gY29uc3RyYWluZWQudG9wICsgJ3B4JzsNCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIGNvbnN0IGhhbmRsZU1vdXNlVXAgPSAoKSA9PiB7DQogICAgICAgICAgICAgICAgaWYgKCFpc0RyYWdnaW5nKSByZXR1cm47DQoNCiAgICAgICAgICAgICAgICBpc0RyYWdnaW5nID0gZmFsc2U7DQogICAgICAgICAgICAgICAgY29uc3QgZHJhZ0R1cmF0aW9uID0gRGF0ZS5ub3coKSAtIGRyYWdTdGFydFRpbWU7DQoNCiAgICAgICAgICAgICAgICAvLyDmgaLlpI3ov4fmuKHliqjnlLsNCiAgICAgICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLnRyYW5zaXRpb24gPSAnYWxsIDAuM3MgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKSc7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS51c2VyU2VsZWN0ID0gJyc7DQoNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBoYW5kbGVNb3VzZU1vdmUpOw0KICAgICAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBoYW5kbGVNb3VzZVVwKTsNCg0KICAgICAgICAgICAgICAgIC8vIOS/neWtmOaWsOS9jee9ru+8iOW7tui/n+S/neWtmO+8jOmBv+WFjemikee5geWGmeWFpe+8iQ0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNhdmVQYW5lbFBvc2l0aW9uKCk7DQogICAgICAgICAgICAgICAgfSwgMTAwKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenOaLluaLveaXtumXtOW+iOefre+8jOWPr+iDveaYr+ivr+inpu+8jOiusOW9leaXpeW/lw0KICAgICAgICAgICAgICAgIGlmIChkcmFnRHVyYXRpb24gPCAxNTApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmo4DmtYvliLDnn63ml7bpl7Tmi5bmi73vvIzlj6/og73mmK/or6/op6YnLCB7IGR1cmF0aW9uOiBkcmFnRHVyYXRpb24gfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgaGVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGhhbmRsZU1vdXNlRG93bik7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWQr+WKqC/lgZzmraLliIfmjaINCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRvZ2dsZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5YSFNBdXRvUmVwbHkuaXNSdW5uaW5nKSB7DQogICAgICAgICAgICAgICAgICAgIHdpbmRvdy5YSFNBdXRvUmVwbHkuc3RvcCgpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAg",
        "ICAgICAgICAgICAgICAgIC8vIOWcqOWQr+WKqOWJjeajgOafpeacjeWKoeerr+eKtuaAgQ0KICAgICAgICAgICAgICAgICAgICBpZiAoIVNlcnZlck1hbmFnZXIuaXNTY3JpcHRBbGxvd2VkKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfwn5qrIOiEmuacrOW3suiiq+acjeWKoeerr+emgeeUqO+8jOaXoOazleWQr+WKqCcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgR01fbm90aWZpY2F0aW9uKHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogQ09ORklHLkFQUF9OQU1FLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICfohJrmnKzlt7LooqvlvIDlj5HogIXnpoHnlKjvvIzml6Dms5XlkK/liqgnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDUwMDANCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHdpbmRvdy5YSFNBdXRvUmVwbHkuc3RhcnQoKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVVSSgpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WIh+aNoui/kOihjOeKtuaAgeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuajgOafpeaWsOa2iOaBrw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlQ2hlY2tNZXNzYWdlcygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWNoZWNrJyk7DQogICAgICAgICAgICAgICAgaWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5qOA5p+l5LitLi4uJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBhd2FpdCB3aW5kb3cuWEhTQXV0b1JlcGx5LmNoZWNrRm9yTmV3TWVzc2FnZXMoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVVJKCk7DQoNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5qOA5p+l5paw5raI5oGvJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5qOA5p+l5paw5raI5oGv5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAg",
        "ICAgICAgICog5aSE55CGQVBJ5rWL6K+VDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVUZXN0QVBJKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdGVzdC1hcGknKTsNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfmtYvor5XkuK0uLi4nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHN1Y2Nlc3MgPSBhd2FpdCBBSVJlcGx5R2VuZXJhdG9yLnRlc3RBUElDb25uZWN0aW9uKCk7DQoNCiAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ0FQSei/nuaOpea1i+ivleaIkOWKn++8gScsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCdBUEnov57mjqXmtYvor5XlpLHotKXvvIzor7fmo4Dmn6XphY3nva4nLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5rWL6K+VQVBJJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcignQVBJ5rWL6K+V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ0FQSea1i+ivleWksei0pe+8micgKyBlcnJvci5tZXNzYWdlLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG572R57uc6K+K5patDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVEaWFnbm9zZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWRpYWdub3NlJyk7DQogICAgICAgICAgICAgICAgaWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn6K+K5pat5LitLi4uJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmiafooYznvZHnu5zor4rmlq0NCiAgICAgICAgICAgICAgICBjb25zdCBuZXR3b3JrRGlhZ25vc2lzID0gTmV0d29ya01vbml0b3IuZGlhZ25vc2UoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBlcnJvclN0YXRzID0gR2xvYmFsRXJyb3JI",
        "YW5kbGVyLmdldEVycm9yU3RhdHMoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBwZXJmb3JtYW5jZVJlcG9ydCA9IFBlcmZvcm1hbmNlTW9uaXRvci5nZXRSZXBvcnQoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaYvuekuuiviuaWree7k+aenA0KICAgICAgICAgICAgICAgIGNvbnN0IGRpYWdub3Npc01lc3NhZ2UgPSB0aGlzLmZvcm1hdERpYWdub3Npc1Jlc3VsdCh7DQogICAgICAgICAgICAgICAgICAgIG5ldHdvcms6IG5ldHdvcmtEaWFnbm9zaXMsDQogICAgICAgICAgICAgICAgICAgIGVycm9yczogZXJyb3JTdGF0cywNCiAgICAgICAgICAgICAgICAgICAgcGVyZm9ybWFuY2U6IHBlcmZvcm1hbmNlUmVwb3J0DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn57O757uf6K+K5pat5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICBuZXR3b3JrOiBuZXR3b3JrRGlhZ25vc2lzLA0KICAgICAgICAgICAgICAgICAgICBlcnJvcnM6IGVycm9yU3RhdHMsDQogICAgICAgICAgICAgICAgICAgIHBlcmZvcm1hbmNlOiBwZXJmb3JtYW5jZVJlcG9ydA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5qC55o2u6K+K5pat57uT5p6c5pi+56S65LiN5ZCM57G75Z6L55qE6YCa55+lDQogICAgICAgICAgICAgICAgaWYgKG5ldHdvcmtEaWFnbm9zaXMuc3RhdHVzID09PSAnaGVhbHRoeScgJiYgcGVyZm9ybWFuY2VSZXBvcnQuaGVhbHRoU2NvcmUgPiA4MCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ezu+e7n+eKtuaAgeiJr+Wlve+8gScgKyBkaWFnbm9zaXNNZXNzYWdlLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobmV0d29ya0RpYWdub3Npcy5zdGF0dXMgPT09ICd3YXJuaW5nJyB8fCBwZXJmb3JtYW5jZVJlcG9ydC5oZWFsdGhTY29yZSA8IDYwKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Y+R546w6Zeu6aKY77yaJyArIGRpYWdub3Npc01lc3NhZ2UsICd3YXJuaW5nJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g6K+i6Zeu5piv5ZCm6Ieq5Yqo5L+u5aSNDQogICAgICAgICAgICAgICAgICAgIGlmIChjb25maXJtKCfmo4DmtYvliLDns7vnu5/pl67popjvvIzmmK/lkKblsJ3or5Xoh6rliqjkv67lpI3vvJ8nKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgQXV0b1JlcGFpclN5c3RlbS5kZXRlY3RBbmRSZXBhaXIoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6Ieq5Yqo5L+u5aSN5bey5omn6KGM77yM6K+35p+l55yL5pel5b+X5LqG6Kej6K+m5oOFJywgJ2luZm8nKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign57O757uf5a2Y5Zyo5Lil6YeN6Zeu6aKY77yaJyAr",
        "IGRpYWdub3Npc01lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfpobXpnaLor4rmlq0nOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfns7vnu5/or4rmlq3lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6K+K5pat5aSx6LSl77yaJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KDQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWRpYWdub3NlJyk7DQogICAgICAgICAgICAgICAgaWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+mhtemdouiviuaWrSc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmoLzlvI/ljJbor4rmlq3nu5PmnpwNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRpYWdub3NpcyDor4rmlq3mlbDmja4NCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIGZvcm1hdERpYWdub3Npc1Jlc3VsdChkaWFnbm9zaXMpIHsNCiAgICAgICAgICAgIGNvbnN0IHsgbmV0d29yaywgZXJyb3JzLCBwZXJmb3JtYW5jZSB9ID0gZGlhZ25vc2lzOw0KICAgICAgICAgICAgY29uc3QgbWVzc2FnZXMgPSBbXTsNCg0KICAgICAgICAgICAgLy8g572R57uc54q25oCBDQogICAgICAgICAgICBpZiAobmV0d29yay5zdGF0cy5mYWlsZWQgPiAwKSB7DQogICAgICAgICAgICAgICAgbWVzc2FnZXMucHVzaChg572R57uc5aSx6LSl6K+35rGCOiAke25ldHdvcmsuc3RhdHMuZmFpbGVkfeS4qmApOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDplJnor6/nu5/orqENCiAgICAgICAgICAgIGlmIChlcnJvcnMudG90YWxFcnJvcnMgPiAwKSB7DQogICAgICAgICAgICAgICAgbWVzc2FnZXMucHVzaChg57O757uf6ZSZ6K+vOiAke2Vycm9ycy50b3RhbEVycm9yc33kuKpgKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5oCn6IO95YiG5pWwDQogICAgICAgICAgICBtZXNzYWdlcy5wdXNoKGDlgaXlurfliIbmlbA6ICR7cGVyZm9ybWFuY2UuaGVhbHRoU2NvcmV9LzEwMGApOw0KDQogICAgICAgICAgICAvLyDkv67lpI3lu7rorq4NCiAgICAgICAgICAgIGlmIChuZXR3b3JrLnJlY29tbWVuZGF0aW9ucyAmJiBuZXR3b3JrLnJlY29tbWVuZGF0aW9ucy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgbWVz",
        "c2FnZXMucHVzaChg5bu66K6uOiAke25ldHdvcmsucmVjb21tZW5kYXRpb25zWzBdfWApOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gbWVzc2FnZXMuam9pbignLCAnKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5riF56m65pel5b+XDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVDbGVhckxvZ3MoKSB7DQogICAgICAgICAgICBMb2dnZXIuY2xlYXIoKTsNCiAgICAgICAgICAgIHRoaXMudXBkYXRlTG9ncygpOw0KICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfml6Xlv5flt7LmuIXnqbonLCAnaW5mbycpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbphY3nva7lsZXlvIAv5oqY5Y+gDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVUb2dnbGVDb25maWcoKSB7DQogICAgICAgICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWNvbmZpZy1jb250ZW50Jyk7DQogICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWNvbmZpZycpOw0KDQogICAgICAgICAgICBpZiAoY29udGVudCAmJiBidG4pIHsNCiAgICAgICAgICAgICAgICBpZiAoY29udGVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2V4cGFuZGVkJykpIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5jbGFzc0xpc3QucmVtb3ZlKCdleHBhbmRlZCcpOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5bGV5byAJzsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50LmNsYXNzTGlzdC5hZGQoJ2V4cGFuZGVkJyk7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfmipjlj6AnOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmxvYWRDb25maWcoKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuS/neWtmOmFjee9rg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlU2F2ZUNvbmZpZygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5a6J5YWo6I635Y+W6YWN572u6L6T5YWl5YWD57SgDQogICAgICAgICAgICAgICAgY29uc3QgYXBpS2V5RWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hcGkta2V5Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgYXBpVXJsRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hcGktdXJsJyk7DQogICAgICAgICAgICAgICAgY29uc3QgcmVwbHlEZWxheUVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcmVwbHktZGVsYXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCBwcm9tcHRFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVy",
        "eVNlbGVjdG9yKCcjeGhzLWFpLXByb21wdCcpOw0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5b+F6KaB5YWD57Sg5piv5ZCm5a2Y5ZyoDQogICAgICAgICAgICAgICAgaWYgKCFhcGlLZXlFbGVtZW50IHx8ICFhcGlVcmxFbGVtZW50IHx8ICFyZXBseURlbGF5RWxlbWVudCB8fCAhcHJvbXB0RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+mFjee9ruihqOWNleWFg+e0oOacquaJvuWIsO+8jOivt+WIt+aWsOmhtemdoumHjeivlScsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+mFjee9ruihqOWNleWFg+e0oOe8uuWksScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgYXBpS2V5ID0gYXBpS2V5RWxlbWVudC52YWx1ZS50cmltKCk7DQogICAgICAgICAgICAgICAgY29uc3QgYXBpVXJsID0gYXBpVXJsRWxlbWVudC52YWx1ZS50cmltKCk7DQogICAgICAgICAgICAgICAgY29uc3QgcmVwbHlEZWxheSA9IHBhcnNlSW50KHJlcGx5RGVsYXlFbGVtZW50LnZhbHVlKTsNCiAgICAgICAgICAgICAgICBjb25zdCBwcm9tcHQgPSBwcm9tcHRFbGVtZW50LnZhbHVlLnRyaW0oKTsNCg0KICAgICAgICAgICAgICAgIC8vIOmqjOivgemFjee9rg0KICAgICAgICAgICAgICAgIGlmICghYXBpS2V5KSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6K+36L6T5YWlQVBJ5a+G6ZKlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoIWFwaVVybCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ivt+i+k+WFpUFQSeWcsOWdgCcsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGlzTmFOKHJlcGx5RGVsYXkpIHx8IHJlcGx5RGVsYXkgPCAxMDAwKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Zue5aSN5bu26L+f5b+F6aG75aSn5LqOMTAwMG1zJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkv53lrZjphY3nva4NCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnYXBpS2V5JywgYXBpS2V5KTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnYXBpVXJsJywgYXBpVXJsKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgncmVwbHlEZWxheScsIHJlcGx5RGVsYXkpOw0KICAgICAgICAgICAgICAgIGlmIChwcm9tcHQpIHsNCiAgICAgICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2F1dG9SZXBseVByb21wdCcsIHByb21wdCk7",
        "DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfphY3nva7lt7Lkv53lrZgnLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfnlKjmiLfphY3nva7lt7Lmm7TmlrAnKTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S/neWtmOmFjee9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfkv53lrZjphY3nva7lpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6YeN572u6YWN572uDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVSZXNldENvbmZpZygpIHsNCiAgICAgICAgICAgIGlmIChjb25maXJtKCfnoa7lrpropoHph43nva7miYDmnInphY3nva7lkJfvvJ8nKSkgew0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIucmVzZXQoKTsNCiAgICAgICAgICAgICAgICB0aGlzLmxvYWRDb25maWcoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+mFjee9ruW3sumHjee9ricsICdpbmZvJyk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+mFjee9ruW3sumHjee9ruS4uum7mOiupOWAvCcpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbojrflrqLlt6XlhbfphY3nva7lsZXlvIAv5pS26LW3DQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVUb2dnbGVBY3F1aXNpdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYWNxdWlzaXRpb24tY29udGVudCcpOw0KICAgICAgICAgICAgY29uc3QgYnV0dG9uID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS1hY3F1aXNpdGlvbicpOw0KDQogICAgICAgICAgICBpZiAoY29udGVudCAmJiBidXR0b24pIHsNCiAgICAgICAgICAgICAgICBpZiAoY29udGVudC5zdHlsZS5kaXNwbGF5ID09PSAnbm9uZScpIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsNCiAgICAgICAgICAgICAgICAgICAgYnV0dG9uLnRleHRDb250ZW50ID0gJ+aUtui1tyc7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOw0KICAgICAgICAgICAgICAgICAgICBidXR0b24udGV4dENvbnRlbnQgPSAn5bGV5byAJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuiOt+WuouWKn+iDveWQr+eUqOeKtuaAgeWPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxl",
        "QWNxdWlzaXRpb25FbmFibGVkQ2hhbmdlKCkgew0KICAgICAgICAgICAgY29uc3QgY2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYWNxdWlzaXRpb24tZW5hYmxlZCcpOw0KICAgICAgICAgICAgY29uc3Qgc2V0dGluZ3MgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYWNxdWlzaXRpb24tc2V0dGluZ3MnKTsNCg0KICAgICAgICAgICAgaWYgKGNoZWNrYm94ICYmIHNldHRpbmdzKSB7DQogICAgICAgICAgICAgICAgc2V0dGluZ3Muc3R5bGUuZGlzcGxheSA9IGNoZWNrYm94LmNoZWNrZWQgPyAnYmxvY2snIDogJ25vbmUnOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbkv53lrZjojrflrqLphY3nva4NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGhhbmRsZVNhdmVBY3F1aXNpdGlvbigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g6I635Y+W6YWN572u5YWD57SgDQogICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWFjcXVpc2l0aW9uLWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0cmlnZ2VyUm91bmRTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdHJpZ2dlci1yb3VuZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGZhbGxiYWNrUm91bmRTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZmFsbGJhY2stcm91bmQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBrZXl3b3Jkc1RleHRhcmVhID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWludGVyZXN0LWtleXdvcmRzJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdG9vbFR5cGVTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9vbC10eXBlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdG9vbE5hbWVTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9vbC1uYW1lJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVsYXlJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hY3F1aXNpdGlvbi1kZWxheScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFsbG93UmVwZWF0Q2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYWxsb3ctcmVwZWF0Jyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWVuYWJsZWRDaGVja2JveCB8fCAhdHJpZ2dlclJvdW5kU2VsZWN0IHx8ICFmYWxsYmFja1JvdW5kU2VsZWN0IHx8DQogICAgICAgICAgICAgICAgICAgICFrZXl3b3Jkc1RleHRhcmVhIHx8ICF0b29sVHlwZVNlbGVjdCB8fCAhdG9vbE5hbWVTZWxlY3QgfHwNCiAgICAgICAgICAgICAgICAgICAgIWRlbGF5SW5wdXQgfHwgIWFsbG93UmVwZWF0Q2hlY2tib3gpIHsNCiAgICAg",
        "ICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfojrflrqLphY3nva7lhYPntKDmnKrmib7liLAnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOmqjOivgemFjee9rg0KICAgICAgICAgICAgICAgIGNvbnN0IHRyaWdnZXJSb3VuZCA9IHBhcnNlSW50KHRyaWdnZXJSb3VuZFNlbGVjdC52YWx1ZSk7DQogICAgICAgICAgICAgICAgY29uc3QgZmFsbGJhY2tSb3VuZCA9IHBhcnNlSW50KGZhbGxiYWNrUm91bmRTZWxlY3QudmFsdWUpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlbGF5ID0gcGFyc2VJbnQoZGVsYXlJbnB1dC52YWx1ZSk7DQoNCiAgICAgICAgICAgICAgICBpZiAodHJpZ2dlclJvdW5kID49IGZhbGxiYWNrUm91bmQpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfop6blj5Hova7mrKHlv4XpobvlsI/kuo7lhZzlupXova7mrKEnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChpc05hTihkZWxheSkgfHwgZGVsYXkgPCAxMDAwKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Y+R6YCB5bu26L+f5b+F6aG75aSn5LqOMTAwMG1zJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkv53lrZjphY3nva4NCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnYWNxdWlzaXRpb25FbmFibGVkJywgZW5hYmxlZENoZWNrYm94LmNoZWNrZWQpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdhY3F1aXNpdGlvblRyaWdnZXJSb3VuZCcsIHRyaWdnZXJSb3VuZCk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2FjcXVpc2l0aW9uRmFsbGJhY2tSb3VuZCcsIGZhbGxiYWNrUm91bmQpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdhY3F1aXNpdGlvbktleXdvcmRzJywga2V5d29yZHNUZXh0YXJlYS52YWx1ZS50cmltKCkpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdhY3F1aXNpdGlvblRvb2xUeXBlJywgdG9vbFR5cGVTZWxlY3QudmFsdWUpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdhY3F1aXNpdGlvblRvb2xOYW1lJywgdG9vbE5hbWVTZWxlY3QudmFsdWUpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdhY3F1aXNpdGlvbkRlbGF5JywgZGVsYXkpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdhY3F1aXNpdGlvbkFsbG93UmVwZWF0JywgYWxsb3dSZXBlYXRDaGVja2JveC5jaGVja2VkKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6I635a6i6YWN572u5bey5L+d5a2Y",
        "JywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6I635a6i6YWN572u5bey5pu05pawJyk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfkv53lrZjojrflrqLphY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5L+d5a2Y6I635a6i6YWN572u5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhua1i+ivleiOt+WuouW3peWFtw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlVGVzdEFjcXVpc2l0aW9uKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ato+WcqOa1i+ivleiOt+WuouW3peWFty4uLicsICdpbmZvJyk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCB0b29sVHlwZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdhY3F1aXNpdGlvblRvb2xUeXBlJywgJ+eVmei1hOWNoScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xOYW1lID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uVG9vbE5hbWUnLCAnJyk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBDdXN0b21lckFjcXVpc2l0aW9uU2VuZGVyLnNlbmRBY3F1aXNpdGlvblRvb2wodG9vbFR5cGUsIHRvb2xOYW1lKTsNCg0KICAgICAgICAgICAgICAgIGlmIChyZXN1bHQpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfojrflrqLlt6XlhbfmtYvor5XmiJDlip8nLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6I635a6i5bel5YW35rWL6K+V5oiQ5YqfJywgeyB0b29sVHlwZSwgdG9vbE5hbWUgfSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfojrflrqLlt6XlhbfmtYvor5XlpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfojrflrqLlt6XlhbfmtYvor5XlpLHotKUnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmtYvor5XojrflrqLlt6Xlhbfml7blj5HnlJ/plJnor68nLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5rWL6K+V6I635a6i5bel5YW35aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWIt+aWsOW3peWFt+WIl+ihqA0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlUmVmcmVzaFRvb2xzKCkgew0K",
        "ICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCB0b29sVHlwZVNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b29sLXR5cGUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0b29sTmFtZVNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b29sLW5hbWUnKTsNCg0KICAgICAgICAgICAgICAgIGlmICghdG9vbFR5cGVTZWxlY3QgfHwgIXRvb2xOYW1lU2VsZWN0KSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCB0b29sVHlwZSA9IHRvb2xUeXBlU2VsZWN0LnZhbHVlOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5q2j5Zyo5Yi35paw5bel5YW35YiX6KGoLi4uJywgJ2luZm8nKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xzID0gYXdhaXQgQ3VzdG9tZXJBY3F1aXNpdGlvblNlbmRlci5nZXRBdmFpbGFibGVUb29scyh0b29sVHlwZSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmuIXnqbrnjrDmnInpgInpobkNCiAgICAgICAgICAgICAgICB0b29sTmFtZVNlbGVjdC5pbm5lckhUTUwgPSAnPG9wdGlvbiB2YWx1ZT0iIj7oh6rliqjpgInmi6nnrKzkuIDkuKrlj6/nlKjlt6Xlhbc8L29wdGlvbj4nOw0KDQogICAgICAgICAgICAgICAgLy8g5re75Yqg5bel5YW36YCJ6aG5DQogICAgICAgICAgICAgICAgdG9vbHMuZm9yRWFjaCh0b29sID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7DQogICAgICAgICAgICAgICAgICAgIG9wdGlvbi52YWx1ZSA9IHRvb2wubmFtZTsNCiAgICAgICAgICAgICAgICAgICAgb3B0aW9uLnRleHRDb250ZW50ID0gYCR7dG9vbC5uYW1lfSR7dG9vbC5kZXNjcmlwdGlvbiA/ICcgLSAnICsgdG9vbC5kZXNjcmlwdGlvbiA6ICcnfWA7DQogICAgICAgICAgICAgICAgICAgIHRvb2xOYW1lU2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbik7DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmgaLlpI3kuYvliY3pgInmi6nnmoTlt6XlhbcNCiAgICAgICAgICAgICAgICBjb25zdCBzYXZlZFRvb2xOYW1lID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uVG9vbE5hbWUnLCAnJyk7DQogICAgICAgICAgICAgICAgaWYgKHNhdmVkVG9vbE5hbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgdG9vbE5hbWVTZWxlY3QudmFsdWUgPSBzYXZlZFRvb2xOYW1lOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbihg5bey5Yi35pawJHt0b29scy5sZW5ndGh95LiqJHt0b29sVHlwZX3lt6XlhbdgLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflt6XlhbfliJfooajlt7LliLfmlrAnLCB7IHRvb2xUeXBlLCBjb3VudDogdG9vbHMubGVu",
        "Z3RoIH0pOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Yi35paw5bel5YW35YiX6KGo5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WIt+aWsOW3peWFt+WIl+ihqOWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIblt6Xlhbfnsbvlnovlj5jljJYNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGhhbmRsZVRvb2xUeXBlQ2hhbmdlKCkgew0KICAgICAgICAgICAgLy8g5bel5YW357G75Z6L5Y+Y5YyW5pe26Ieq5Yqo5Yi35paw5bel5YW35YiX6KGoDQogICAgICAgICAgICBhd2FpdCB0aGlzLmhhbmRsZVJlZnJlc2hUb29scygpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmnIDlsI/ljJYNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZU1pbmltaXplKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc01pbmltaXplZCkgew0KICAgICAgICAgICAgICAgICAgICAvLyDku47mnIDlsI/ljJbnirbmgIHmgaLlpI0NCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXN0b3JlRnJvbU1pbmltaXplZCgpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOacgOWwj+WMluWIsOWwj+aCrOa1ruahhg0KICAgICAgICAgICAgICAgICAgICB0aGlzLm1pbmltaXplVG9GbG9hdCgpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmnIDlsI/ljJbmk43kvZzlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmnIDlsI/ljJbliLDlsI/mgqzmta7moYYNCiAgICAgICAgICovDQogICAgICAgIG1pbmltaXplVG9GbG9hdCgpIHsNCiAgICAgICAgICAgIC8vIOS/neWtmOW9k+WJjeS9jee9rg0KICAgICAgICAgICAgdGhpcy5zYXZlUGFuZWxQb3NpdGlvbigpOw0KDQogICAgICAgICAgICAvLyDpmpDol4/kuLvpnaLmnb8NCiAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUuZGlzcGxheSA9ICdub25lJzsNCiAgICAgICAgICAgIHRoaXMuaXNNaW5pbWl6ZWQgPSB0cnVlOw0KDQogICAgICAgICAgICAvLyDliJvlu7rlsI/mgqzmta7moYYNCiAgICAgICAgICAgIHRoaXMuY3JlYXRlTWluaUZsb2F0KCk7DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6Z2i5p2/5bey5pyA5bCP5YyW5Yiw5oKs5rWu5qGGJyk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7juacgOWwj+WMlueKtuaAgeaBouWkjQ0KICAgICAgICAgKi8NCiAgICAgICAgcmVzdG9yZUZyb21N",
        "aW5pbWl6ZWQoKSB7DQogICAgICAgICAgICAvLyDnp7vpmaTlsI/mgqzmta7moYYNCiAgICAgICAgICAgIHRoaXMucmVtb3ZlTWluaUZsb2F0KCk7DQoNCiAgICAgICAgICAgIC8vIOaYvuekuuS4u+mdouadvw0KICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsNCiAgICAgICAgICAgIHRoaXMuaXNNaW5pbWl6ZWQgPSBmYWxzZTsNCiAgICAgICAgICAgIHRoaXMuaXNWaXNpYmxlID0gdHJ1ZTsNCg0KICAgICAgICAgICAgLy8g5oGi5aSN5L2N572uDQogICAgICAgICAgICBjb25zdCBzYXZlZFBvc2l0aW9uID0gdGhpcy5sb2FkUGFuZWxQb3NpdGlvbigpOw0KICAgICAgICAgICAgaWYgKHNhdmVkUG9zaXRpb24gJiYgIXNhdmVkUG9zaXRpb24uaXNNaW5pbWl6ZWQpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb25zdHJhaW5lZCA9IHRoaXMuY29uc3RyYWluUGFuZWxQb3NpdGlvbihzYXZlZFBvc2l0aW9uLmxlZnQsIHNhdmVkUG9zaXRpb24udG9wKTsNCiAgICAgICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLmxlZnQgPSBjb25zdHJhaW5lZC5sZWZ0ICsgJ3B4JzsNCiAgICAgICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLnRvcCA9IGNvbnN0cmFpbmVkLnRvcCArICdweCc7DQogICAgICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS5yaWdodCA9ICdhdXRvJzsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpnaLmnb/lt7Lku47mgqzmta7moYbmgaLlpI0nKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yib5bu65bCP5oKs5rWu5qGGDQogICAgICAgICAqLw0KICAgICAgICBjcmVhdGVNaW5pRmxvYXQoKSB7DQogICAgICAgICAgICAvLyDlpoLmnpzlt7LlrZjlnKjvvIzlhYjnp7vpmaQNCiAgICAgICAgICAgIHRoaXMucmVtb3ZlTWluaUZsb2F0KCk7DQoNCiAgICAgICAgICAgIHRoaXMubWluaUZsb2F0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7DQogICAgICAgICAgICB0aGlzLm1pbmlGbG9hdC5pZCA9ICd4aHMtYWktbWluaS1mbG9hdCc7DQogICAgICAgICAgICB0aGlzLm1pbmlGbG9hdC5pbm5lckhUTUwgPSAn8J+klic7DQogICAgICAgICAgICB0aGlzLm1pbmlGbG9hdC50aXRsZSA9ICfngrnlh7vlsZXlvIDlsI/nuqLkuaZBSeiHquWKqOWbnuWkjeW3peWFtyc7DQoNCiAgICAgICAgICAgIC8vIOa3u+WKoOWIsOmhtemdog0KICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLm1pbmlGbG9hdCk7DQoNCiAgICAgICAgICAgIC8vIOS9v+Wwj+aCrOa1ruahhuWPr+aLluaLve+8iOWMheWQq+eCueWHu+WkhOeQhu+8iQ0KICAgICAgICAgICAgdGhpcy5tYWtlTWluaUZsb2F0RHJhZ2dhYmxlKCk7DQoNCiAgICAgICAgICAgIC8vIOaBouWkjeWwj+aCrOa1ruahhuS9jee9rg0KICAgICAgICAgICAgdGhpcy5yZXN0b3JlTWluaUZsb2F0UG9zaXRpb24oKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAv",
        "KioNCiAgICAgICAgICog56e76Zmk5bCP5oKs5rWu5qGGDQogICAgICAgICAqLw0KICAgICAgICByZW1vdmVNaW5pRmxvYXQoKSB7DQogICAgICAgICAgICBpZiAodGhpcy5taW5pRmxvYXQgJiYgdGhpcy5taW5pRmxvYXQucGFyZW50Tm9kZSkgew0KICAgICAgICAgICAgICAgIHRoaXMubWluaUZsb2F0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5taW5pRmxvYXQpOw0KICAgICAgICAgICAgICAgIHRoaXMubWluaUZsb2F0ID0gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5L2/5bCP5oKs5rWu5qGG5Y+v5ouW5ou9DQogICAgICAgICAqLw0KICAgICAgICBtYWtlTWluaUZsb2F0RHJhZ2dhYmxlKCkgew0KICAgICAgICAgICAgaWYgKCF0aGlzLm1pbmlGbG9hdCkgcmV0dXJuOw0KDQogICAgICAgICAgICBsZXQgaXNEcmFnZ2luZyA9IGZhbHNlOw0KICAgICAgICAgICAgbGV0IGhhc01vdmVkID0gZmFsc2U7DQogICAgICAgICAgICBsZXQgc3RhcnRYLCBzdGFydFksIGluaXRpYWxMZWZ0LCBpbml0aWFsVG9wOw0KICAgICAgICAgICAgbGV0IGRyYWdTdGFydFRpbWUgPSAwOw0KDQogICAgICAgICAgICBjb25zdCBoYW5kbGVNb3VzZURvd24gPSAoZSkgPT4gew0KICAgICAgICAgICAgICAgIGlzRHJhZ2dpbmcgPSB0cnVlOw0KICAgICAgICAgICAgICAgIGhhc01vdmVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgZHJhZ1N0YXJ0VGltZSA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgc3RhcnRYID0gZS5jbGllbnRYOw0KICAgICAgICAgICAgICAgIHN0YXJ0WSA9IGUuY2xpZW50WTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHJlY3QgPSB0aGlzLm1pbmlGbG9hdC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICBpbml0aWFsTGVmdCA9IHJlY3QubGVmdDsNCiAgICAgICAgICAgICAgICBpbml0aWFsVG9wID0gcmVjdC50b3A7DQoNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBoYW5kbGVNb3VzZU1vdmUpOw0KICAgICAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBoYW5kbGVNb3VzZVVwKTsNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLnVzZXJTZWxlY3QgPSAnbm9uZSc7DQogICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOw0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgY29uc3QgaGFuZGxlTW91c2VNb3ZlID0gKGUpID0+IHsNCiAgICAgICAgICAgICAgICBpZiAoIWlzRHJhZ2dpbmcpIHJldHVybjsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IGRlbHRhWCA9IGUuY2xpZW50WCAtIHN0YXJ0WDsNCiAgICAgICAgICAgICAgICBjb25zdCBkZWx0YVkgPSBlLmNsaWVudFkgLSBzdGFydFk7DQoNCiAgICAgICAgICAgICAgICAvLyDlpoLmnpznp7vliqjot53nprvotoXov4fpmIjlgLzvvIzmoIforrDkuLrm",
        "i5bmi70NCiAgICAgICAgICAgICAgICBpZiAoTWF0aC5hYnMoZGVsdGFYKSA+IDMgfHwgTWF0aC5hYnMoZGVsdGFZKSA+IDMpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFoYXNNb3ZlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaGFzTW92ZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5taW5pRmxvYXQuY2xhc3NMaXN0LmFkZCgnZHJhZ2dpbmcnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIGxldCBuZXdMZWZ0ID0gaW5pdGlhbExlZnQgKyBkZWx0YVg7DQogICAgICAgICAgICAgICAgICAgIGxldCBuZXdUb3AgPSBpbml0aWFsVG9wICsgZGVsdGFZOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOmZkOWItuWcqOWPr+inhuWMuuWfn+WGhQ0KICAgICAgICAgICAgICAgICAgICBjb25zdCBmbG9hdFNpemUgPSA2MDsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWFyZ2luID0gMTA7DQogICAgICAgICAgICAgICAgICAgIG5ld0xlZnQgPSBNYXRoLm1heChtYXJnaW4sIE1hdGgubWluKG5ld0xlZnQsIHdpbmRvdy5pbm5lcldpZHRoIC0gZmxvYXRTaXplIC0gbWFyZ2luKSk7DQogICAgICAgICAgICAgICAgICAgIG5ld1RvcCA9IE1hdGgubWF4KG1hcmdpbiwgTWF0aC5taW4obmV3VG9wLCB3aW5kb3cuaW5uZXJIZWlnaHQgLSBmbG9hdFNpemUgLSBtYXJnaW4pKTsNCg0KICAgICAgICAgICAgICAgICAgICB0aGlzLm1pbmlGbG9hdC5zdHlsZS5sZWZ0ID0gbmV3TGVmdCArICdweCc7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubWluaUZsb2F0LnN0eWxlLnRvcCA9IG5ld1RvcCArICdweCc7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubWluaUZsb2F0LnN0eWxlLnJpZ2h0ID0gJ2F1dG8nOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLm1pbmlGbG9hdC5zdHlsZS5ib3R0b20gPSAnYXV0byc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgY29uc3QgaGFuZGxlTW91c2VVcCA9IChlKSA9PiB7DQogICAgICAgICAgICAgICAgaWYgKCFpc0RyYWdnaW5nKSByZXR1cm47DQoNCiAgICAgICAgICAgICAgICBjb25zdCBkcmFnRHVyYXRpb24gPSBEYXRlLm5vdygpIC0gZHJhZ1N0YXJ0VGltZTsNCiAgICAgICAgICAgICAgICBpc0RyYWdnaW5nID0gZmFsc2U7DQoNCiAgICAgICAgICAgICAgICB0aGlzLm1pbmlGbG9hdC5jbGFzc0xpc3QucmVtb3ZlKCdkcmFnZ2luZycpOw0KICAgICAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGhhbmRsZU1vdXNlTW92ZSk7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGhhbmRsZU1vdXNlVXApOw0KICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUudXNlclNlbGVjdCA9ICcnOw0KDQogICAgICAgICAgICAgICAgaWYgKGhhc01vdmVkKSB7DQogICAgICAgICAgICAg",
        "ICAgICAgIC8vIOWmguaenOWPkeeUn+S6huaLluaLve+8jOS/neWtmOS9jee9rg0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNhdmVNaW5pRmxvYXRQb3NpdGlvbigpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+Wwj+aCrOa1ruahhuaLluaLveWujOaIkCcpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZHJhZ0R1cmF0aW9uIDwgMzAwKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOayoeacieaLluaLveS4lOaXtumXtOW+iOefre+8jOinpuWPkeeCueWHu+S6i+S7tg0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+Wwj+aCrOa1ruahhueCueWHu+S6i+S7tuinpuWPkScpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnJlc3RvcmVGcm9tTWluaW1pemVkKCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgdGhpcy5taW5pRmxvYXQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgaGFuZGxlTW91c2VEb3duKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5L+d5a2Y5bCP5oKs5rWu5qGG5L2N572uDQogICAgICAgICAqLw0KICAgICAgICBzYXZlTWluaUZsb2F0UG9zaXRpb24oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghdGhpcy5taW5pRmxvYXQpIHJldHVybjsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHJlY3QgPSB0aGlzLm1pbmlGbG9hdC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBwb3NpdGlvbiA9IHsNCiAgICAgICAgICAgICAgICAgICAgbGVmdDogcmVjdC5sZWZ0LA0KICAgICAgICAgICAgICAgICAgICB0b3A6IHJlY3QudG9wLA0KICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IERhdGUubm93KCkNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3hocy1haS1taW5pLWZsb2F0LXBvc2l0aW9uJywgSlNPTi5zdHJpbmdpZnkocG9zaXRpb24pKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+S/neWtmOWwj+aCrOa1ruahhuS9jee9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaBouWkjeWwj+aCrOa1ruahhuS9jee9rg0KICAgICAgICAgKi8NCiAgICAgICAgcmVzdG9yZU1pbmlGbG9hdFBvc2l0aW9uKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBzYXZlZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd4aHMtYWktbWluaS1mbG9hdC1wb3NpdGlvbicpOw0KICAgICAgICAgICAgICAgIGlmIChzYXZlZCAmJiB0aGlzLm1pbmlGbG9hdCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBwb3NpdGlvbiA9IEpTT04ucGFyc2Uoc2F2ZWQpOw0K",
        "ICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHBvc2l0aW9uLmxlZnQgPT09ICdudW1iZXInICYmIHR5cGVvZiBwb3NpdGlvbi50b3AgPT09ICdudW1iZXInKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDnoa7kv53kvY3nva7lnKjlj6/op4bljLrln5/lhoUNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZsb2F0U2l6ZSA9IDYwOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWFyZ2luID0gMTA7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBsZWZ0ID0gTWF0aC5tYXgobWFyZ2luLCBNYXRoLm1pbihwb3NpdGlvbi5sZWZ0LCB3aW5kb3cuaW5uZXJXaWR0aCAtIGZsb2F0U2l6ZSAtIG1hcmdpbikpOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9wID0gTWF0aC5tYXgobWFyZ2luLCBNYXRoLm1pbihwb3NpdGlvbi50b3AsIHdpbmRvdy5pbm5lckhlaWdodCAtIGZsb2F0U2l6ZSAtIG1hcmdpbikpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1pbmlGbG9hdC5zdHlsZS5sZWZ0ID0gbGVmdCArICdweCc7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1pbmlGbG9hdC5zdHlsZS50b3AgPSB0b3AgKyAncHgnOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5taW5pRmxvYXQuc3R5bGUucmlnaHQgPSAnYXV0byc7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1pbmlGbG9hdC5zdHlsZS5ib3R0b20gPSAnYXV0byc7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmgaLlpI3lsI/mgqzmta7moYbkvY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliqDovb3phY3nva7liLDooajljZUNCiAgICAgICAgICovDQogICAgICAgIGxvYWRDb25maWcoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGFwaUtleUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWFwaS1rZXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhcGlVcmxJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hcGktdXJsJyk7DQogICAgICAgICAgICAgICAgY29uc3QgcmVwbHlEZWxheUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXJlcGx5LWRlbGF5Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgcHJvbXB0SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcHJvbXB0Jyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoYXBpS2V5SW5wdXQpIGFwaUtleUlucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FwaUtleScsICcnKTsNCiAgICAgICAgICAgICAgICBpZiAoYXBpVXJsSW5wdXQpIGFw",
        "aVVybElucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FwaVVybCcsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmFwaVVybCk7DQogICAgICAgICAgICAgICAgaWYgKHJlcGx5RGVsYXlJbnB1dCkgcmVwbHlEZWxheUlucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ3JlcGx5RGVsYXknLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5yZXBseURlbGF5KTsNCiAgICAgICAgICAgICAgICBpZiAocHJvbXB0SW5wdXQpIHByb21wdElucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2F1dG9SZXBseVByb21wdCcsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmF1dG9SZXBseVByb21wdCk7DQoNCiAgICAgICAgICAgICAgICAvLyDliqDovb3ojrflrqLlt6XlhbfphY3nva4NCiAgICAgICAgICAgICAgICBjb25zdCBhY3F1aXNpdGlvbkVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hY3F1aXNpdGlvbi1lbmFibGVkJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdHJpZ2dlclJvdW5kU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRyaWdnZXItcm91bmQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBmYWxsYmFja1JvdW5kU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZhbGxiYWNrLXJvdW5kJyk7DQogICAgICAgICAgICAgICAgY29uc3Qga2V5d29yZHNUZXh0YXJlYSA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1pbnRlcmVzdC1rZXl3b3JkcycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xUeXBlU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvb2wtdHlwZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xOYW1lU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvb2wtbmFtZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlbGF5SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYWNxdWlzaXRpb24tZGVsYXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhbGxvd1JlcGVhdENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWFsbG93LXJlcGVhdCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFjcXVpc2l0aW9uU2V0dGluZ3MgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYWNxdWlzaXRpb24tc2V0dGluZ3MnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChhY3F1aXNpdGlvbkVuYWJsZWRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBhY3F1aXNpdGlvbkVuYWJsZWRDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uRW5hYmxlZCcsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmFjcXVpc2l0aW9uRW5hYmxlZCk7DQogICAgICAgICAgICAgICAgICAgIC8vIOagueaNruWQr+eUqOeKtuaAgeaYvuekui/pmpDo",
        "l4/orr7nva7ljLrln58NCiAgICAgICAgICAgICAgICAgICAgaWYgKGFjcXVpc2l0aW9uU2V0dGluZ3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGFjcXVpc2l0aW9uU2V0dGluZ3Muc3R5bGUuZGlzcGxheSA9IGFjcXVpc2l0aW9uRW5hYmxlZENoZWNrYm94LmNoZWNrZWQgPyAnYmxvY2snIDogJ25vbmUnOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHRyaWdnZXJSb3VuZFNlbGVjdCkgdHJpZ2dlclJvdW5kU2VsZWN0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uVHJpZ2dlclJvdW5kJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuYWNxdWlzaXRpb25UcmlnZ2VyUm91bmQpOw0KICAgICAgICAgICAgICAgIGlmIChmYWxsYmFja1JvdW5kU2VsZWN0KSBmYWxsYmFja1JvdW5kU2VsZWN0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uRmFsbGJhY2tSb3VuZCcsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmFjcXVpc2l0aW9uRmFsbGJhY2tSb3VuZCk7DQogICAgICAgICAgICAgICAgaWYgKGtleXdvcmRzVGV4dGFyZWEpIGtleXdvcmRzVGV4dGFyZWEudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25LZXl3b3JkcycsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmFjcXVpc2l0aW9uS2V5d29yZHMpOw0KICAgICAgICAgICAgICAgIGlmICh0b29sVHlwZVNlbGVjdCkgdG9vbFR5cGVTZWxlY3QudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25Ub29sVHlwZScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmFjcXVpc2l0aW9uVG9vbFR5cGUpOw0KICAgICAgICAgICAgICAgIGlmIChkZWxheUlucHV0KSBkZWxheUlucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uRGVsYXknLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5hY3F1aXNpdGlvbkRlbGF5KTsNCiAgICAgICAgICAgICAgICBpZiAoYWxsb3dSZXBlYXRDaGVja2JveCkgYWxsb3dSZXBlYXRDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uQWxsb3dSZXBlYXQnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5hY3F1aXNpdGlvbkFsbG93UmVwZWF0KTsNCg0KICAgICAgICAgICAgICAgIC8vIOW8guatpeWKoOi9veW3peWFt+WIl+ihqA0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBpZiAodG9vbFR5cGVTZWxlY3QgJiYgdG9vbFR5cGVTZWxlY3QudmFsdWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlUmVmcmVzaFRvb2xzKCkudGhlbigoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Yqg6L295a6M5bel5YW35YiX6KGo5ZCO6K6+572u6YCJ5Lit55qE5bel5YW3DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2F2ZWRUb29sTmFtZSA9IENvbmZpZ01h",
        "bmFnZXIuZ2V0KCdhY3F1aXNpdGlvblRvb2xOYW1lJywgJycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzYXZlZFRvb2xOYW1lICYmIHRvb2xOYW1lU2VsZWN0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvb2xOYW1lU2VsZWN0LnZhbHVlID0gc2F2ZWRUb29sTmFtZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0sIDEwMDApOw0KDQogICAgICAgICAgICAgICAgLy8g5Yqg6L296buR5ZCN5Y2V6YWN572uDQogICAgICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0RW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJsYWNrbGlzdC1lbmFibGVkJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYXV0b0RldGVjdEJsb2NrZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hdXRvLWRldGVjdC1ibG9ja2VkJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0Q29udGVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1ibGFja2xpc3QtY29udGVudCcpOw0KDQogICAgICAgICAgICAgICAgaWYgKGJsYWNrbGlzdEVuYWJsZWRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBibGFja2xpc3RFbmFibGVkQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdibGFja2xpc3RFbmFibGVkJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuYmxhY2tsaXN0RW5hYmxlZCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGF1dG9EZXRlY3RCbG9ja2VkQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgYXV0b0RldGVjdEJsb2NrZWRDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2F1dG9EZXRlY3RCbG9ja2VkJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuYXV0b0RldGVjdEJsb2NrZWQpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOa4suafk+m7keWQjeWNleWIl+ihqA0KICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyQmxhY2tsaXN0SXRlbXMoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWKoOi9veS8muivneiusOW/humFjee9rg0KICAgICAgICAgICAgICAgIGNvbnN0IHNlc3Npb25NZW1vcnlFbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2Vzc2lvbi1tZW1vcnktZW5hYmxlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNlc3Npb25FeHBpcmVEYXlzSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2Vzc2lvbi1leHBpcmUtZGF5cycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IG1heFNlc3Npb25zSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktbWF4LXNlc3Np",
        "b25zJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoc2Vzc2lvbk1lbW9yeUVuYWJsZWRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBzZXNzaW9uTWVtb3J5RW5hYmxlZENoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnc2Vzc2lvbk1lbW9yeUVuYWJsZWQnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5zZXNzaW9uTWVtb3J5RW5hYmxlZCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHNlc3Npb25FeHBpcmVEYXlzSW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvbkV4cGlyZURheXNJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzZXNzaW9uRXhwaXJlRGF5cycsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLnNlc3Npb25FeHBpcmVEYXlzKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAobWF4U2Vzc2lvbnNJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBtYXhTZXNzaW9uc0lucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ21heFNlc3Npb25zJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MubWF4U2Vzc2lvbnMpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOS8muivnee7n+iuoQ0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU2Vzc2lvblN0YXRzKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDliqDovb3ogZrlhYnov5vnur/phY3nva4NCiAgICAgICAgICAgICAgICBjb25zdCBzcG90bGlnaHRFbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc3BvdGxpZ2h0LWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzcG90bGlnaHRUZW1wbGF0ZVRleHRhcmVhID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC10ZW1wbGF0ZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNwb3RsaWdodERlZmF1bHRDb3Vyc2VJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtZGVmYXVsdC1jb3Vyc2UnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChzcG90bGlnaHRFbmFibGVkQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgc3BvdGxpZ2h0RW5hYmxlZENoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnc3BvdGxpZ2h0TGVhZEVuYWJsZWQnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5zcG90bGlnaHRMZWFkRW5hYmxlZCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHNwb3RsaWdodFRlbXBsYXRlVGV4dGFyZWEpIHsNCiAgICAgICAgICAgICAgICAgICAgc3BvdGxpZ2h0VGVtcGxhdGVUZXh0YXJlYS52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGlnaHRMZWFkVGVtcGxhdGUnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5zcG90bGlnaHRMZWFkVGVtcGxhdGUpOw0KICAgICAgICAgICAgICAg",
        "IH0NCg0KICAgICAgICAgICAgICAgIGlmIChzcG90bGlnaHREZWZhdWx0Q291cnNlSW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgc3BvdGxpZ2h0RGVmYXVsdENvdXJzZUlucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ3Nwb3RsaWdodERlZmF1bHRDb3Vyc2VOYW1lJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1Muc3BvdGxpZ2h0RGVmYXVsdENvdXJzZU5hbWUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOiBmuWFiei/m+e6v+e7n+iuoQ0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU3BvdGxpZ2h0U3RhdHMoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWKoOi9veWDteWwuOacquivu+WkhOeQhumFjee9rg0KICAgICAgICAgICAgICAgIHRoaXMubG9hZFpvbWJpZUNvbmZpZygpOw0KDQogICAgICAgICAgICAgICAgLy8g5Yqg6L296L+957KJ6YWN572uDQogICAgICAgICAgICAgICAgdGhpcy5sb2FkRm9sbG93VXBDb25maWcoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWKoOi9vemUmeivr+aOqOmAgemFjee9rg0KICAgICAgICAgICAgICAgIHRoaXMubG9hZEVycm9yTm90aWZpY2F0aW9uQ29uZmlnKCk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliqDovb3phY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbpu5HlkI3ljZXlsZXlvIAv5pS26LW3DQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVUb2dnbGVCbGFja2xpc3QoKSB7DQogICAgICAgICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJsYWNrbGlzdC1jb250ZW50Jyk7DQogICAgICAgICAgICBjb25zdCBidXR0b24gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWJsYWNrbGlzdCcpOw0KDQogICAgICAgICAgICBpZiAoY29udGVudCAmJiBidXR0b24pIHsNCiAgICAgICAgICAgICAgICBpZiAoY29udGVudC5zdHlsZS5kaXNwbGF5ID09PSAnbm9uZScpIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsNCiAgICAgICAgICAgICAgICAgICAgYnV0dG9uLnRleHRDb250ZW50ID0gJ+aUtui1tyc7DQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyQmxhY2tsaXN0SXRlbXMoKTsgLy8g5bGV5byA5pe25riy5p+T6buR5ZCN5Y2V5YiX6KGoDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOw0KICAgICAgICAgICAgICAgICAgICBidXR0b24udGV4dENvbnRlbnQgPSAn5bGV5byAJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAg",
        "ICAgICAqIOWkhOeQhum7keWQjeWNleWKn+iDveWQr+eUqOeKtuaAgeWPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQmxhY2tsaXN0RW5hYmxlZENoYW5nZSgpIHsNCiAgICAgICAgICAgIGNvbnN0IGNoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJsYWNrbGlzdC1lbmFibGVkJyk7DQogICAgICAgICAgICBpZiAoY2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnYmxhY2tsaXN0RW5hYmxlZCcsIGNoZWNrYm94LmNoZWNrZWQpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6buR5ZCN5Y2V5Yqf6IO954q25oCB5bey5pu05pS5JywgeyBlbmFibGVkOiBjaGVja2JveC5jaGVja2VkIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIboh6rliqjmo4DmtYvooqvmi4npu5Hlip/og73nirbmgIHlj5jljJYNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUF1dG9EZXRlY3RDaGFuZ2UoKSB7DQogICAgICAgICAgICBjb25zdCBjaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hdXRvLWRldGVjdC1ibG9ja2VkJyk7DQogICAgICAgICAgICBpZiAoY2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnYXV0b0RldGVjdEJsb2NrZWQnLCBjaGVja2JveC5jaGVja2VkKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+iHquWKqOajgOa1i+iiq+aLiem7keWKn+iDveeKtuaAgeW3suabtOaUuScsIHsgZW5hYmxlZDogY2hlY2tib3guY2hlY2tlZCB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5re75Yqg6buR5ZCN5Y2VDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVBZGRCbGFja2xpc3QoKSB7DQogICAgICAgICAgICBjb25zdCBpbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1ibGFja2xpc3QtaW5wdXQnKTsNCiAgICAgICAgICAgIGlmICghaW5wdXQgfHwgIWlucHV0LnZhbHVlLnRyaW0oKSkgew0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6K+36L6T5YWl55So5oi35ZCN5oiW55So5oi3SUQnLCAnd2FybmluZycpOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgdXNlcklkZW50aWZpZXIgPSBpbnB1dC52YWx1ZS50cmltKCk7DQogICAgICAgICAgICBjb25zdCBhZGRlZCA9IEJsYWNrbGlzdE1hbmFnZXIuYWRkKHVzZXJJZGVudGlmaWVyLCB1c2VySWRlbnRpZmllciwgJ21hbnVhbCcsICfmiYvliqjmt7vliqAnKTsNCg0KICAgICAgICAgICAgaWYgKGFkZGVkKSB7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKGDlt7Lmt7vliqAgIiR7dXNlcklkZW50aWZpZXJ9IiDliLDpu5HlkI3ljZVgLCAnc3VjY2VzcycpOw0K",
        "ICAgICAgICAgICAgICAgIGlucHV0LnZhbHVlID0gJyc7IC8vIOa4heepuui+k+WFpeahhg0KICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyQmxhY2tsaXN0SXRlbXMoKTsgLy8g6YeN5paw5riy5p+T6buR5ZCN5Y2V5YiX6KGoDQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5re75Yqg6buR5ZCN5Y2V5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuS/neWtmOm7keWQjeWNleiuvue9rg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlU2F2ZUJsYWNrbGlzdCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0RW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJsYWNrbGlzdC1lbmFibGVkJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYXV0b0RldGVjdEJsb2NrZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hdXRvLWRldGVjdC1ibG9ja2VkJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoYmxhY2tsaXN0RW5hYmxlZENoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdibGFja2xpc3RFbmFibGVkJywgYmxhY2tsaXN0RW5hYmxlZENoZWNrYm94LmNoZWNrZWQpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChhdXRvRGV0ZWN0QmxvY2tlZENoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdhdXRvRGV0ZWN0QmxvY2tlZCcsIGF1dG9EZXRlY3RCbG9ja2VkQ2hlY2tib3guY2hlY2tlZCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfpu5HlkI3ljZXorr7nva7lt7Lkv53lrZgnLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S/neWtmOm7keWQjeWNleiuvue9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfkv53lrZjpu5HlkI3ljZXorr7nva7lpLHotKU6ICcgKyBlcnJvci5tZXNzYWdlLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5riF56m66buR5ZCN5Y2VDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVDbGVhckJsYWNrbGlzdCgpIHsNCiAgICAgICAgICAgIGlmIChjb25maXJtKCfnoa7lrpropoHmuIXnqbrpu5HlkI3ljZXlkJfvvJ/mraTmk43kvZzkuI3lj6/mkqTplIDjgIInKSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNsZWFyZWQgPSBCbGFja2xpc3RNYW5hZ2VyLmNsZWFyKCk7DQogICAgICAgICAgICAgICAg",
        "aWYgKGNsZWFyZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfpu5HlkI3ljZXlt7LmuIXnqbonLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckJsYWNrbGlzdEl0ZW1zKCk7IC8vIOmHjeaWsOa4suafk+m7keWQjeWNleWIl+ihqA0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5riF56m66buR5ZCN5Y2V5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIblr7zlh7rpu5HlkI3ljZUNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUV4cG9ydEJsYWNrbGlzdCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0ID0gQmxhY2tsaXN0TWFuYWdlci5leHBvcnQoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBqc29uU3RyID0gSlNPTi5zdHJpbmdpZnkoYmxhY2tsaXN0LCBudWxsLCAyKTsNCiAgICAgICAgICAgICAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoW2pzb25TdHJdLCB7IHR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJyB9KTsNCiAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOw0KDQogICAgICAgICAgICAgICAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsNCiAgICAgICAgICAgICAgICBhLmhyZWYgPSB1cmw7DQogICAgICAgICAgICAgICAgYS5kb3dubG9hZCA9IGB4aHMtYmxhY2tsaXN0LSR7bmV3IERhdGUoKS50b0lTT1N0cmluZygpLnNsaWNlKDAsIDEwKX0uanNvbmA7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTsNCiAgICAgICAgICAgICAgICBhLmNsaWNrKCk7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChhKTsNCiAgICAgICAgICAgICAgICBVUkwucmV2b2tlT2JqZWN0VVJMKHVybCk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+m7keWQjeWNleWvvOWHuuaIkOWKnycsICdzdWNjZXNzJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5a+85Ye66buR5ZCN5Y2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WvvOWHuum7keWQjeWNleWksei0pTogJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIblr7zlhaXpu5HlkI3ljZUNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUltcG9ydEJsYWNrbGlzdCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29u",
        "c3QgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpOw0KICAgICAgICAgICAgICAgIGlucHV0LnR5cGUgPSAnZmlsZSc7DQogICAgICAgICAgICAgICAgaW5wdXQuYWNjZXB0ID0gJy5qc29uJzsNCg0KICAgICAgICAgICAgICAgIGlucHV0Lm9uY2hhbmdlID0gKGUpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmlsZSA9IGUudGFyZ2V0LmZpbGVzWzBdOw0KICAgICAgICAgICAgICAgICAgICBpZiAoIWZpbGUpIHJldHVybjsNCg0KICAgICAgICAgICAgICAgICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOw0KICAgICAgICAgICAgICAgICAgICByZWFkZXIub25sb2FkID0gKGV2ZW50KSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKGV2ZW50LnRhcmdldC5yZXN1bHQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGltcG9ydGVkID0gQmxhY2tsaXN0TWFuYWdlci5pbXBvcnQoZGF0YSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW1wb3J0ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKGDmiJDlip/lr7zlhaUgJHtkYXRhLmxlbmd0aH0g5p2h6buR5ZCN5Y2V6K6w5b2VYCwgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJCbGFja2xpc3RJdGVtcygpOyAvLyDph43mlrDmuLLmn5Ppu5HlkI3ljZXliJfooagNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WvvOWFpem7keWQjeWNleWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfop6PmnpDpu5HlkI3ljZXmlofku7blpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6Kej5p6Q6buR5ZCN5Y2V5paH5Lu25aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAgICAgcmVhZGVyLnJlYWRBc1RleHQoZmlsZSk7DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIGlucHV0LmNsaWNrKCk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5a+85YWl6buR5ZCN5Y2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAg",
        "ICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WvvOWFpem7keWQjeWNleWksei0pTogJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuLLmn5Ppu5HlkI3ljZXliJfooajpobkNCiAgICAgICAgICovDQogICAgICAgIHJlbmRlckJsYWNrbGlzdEl0ZW1zKCkgew0KICAgICAgICAgICAgY29uc3QgbGlzdENvbnRhaW5lciA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1ibGFja2xpc3QtbGlzdCcpOw0KICAgICAgICAgICAgY29uc3QgY291bnRFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJsYWNrbGlzdC1jb3VudCcpOw0KDQogICAgICAgICAgICBpZiAoIWxpc3RDb250YWluZXIpIHJldHVybjsNCg0KICAgICAgICAgICAgLy8g6I635Y+W6buR5ZCN5Y2V5pWw5o2uDQogICAgICAgICAgICBjb25zdCBibGFja2xpc3QgPSBCbGFja2xpc3RNYW5hZ2VyLmdldEFsbCgpOw0KDQogICAgICAgICAgICAvLyDmm7TmlrDorqHmlbANCiAgICAgICAgICAgIGlmIChjb3VudEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICBjb3VudEVsZW1lbnQudGV4dENvbnRlbnQgPSBibGFja2xpc3QubGVuZ3RoOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmuIXnqbrliJfooagNCiAgICAgICAgICAgIGxpc3RDb250YWluZXIuaW5uZXJIVE1MID0gJyc7DQoNCiAgICAgICAgICAgIC8vIOWmguaenOm7keWQjeWNleS4uuepuu+8jOaYvuekuuaPkOekug0KICAgICAgICAgICAgaWYgKGJsYWNrbGlzdC5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICBsaXN0Q29udGFpbmVyLmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPSJ4aHMtYWktYmxhY2tsaXN0LWVtcHR5Ij7mmoLml6Dpu5HlkI3ljZXnlKjmiLc8L2Rpdj4nOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5riy5p+T5YiX6KGo6aG5DQogICAgICAgICAgICBibGFja2xpc3QuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgICAgICAgICBjb25zdCBpdGVtRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOw0KICAgICAgICAgICAgICAgIGl0ZW1FbGVtZW50LmNsYXNzTmFtZSA9ICd4aHMtYWktYmxhY2tsaXN0LWl0ZW0nOw0KDQogICAgICAgICAgICAgICAgY29uc3QgZGF0ZVN0ciA9IG5ldyBEYXRlKGl0ZW0uYWRkZWRBdCkudG9Mb2NhbGVTdHJpbmcoKTsNCiAgICAgICAgICAgICAgICBjb25zdCByZWFzb25UZXh0ID0gaXRlbS5yZWFzb24gPT09ICdtYW51YWwnID8gJ+aJi+WKqOa3u+WKoCcgOiAn6Ieq5Yqo5qOA5rWLJzsNCg0KICAgICAgICAgICAgICAgIGl0ZW1FbGVtZW50LmlubmVySFRNTCA9IGANCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWJsYWNrbGlzdC1pbmZvIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9",
        "Inhocy1haS1ibGFja2xpc3QtbmFtZSI+JHtpdGVtLnVzZXJOYW1lfTwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWJsYWNrbGlzdC1tZXRhIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAke2RhdGVTdHJ9IMK3ICR7cmVhc29uVGV4dH0NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJsYWNrbGlzdC1yZW1vdmUiIGRhdGEtdXNlci1pZD0iJHtpdGVtLnVzZXJJZH0iPuenu+mZpDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgIGA7DQoNCiAgICAgICAgICAgICAgICBsaXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKGl0ZW1FbGVtZW50KTsNCg0KICAgICAgICAgICAgICAgIC8vIOa3u+WKoOenu+mZpOaMiemSruS6i+S7tg0KICAgICAgICAgICAgICAgIGNvbnN0IHJlbW92ZUJ0biA9IGl0ZW1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy54aHMtYWktYmxhY2tsaXN0LXJlbW92ZScpOw0KICAgICAgICAgICAgICAgIGlmIChyZW1vdmVCdG4pIHsNCiAgICAgICAgICAgICAgICAgICAgcmVtb3ZlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS11c2VyLWlkJyk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVtb3ZlZCA9IEJsYWNrbGlzdE1hbmFnZXIucmVtb3ZlKHVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlbW92ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCflt7Lku47pu5HlkI3ljZXnp7vpmaQnLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckJsYWNrbGlzdEl0ZW1zKCk7IC8vIOmHjeaWsOa4suafk+WIl+ihqA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign56e76Zmk6buR5ZCN5Y2V5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05pawVUnnirbmgIENCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZVVJKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVN0YXR1cygpOw0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU2VydmVyU3RhdHVzKCk7",
        "IC8vIOabtOaWsOacjeWKoeerr+eKtuaAgQ0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU3RhdHMoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUxvZ3MoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUJsYWNrbGlzdFVJKCk7IC8vIOabtOaWsOm7keWQjeWNlVVJDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVBbm5vdW5jZW1lbnRzKCk7IC8vIOabtOaWsOWFrOWRiuaYvuekug0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsFVJ5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw6buR5ZCN5Y2VVUnnirbmgIENCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZUJsYWNrbGlzdFVJKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDpu5HlkI3ljZXlip/og73lvIDlhbPnirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBibGFja2xpc3RFbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmxhY2tsaXN0LWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBpZiAoYmxhY2tsaXN0RW5hYmxlZENoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIGJsYWNrbGlzdEVuYWJsZWRDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2JsYWNrbGlzdEVuYWJsZWQnLCB0cnVlKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDoh6rliqjmo4DmtYvlvIDlhbPnirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBhdXRvRGV0ZWN0QmxvY2tlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWF1dG8tZGV0ZWN0LWJsb2NrZWQnKTsNCiAgICAgICAgICAgICAgICBpZiAoYXV0b0RldGVjdEJsb2NrZWRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBhdXRvRGV0ZWN0QmxvY2tlZENoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnYXV0b0RldGVjdEJsb2NrZWQnLCB0cnVlKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDpu5HlkI3ljZXliJfooagNCiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckJsYWNrbGlzdEl0ZW1zKCk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw6buR5ZCN5Y2VVUnlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmtYvor5Xooqvmi4npu5Hmo4DmtYsNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRlc3RCbG9ja2VkRGV0ZWN0aW9uKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAg",
        "ICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ato+WcqOa1i+ivleiiq+aLiem7keajgOa1i+WKn+iDvS4uLicsICdpbmZvJyk7DQogICAgICAgICAgICAgICAgQmxvY2tlZFVzZXJEZXRlY3Rvci50ZXN0QmxvY2tlZERldGVjdGlvbigpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+a1i+ivleiiq+aLiem7keajgOa1i+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmtYvor5Xooqvmi4npu5Hmo4DmtYvlpLHotKU6ICcgKyBlcnJvci5tZXNzYWdlLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5Lya6K+d6K6w5b+G5Yy65Z+f5bGV5byAL+aUtui1tw0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlVG9nZ2xlU2Vzc2lvbk1lbW9yeSgpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2Vzc2lvbi1tZW1vcnktY29udGVudCcpOw0KICAgICAgICAgICAgY29uc3QgYnV0dG9uID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS1zZXNzaW9uLW1lbW9yeScpOw0KDQogICAgICAgICAgICBpZiAoY29udGVudCAmJiBidXR0b24pIHsNCiAgICAgICAgICAgICAgICBjb25zdCBpc1Zpc2libGUgPSBjb250ZW50LnN0eWxlLmRpc3BsYXkgIT09ICdub25lJzsNCiAgICAgICAgICAgICAgICBjb250ZW50LnN0eWxlLmRpc3BsYXkgPSBpc1Zpc2libGUgPyAnbm9uZScgOiAnYmxvY2snOw0KICAgICAgICAgICAgICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9IGlzVmlzaWJsZSA/ICflsZXlvIAnIDogJ+aUtui1tyc7DQoNCiAgICAgICAgICAgICAgICAvLyDlpoLmnpzlsZXlvIDvvIzliLfmlrDnu5/orqHkv6Hmga8NCiAgICAgICAgICAgICAgICBpZiAoIWlzVmlzaWJsZSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNlc3Npb25TdGF0cygpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5Lya6K+d6K6w5b+G5Yqf6IO95byA5YWz5Y+Y5YyWDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVTZXNzaW9uTWVtb3J5RW5hYmxlZENoYW5nZSgpIHsNCiAgICAgICAgICAgIGNvbnN0IGNoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNlc3Npb24tbWVtb3J5LWVuYWJsZWQnKTsNCiAgICAgICAgICAgIGlmIChjaGVja2JveCkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGVuYWJsZWQgPSBjaGVja2JveC5jaGVja2VkOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdzZXNzaW9uTWVtb3J5RW5hYmxlZCcsIGVuYWJsZWQpOw0KDQogICAgICAgICAgICAgICAg",
        "dGhpcy5zaG93Tm90aWZpY2F0aW9uKA0KICAgICAgICAgICAgICAgICAgICBlbmFibGVkID8gJ+S8muivneiusOW/huWKn+iDveW3suWQr+eUqCcgOiAn5Lya6K+d6K6w5b+G5Yqf6IO95bey56aB55SoJywNCiAgICAgICAgICAgICAgICAgICAgJ3N1Y2Nlc3MnDQogICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfkvJror53orrDlv4blip/og73nirbmgIHlj5jmm7QnLCB7IGVuYWJsZWQgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuS/neWtmOS8muivneiusOW/huiuvue9rg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlU2F2ZVNlc3Npb25NZW1vcnkoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGV4cGlyZURheXNJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zZXNzaW9uLWV4cGlyZS1kYXlzJyk7DQogICAgICAgICAgICAgICAgY29uc3QgbWF4U2Vzc2lvbnNJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1tYXgtc2Vzc2lvbnMnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChleHBpcmVEYXlzSW5wdXQgJiYgbWF4U2Vzc2lvbnNJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBleHBpcmVEYXlzID0gcGFyc2VJbnQoZXhwaXJlRGF5c0lucHV0LnZhbHVlKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWF4U2Vzc2lvbnMgPSBwYXJzZUludChtYXhTZXNzaW9uc0lucHV0LnZhbHVlKTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoZXhwaXJlRGF5cyA8IDEgfHwgZXhwaXJlRGF5cyA+IDMwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+S8muivnei/h+acn+aXtumXtOW/hemhu+WcqDEtMzDlpKnkuYvpl7QnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIGlmIChtYXhTZXNzaW9ucyA8IDUwIHx8IG1heFNlc3Npb25zID4gNTAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+acgOWkp+S8muivneaVsOmHj+W/hemhu+WcqDUwLTUwMOS5i+mXtCcsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ3Nlc3Npb25FeHBpcmVEYXlzJywgZXhwaXJlRGF5cyk7DQogICAgICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdtYXhTZXNzaW9ucycsIG1heFNlc3Npb25zKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDmm7TmlrBDaGF0U2Vzc2lvbk1hbmFnZXLnmoTphY3nva4NCiAgICAgICAgICAgICAgICAgICAgQ2hhdFNlc3Npb25NYW5hZ2VyLlNFU1NJT05fRVhQ",
        "SVJFX1RJTUUgPSBleHBpcmVEYXlzICogMjQgKiA2MCAqIDYwICogMTAwMDsNCiAgICAgICAgICAgICAgICAgICAgQ2hhdFNlc3Npb25NYW5hZ2VyLk1BWF9TRVNTSU9OUyA9IG1heFNlc3Npb25zOw0KDQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Lya6K+d6K6w5b+G6K6+572u5bey5L+d5a2YJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+S8muivneiusOW/huiuvue9ruW3suabtOaWsCcsIHsgZXhwaXJlRGF5cywgbWF4U2Vzc2lvbnMgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S/neWtmOS8muivneiusOW/huiuvue9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfkv53lrZjorr7nva7lpLHotKU6ICcgKyBlcnJvci5tZXNzYWdlLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5Yi35paw5Lya6K+d57uf6K6hDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVSZWZyZXNoU2Vzc2lvblN0YXRzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNlc3Npb25TdGF0cygpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Lya6K+d57uf6K6h5bey5Yi35pawJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliLfmlrDkvJror53nu5/orqHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Yi35paw57uf6K6h5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhua4heeQhui/h+acn+S8muivnQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQ2xlYW5FeHBpcmVkU2Vzc2lvbnMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNsZWFuZWRDb3VudCA9IENoYXRTZXNzaW9uTWFuYWdlci5jbGVhbkV4cGlyZWRTZXNzaW9ucygpOw0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU2Vzc2lvblN0YXRzKCk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKGDlt7LmuIXnkIYgJHtjbGVhbmVkQ291bnR9IOS4qui/h+acn+S8muivnWAsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+aJi+WKqOa4heeQhui/h+acn+S8muivneWujOaIkCcsIHsgY2xlYW5lZENvdW50IH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAg",
        "ICBMb2dnZXIuZXJyb3IoJ+a4heeQhui/h+acn+S8muivneWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmuIXnkIbov4fmnJ/kvJror53lpLHotKU6ICcgKyBlcnJvci5tZXNzYWdlLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5riF56m65omA5pyJ5Lya6K+dDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVDbGVhckFsbFNlc3Npb25zKCkgew0KICAgICAgICAgICAgaWYgKGNvbmZpcm0oJ+ehruWumuimgea4heepuuaJgOacieS8muivneiusOW/huWQl++8n+atpOaTjeS9nOS4jeWPr+aBouWkje+8gScpKSB7DQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xlYXJlZENvdW50ID0gQ2hhdFNlc3Npb25NYW5hZ2VyLmNsZWFyQWxsU2Vzc2lvbnMoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZXNzaW9uU3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKGDlt7LmuIXnqbogJHtjbGVhcmVkQ291bnR9IOS4quS8muivnWAsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmiYvliqjmuIXnqbrmiYDmnInkvJror53lrozmiJAnLCB7IGNsZWFyZWRDb3VudCB9KTsNCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+a4heepuuaJgOacieS8muivneWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5riF56m65Lya6K+d5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIblr7zlh7rkvJror53mlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUV4cG9ydFNlc3Npb25zKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gQ2hhdFNlc3Npb25NYW5hZ2VyLmV4cG9ydFNlc3Npb25zKCk7DQogICAgICAgICAgICAgICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFtkYXRhXSwgeyB0eXBlOiAnYXBwbGljYXRpb24vanNvbicgfSk7DQogICAgICAgICAgICAgICAgY29uc3QgdXJsID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7DQogICAgICAgICAgICAgICAgYS5ocmVmID0gdXJsOw0KICAgICAgICAgICAgICAgIGEuZG93bmxvYWQgPSBgeGhzLXNlc3Npb25zLSR7bmV3IERhdGUoKS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF19Lmpzb25gOw0KICAgICAgICAgICAgICAg",
        "IGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYSk7DQogICAgICAgICAgICAgICAgYS5jbGljaygpOw0KICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoYSk7DQogICAgICAgICAgICAgICAgVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpOw0KDQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfkvJror53mlbDmja7lr7zlh7rmiJDlip8nLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfkvJror53mlbDmja7lr7zlh7rlrozmiJAnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflr7zlh7rkvJror53mlbDmja7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5a+85Ye65aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWvvOWFpeS8muivneaVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlSW1wb3J0U2Vzc2lvbnMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTsNCiAgICAgICAgICAgICAgICBpbnB1dC50eXBlID0gJ2ZpbGUnOw0KICAgICAgICAgICAgICAgIGlucHV0LmFjY2VwdCA9ICcuanNvbic7DQoNCiAgICAgICAgICAgICAgICBpbnB1dC5vbmNoYW5nZSA9IChlKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpbGUgPSBlLnRhcmdldC5maWxlc1swXTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFmaWxlKSByZXR1cm47DQoNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsNCiAgICAgICAgICAgICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN1Y2Nlc3MgPSBDaGF0U2Vzc2lvbk1hbmFnZXIuaW1wb3J0U2Vzc2lvbnMoZS50YXJnZXQucmVzdWx0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNlc3Npb25TdGF0cygpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+S8muivneaVsOaNruWvvOWFpeaIkOWKnycsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfkvJror53mlbDmja7lr7zlhaXlrozmiJAnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3Rp",
        "ZmljYXRpb24oJ+WvvOWFpeWksei0pe+8muaVsOaNruagvOW8j+aXoOaViCcsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflr7zlhaXkvJror53mlbDmja7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5a+85YWl5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH07DQogICAgICAgICAgICAgICAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGZpbGUpOw0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICBpbnB1dC5jbGljaygpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WvvOWFpeS8muivneaVsOaNruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCflr7zlhaXlpLHotKU6ICcgKyBlcnJvci5tZXNzYWdlLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw5Lya6K+d57uf6K6h5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVTZXNzaW9uU3RhdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzID0gQ2hhdFNlc3Npb25NYW5hZ2VyLmdldFNlc3Npb25TdGF0cygpOw0KDQogICAgICAgICAgICAgICAgY29uc3QgdG90YWxTZXNzaW9uc0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG90YWwtc2Vzc2lvbnMnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhY3RpdmVTZXNzaW9uc0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYWN0aXZlLXNlc3Npb25zJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdG90YWxNZXNzYWdlc0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG90YWwtbWVzc2FnZXMnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzdG9yYWdlU2l6ZUVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc3RvcmFnZS1zaXplJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAodG90YWxTZXNzaW9uc0VsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgdG90YWxTZXNzaW9uc0VsZW1lbnQudGV4dENvbnRlbnQgPSBzdGF0cy50b3RhbFNlc3Npb25zOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChhY3RpdmVTZXNzaW9uc0VsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgYWN0aXZlU2Vzc2lv",
        "bnNFbGVtZW50LnRleHRDb250ZW50ID0gc3RhdHMuYWN0aXZlU2Vzc2lvbnM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHRvdGFsTWVzc2FnZXNFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsTWVzc2FnZXNFbGVtZW50LnRleHRDb250ZW50ID0gc3RhdHMudG90YWxNZXNzYWdlczsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoc3RvcmFnZVNpemVFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHNpemVLQiA9IE1hdGgucm91bmQoc3RhdHMuc3RvcmFnZVNpemUgLyAxMDI0ICogMTAwKSAvIDEwMDsNCiAgICAgICAgICAgICAgICAgICAgc3RvcmFnZVNpemVFbGVtZW50LnRleHRDb250ZW50ID0gYCR7c2l6ZUtCfSBLQmA7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfkvJror53nu5/orqHkv6Hmga/lt7Lmm7TmlrAnLCBzdGF0cyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw5Lya6K+d57uf6K6h5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw6L+Q6KGM54q25oCBDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVTdGF0dXMoKSB7DQogICAgICAgICAgICBjb25zdCBzdGF0dXNFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXN0YXR1cycpOw0KICAgICAgICAgICAgY29uc3QgaW5kaWNhdG9yRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1pbmRpY2F0b3InKTsNCiAgICAgICAgICAgIGNvbnN0IHRvZ2dsZUJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUnKTsNCiAgICAgICAgICAgIGNvbnN0IHRvZ2dsZVRleHQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLXRleHQnKTsNCg0KICAgICAgICAgICAgaWYgKHdpbmRvdy5YSFNBdXRvUmVwbHkgJiYgd2luZG93LlhIU0F1dG9SZXBseS5pc1J1bm5pbmcpIHsNCiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzRWxlbWVudCkgc3RhdHVzRWxlbWVudC50ZXh0Q29udGVudCA9ICfov5DooYzkuK0nOw0KICAgICAgICAgICAgICAgIGlmIChpbmRpY2F0b3JFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGluZGljYXRvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCgncnVubmluZycpOw0KICAgICAgICAgICAgICAgICAgICBpbmRpY2F0b3JFbGVtZW50LnN0eWxlLmJhY2tncm91bmQgPSAnIzJlZDU3Myc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICh0b2dnbGVUZXh0KSB0b2dnbGVUZXh0LnRleHRDb250ZW50ID0gJ+WBnOatouiHquWKqOWbnuWkjSc7DQogICAgICAgICAgICAgICAgaWYgKHRvZ2dsZUJ0",
        "bikgdG9nZ2xlQnRuLnN0eWxlLmJhY2tncm91bmQgPSAnbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI2ZmNDc1NywgI2M0NDU2OSknOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzRWxlbWVudCkgc3RhdHVzRWxlbWVudC50ZXh0Q29udGVudCA9ICflt7LlgZzmraInOw0KICAgICAgICAgICAgICAgIGlmIChpbmRpY2F0b3JFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGluZGljYXRvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgncnVubmluZycpOw0KICAgICAgICAgICAgICAgICAgICBpbmRpY2F0b3JFbGVtZW50LnN0eWxlLmJhY2tncm91bmQgPSAnI2ZmNDc1Nyc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICh0b2dnbGVUZXh0KSB0b2dnbGVUZXh0LnRleHRDb250ZW50ID0gJ+WQr+WKqOiHquWKqOWbnuWkjSc7DQogICAgICAgICAgICAgICAgaWYgKHRvZ2dsZUJ0bikgdG9nZ2xlQnRuLnN0eWxlLmJhY2tncm91bmQgPSAnbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI2ZmNmI2YiwgI2VlNWEyNCknOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmm7TmlrDmnI3liqHnq6/nirbmgIENCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZVNlcnZlclN0YXR1cygpIHsNCiAgICAgICAgICAgIGNvbnN0IHNlcnZlclN0YXR1c0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2VydmVyLXN0YXR1cycpOw0KICAgICAgICAgICAgY29uc3Qgc2VydmVySW5kaWNhdG9yRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zZXJ2ZXItaW5kaWNhdG9yJyk7DQoNCiAgICAgICAgICAgIGlmICghQ09ORklHLlNFUlZFUi5lbmFibGVkKSB7DQogICAgICAgICAgICAgICAgaWYgKHNlcnZlclN0YXR1c0VsZW1lbnQpIHNlcnZlclN0YXR1c0VsZW1lbnQudGV4dENvbnRlbnQgPSAn5bey56aB55SoJzsNCiAgICAgICAgICAgICAgICBpZiAoc2VydmVySW5kaWNhdG9yRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJJbmRpY2F0b3JFbGVtZW50LnN0eWxlLmJhY2tncm91bmQgPSAnIzk1YTVhNic7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5p+l6ISa5pys5piv5ZCm6KKr5pyN5Yqh56uv56aB55SoDQogICAgICAgICAgICBpZiAoIVNlcnZlck1hbmFnZXIuc2VydmVyRW5hYmxlZCkgew0KICAgICAgICAgICAgICAgIGlmIChzZXJ2ZXJTdGF0dXNFbGVtZW50KSBzZXJ2ZXJTdGF0dXNFbGVtZW50LnRleHRDb250ZW50ID0gJ+iEmuacrOiiq+emgeeUqCc7DQogICAgICAgICAgICAgICAgaWYgKHNlcnZlckluZGljYXRvckVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgc2VydmVySW5kaWNhdG9yRWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kID0gJyNlNzRjM2Mn",
        "Ow0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmIChTZXJ2ZXJNYW5hZ2VyLmlzQ29ubmVjdGVkKSB7DQogICAgICAgICAgICAgICAgaWYgKHNlcnZlclN0YXR1c0VsZW1lbnQpIHNlcnZlclN0YXR1c0VsZW1lbnQudGV4dENvbnRlbnQgPSAn5bey6L+e5o6lJzsNCiAgICAgICAgICAgICAgICBpZiAoc2VydmVySW5kaWNhdG9yRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJJbmRpY2F0b3JFbGVtZW50LnN0eWxlLmJhY2tncm91bmQgPSAnIzJlZDU3Myc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICBjb25zdCByZXRyeUNvdW50ID0gU2VydmVyTWFuYWdlci5yZXRyeUNvdW50Ow0KICAgICAgICAgICAgICAgIGlmIChyZXRyeUNvdW50ID4gMCkgew0KICAgICAgICAgICAgICAgICAgICBpZiAoc2VydmVyU3RhdHVzRWxlbWVudCkgc2VydmVyU3RhdHVzRWxlbWVudC50ZXh0Q29udGVudCA9IGDph43or5XkuK0oJHtyZXRyeUNvdW50fSlgOw0KICAgICAgICAgICAgICAgICAgICBpZiAoc2VydmVySW5kaWNhdG9yRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVySW5kaWNhdG9yRWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kID0gJyNmZmE1MDInOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHNlcnZlclN0YXR1c0VsZW1lbnQpIHNlcnZlclN0YXR1c0VsZW1lbnQudGV4dENvbnRlbnQgPSAn6L+e5o6l5LitLi4uJzsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHNlcnZlckluZGljYXRvckVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckluZGljYXRvckVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZCA9ICcjNzBhMWZmJzsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw5YWs5ZGK5pi+56S6DQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVBbm5vdW5jZW1lbnRzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDojrflj5bmnIDmlrDlhazlkYoNCiAgICAgICAgICAgICAgICBjb25zdCBsYXRlc3RBbm5vdW5jZW1lbnQgPSBTZXJ2ZXJNYW5hZ2VyLmdldExhdGVzdEFubm91bmNlbWVudCgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFubm91bmNlbWVudFNlY3Rpb24gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYW5ub3VuY2VtZW50LXNlY3Rpb24nKTsNCg0KICAgICAgICAgICAgICAgIGlmICghYW5ub3VuY2VtZW50U2VjdGlvbikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WFrOWRiuWMuuWfn+WFg+e0oOacquaJvuWIsCcpOw0KICAgICAgICAg",
        "ICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKCFsYXRlc3RBbm5vdW5jZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5rKh5pyJ5YWs5ZGK5pe26ZqQ6JeP5Yy65Z+fDQogICAgICAgICAgICAgICAgICAgIGFubm91bmNlbWVudFNlY3Rpb24uc3R5bGUuZGlzcGxheSA9ICdub25lJzsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeeUqOaIt+aYr+WQpuW3suWFs+mXreatpOWFrOWRig0KICAgICAgICAgICAgICAgIGNvbnN0IGNsb3NlZEFubm91bmNlbWVudHMgPSBHTV9nZXRWYWx1ZSgnY2xvc2VkX2Fubm91bmNlbWVudHMnLCBbXSk7DQogICAgICAgICAgICAgICAgaWYgKGxhdGVzdEFubm91bmNlbWVudC5pZCAmJiBjbG9zZWRBbm5vdW5jZW1lbnRzLmluY2x1ZGVzKGxhdGVzdEFubm91bmNlbWVudC5pZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgYW5ub3VuY2VtZW50U2VjdGlvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pi+56S65YWs5ZGK5Yy65Z+fDQogICAgICAgICAgICAgICAgYW5ub3VuY2VtZW50U2VjdGlvbi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsNCg0KICAgICAgICAgICAgICAgIC8vIOiuvue9ruWFrOWRiuexu+Wei+agt+W8jw0KICAgICAgICAgICAgICAgIGFubm91bmNlbWVudFNlY3Rpb24uY2xhc3NOYW1lID0gYHhocy1haS1hbm5vdW5jZW1lbnQtc2VjdGlvbiAke2xhdGVzdEFubm91bmNlbWVudC50eXBlIHx8ICdpbmZvJ31gOw0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw5YWs5ZGK5YaF5a65DQogICAgICAgICAgICAgICAgY29uc3QgYW5ub3VuY2VtZW50VGV4dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hbm5vdW5jZW1lbnQtdGV4dCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFubm91bmNlbWVudFRpbWUgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYW5ub3VuY2VtZW50LXRpbWUnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChhbm5vdW5jZW1lbnRUZXh0KSB7DQogICAgICAgICAgICAgICAgICAgIGFubm91bmNlbWVudFRleHQudGV4dENvbnRlbnQgPSBsYXRlc3RBbm5vdW5jZW1lbnQuY29udGVudCB8fCBsYXRlc3RBbm5vdW5jZW1lbnQudGl0bGUgfHwgJ+aaguaXoOWFrOWRiic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGFubm91bmNlbWVudFRpbWUgJiYgbGF0ZXN0QW5ub3VuY2VtZW50LmNyZWF0ZWRBdCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUobGF0ZXN0QW5ub3VuY2VtZW50LmNyZWF0ZWRBdCk7DQogICAgICAgICAgICAgICAgICAgIGFubm91bmNlbWVudFRpbWUudGV4dENvbnRlbnQgPSBk",
        "YXRlLnRvTG9jYWxlU3RyaW5nKCd6aC1DTicsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoOiAnMi1kaWdpdCcsDQogICAgICAgICAgICAgICAgICAgICAgICBkYXk6ICcyLWRpZ2l0JywNCiAgICAgICAgICAgICAgICAgICAgICAgIGhvdXI6ICcyLWRpZ2l0JywNCiAgICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZTogJzItZGlnaXQnDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5YWs5ZGK5pi+56S65bey5pu05pawJywgew0KICAgICAgICAgICAgICAgICAgICB0aXRsZTogbGF0ZXN0QW5ub3VuY2VtZW50LnRpdGxlLA0KICAgICAgICAgICAgICAgICAgICB0eXBlOiBsYXRlc3RBbm5vdW5jZW1lbnQudHlwZQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw5YWs5ZGK5pi+56S65aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw57uf6K6h5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVTdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgcGFnZVN0YXR1cyA9IHdpbmRvdy5YSFNBdXRvUmVwbHkgPyB3aW5kb3cuWEhTQXV0b1JlcGx5LmdldFBhZ2VTdGF0dXMoKSA6IG51bGw7DQogICAgICAgICAgICAgICAgY29uc3QgcHJvY2Vzc29yU3RhdHMgPSBNZXNzYWdlUHJvY2Vzc29yLmdldFN0YXRzKCk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlQ291bnRFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLW1lc3NhZ2UtY291bnQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBwcm9jZXNzZWRDb3VudEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcHJvY2Vzc2VkLWNvdW50Jyk7DQoNCiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZUNvdW50RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlQ291bnRFbGVtZW50LnRleHRDb250ZW50ID0gcGFnZVN0YXR1cyA/IHBhZ2VTdGF0dXMubmV3TWVzc2FnZUNvdW50IDogMDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzc2VkQ291bnRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHByb2Nlc3NlZENvdW50RWxlbWVudC50ZXh0Q29udGVudCA9IHByb2Nlc3NvclN0YXRzLmRlZHVwbGljYXRvclN0YXRzLnRvdGFsUHJvY2Vzc2VkOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOmYn+WIl+eKtuaAgeaYvuekug0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlUXVldWVTdGF0dXMocHJvY2Vzc29yU3RhdHMpOw0KDQogICAgICAgICAg",
        "ICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw57uf6K6h5L+h5oGv5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw6Zif5YiX54q25oCB5pi+56S6DQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwcm9jZXNzb3JTdGF0cyDlpITnkIblmajnu5/orqHkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZVF1ZXVlU3RhdHVzKHByb2Nlc3NvclN0YXRzKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOafpeaJvuaIluWIm+W7uumYn+WIl+eKtuaAgeaYvuekuuWFg+e0oA0KICAgICAgICAgICAgICAgIGxldCBxdWV1ZVN0YXR1c0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcXVldWUtc3RhdHVzJyk7DQogICAgICAgICAgICAgICAgaWYgKCFxdWV1ZVN0YXR1c0VsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5Zyo57uf6K6h5L+h5oGv5Yy65Z+f5re75Yqg6Zif5YiX54q25oCBDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzQ29udGFpbmVyID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcueGhzLWFpLXN0YXRzJyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChzdGF0c0NvbnRhaW5lcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcXVldWVTdGF0dXNIVE1MID0gYA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iIGlkPSJ4aHMtYWktcXVldWUtc3RhdHVzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LWxhYmVsIj7pmJ/liJfnirbmgIE6PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktcXVldWUtaW5mbyI+LTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIGA7DQogICAgICAgICAgICAgICAgICAgICAgICBzdGF0c0NvbnRhaW5lci5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIHF1ZXVlU3RhdHVzSFRNTCk7DQogICAgICAgICAgICAgICAgICAgICAgICBxdWV1ZVN0YXR1c0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcXVldWUtc3RhdHVzJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAocXVldWVTdGF0dXNFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHF1ZXVlSW5mb0VsZW1lbnQgPSBxdWV1ZVN0YXR1c0VsZW1lbnQucXVlcnlTZWxlY3RvcignI3hocy1haS1xdWV1ZS1pbmZvJyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChx",
        "dWV1ZUluZm9FbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBxdWV1ZVRleHQgPSBgJHtwcm9jZXNzb3JTdGF0cy5xdWV1ZUxlbmd0aH0vJHtwcm9jZXNzb3JTdGF0cy5tYXhRdWV1ZVNpemV9ICgke3Byb2Nlc3NvclN0YXRzLnF1ZXVlVXNhZ2V9KWA7DQogICAgICAgICAgICAgICAgICAgICAgICBxdWV1ZUluZm9FbGVtZW50LnRleHRDb250ZW50ID0gcXVldWVUZXh0Ow0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmoLnmja7pmJ/liJfkvb/nlKjnjoforr7nva7popzoibINCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzYWdlID0gcGFyc2VGbG9hdChwcm9jZXNzb3JTdGF0cy5xdWV1ZVVzYWdlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh1c2FnZSA+PSA4MCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXVlSW5mb0VsZW1lbnQuc3R5bGUuY29sb3IgPSAnI2ZmNDc1Nyc7IC8vIOe6ouiJsuitpuWRig0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh1c2FnZSA+PSA1MCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXVlSW5mb0VsZW1lbnQuc3R5bGUuY29sb3IgPSAnI2ZmYTUwMic7IC8vIOapmeiJsuaPkOmGkg0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWV1ZUluZm9FbGVtZW50LnN0eWxlLmNvbG9yID0gJyMyZWQ1NzMnOyAvLyDnu7/oibLmraPluLgNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOWkhOeQhueKtuaAgQ0KICAgICAgICAgICAgICAgIGxldCBwcm9jZXNzaW5nU3RhdHVzRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1wcm9jZXNzaW5nLXN0YXR1cycpOw0KICAgICAgICAgICAgICAgIGlmICghcHJvY2Vzc2luZ1N0YXR1c0VsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhdHNDb250YWluZXIgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJy54aHMtYWktc3RhdHMnKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXRzQ29udGFpbmVyKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwcm9jZXNzaW5nU3RhdHVzSFRNTCA9IGANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIiBpZD0ieGhzLWFpLXByb2Nlc3Npbmctc3RhdHVzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LWxhYmVsIj7lpITnkIbnirbmgIE6PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktcHJvY2Vzc2luZy1pbmZvIj4tPC9zcGFuPg0KICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgYDsNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRzQ29udGFpbmVyLmluc2VydEFkamFjZW50SFRNTCgnYmVmb3JlZW5kJywgcHJvY2Vzc2luZ1N0YXR1c0hUTUwpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc2luZ1N0YXR1c0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcHJvY2Vzc2luZy1zdGF0dXMnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChwcm9jZXNzaW5nU3RhdHVzRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBwcm9jZXNzaW5nSW5mb0VsZW1lbnQgPSBwcm9jZXNzaW5nU3RhdHVzRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXByb2Nlc3NpbmctaW5mbycpOw0KICAgICAgICAgICAgICAgICAgICBpZiAocHJvY2Vzc2luZ0luZm9FbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXNUZXh0ID0gcHJvY2Vzc29yU3RhdHMuaXNQcm9jZXNzaW5nID8gJ+WkhOeQhuS4rScgOiAn56m66ZeyJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3NpbmdJbmZvRWxlbWVudC50ZXh0Q29udGVudCA9IHN0YXR1c1RleHQ7DQogICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzaW5nSW5mb0VsZW1lbnQuc3R5bGUuY29sb3IgPSBwcm9jZXNzb3JTdGF0cy5pc1Byb2Nlc3NpbmcgPyAnI2ZmYTUwMicgOiAnIzJlZDU3Myc7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmm7TmlrDpmJ/liJfnirbmgIHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmm7TmlrDml6Xlv5fmmL7npLoNCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZUxvZ3MoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOmmluWFiOajgOafpemdouadv+aYr+WQpuWtmOWcqA0KICAgICAgICAgICAgICAgIGlmICghdGhpcy5wYW5lbCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mdouadv+acquWIneWni+WMlu+8jOi3s+i/h+aXpeW/l+abtOaWsCcpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgbG9nQ29udGVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1sb2ctY29udGVudCcpOw0KICAgICAgICAgICAgICAgIGlmICghbG9nQ29udGVudCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aXpeW/l+WGheWuueWuueWZqOacquaJvuWIsO+8jOi3s+i/h+aXpeW/l+abtOaWsCcp",
        "Ow0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5a6J5YWo6I635Y+W5pel5b+X57qn5Yir77yM5o+Q5L6b6buY6K6k5YC8DQogICAgICAgICAgICAgICAgY29uc3QgbG9nTGV2ZWxFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWxvZy1sZXZlbCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGxvZ0xldmVsID0gbG9nTGV2ZWxFbGVtZW50ID8gbG9nTGV2ZWxFbGVtZW50LnZhbHVlIDogJ2FsbCc7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBsb2dzID0gTG9nZ2VyLmdldFJlY2VudExvZ3MoNTApOw0KICAgICAgICAgICAgICAgIGNvbnN0IGZpbHRlcmVkTG9ncyA9IGxvZ0xldmVsID09PSAnYWxsJyA/IGxvZ3MgOiBsb2dzLmZpbHRlcihsb2cgPT4gbG9nLmxldmVsID09PSBsb2dMZXZlbCk7DQoNCiAgICAgICAgICAgICAgICBpZiAoZmlsdGVyZWRMb2dzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICBsb2dDb250ZW50LmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPSJ4aHMtYWktbG9nLWVtcHR5Ij7mmoLml6Dml6Xlv5c8L2Rpdj4nOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgbG9nSFRNTCA9IGZpbHRlcmVkTG9ncy5tYXAobG9nID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGltZSA9IFV0aWxzLmZvcm1hdFRpbWUobG9nLnRpbWVzdGFtcCk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBgDQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktbG9nLWVudHJ5ICR7bG9nLmxldmVsfSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1sb2ctdGltZSI+JHt0aW1lfTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLWxvZy1sZXZlbCI+JHtsb2cubGV2ZWx9PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktbG9nLW1lc3NhZ2UiPiR7bG9nLm1lc3NhZ2V9PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIGA7DQogICAgICAgICAgICAgICAgfSkuam9pbignJyk7DQoNCiAgICAgICAgICAgICAgICBsb2dDb250ZW50LmlubmVySFRNTCA9IGxvZ0hUTUw7DQogICAgICAgICAgICAgICAgbG9nQ29udGVudC5zY3JvbGxUb3AgPSBsb2dDb250ZW50LnNjcm9sbEhlaWdodDsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOaXpeW/l+aYvuekuuWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhumFjee9",
        "rueuoeeQhuWMuuWfn+WxleW8gC/mlLbotbcNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRvZ2dsZUNvbmZpZ01nbXQoKSB7DQogICAgICAgICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWNvbmZpZy1tZ210LWNvbnRlbnQnKTsNCiAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtY29uZmlnLW1nbXQnKTsNCg0KICAgICAgICAgICAgaWYgKGNvbnRlbnQgJiYgYnRuKSB7DQogICAgICAgICAgICAgICAgY29uc3QgaXNWaXNpYmxlID0gY29udGVudC5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZSc7DQogICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gaXNWaXNpYmxlID8gJ25vbmUnIDogJ2Jsb2NrJzsNCiAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSBpc1Zpc2libGUgPyAn5bGV5byAJyA6ICfmlLbotbcnOw0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5bGV5byA77yM5pu05paw6YWN572u57uf6K6hDQogICAgICAgICAgICAgICAgaWYgKCFpc1Zpc2libGUpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVDb25maWdTdGF0cygpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6YeN572u5omA5pyJ6YWN572uDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVSZXNldEFsbCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgY29uZmlybU1zZyA9ICfimqDvuI8g5Y2x6Zmp5pON5L2c56Gu6K6kXG5cbicgKw0KICAgICAgICAgICAgICAgICAgICAn5q2k5pON5L2c5bCG6YeN572u5omA5pyJ6YWN572u5Yiw6buY6K6k5YC877yM5YyF5ous77yaXG4nICsNCiAgICAgICAgICAgICAgICAgICAgJ+KAoiBBUEnphY3nva5cbicgKw0KICAgICAgICAgICAgICAgICAgICAn4oCiIOaZuuiDveiOt+Wuouiuvue9rlxuJyArDQogICAgICAgICAgICAgICAgICAgICfigKIg6buR5ZCN5Y2V5YiX6KGoXG4nICsNCiAgICAgICAgICAgICAgICAgICAgJ+KAoiDkvJror53orrDlv4bmlbDmja5cbicgKw0KICAgICAgICAgICAgICAgICAgICAn4oCiIOiBmuWFiei/m+e6v+iuvue9rlxuJyArDQogICAgICAgICAgICAgICAgICAgICfigKIg5YO15bC45pyq6K+75aSE55CG6K6+572uXG5cbicgKw0KICAgICAgICAgICAgICAgICAgICAn5q2k5pON5L2c5LiN5Y+v5pKk6ZSA77yM56Gu5a6a6KaB57un57ut5ZCX77yfJzsNCg0KICAgICAgICAgICAgICAgIGlmICghY29uZmlybShjb25maXJtTXNnKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5LqM5qyh56Gu6K6kDQogICAgICAgICAgICAgICAgaWYgKCFjb25maXJtKCfmnIDlkI7noa7orqTvvJrnnJ/nmoTopoHph43nva7miYDmnInp",
        "hY3nva7lkJfvvJ8nKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6YeN572u6YWN572uDQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5yZXNldCgpOw0KDQogICAgICAgICAgICAgICAgLy8g5riF56m655So5oi35pWw5o2uDQogICAgICAgICAgICAgICAgR01fc2V0VmFsdWUoJ3Nlc3Npb25NZW1vcnknLCB7fSk7DQogICAgICAgICAgICAgICAgR01fc2V0VmFsdWUoJ3Nwb3RsaWdodFByb2Nlc3NlZFVzZXJzJywge30pOw0KICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCdhY3F1aXNpdGlvblNlbnRVc2VycycsIHt9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOWIt+aWsFVJDQogICAgICAgICAgICAgICAgdGhpcy5sb2FkQ29uZmlnKCk7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVVSSgpOw0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlQ29uZmlnU3RhdHMoKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5omA5pyJ6YWN572u5bey6YeN572u5Li66buY6K6k5YC8JywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5omA5pyJ6YWN572u5bey6YeN572uJyk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfph43nva7phY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6YeN572u6YWN572u5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOmFjee9rue7n+iuoQ0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlQ29uZmlnU3RhdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpZ0NvdW50RWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1jb25maWctY291bnQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBibGFja2xpc3RTdGF0RWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1ibGFja2xpc3Qtc3RhdCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNlc3Npb25zU3RhdEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2Vzc2lvbnMtc3RhdCcpOw0KDQogICAgICAgICAgICAgICAgaWYgKGNvbmZpZ0NvdW50RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBjb25maWdDb3VudCA9IE9iamVjdC5rZXlzKENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTKS5sZW5ndGg7DQogICAgICAgICAgICAgICAgICAgIGNvbmZpZ0NvdW50RWxlbWVudC50ZXh0Q29udGVudCA9IGNvbmZpZ0NvdW50Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAg",
        "IGlmIChibGFja2xpc3RTdGF0RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBibGFja2xpc3QgPSBDb25maWdNYW5hZ2VyLmdldCgnYmxhY2tsaXN0JywgW10pOw0KICAgICAgICAgICAgICAgICAgICBibGFja2xpc3RTdGF0RWxlbWVudC50ZXh0Q29udGVudCA9IGJsYWNrbGlzdC5sZW5ndGg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHNlc3Npb25zU3RhdEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Vzc2lvbk1lbW9yeSA9IEdNX2dldFZhbHVlKCdzZXNzaW9uTWVtb3J5Jywge30pOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzZXNzaW9uQ291bnQgPSBPYmplY3Qua2V5cyhzZXNzaW9uTWVtb3J5KS5sZW5ndGg7DQogICAgICAgICAgICAgICAgICAgIHNlc3Npb25zU3RhdEVsZW1lbnQudGV4dENvbnRlbnQgPSBzZXNzaW9uQ291bnQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw6YWN572u57uf6K6h5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pi+56S66YCa55+lDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIOa2iOaBr+WGheWuuQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdHlwZSDmtojmga/nsbvlnosNCiAgICAgICAgICovDQogICAgICAgIHNob3dOb3RpZmljYXRpb24obWVzc2FnZSwgdHlwZSA9ICdpbmZvJykgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDkvb/nlKhHTV9ub3RpZmljYXRpb27lpoLmnpzlj6/nlKgNCiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIEdNX25vdGlmaWNhdGlvbiAhPT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICAgICAgICAgICAgR01fbm90aWZpY2F0aW9uKHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBDT05GSUcuQVBQX05BTUUsDQogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBtZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICAgICAgdGltZW91dDogMzAwMA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAvLyDpmY3nuqfliLBjb25zb2xl6L6T5Ye6DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBbJHtDT05GSUcuQVBQX05BTUV9XSAke21lc3NhZ2V9YCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6K6w5b2V5Yiw5pel5b+XIC0g5L+u5aSNTG9nZ2Vy6LCD55So6ZSZ6K+vDQogICAgICAgICAgICAgICAgLy8g5bCGJ3N1Y2Nlc3Mn57G75Z6L5pig5bCE5YiwJ2luZm8n77yM56Gu5L+dTG9nZ2Vy5pa55rOV5a2Y5ZyoDQogICAgICAgICAgICAgICAgY29uc3QgbG9nZ2VyVHlwZSA9",
        "IHR5cGUgPT09ICdzdWNjZXNzJyA/ICdpbmZvJyA6IHR5cGU7DQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBMb2dnZXJbbG9nZ2VyVHlwZV0gPT09ICdmdW5jdGlvbicpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyW2xvZ2dlclR5cGVdKG1lc3NhZ2UpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOexu+Wei+S4jeWtmOWcqO+8jOm7mOiupOS9v+eUqGluZm8NCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oYFske3R5cGV9XSAke21lc3NhZ2V9YCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pi+56S66YCa55+l5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pi+56S6L+makOiXj+mdouadvw0KICAgICAgICAgKi8NCiAgICAgICAgdG9nZ2xlKCkgew0KICAgICAgICAgICAgaWYgKHRoaXMucGFuZWwpIHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc01pbmltaXplZCkgew0KICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmmK/mnIDlsI/ljJbnirbmgIHvvIzmgaLlpI3mmL7npLoNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXN0b3JlRnJvbU1pbmltaXplZCgpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5pc1Zpc2libGUpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5piv5pi+56S654q25oCB77yM5pyA5bCP5YyWDQogICAgICAgICAgICAgICAgICAgIHRoaXMubWluaW1pemVUb0Zsb2F0KCk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5piv6ZqQ6JeP54q25oCB77yM5pi+56S6DQogICAgICAgICAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuaXNWaXNpYmxlID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkQ29uZmlnKCk7IC8vIOWKoOi9veaJgOaciemFjee9ruWMheaLrOaZuuiDveiOt+Wuouiuvue9rg0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVVJKCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmmL7npLrluK7liqnkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIHNob3dIZWxwKCkgew0KICAgICAgICAgICAgY29uc3QgaGVscENvbnRlbnQgPSBgDQrwn5OWIOWwj+e6ouS5pkFJ6Ieq5Yqo5Zue5aSN5bel5YW35L2/55So6K+05piODQoNCvCfmoAg5b+r6YCf5byA5aeL77yaDQoxLiDngrnlh7si5bGV5byAIumFjee9rkFQSeWvhumSpeWSjOWcsOWdgA0KMi4g54K55Ye7Iua1i+ivlUFQSSLnoa7orqTov57mjqXmraPluLgNCjMu",
        "IOeCueWHuyLlkK/liqjoh6rliqjlm57lpI0i5byA5aeL5bel5L2cDQoNCuKame+4jyDphY3nva7or7TmmI7vvJoNCuKAoiBBUEnlr4bpkqXvvJrku45GYXN0R1BU6I635Y+W55qEQVBJ5a+G6ZKlDQrigKIgQVBJ5Zyw5Z2A77yaRmFzdEdQVOeahEFQSeerr+eCueWcsOWdgA0K4oCiIOWbnuWkjeW7tui/n++8muavj+asoeWbnuWkjemXtOeahOetieW+heaXtumXtO+8iOW7uuiurjMtNeenku+8iQ0K4oCiIOezu+e7n+aPkOekuuivje+8muiHquWumuS5iUFJ5Zue5aSN55qE6aOO5qC85ZKM5YaF5a65DQoNCvCfjq4g5b+r5o236ZSu77yaDQrigKIgQ3RybCtTaGlmdCtY77ya5pi+56S6L+makOiXj+aOp+WItumdouadvw0K4oCiIEN0cmwrU2hpZnQrU++8muWQr+WKqC/lgZzmraLoh6rliqjlm57lpI0NCuKAoiBDdHJsK1NoaWZ0K1LvvJrph43lkK/lupTnlKgNCuKAoiBDdHJsK1NoaWZ0K0TvvJrliIfmjaLosIPor5XmqKHlvI8NCg0K8J+TiiDnirbmgIHor7TmmI7vvJoNCuKAoiDov5DooYznirbmgIHvvJrmmL7npLrlvZPliY3mmK/lkKblnKjoh6rliqjlm57lpI0NCuKAoiDmlrDmtojmga/vvJrmo4DmtYvliLDnmoTmnKrlpITnkIbmtojmga/mlbDph48NCuKAoiDlt7LlpITnkIbvvJrntK/orqHlpITnkIbnmoTmtojmga/mlbDph48NCg0K8J+UpyDmlYXpmpzmjpLpmaTvvJoNCuKAoiDlpoLmnpzmo4DmtYvkuI3liLDmlrDmtojmga/vvIzor7fliLfmlrDpobXpnaINCuKAoiDlpoLmnpxBUEnosIPnlKjlpLHotKXvvIzor7fmo4Dmn6XnvZHnu5zlkozlr4bpkqUNCuKAoiDlpoLmnpzlj5HpgIHlpLHotKXvvIzor7fmo4Dmn6XpobXpnaLlhYPntKDmmK/lkKbmraPluLgNCg0K4pqg77iPIOazqOaEj+S6i+mhue+8mg0K4oCiIOivt+WQiOeQhuiuvue9ruWbnuWkjeW7tui/n++8jOmBv+WFjeiiq+mZkOWItg0K4oCiIOW7uuiuruWumuacn+ajgOafpeWbnuWkjei0qOmHjw0K4oCiIOivt+mBteWuiOW5s+WPsOS9v+eUqOinhOiMgw0KDQrniYjmnKzvvJoke0NPTkZJRy5WRVJTSU9OfQ0K5L2c6ICF77yaQ2xhdWRlIDQuMCBzb25uZXQNCiAgICAgICAgICAgIGA7DQoNCiAgICAgICAgICAgIGFsZXJ0KGhlbHBDb250ZW50KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgICAgICAvLyDogZrlhYnov5vnur/nm7jlhbPlpITnkIbmlrnms5UNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6IGa5YWJ6L+b57q/6YWN572u5Yy65Z+f5bGV5byAL+aUtui1tw0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlVG9nZ2xlU3BvdGxpZ2h0KCkgew0KICAgICAgICAgICAgY29uc3QgY29udGVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtY29udGVudCcpOw0KICAgICAgICAgICAgY29uc3QgYnV0dG9uID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRv",
        "Z2dsZS1zcG90bGlnaHQnKTsNCg0KICAgICAgICAgICAgaWYgKGNvbnRlbnQgJiYgYnV0dG9uKSB7DQogICAgICAgICAgICAgICAgaWYgKGNvbnRlbnQuc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7DQogICAgICAgICAgICAgICAgICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9ICfmlLbotbcnOw0KICAgICAgICAgICAgICAgICAgICAvLyDliqDovb3phY3nva4NCiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkU3BvdGxpZ2h0Q29uZmlnKCk7DQogICAgICAgICAgICAgICAgICAgIC8vIOabtOaWsOe7n+iuoQ0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNwb3RsaWdodFN0YXRzKCk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOw0KICAgICAgICAgICAgICAgICAgICBidXR0b24udGV4dENvbnRlbnQgPSAn5bGV5byAJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuiBmuWFiei/m+e6v+WKn+iDveWQr+eUqOeKtuaAgeWPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlU3BvdGxpZ2h0RW5hYmxlZENoYW5nZSgpIHsNCiAgICAgICAgICAgIGNvbnN0IGNoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC1lbmFibGVkJyk7DQogICAgICAgICAgICBpZiAoY2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAvLyDlrp7ml7bmm7TmlrDnirbmgIHmmL7npLoNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNwb3RsaWdodFN0YXRzKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfogZrlhYnov5vnur/lip/og73nirbmgIHlj5jmm7QnLCB7IGVuYWJsZWQ6IGNoZWNrYm94LmNoZWNrZWQgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuS/neWtmOiBmuWFiei/m+e6v+mFjee9rg0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlU2F2ZVNwb3RsaWdodCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC1lbmFibGVkJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVUZXh0YXJlYSA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtdGVtcGxhdGUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhY3RpdmVXZWxjb21lQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc3BvdGxpZ2h0LWFjdGl2ZS13ZWxjb21lJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYWN0aXZlQ291cnNlSW5wdXQgPSB0",
        "aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc3BvdGxpZ2h0LWFjdGl2ZS1jb3Vyc2UnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkZWZhdWx0Q291cnNlSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc3BvdGxpZ2h0LWRlZmF1bHQtY291cnNlJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWVuYWJsZWRDaGVja2JveCB8fCAhdGVtcGxhdGVUZXh0YXJlYSB8fCAhYWN0aXZlV2VsY29tZUNoZWNrYm94IHx8ICFhY3RpdmVDb3Vyc2VJbnB1dCB8fCAhZGVmYXVsdENvdXJzZUlucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6IGa5YWJ6L+b57q/6YWN572u5YWD57Sg5pyq5om+5YiwJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkID0gZW5hYmxlZENoZWNrYm94LmNoZWNrZWQ7DQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGUgPSB0ZW1wbGF0ZVRleHRhcmVhLnZhbHVlLnRyaW0oKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhY3RpdmVXZWxjb21lRW5hYmxlZCA9IGFjdGl2ZVdlbGNvbWVDaGVja2JveC5jaGVja2VkOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2ZUNvdXJzZU5hbWUgPSBhY3RpdmVDb3Vyc2VJbnB1dC52YWx1ZS50cmltKCk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVmYXVsdENvdXJzZU5hbWUgPSBkZWZhdWx0Q291cnNlSW5wdXQudmFsdWUudHJpbSgpOw0KDQogICAgICAgICAgICAgICAgaWYgKGVuYWJsZWQgJiYgIXRlbXBsYXRlKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6K+36L6T5YWl6IGa5YWJ6L+b57q/6K+d5pyv5qih5p2/JywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoYWN0aXZlV2VsY29tZUVuYWJsZWQgJiYgIWFjdGl2ZUNvdXJzZU5hbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfor7fovpPlhaXkuLvliqjor53mnK/or77nqIvlkI3np7AnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChlbmFibGVkICYmICFkZWZhdWx0Q291cnNlTmFtZSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ivt+i+k+WFpem7mOiupOivvueoi+WQjeensCcsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5L+d5a2Y6YWN572uDQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ3Nwb3RsaWdodExlYWRFbmFibGVkJywgZW5hYmxlZCk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFu",
        "YWdlci5zZXQoJ3Nwb3RsaWdodExlYWRUZW1wbGF0ZScsIHRlbXBsYXRlKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnc3BvdGxpZ2h0QWN0aXZlV2VsY29tZUVuYWJsZWQnLCBhY3RpdmVXZWxjb21lRW5hYmxlZCk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ3Nwb3RsaWdodEFjdGl2ZVdlbGNvbWVDb3Vyc2VOYW1lJywgYWN0aXZlQ291cnNlTmFtZSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ3Nwb3RsaWdodERlZmF1bHRDb3Vyc2VOYW1lJywgZGVmYXVsdENvdXJzZU5hbWUpOw0KDQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfogZrlhYnov5vnur/phY3nva7lt7Lkv53lrZgnLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU3BvdGxpZ2h0U3RhdHMoKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6IGa5YWJ6L+b57q/6YWN572u5bey5pu05pawJywgew0KICAgICAgICAgICAgICAgICAgICBlbmFibGVkLA0KICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZUxlbmd0aDogdGVtcGxhdGUubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICBhY3RpdmVXZWxjb21lRW5hYmxlZCwNCiAgICAgICAgICAgICAgICAgICAgYWN0aXZlQ291cnNlTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdENvdXJzZU5hbWUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S/neWtmOiBmuWFiei/m+e6v+mFjee9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfkv53lrZjogZrlhYnov5vnur/phY3nva7lpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5rWL6K+V6IGa5YWJ6L+b57q/6K+d5pyvDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVUZXN0U3BvdGxpZ2h0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZVRleHRhcmVhID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC10ZW1wbGF0ZScpOw0KICAgICAgICAgICAgICAgIGlmICghdGVtcGxhdGVUZXh0YXJlYSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ivneacr+aooeadv+WFg+e0oOacquaJvuWIsCcsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGUgPSB0ZW1wbGF0ZVRleHRhcmVhLnZhbHVlLnRyaW0oKTsNCiAgICAgICAgICAgICAgICBpZiAoIXRlbXBsYXRlKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlm",
        "aWNhdGlvbign6K+35YWI6L6T5YWl6K+d5pyv5qih5p2/JywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnlJ/miJDmtYvor5Xlm57lpI0NCiAgICAgICAgICAgICAgICBjb25zdCBkZWZhdWx0Q291cnNlTmFtZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGlnaHREZWZhdWx0Q291cnNlTmFtZScsICfmiJHku6znmoTor77nqIsnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0ZXN0UmVwbHkgPSBTcG90bGlnaHRMZWFkUHJvY2Vzc29yLmdlbmVyYXRlUmVwbHkoJ+a1i+ivleeUqOaItycsIGRlZmF1bHRDb3Vyc2VOYW1lKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaYvuekuua1i+ivlee7k+aenA0KICAgICAgICAgICAgICAgIGNvbnN0IHRlc3RSZXN1bHQgPSBgDQrmtYvor5Xor53mnK/pooTop4jvvJoNCg0KJHt0ZXN0UmVwbHl9DQoNCuWPmOmHj+abv+aNouivtOaYju+8mg0K4oCiIHvnlKjmiLfmmLXnp7B9IOKGkiDmtYvor5XnlKjmiLcNCuKAoiB76K++56iL5ZCN56ewfSDihpIgJHtkZWZhdWx0Q291cnNlTmFtZX0gKOS9v+eUqOm7mOiupOivvueoi+WQjeensCkNCiAgICAgICAgICAgICAgICBgOw0KDQogICAgICAgICAgICAgICAgYWxlcnQodGVzdFJlc3VsdCk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfor53mnK/mtYvor5XlrozmiJAnLCAnc3VjY2VzcycpOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5rWL6K+V6IGa5YWJ6L+b57q/6K+d5pyv5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+a1i+ivleiBmuWFiei/m+e6v+ivneacr+Wksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbliLfmlrDogZrlhYnov5vnur/nu5/orqENCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVJlZnJlc2hTcG90bGlnaHRTdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTcG90bGlnaHRTdGF0cygpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6IGa5YWJ6L+b57q/57uf6K6h5bey5Yi35pawJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliLfmlrDogZrlhYnov5vnur/nu5/orqHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Yi35paw6IGa5YWJ6L+b57q/57uf6K6h5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhua4heep",
        "uuiBmuWFiei/m+e6v+e8k+WtmA0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQ2xlYXJTcG90bGlnaHRDYWNoZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKGNvbmZpcm0oJ+ehruWumuimgea4heepuuiBmuWFiei/m+e6v+WkhOeQhue8k+WtmOWQl++8n+a4heepuuWQjuW3suWkhOeQhueahOi/m+e6v+WPr+iDveS8mumHjeWkjeWbnuWkjeOAgicpKSB7DQogICAgICAgICAgICAgICAgICAgIFNwb3RsaWdodExlYWRQcm9jZXNzb3IucHJvY2Vzc2VkTGVhZHMuY2xlYXIoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTcG90bGlnaHRTdGF0cygpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+iBmuWFiei/m+e6v+e8k+WtmOW3sua4heepuicsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfogZrlhYnov5vnur/nvJPlrZjlt7LmuIXnqbonKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5riF56m66IGa5YWJ6L+b57q/57yT5a2Y5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+a4heepuuiBmuWFiei/m+e6v+e8k+WtmOWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliqDovb3ogZrlhYnov5vnur/phY3nva4NCiAgICAgICAgICovDQogICAgICAgIGxvYWRTcG90bGlnaHRDb25maWcoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtZW5hYmxlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlVGV4dGFyZWEgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc3BvdGxpZ2h0LXRlbXBsYXRlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYWN0aXZlV2VsY29tZUNoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC1hY3RpdmUtd2VsY29tZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2ZUNvdXJzZUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC1hY3RpdmUtY291cnNlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVmYXVsdENvdXJzZUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC1kZWZhdWx0LWNvdXJzZScpOw0KDQogICAgICAgICAgICAgICAgaWYgKGVuYWJsZWRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBlbmFibGVkQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGlnaHRMZWFkRW5hYmxl",
        "ZCcsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAodGVtcGxhdGVUZXh0YXJlYSkgew0KICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVRleHRhcmVhLnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ3Nwb3RsaWdodExlYWRUZW1wbGF0ZScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLnNwb3RsaWdodExlYWRUZW1wbGF0ZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGFjdGl2ZVdlbGNvbWVDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBhY3RpdmVXZWxjb21lQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGlnaHRBY3RpdmVXZWxjb21lRW5hYmxlZCcsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoYWN0aXZlQ291cnNlSW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgYWN0aXZlQ291cnNlSW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnc3BvdGxpZ2h0QWN0aXZlV2VsY29tZUNvdXJzZU5hbWUnLCAn5oiR5Lus55qE6K++56iLJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGRlZmF1bHRDb3Vyc2VJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBkZWZhdWx0Q291cnNlSW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnc3BvdGxpZ2h0RGVmYXVsdENvdXJzZU5hbWUnLCAn5oiR5Lus55qE6K++56iLJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfogZrlhYnov5vnur/phY3nva7lt7LliqDovb0nKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliqDovb3ogZrlhYnov5vnur/phY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgICAgIC8vIOWDteWwuOacquivu+WkhOeQhuebuOWFs+aWueazlQ0KICAgICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIblg7XlsLjmnKror7vphY3nva7ljLrln5/lsZXlvIAv5pS26LW3DQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVUb2dnbGVab21iaWUoKSB7DQogICAgICAgICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXpvbWJpZS1jb250ZW50Jyk7DQogICAgICAgICAgICBjb25zdCBidXR0b24gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLXpvbWJpZScpOw0KDQogICAgICAgICAgICBpZiAoY29udGVudCAmJiBidXR0b24pIHsNCiAgICAgICAgICAgICAgICBjb25zdCBpc1Zpc2libGUgPSBjb250ZW50LnN0eWxlLmRpc3BsYXkgIT09ICdu",
        "b25lJzsNCiAgICAgICAgICAgICAgICBpZiAoaXNWaXNpYmxlKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJzsNCiAgICAgICAgICAgICAgICAgICAgYnV0dG9uLnRleHRDb250ZW50ID0gJ+WxleW8gCc7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsNCiAgICAgICAgICAgICAgICAgICAgYnV0dG9uLnRleHRDb250ZW50ID0gJ+aUtui1tyc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIblg7XlsLjmnKror7vlip/og73lkK/nlKjnirbmgIHlj5jljJYNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVpvbWJpZUVuYWJsZWRDaGFuZ2UoKSB7DQogICAgICAgICAgICBjb25zdCBjaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS16b21iaWUtZW5hYmxlZCcpOw0KICAgICAgICAgICAgaWYgKGNoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVab21iaWVTdGF0cygpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5YO15bC45pyq6K+75aSE55CG5Yqf6IO954q25oCB5Y+Y5pu0JywgeyBlbmFibGVkOiBjaGVja2JveC5jaGVja2VkIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbkv53lrZjlg7XlsLjmnKror7vphY3nva4NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGhhbmRsZVNhdmVab21iaWUoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS16b21iaWUtZW5hYmxlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvb2xkb3duSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktem9tYmllLWNvb2xkb3duJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVidWdDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS16b21iaWUtZGVidWcnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhdXRvQ2xlYW51cENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXpvbWJpZS1hdXRvLWNsZWFudXAnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBjbGVhbnVwRGF5c0lucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXpvbWJpZS1jbGVhbnVwLWRheXMnKTsNCg0KICAgICAgICAgICAgICAgIGlmICghZW5hYmxlZENoZWNrYm94IHx8ICFjb29sZG93bklucHV0IHx8ICFkZWJ1Z0NoZWNrYm94IHx8ICFhdXRvQ2xlYW51cENoZWNrYm94IHx8ICFjbGVhbnVwRGF5c0lucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5YO1",
        "5bC45pyq6K+76YWN572u5YWD57Sg5pyq5om+5YiwJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkID0gZW5hYmxlZENoZWNrYm94LmNoZWNrZWQ7DQogICAgICAgICAgICAgICAgY29uc3QgY29vbGRvd25NaW51dGVzID0gcGFyc2VJbnQoY29vbGRvd25JbnB1dC52YWx1ZSkgfHwgNjA7DQogICAgICAgICAgICAgICAgY29uc3QgZGVidWdNb2RlID0gZGVidWdDaGVja2JveC5jaGVja2VkOw0KICAgICAgICAgICAgICAgIGNvbnN0IGF1dG9DbGVhbnVwID0gYXV0b0NsZWFudXBDaGVja2JveC5jaGVja2VkOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNsZWFudXBEYXlzID0gcGFyc2VJbnQoY2xlYW51cERheXNJbnB1dC52YWx1ZSkgfHwgNzsNCg0KICAgICAgICAgICAgICAgIC8vIOmqjOivgei+k+WFpQ0KICAgICAgICAgICAgICAgIGlmIChjb29sZG93bk1pbnV0ZXMgPCA1IHx8IGNvb2xkb3duTWludXRlcyA+IDE0NDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCflhrfljbTml7bpl7Tlv4XpobvlnKg1LTE0NDDliIbpkp/kuYvpl7QnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChjbGVhbnVwRGF5cyA8IDEgfHwgY2xlYW51cERheXMgPiAzMCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+a4heeQhuWkqeaVsOW/hemhu+WcqDEtMzDlpKnkuYvpl7QnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOS/neWtmOmFjee9rg0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCd6b21iaWVVbnJlYWRFbmFibGVkJywgZW5hYmxlZCk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ3pvbWJpZVVucmVhZENvb2xkb3duTWludXRlcycsIGNvb2xkb3duTWludXRlcyk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ3pvbWJpZVVucmVhZERlYnVnTW9kZScsIGRlYnVnTW9kZSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ3pvbWJpZVVucmVhZEF1dG9DbGVhbnVwJywgYXV0b0NsZWFudXApOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCd6b21iaWVVbnJlYWRDbGVhbnVwRGF5cycsIGNsZWFudXBEYXlzKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5YO15bC45pyq6K+76YWN572u5bey5L+d5a2YJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVpvbWJpZVN0YXRzKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+WDteWwuOacquivu+mFjee9ruW3suabtOaWsCcsIHsNCiAgICAgICAgICAgICAgICAgICAg",
        "ZW5hYmxlZCwNCiAgICAgICAgICAgICAgICAgICAgY29vbGRvd25NaW51dGVzLA0KICAgICAgICAgICAgICAgICAgICBkZWJ1Z01vZGUsDQogICAgICAgICAgICAgICAgICAgIGF1dG9DbGVhbnVwLA0KICAgICAgICAgICAgICAgICAgICBjbGVhbnVwRGF5cw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5L+d5a2Y5YO15bC45pyq6K+76YWN572u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+S/neWtmOWDteWwuOacquivu+mFjee9ruWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbliLfmlrDlg7XlsLjmnKror7vnu5/orqENCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVJlZnJlc2hab21iaWVTdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVab21iaWVTdGF0cygpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5YO15bC45pyq6K+757uf6K6h5bey5Yi35pawJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliLfmlrDlg7XlsLjmnKror7vnu5/orqHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Yi35paw5YO15bC45pyq6K+757uf6K6h5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhua4heepuuWDteWwuOacquivu+iusOW9lQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQ2xlYXJab21iaWVSZWNvcmRzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoY29uZmlybSgn56Gu5a6a6KaB5riF56m65omA5pyJ5YO15bC45pyq6K+76K6w5b2V5ZCX77yf5q2k5pON5L2c5LiN5Y+v5pKk6ZSA44CCJykpIHsNCiAgICAgICAgICAgICAgICAgICAgWm9tYmllVW5yZWFkTWFuYWdlci5yZXNldCgpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVpvbWJpZVN0YXRzKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5YO15bC45pyq6K+76K6w5b2V5bey5riF56m6JywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+WDteWwuOacquivu+iusOW9leW3sua4heepuicpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmuIXnqbrlg7XlsLjmnKror7vorrDlvZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNz",
        "YWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5riF56m65YO15bC45pyq6K+76K6w5b2V5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWKoOi9veWDteWwuOacquivu+mFjee9rg0KICAgICAgICAgKi8NCiAgICAgICAgbG9hZFpvbWJpZUNvbmZpZygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXpvbWJpZS1lbmFibGVkJyk7DQogICAgICAgICAgICAgICAgY29uc3QgY29vbGRvd25JbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS16b21iaWUtY29vbGRvd24nKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkZWJ1Z0NoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXpvbWJpZS1kZWJ1ZycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGF1dG9DbGVhbnVwQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktem9tYmllLWF1dG8tY2xlYW51cCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNsZWFudXBEYXlzSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktem9tYmllLWNsZWFudXAtZGF5cycpOw0KDQogICAgICAgICAgICAgICAgaWYgKGVuYWJsZWRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBlbmFibGVkQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCd6b21iaWVVbnJlYWRFbmFibGVkJywgdHJ1ZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGNvb2xkb3duSW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29vbGRvd25JbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCd6b21iaWVVbnJlYWRDb29sZG93bk1pbnV0ZXMnLCA2MCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGRlYnVnQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgZGVidWdDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ3pvbWJpZVVucmVhZERlYnVnTW9kZScsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoYXV0b0NsZWFudXBDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBhdXRvQ2xlYW51cENoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnem9tYmllVW5yZWFkQXV0b0NsZWFudXAnLCB0cnVlKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoY2xlYW51cERheXNJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBjbGVhbnVwRGF5c0lucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ3pvbWJpZVVucmVhZENsZWFudXBEYXlzJywgNyk7DQogICAgICAgICAgICAgICAgfQ0K",
        "DQogICAgICAgICAgICAgICAgLy8g5pu05paw57uf6K6h5L+h5oGvDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVab21iaWVTdGF0cygpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflg7XlsLjmnKror7vphY3nva7lt7LliqDovb0nKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliqDovb3lg7XlsLjmnKror7vphY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmm7TmlrDlg7XlsLjmnKror7vnu5/orqHkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZVpvbWJpZVN0YXRzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBzdGF0cyA9IFpvbWJpZVVucmVhZE1hbmFnZXIuZ2V0U3RhdHMoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkID0gQ29uZmlnTWFuYWdlci5nZXQoJ3pvbWJpZVVucmVhZEVuYWJsZWQnLCB0cnVlKTsNCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOeKtuaAgeaYvuekug0KICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1c0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktem9tYmllLXN0YXR1cycpOw0KICAgICAgICAgICAgICAgIGlmIChzdGF0dXNFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHN0YXR1c0VsZW1lbnQudGV4dENvbnRlbnQgPSBlbmFibGVkID8gJ+W3suWQr+eUqCcgOiAn5bey56aB55SoJzsNCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzRWxlbWVudC5zdHlsZS5jb2xvciA9IGVuYWJsZWQgPyAnIzJlZDU3MycgOiAnI2ZmNDc1Nyc7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw57uf6K6h5pWw5o2uDQogICAgICAgICAgICAgICAgY29uc3QgdG90YWxFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXpvbWJpZS10b3RhbCcpOw0KICAgICAgICAgICAgICAgIGlmICh0b3RhbEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgdG90YWxFbGVtZW50LnRleHRDb250ZW50ID0gc3RhdHMudG90YWxSZWNvcmRzOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGNvb2xkb3duQ291bnRFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXpvbWJpZS1jb29sZG93bi1jb3VudCcpOw0KICAgICAgICAgICAgICAgIGlmIChjb29sZG93bkNvdW50RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBjb29sZG93bkNvdW50RWxlbWVudC50ZXh0Q29udGVudCA9IHN0YXRzLmluQ29vbGRvd247DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgcHJvY2Vzc2VzRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS16b21iaWUt",
        "cHJvY2Vzc2VzJyk7DQogICAgICAgICAgICAgICAgaWYgKHByb2Nlc3Nlc0VsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc2VzRWxlbWVudC50ZXh0Q29udGVudCA9IHN0YXRzLnRvdGFsUHJvY2Vzc2VzOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5YO15bC45pyq6K+757uf6K6h5L+h5oGv5bey5pu05pawJywgc3RhdHMpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOWDteWwuOacquivu+e7n+iuoeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAgICAgLy8g6ZSZ6K+v5o6o6YCB5Yqf6IO955u45YWz5aSE55CG5pa55rOVDQogICAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhumUmeivr+aOqOmAgeWKn+iDveWxleW8gC/mlLbotbcNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRvZ2dsZUVycm9yTm90aWZpY2F0aW9uKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1jb250ZW50Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS1lcnJvci1ub3RpZmljYXRpb24nKTsNCg0KICAgICAgICAgICAgICAgIGlmIChjb250ZW50ICYmIGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1Zpc2libGUgPSBjb250ZW50LnN0eWxlLmRpc3BsYXkgIT09ICdub25lJzsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gaXNWaXNpYmxlID8gJ25vbmUnIDogJ2Jsb2NrJzsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gaXNWaXNpYmxlID8gJ+WxleW8gCcgOiAn5pS26LW3JzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5YiH5o2i6ZSZ6K+v5o6o6YCB6YWN572u5pi+56S65aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6ZSZ6K+v5o6o6YCB5Yqf6IO95ZCv55So54q25oCB5Y+Y5YyWDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVFcnJvck5vdGlmaWNhdGlvbkVuYWJsZWRDaGFuZ2UoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3ho",
        "cy1haS1lcnJvci1ub3RpZmljYXRpb24tZW5hYmxlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNldHRpbmdzRGl2ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1zZXR0aW5ncycpOw0KDQogICAgICAgICAgICAgICAgaWYgKGVuYWJsZWRDaGVja2JveCAmJiBzZXR0aW5nc0Rpdikgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkID0gZW5hYmxlZENoZWNrYm94LmNoZWNrZWQ7DQogICAgICAgICAgICAgICAgICAgIHNldHRpbmdzRGl2LnN0eWxlLmRpc3BsYXkgPSBlbmFibGVkID8gJ2Jsb2NrJyA6ICdub25lJzsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDoh6rliqjkv53lrZjlkK/nlKjnirbmgIENCiAgICAgICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2Vycm9yTm90aWZpY2F0aW9uRW5hYmxlZCcsIGVuYWJsZWQpOw0KDQogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlRXJyb3JOb3RpZmljYXRpb25TdGF0cygpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mUmeivr+aOqOmAgeWKn+iDveeKtuaAgeW3suabtOaUuScsIHsgZW5hYmxlZCB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5aSE55CG6ZSZ6K+v5o6o6YCB5ZCv55So54q25oCB5Y+Y5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5L+d5a2Y6ZSZ6K+v5o6o6YCB6YWN572uDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVTYXZlRXJyb3JOb3RpZmljYXRpb24oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOiOt+WPlumFjee9ruWFg+e0oA0KICAgICAgICAgICAgICAgIGNvbnN0IGVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1ub3RpZmljYXRpb24tZW5hYmxlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFwaUtleUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1hcGkta2V5Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgY2hhbm5lbHNTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWNoYW5uZWxzJyk7DQogICAgICAgICAgICAgICAgY29uc3QgcmF0ZUxpbWl0SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItcmF0ZS1saW1pdCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlZHVwbGljYXRpb25DaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1kZWR1cGxpY2F0aW9uJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVkdXBs",
        "aWNhdGlvbldpbmRvd0lucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLWRlZHVwbGljYXRpb24td2luZG93Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgdGVzdE1vZGVDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci10ZXN0LW1vZGUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZVRleHRhcmVhID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLXRlbXBsYXRlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgaW5jbHVkZUtleXdvcmRzSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItaW5jbHVkZS1rZXl3b3JkcycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGV4Y2x1ZGVLZXl3b3Jkc0lucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLWV4Y2x1ZGUta2V5d29yZHMnKTsNCg0KICAgICAgICAgICAgICAgIGlmICghZW5hYmxlZENoZWNrYm94IHx8ICFhcGlLZXlJbnB1dCB8fCAhY2hhbm5lbHNTZWxlY3QgfHwgIXJhdGVMaW1pdElucHV0IHx8DQogICAgICAgICAgICAgICAgICAgICFkZWR1cGxpY2F0aW9uQ2hlY2tib3ggfHwgIWRlZHVwbGljYXRpb25XaW5kb3dJbnB1dCB8fCAhdGVzdE1vZGVDaGVja2JveCB8fA0KICAgICAgICAgICAgICAgICAgICAhdGVtcGxhdGVUZXh0YXJlYSB8fCAhaW5jbHVkZUtleXdvcmRzSW5wdXQgfHwgIWV4Y2x1ZGVLZXl3b3Jkc0lucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6ZSZ6K+v5o6o6YCB6YWN572u5YWD57Sg5pyq5om+5YiwJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDojrflj5bplJnor6/nuqfliKsNCiAgICAgICAgICAgICAgICBjb25zdCBlcnJvckxldmVscyA9IFtdOw0KICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItbGV2ZWwtZXJyb3InKTsNCiAgICAgICAgICAgICAgICBjb25zdCB3YXJuQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItbGV2ZWwtd2FybicpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGluZm9DaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1sZXZlbC1pbmZvJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoZXJyb3JDaGVja2JveCAmJiBlcnJvckNoZWNrYm94LmNoZWNrZWQpIGVycm9yTGV2ZWxzLnB1c2goJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgaWYgKHdhcm5DaGVja2JveCAmJiB3YXJuQ2hlY2tib3guY2hlY2tlZCkgZXJyb3JMZXZlbHMucHVzaCgnd2FybicpOw0KICAgICAgICAgICAgICAgIGlmIChpbmZvQ2hlY2tib3ggJiYgaW5mb0NoZWNrYm94LmNoZWNr",
        "ZWQpIGVycm9yTGV2ZWxzLnB1c2goJ2luZm8nKTsNCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WPlumAieS4reeahOaOqOmAgea4oOmBkw0KICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkQ2hhbm5lbHMgPSBBcnJheS5mcm9tKGNoYW5uZWxzU2VsZWN0LnNlbGVjdGVkT3B0aW9ucykubWFwKG9wdGlvbiA9PiBvcHRpb24udmFsdWUpOw0KDQogICAgICAgICAgICAgICAgLy8g6aqM6K+B6YWN572uDQogICAgICAgICAgICAgICAgaWYgKGVuYWJsZWRDaGVja2JveC5jaGVja2VkKSB7DQogICAgICAgICAgICAgICAgICAgIGlmICghYXBpS2V5SW5wdXQudmFsdWUudHJpbSgpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ivt+i+k+WFpUFQSeWvhumSpScsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGVjdGVkQ2hhbm5lbHMubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ivt+iHs+WwkemAieaLqeS4gOS4quaOqOmAgea4oOmBkycsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yTGV2ZWxzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfor7foh7PlsJHpgInmi6nkuIDkuKrplJnor6/nuqfliKsnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHJhdGVMaW1pdCA9IHBhcnNlSW50KHJhdGVMaW1pdElucHV0LnZhbHVlKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzTmFOKHJhdGVMaW1pdCkgfHwgcmF0ZUxpbWl0IDwgMSB8fCByYXRlTGltaXQgPiAyMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmjqjpgIHpopHnjofpmZDliLblv4XpobvlnKgxLTIw5LmL6Ze0JywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBjb25zdCBkZWR1cGxpY2F0aW9uV2luZG93ID0gcGFyc2VJbnQoZGVkdXBsaWNhdGlvbldpbmRvd0lucHV0LnZhbHVlKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzTmFOKGRlZHVwbGljYXRpb25XaW5kb3cpIHx8IGRlZHVwbGljYXRpb25XaW5kb3cgPCAxIHx8IGRlZHVwbGljYXRpb25XaW5kb3cgPiA2MCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfljrvph43ml7bpl7Tnqpflj6Plv4XpobvlnKgxLTYw5YiG6ZKf5LmL6Ze0JywgJ2Vycm9yJyk7DQogICAg",
        "ICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkv53lrZjphY3nva4NCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZXJyb3JOb3RpZmljYXRpb25FbmFibGVkJywgZW5hYmxlZENoZWNrYm94LmNoZWNrZWQpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdlcnJvck5vdGlmaWNhdGlvbkFwaUtleScsIGFwaUtleUlucHV0LnZhbHVlLnRyaW0oKSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2Vycm9yTm90aWZpY2F0aW9uQ2hhbm5lbHMnLCBzZWxlY3RlZENoYW5uZWxzLmpvaW4oJywnKSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2Vycm9yTm90aWZpY2F0aW9uTGV2ZWxzJywgZXJyb3JMZXZlbHMuam9pbignLCcpKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZXJyb3JOb3RpZmljYXRpb25SYXRlTGltaXQnLCBwYXJzZUludChyYXRlTGltaXRJbnB1dC52YWx1ZSkpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdlcnJvck5vdGlmaWNhdGlvbkRlZHVwbGljYXRpb24nLCBkZWR1cGxpY2F0aW9uQ2hlY2tib3guY2hlY2tlZCk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2Vycm9yTm90aWZpY2F0aW9uRGVkdXBsaWNhdGlvbldpbmRvdycsIHBhcnNlSW50KGRlZHVwbGljYXRpb25XaW5kb3dJbnB1dC52YWx1ZSkpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdlcnJvck5vdGlmaWNhdGlvblRlc3RNb2RlJywgdGVzdE1vZGVDaGVja2JveC5jaGVja2VkKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZXJyb3JOb3RpZmljYXRpb25UZW1wbGF0ZScsIHRlbXBsYXRlVGV4dGFyZWEudmFsdWUudHJpbSgpKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZXJyb3JOb3RpZmljYXRpb25LZXl3b3JkcycsIGluY2x1ZGVLZXl3b3Jkc0lucHV0LnZhbHVlLnRyaW0oKSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2Vycm9yTm90aWZpY2F0aW9uRXhjbHVkZUtleXdvcmRzJywgZXhjbHVkZUtleXdvcmRzSW5wdXQudmFsdWUudHJpbSgpKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6ZSZ6K+v5o6o6YCB6YWN572u5bey5L+d5a2YJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUVycm9yTm90aWZpY2F0aW9uU3RhdHMoKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6ZSZ6K+v5o6o6YCB6YWN572u5bey5pu05pawJyk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfkv53lrZjplJnor6/mjqjpgIHphY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAg",
        "ICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5L+d5a2Y6ZSZ6K+v5o6o6YCB6YWN572u5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhua1i+ivlemUmeivr+aOqOmAgQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlVGVzdEVycm9yTm90aWZpY2F0aW9uKCkgew0KICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRlc3QtZXJyb3Itbm90aWZpY2F0aW9uJyk7DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5rWL6K+V5LitLi4uJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ato+WcqOWPkemAgea1i+ivleaOqOmAgS4uLicsICdpbmZvJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDnm7TmjqXosIPnlKjmjqjpgIHvvIzkuI3pgJrov4dMb2dnZXLns7vnu5/vvIjpgb/lhY3lvqrnjq/vvIkNCiAgICAgICAgICAgICAgICBjb25zdCB0ZXN0Q29udGVudCA9IHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudDogJ/Cfp6og6L+Z5piv5LiA5p2h5rWL6K+V5o6o6YCB5raI5oGv77yM55So5LqO6aqM6K+B5o6o6YCB5Yqf6IO95piv5ZCm5q2j5bi45bel5L2c44CCXG5cbuKPsCDmtYvor5Xml7bpl7TvvJonICsgbmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygnemgtQ04nKSArICdcbvCfk7Eg5aaC5p6c5oKo5pS25Yiw5q2k5raI5oGv77yM6K+05piO5o6o6YCB5Yqf6IO96YWN572u5q2j56Gu77yBJywNCiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICfmjqjpgIHlip/og73mtYvor5UnLA0KICAgICAgICAgICAgICAgICAgICBmcm9tOiAn5bCP57qi5LmmQUnoh6rliqjlm57lpI3lt6XlhbcnDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIC8vIOWFiOWwneivlVBPU1TmlrnlvI8NCiAgICAgICAgICAgICAgICBsZXQgc3VjY2VzcyA9IGF3YWl0IEVycm9yTm90aWZpY2F0aW9uTWFuYWdlci5zZW5kUHVzaFJlcXVlc3QodGVzdENvbnRlbnQpOw0KDQogICAgICAgICAgICAgICAgaWYgKCFzdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5SEIFBPU1TmtYvor5XlpLHotKXvvIzlsJ3or5VHRVTmlrnlvI8nKTsNCiAgICAgICAgICAgICAgICAgICAgc3VjY2VzcyA9IGF3YWl0IEVycm9yTm90aWZpY2F0aW9uTWFuYWdlci5zZW5kUHVzaFJlcXVlc3RWaWFHZXQodGVzdENvbnRlbnQpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChzdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign4pyFIOa1i+iv",
        "leaOqOmAgeWPkemAgeaIkOWKn++8geivt+ajgOafpeaCqOeahOaOpeaUtuiuvuWkhycsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlRXJyb3JOb3RpZmljYXRpb25TdGF0cygpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+nqiDmjqjpgIHlip/og73mtYvor5XmiJDlip8nKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+KdjCDmtYvor5XmjqjpgIHlj5HpgIHlpLHotKXvvIzor7fmo4Dmn6XphY3nva4nLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ/Cfp6og5o6o6YCB5Yqf6IO95rWL6K+V5aSx6LSlJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5rWL6K+V6ZSZ6K+v5o6o6YCB5byC5bi4JywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+KdjCDmtYvor5XmjqjpgIHlvILluLg6ICcgKyBlcnJvci5tZXNzYWdlLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0gZmluYWxseSB7DQogICAgICAgICAgICAgICAgaWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+a1i+ivleaOqOmAgSc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbliLfmlrDplJnor6/mjqjpgIHnu5/orqENCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVJlZnJlc2hFcnJvclN0YXRzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUVycm9yTm90aWZpY2F0aW9uU3RhdHMoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUVycm9yTm90aWZpY2F0aW9uSGlzdG9yeSgpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6ZSZ6K+v5o6o6YCB57uf6K6h5bey5Yi35pawJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliLfmlrDplJnor6/mjqjpgIHnu5/orqHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Yi35paw57uf6K6h5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhua4heepuumUmeivr+aOqOmAgeWOhuWPsg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQ2xlYXJFcnJvckhpc3RvcnkoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmIChj",
        "b25maXJtKCfnoa7lrpropoHmuIXnqbrplJnor6/mjqjpgIHljoblj7LorrDlvZXlkJfvvJ/mraTmk43kvZzkuI3lj6/mkqTplIDjgIInKSkgew0KICAgICAgICAgICAgICAgICAgICBFcnJvck5vdGlmaWNhdGlvbk1hbmFnZXIuY2xlYXJQdXNoSGlzdG9yeSgpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUVycm9yTm90aWZpY2F0aW9uU3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVFcnJvck5vdGlmaWNhdGlvbkhpc3RvcnkoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfplJnor6/mjqjpgIHljoblj7Llt7LmuIXnqbonLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmuIXnqbrplJnor6/mjqjpgIHljoblj7LlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5riF56m65Y6G5Y+y5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWFs+mXreWFrOWRig0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQ2xvc2VBbm5vdW5jZW1lbnQoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGFubm91bmNlbWVudFNlY3Rpb24gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYW5ub3VuY2VtZW50LXNlY3Rpb24nKTsNCiAgICAgICAgICAgICAgICBpZiAoYW5ub3VuY2VtZW50U2VjdGlvbikgew0KICAgICAgICAgICAgICAgICAgICBhbm5vdW5jZW1lbnRTZWN0aW9uLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g6K6w5b2V55So5oi35bey5YWz6Zet5b2T5YmN5YWs5ZGKDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGxhdGVzdEFubm91bmNlbWVudCA9IFNlcnZlck1hbmFnZXIuZ2V0TGF0ZXN0QW5ub3VuY2VtZW50KCk7DQogICAgICAgICAgICAgICAgICAgIGlmIChsYXRlc3RBbm5vdW5jZW1lbnQgJiYgbGF0ZXN0QW5ub3VuY2VtZW50LmlkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjbG9zZWRBbm5vdW5jZW1lbnRzID0gR01fZ2V0VmFsdWUoJ2Nsb3NlZF9hbm5vdW5jZW1lbnRzJywgW10pOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFjbG9zZWRBbm5vdW5jZW1lbnRzLmluY2x1ZGVzKGxhdGVzdEFubm91bmNlbWVudC5pZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbG9zZWRBbm5vdW5jZW1lbnRzLnB1c2gobGF0ZXN0QW5ub3VuY2VtZW50LmlkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgnY2xvc2VkX2Fubm91bmNlbWVudHMnLCBjbG9zZWRBbm5vdW5jZW1lbnRzKTsNCiAgICAgICAgICAgICAgICAg",
        "ICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5YWs5ZGK5bey5YWz6ZetJyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WFs+mXreWFrOWRiuWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAgICAgLy8g6L+957KJ5Yqf6IO955u45YWz5aSE55CG5pa55rOVDQogICAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhui/veeyieWKn+iDveWxleW8gC/mlLbotbcNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRvZ2dsZUZvbGxvd1VwKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWNvbnRlbnQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWZvbGxvd3VwJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoY29udGVudCAmJiBidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNWaXNpYmxlID0gY29udGVudC5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZSc7DQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuc3R5bGUuZGlzcGxheSA9IGlzVmlzaWJsZSA/ICdub25lJyA6ICdibG9jayc7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9IGlzVmlzaWJsZSA/ICflsZXlvIAnIDogJ+aUtui1tyc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WIh+aNoui/veeyiemFjee9ruaYvuekuuWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhui/veeyieWKn+iDveWQr+eUqOeKtuaAgeWPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlRm9sbG93VXBFbmFibGVkQ2hhbmdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtZW5hYmxlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNldHRpbmdzRGl2ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXNldHRpbmdzJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoZW5hYmxlZENoZWNrYm94ICYmIHNldHRpbmdzRGl2KSB7DQogICAgICAgICAgICAgICAg",
        "ICAgIGNvbnN0IGVuYWJsZWQgPSBlbmFibGVkQ2hlY2tib3guY2hlY2tlZDsNCiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3NEaXYuc3R5bGUuZGlzcGxheSA9IGVuYWJsZWQgPyAnYmxvY2snIDogJ25vbmUnOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOiHquWKqOS/neWtmOWQr+eUqOeKtuaAgQ0KICAgICAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBFbmFibGVkJywgZW5hYmxlZCk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5pu05paw6L+957KJ566h55CG5Zmo54q25oCBDQogICAgICAgICAgICAgICAgICAgIGlmIChlbmFibGVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcE1hbmFnZXIuc3RhcnQoKTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIEZvbGxvd1VwTWFuYWdlci5zdG9wKCk7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUZvbGxvd1VwU3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieWKn+iDveeKtuaAgeW3suabtOaWsCcsIHsgZW5hYmxlZCB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw6L+957KJ5Yqf6IO954q25oCB5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6ZqP5py65bu26L+f6K6+572u5Y+Y5YyWDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVGb2xsb3dVcFJhbmRvbURlbGF5Q2hhbmdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCByYW5kb21EZWxheUNoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXJhbmRvbS1kZWxheScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlbGF5U2V0dGluZ3NEaXYgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtZGVsYXktc2V0dGluZ3MnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChyYW5kb21EZWxheUNoZWNrYm94ICYmIGRlbGF5U2V0dGluZ3NEaXYpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZCA9IHJhbmRvbURlbGF5Q2hlY2tib3guY2hlY2tlZDsNCiAgICAgICAgICAgICAgICAgICAgZGVsYXlTZXR0aW5nc0Rpdi5zdHlsZS5kaXNwbGF5ID0gZW5hYmxlZCA/ICdibG9jaycgOiAnbm9uZSc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOmaj+acuuW7tui/n+iuvue9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAg",
        "IH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuiHquWKqOiusOW9leiuvue9ruWPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlRm9sbG93VXBBdXRvUmVjb3JkQ2hhbmdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBhdXRvUmVjb3JkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtYXV0by1yZWNvcmQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhdXRvUmVjb3JkU2V0dGluZ3NEaXYgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtYXV0by1yZWNvcmQtc2V0dGluZ3MnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChhdXRvUmVjb3JkQ2hlY2tib3ggJiYgYXV0b1JlY29yZFNldHRpbmdzRGl2KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGVuYWJsZWQgPSBhdXRvUmVjb3JkQ2hlY2tib3guY2hlY2tlZDsNCiAgICAgICAgICAgICAgICAgICAgYXV0b1JlY29yZFNldHRpbmdzRGl2LnN0eWxlLmRpc3BsYXkgPSBlbmFibGVkID8gJ2Jsb2NrJyA6ICdub25lJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw6Ieq5Yqo6K6w5b2V6K6+572u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5L+d5a2Y6L+957KJ6YWN572uDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVTYXZlRm9sbG93VXAoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOiOt+WPluaJgOaciemFjee9ruWFg+e0oA0KICAgICAgICAgICAgICAgIGNvbnN0IGVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1lbmFibGVkJyk7DQogICAgICAgICAgICAgICAgY29uc3Qgc2NhbkRheXNTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtc2Nhbi1kYXlzJyk7DQogICAgICAgICAgICAgICAgY29uc3QgaW50ZXJ2YWxTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtaW50ZXJ2YWwnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBtYXhDb3VudFNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1tYXgtY291bnQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkYWlseUxpbWl0SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtZGFpbHktbGltaXQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBiYXRjaFNpemVJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1iYXRjaC1zaXplJyk7DQogICAgICAgICAg",
        "ICAgICAgY29uc3QgbWFudWFsQmF0Y2hTaXplSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtbWFudWFsLWJhdGNoLXNpemUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBtYXhFbXB0eVNjYW5zSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtbWF4LWVtcHR5LXNjYW5zJyk7DQogICAgICAgICAgICAgICAgY29uc3QgcmFuZG9tRGVsYXlDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1yYW5kb20tZGVsYXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCBtaW5EZWxheUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLW1pbi1kZWxheScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IG1heERlbGF5SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtbWF4LWRlbGF5Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgYXV0b1JlY29yZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWF1dG8tcmVjb3JkJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYXV0b1JlY29yZERlbGF5SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtYXV0by1yZWNvcmQtZGVsYXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZU1vZGVTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtdGVtcGxhdGUtbW9kZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlVGV4dGFyZWFzID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yQWxsKCcueGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYXBpTGVhZHNDaGVja0NoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWFwaS1sZWFkcy1jaGVjaycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHJlYWx0aW1lTGVhZHNDaGVja0NoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXJlYWx0aW1lLWxlYWRzLWNoZWNrJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVlcExlYWRzQ2hlY2tDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1kZWVwLWxlYWRzLWNoZWNrJyk7DQogICAgICAgICAgICAgICAgY29uc3QgY2FjaGVUaW1lU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWNhY2hlLXRpbWUnKTsNCg0KICAgICAgICAgICAgICAgIGlmICghZW5hYmxlZENoZWNrYm94IHx8ICFzY2FuRGF5c1NlbGVjdCB8fCAhaW50ZXJ2YWxTZWxlY3QgfHwgIW1heENvdW50U2VsZWN0IHx8DQogICAgICAgICAgICAgICAgICAgICFkYWlseUxpbWl0SW5wdXQgfHwgIWJhdGNo",
        "U2l6ZUlucHV0IHx8ICFtYW51YWxCYXRjaFNpemVJbnB1dCB8fCAhbWF4RW1wdHlTY2Fuc0lucHV0IHx8DQogICAgICAgICAgICAgICAgICAgICFyYW5kb21EZWxheUNoZWNrYm94IHx8ICFtaW5EZWxheUlucHV0IHx8ICFtYXhEZWxheUlucHV0IHx8ICF0ZW1wbGF0ZU1vZGVTZWxlY3QpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfov73nsonphY3nva7lhYPntKDmnKrmib7liLAnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WPluaXtumXtOeCueiuvue9rg0KICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVTbG90Q2hlY2tib3hlcyA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvckFsbCgnLnhocy1haS10aW1lLXNsb3RzIGlucHV0W3R5cGU9ImNoZWNrYm94Il06Y2hlY2tlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNjaGVkdWxlSG91cnMgPSBBcnJheS5mcm9tKHRpbWVTbG90Q2hlY2tib3hlcykubWFwKGNiID0+IHBhcnNlSW50KGNiLnZhbHVlKSk7DQoNCiAgICAgICAgICAgICAgICAvLyDpqozor4HphY3nva7lubbov5vooYzkuKXmoLznmoTmlbDlgLzmo4Dmn6UNCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkID0gZW5hYmxlZENoZWNrYm94LmNoZWNrZWQ7DQogICAgICAgICAgICAgICAgY29uc3Qgc2NhbkRheXMgPSB0aGlzLnZhbGlkYXRlQW5kUGFyc2VJbnQoc2NhbkRheXNTZWxlY3QudmFsdWUsIDMsIDEsIDMwLCAn5omr5o+P5aSp5pWwJyk7DQogICAgICAgICAgICAgICAgY29uc3QgaW50ZXJ2YWwgPSB0aGlzLnZhbGlkYXRlQW5kUGFyc2VJbnQoaW50ZXJ2YWxTZWxlY3QudmFsdWUsIDI0LCAxLCAxNjgsICflm57orr/pl7TpmpQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBtYXhDb3VudCA9IHRoaXMudmFsaWRhdGVBbmRQYXJzZUludChtYXhDb3VudFNlbGVjdC52YWx1ZSwgMiwgMSwgMTAsICfmnIDlpKflm57orr/mrKHmlbAnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkYWlseUxpbWl0ID0gdGhpcy52YWxpZGF0ZUFuZFBhcnNlSW50KGRhaWx5TGltaXRJbnB1dC52YWx1ZSwgMTAsIDEsIDUwLCAn5q+P5pel5Zue6K6/5LiK6ZmQJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYmF0Y2hTaXplID0gdGhpcy52YWxpZGF0ZUFuZFBhcnNlSW50KGJhdGNoU2l6ZUlucHV0LnZhbHVlLCAzLCAxLCAxMCwgJ+aJueWkhOeQhuWkp+WwjycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IG1hbnVhbEJhdGNoU2l6ZSA9IHRoaXMudmFsaWRhdGVBbmRQYXJzZUludChtYW51YWxCYXRjaFNpemVJbnB1dC52YWx1ZSwgNSwgMSwgMjAsICfmiYvliqjmibnlpITnkIblpKflsI8nKTsNCiAgICAgICAgICAgICAgICBjb25zdCBtYXhFbXB0eVNjYW5zID0gdGhpcy52YWxpZGF0ZUFuZFBhcnNlSW50KG1heEVtcHR5U2NhbnNJbnB1dC52YWx1ZSwgMywgMSwgMTAsICfmnIDlpKfnqbrmiavmj4/m",
        "rKHmlbAnKTsNCiAgICAgICAgICAgICAgICBjb25zdCByYW5kb21EZWxheSA9IHJhbmRvbURlbGF5Q2hlY2tib3guY2hlY2tlZDsNCiAgICAgICAgICAgICAgICBjb25zdCBtaW5EZWxheSA9IHRoaXMudmFsaWRhdGVBbmRQYXJzZUludChtaW5EZWxheUlucHV0LnZhbHVlLCAzMCwgMTAsIDE4MDAsICfmnIDlsI/lu7bov58nKTsNCiAgICAgICAgICAgICAgICBjb25zdCBtYXhEZWxheSA9IHRoaXMudmFsaWRhdGVBbmRQYXJzZUludChtYXhEZWxheUlucHV0LnZhbHVlLCAxMjAsIDEwLCAxODAwLCAn5pyA5aSn5bu26L+fJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYXV0b1JlY29yZCA9IGF1dG9SZWNvcmRDaGVja2JveC5jaGVja2VkOw0KICAgICAgICAgICAgICAgIGNvbnN0IGF1dG9SZWNvcmREZWxheSA9IHRoaXMudmFsaWRhdGVBbmRQYXJzZUludChhdXRvUmVjb3JkRGVsYXlJbnB1dC52YWx1ZSwgNSwgMSwgNjAsICfoh6rliqjorrDlvZXlu7bov58nKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZU1vZGUgPSB0ZW1wbGF0ZU1vZGVTZWxlY3QudmFsdWU7DQogICAgICAgICAgICAgICAgY29uc3QgYXBpTGVhZHNDaGVjayA9IGFwaUxlYWRzQ2hlY2tDaGVja2JveCA/IGFwaUxlYWRzQ2hlY2tDaGVja2JveC5jaGVja2VkIDogdHJ1ZTsNCiAgICAgICAgICAgICAgICBjb25zdCByZWFsdGltZUxlYWRzQ2hlY2sgPSByZWFsdGltZUxlYWRzQ2hlY2tDaGVja2JveCA/IHJlYWx0aW1lTGVhZHNDaGVja0NoZWNrYm94LmNoZWNrZWQgOiB0cnVlOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlZXBMZWFkc0NoZWNrID0gZGVlcExlYWRzQ2hlY2tDaGVja2JveCA/IGRlZXBMZWFkc0NoZWNrQ2hlY2tib3guY2hlY2tlZCA6IGZhbHNlOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNhY2hlVGltZSA9IGNhY2hlVGltZVNlbGVjdCA/IHBhcnNlSW50KGNhY2hlVGltZVNlbGVjdC52YWx1ZSkgOiAzMDsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpemqjOivgee7k+aenA0KICAgICAgICAgICAgICAgIGlmIChzY2FuRGF5cyA9PT0gbnVsbCB8fCBpbnRlcnZhbCA9PT0gbnVsbCB8fCBtYXhDb3VudCA9PT0gbnVsbCB8fA0KICAgICAgICAgICAgICAgICAgICBkYWlseUxpbWl0ID09PSBudWxsIHx8IGJhdGNoU2l6ZSA9PT0gbnVsbCB8fCBtYW51YWxCYXRjaFNpemUgPT09IG51bGwgfHwNCiAgICAgICAgICAgICAgICAgICAgbWF4RW1wdHlTY2FucyA9PT0gbnVsbCB8fCBtaW5EZWxheSA9PT0gbnVsbCB8fCBtYXhEZWxheSA9PT0gbnVsbCB8fA0KICAgICAgICAgICAgICAgICAgICBhdXRvUmVjb3JkRGVsYXkgPT09IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOyAvLyDpqozor4HlpLHotKXvvIzplJnor6/kv6Hmga/lt7LlnKh2YWxpZGF0ZUFuZFBhcnNlSW505Lit5pi+56S6DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pS26ZuG5omA5pyJ6K+d5pyv5qih5p2/DQogICAgICAgICAgICAgICAg",
        "Y29uc3QgdGVtcGxhdGVzID0gQXJyYXkuZnJvbSh0ZW1wbGF0ZVRleHRhcmVhcykubWFwKHRleHRhcmVhID0+IHRleHRhcmVhLnZhbHVlLnRyaW0oKSkuZmlsdGVyKHQgPT4gdCk7DQoNCiAgICAgICAgICAgICAgICAvLyDpqozor4HovpPlhaUNCiAgICAgICAgICAgICAgICBpZiAoZW5hYmxlZCAmJiB0ZW1wbGF0ZU1vZGUgIT09ICdhaScgJiYgdGVtcGxhdGVzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ivt+iHs+Wwkei+k+WFpeS4gOWll+Wbnuiuv+ivneacr+aooeadvycsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGVuYWJsZWQgJiYgc2NoZWR1bGVIb3Vycy5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfor7foh7PlsJHpgInmi6nkuIDkuKrlm57orr/ml7bpl7TngrknLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOmineWklueahOmAu+i+kemqjOivgQ0KICAgICAgICAgICAgICAgIGlmIChyYW5kb21EZWxheSAmJiBtaW5EZWxheSA+PSBtYXhEZWxheSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+acgOWwj+W7tui/n+S4jeiDveWkp+S6juaIluetieS6juacgOWkp+W7tui/nycsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5Zue6K6/6Ze06ZqU5LiO6LCD5bqm5Zmo6Ze06ZqU55qE5YW85a655oCnDQogICAgICAgICAgICAgICAgY29uc3Qgc2NoZWR1bGVySW50ZXJ2YWwgPSAzMDsgLy8g6LCD5bqm5Zmo5qOA5p+l6Ze06ZqU77yI5YiG6ZKf77yJDQogICAgICAgICAgICAgICAgaWYgKGludGVydmFsICogNjAgPCBzY2hlZHVsZXJJbnRlcnZhbCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5Zue6K6/6Ze06ZqU5bCP5LqO6LCD5bqm5Zmo5qOA5p+l6Ze06ZqUJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlckludGVydmFsOiBpbnRlcnZhbCArICflsI/ml7YnLA0KICAgICAgICAgICAgICAgICAgICAgICAgc2NoZWR1bGVySW50ZXJ2YWw6IHNjaGVkdWxlckludGVydmFsICsgJ+WIhumSnycsDQogICAgICAgICAgICAgICAgICAgICAgICByZWNvbW1lbmRhdGlvbjogJ+W7uuiuruiuvue9ruS4jeWwj+S6jjAuNeWwj+aXtueahOmXtOmalCcNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5L+d5a2Y6YWN572uDQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2ZvbGxvd1VwRW5hYmxlZCcsIGVuYWJsZWQpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01h",
        "bmFnZXIuc2V0KCdmb2xsb3dVcFNjYW5EYXlzJywgc2NhbkRheXMpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcEludGVydmFsJywgaW50ZXJ2YWwpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcE1heENvdW50JywgbWF4Q291bnQpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcERhaWx5TGltaXQnLCBkYWlseUxpbWl0KTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBCYXRjaFNpemUnLCBiYXRjaFNpemUpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcE1hbnVhbEJhdGNoU2l6ZScsIG1hbnVhbEJhdGNoU2l6ZSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2ZvbGxvd1VwTWF4RW1wdHlTY2FucycsIG1heEVtcHR5U2NhbnMpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcFJhbmRvbURlbGF5JywgcmFuZG9tRGVsYXkpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcE1pbkRlbGF5JywgbWluRGVsYXkpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcE1heERlbGF5JywgbWF4RGVsYXkpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcEF1dG9SZWNvcmQnLCBhdXRvUmVjb3JkKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBBdXRvUmVjb3JkRGVsYXknLCBhdXRvUmVjb3JkRGVsYXkpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcFRlbXBsYXRlTW9kZScsIHRlbXBsYXRlTW9kZSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2ZvbGxvd1VwVGVtcGxhdGVzJywgdGVtcGxhdGVzKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBUZW1wbGF0ZScsIHRlbXBsYXRlc1swXSB8fCAnJyk7IC8vIOS/neaMgeWQkeWQjuWFvOWuuQ0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcFNjaGVkdWxlSG91cnMnLCBzY2hlZHVsZUhvdXJzKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBBcGlMZWFkc0NoZWNrJywgYXBpTGVhZHNDaGVjayk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2ZvbGxvd1VwUmVhbHRpbWVMZWFkc0NoZWNrJywgcmVhbHRpbWVMZWFkc0NoZWNrKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBEZWVwTGVhZHNDaGVjaycsIGRlZXBMZWFkc0NoZWNrKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBMZWFkc0NhY2hlVGltZScsIGNhY2hlVGltZSk7DQoNCiAgICAgICAgICAgICAgICAvLyDpqozor4HphY3nva7mmK/lkKbmraPnoa7kv53l",
        "rZgNCiAgICAgICAgICAgICAgICBjb25zdCBzYXZlZEludGVydmFsID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwSW50ZXJ2YWwnKTsNCiAgICAgICAgICAgICAgICBpZiAoc2F2ZWRJbnRlcnZhbCAhPT0gaW50ZXJ2YWwpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflm57orr/pl7TpmpTphY3nva7kv53lrZjpqozor4HlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBleHBlY3RlZDogaW50ZXJ2YWwsDQogICAgICAgICAgICAgICAgICAgICAgICBhY3R1YWw6IHNhdmVkSW50ZXJ2YWwsDQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiB0eXBlb2Ygc2F2ZWRJbnRlcnZhbA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfphY3nva7kv53lrZjpqozor4HlpLHotKXvvIzor7fph43or5UnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOi/veeyieeuoeeQhuWZqOeKtuaAgQ0KICAgICAgICAgICAgICAgIGlmIChlbmFibGVkKSB7DQogICAgICAgICAgICAgICAgICAgIEZvbGxvd1VwTWFuYWdlci5zdGFydCgpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIEZvbGxvd1VwTWFuYWdlci5zdG9wKCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVGb2xsb3dVcFN0YXRzKCk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfov73nsonphY3nva7lt7Lkv53lrZjlubbpqozor4HmiJDlip8nLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonphY3nva7lt7Lkv53lrZgnLCB7DQogICAgICAgICAgICAgICAgICAgIGVuYWJsZWQsDQogICAgICAgICAgICAgICAgICAgIHNjYW5EYXlzLA0KICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbCwNCiAgICAgICAgICAgICAgICAgICAgbWF4Q291bnQsDQogICAgICAgICAgICAgICAgICAgIGRhaWx5TGltaXQsDQogICAgICAgICAgICAgICAgICAgIGJhdGNoU2l6ZSwNCiAgICAgICAgICAgICAgICAgICAgbWFudWFsQmF0Y2hTaXplLA0KICAgICAgICAgICAgICAgICAgICBtYXhFbXB0eVNjYW5zLA0KICAgICAgICAgICAgICAgICAgICByYW5kb21EZWxheSwNCiAgICAgICAgICAgICAgICAgICAgbWluRGVsYXksDQogICAgICAgICAgICAgICAgICAgIG1heERlbGF5LA0KICAgICAgICAgICAgICAgICAgICBhdXRvUmVjb3JkLA0KICAgICAgICAgICAgICAgICAgICBhdXRvUmVjb3JkRGVsYXksDQogICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlTW9kZSwNCiAgICAgICAgICAgICAgICAgICAgc2NoZWR1bGVIb3VycywNCiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVzQ291bnQ6IHRlbXBsYXRlcy5sZW5ndGgsDQogICAgICAgICAgICAg",
        "ICAgICAgIGFwaUxlYWRzQ2hlY2ssDQogICAgICAgICAgICAgICAgICAgIHJlYWx0aW1lTGVhZHNDaGVjaywNCiAgICAgICAgICAgICAgICAgICAgZGVlcExlYWRzQ2hlY2ssDQogICAgICAgICAgICAgICAgICAgIGNhY2hlVGltZSwNCiAgICAgICAgICAgICAgICAgICAgY29uZmlnVmVyaWZpZWQ6IHRydWUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S/neWtmOi/veeyiemFjee9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfkv53lrZjov73nsonphY3nva7lpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6aqM6K+B5bm26Kej5p6Q5pW05pWw5YC8DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSDopoHpqozor4HnmoTlgLwNCiAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IGRlZmF1bHRWYWx1ZSDpu5jorqTlgLwNCiAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IG1pbiDmnIDlsI/lgLwNCiAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IG1heCDmnIDlpKflgLwNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGZpZWxkTmFtZSDlrZfmrrXlkI3np7ANCiAgICAgICAgICogQHJldHVybnMge251bWJlcnxudWxsfSDop6PmnpDlkI7nmoTlgLzvvIzpqozor4HlpLHotKXov5Tlm55udWxsDQogICAgICAgICAqLw0KICAgICAgICB2YWxpZGF0ZUFuZFBhcnNlSW50KHZhbHVlLCBkZWZhdWx0VmFsdWUsIG1pbiwgbWF4LCBmaWVsZE5hbWUpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5YC85Li656m65oiW5pyq5a6a5LmJ77yM5L2/55So6buY6K6k5YC8DQogICAgICAgICAgICAgICAgaWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09ICcnKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1ZyhgJHtmaWVsZE5hbWV95L2/55So6buY6K6k5YC8YCwgeyBkZWZhdWx0VmFsdWUgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkID0gcGFyc2VJbnQodmFsdWUsIDEwKTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuS4uuacieaViOaVsOWtlw0KICAgICAgICAgICAgICAgIGlmIChpc05hTihwYXJzZWQpKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbihgJHtmaWVsZE5hbWV95b+F6aG75piv5pyJ5pWI55qE5pWw5a2XYCwgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcihgJHtmaWVsZE5hbWV96Kej5p6Q5aSx6LSlYCwgeyB2YWx1ZSwgcGFyc2VkIH0pOw0KICAgICAg",
        "ICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XojIPlm7QNCiAgICAgICAgICAgICAgICBpZiAocGFyc2VkIDwgbWluIHx8IHBhcnNlZCA+IG1heCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oYCR7ZmllbGROYW1lfeW/hemhu+WcqCR7bWlufS0ke21heH3kuYvpl7RgLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKGAke2ZpZWxkTmFtZX3otoXlh7rojIPlm7RgLCB7IHZhbHVlOiBwYXJzZWQsIG1pbiwgbWF4IH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYCR7ZmllbGROYW1lfemqjOivgemAmui/h2AsIHsgdmFsdWU6IHBhcnNlZCwgbWluLCBtYXggfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlZDsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoYCR7ZmllbGROYW1lfemqjOivgeW8guW4uGAsIHsgdmFsdWUsIGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbihgJHtmaWVsZE5hbWV96aqM6K+B5aSx6LSlOiAke2Vycm9yLm1lc3NhZ2V9YCwgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiviuaWrei/veeyiee7n+iuoeaYvuekuumXrumimA0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDor4rmlq3nu5PmnpwNCiAgICAgICAgICovDQogICAgICAgIGRpYWdub3NlRm9sbG93VXBTdGF0c0Rpc3BsYXkoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGRpYWdub3NpcyA9IHsNCiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvTG9jYWxlU3RyaW5nKCksDQogICAgICAgICAgICAgICAgICAgIGRvbUVsZW1lbnRzOiB7fSwNCiAgICAgICAgICAgICAgICAgICAgZGF0YVN0YXR1czoge30sDQogICAgICAgICAgICAgICAgICAgIG1hbmFnZXJTdGF0dXM6IHt9LA0KICAgICAgICAgICAgICAgICAgICBpc3N1ZXM6IFtdLA0KICAgICAgICAgICAgICAgICAgICByZWNvbW1lbmRhdGlvbnM6IFtdDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpURPTeWFg+e0oA0KICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRTZWxlY3RvcnMgPSBbDQogICAgICAgICAgICAgICAgICAgICcjeGhzLWFpLWZvbGxvd3VwLXBlbmRpbmctY291bnQnLA0KICAgICAgICAgICAgICAgICAgICAnI3hocy1haS1mb2xsb3d1cC10b2RheS1jb3VudCcsDQogICAgICAgICAgICAgICAgICAgICcjeGhzLWFpLWZvbGxvd3VwLXRvdGFsLWNvdW50JywN",
        "CiAgICAgICAgICAgICAgICAgICAgJyN4aHMtYWktZm9sbG93dXAtbGVhZHMtY291bnQnLA0KICAgICAgICAgICAgICAgICAgICAnI3hocy1haS1mb2xsb3d1cC1zdGF0dXMnDQogICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgIGVsZW1lbnRTZWxlY3RvcnMuZm9yRWFjaChzZWxlY3RvciA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpOw0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuZG9tRWxlbWVudHNbc2VsZWN0b3JdID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgZXhpc3RzOiAhIWVsZW1lbnQsDQogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0Q29udGVudDogZWxlbWVudCA/IGVsZW1lbnQudGV4dENvbnRlbnQgOiBudWxsLA0KICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJsZTogZWxlbWVudCA/IGVsZW1lbnQub2Zmc2V0UGFyZW50ICE9PSBudWxsIDogZmFsc2UNCiAgICAgICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoIWVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5pc3N1ZXMucHVzaChgRE9N5YWD57Sg5LiN5a2Y5ZyoOiAke3NlbGVjdG9yfWApOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XnrqHnkIblmajnirbmgIENCiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIEZvbGxvd1VwUmVjb3JkTWFuYWdlciAhPT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzID0gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLmdldFN0YXRzKCk7DQogICAgICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuZGF0YVN0YXR1cy5yZWNvcmRTdGF0cyA9IHN0YXRzOw0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLm1hbmFnZXJTdGF0dXMucmVjb3JkTWFuYWdlciA9ICdhdmFpbGFibGUnOw0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLm1hbmFnZXJTdGF0dXMucmVjb3JkTWFuYWdlciA9ICdlcnJvcjogJyArIGVycm9yLm1lc3NhZ2U7DQogICAgICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuaXNzdWVzLnB1c2goJ0ZvbGxvd1VwUmVjb3JkTWFuYWdlci5nZXRTdGF0cygp5aSx6LSlJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMubWFuYWdlclN0YXR1cy5yZWNvcmRNYW5hZ2VyID0gJ3VuZGVmaW5lZCc7DQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5pc3N1ZXMucHVzaCgnRm9sbG93VXBSZWNvcmRNYW5hZ2Vy5pyq5a6a5LmJJyk7DQogICAgICAgICAgICAgICAgfQ0K",
        "DQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBGb2xsb3dVcFNjaGVkdWxlciAhPT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1cyA9IEZvbGxvd1VwU2NoZWR1bGVyLmdldFN0YXR1cygpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmRhdGFTdGF0dXMuc2NoZWR1bGVyU3RhdHVzID0gc3RhdHVzOw0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLm1hbmFnZXJTdGF0dXMuc2NoZWR1bGVyID0gJ2F2YWlsYWJsZSc7DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMubWFuYWdlclN0YXR1cy5zY2hlZHVsZXIgPSAnZXJyb3I6ICcgKyBlcnJvci5tZXNzYWdlOw0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmlzc3Vlcy5wdXNoKCdGb2xsb3dVcFNjaGVkdWxlci5nZXRTdGF0dXMoKeWksei0pScpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLm1hbmFnZXJTdGF0dXMuc2NoZWR1bGVyID0gJ3VuZGVmaW5lZCc7DQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5pc3N1ZXMucHVzaCgnRm9sbG93VXBTY2hlZHVsZXLmnKrlrprkuYknKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlvoXlm57orr/nlKjmiLcNCiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIEZvbGxvd1VwUmVjb3JkTWFuYWdlciAhPT0gJ3VuZGVmaW5lZCcgJiYgRm9sbG93VXBSZWNvcmRNYW5hZ2VyLmdldFBlbmRpbmdVc2Vycykgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGVuZGluZ1VzZXJzID0gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLmdldFBlbmRpbmdVc2VycygpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmRhdGFTdGF0dXMucGVuZGluZ1VzZXJzQ291bnQgPSBwZW5kaW5nVXNlcnMubGVuZ3RoOw0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLm1hbmFnZXJTdGF0dXMucGVuZGluZ1VzZXJzID0gJ2F2YWlsYWJsZSc7DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMubWFuYWdlclN0YXR1cy5wZW5kaW5nVXNlcnMgPSAnZXJyb3I6ICcgKyBlcnJvci5tZXNzYWdlOw0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmlzc3Vlcy5wdXNoKCdGb2xsb3dVcFJlY29yZE1hbmFnZXIuZ2V0UGVuZGluZ1VzZXJzKCnlpLHotKUnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOeUn+aIkOW7uuiurg0KICAgICAgICAgICAgICAgIGlmIChkaWFnbm9z",
        "aXMuaXNzdWVzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMucmVjb21tZW5kYXRpb25zLnB1c2goJ+e7n+iuoeaYvuekuuezu+e7n+ato+W4uCcpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5yZWNvbW1lbmRhdGlvbnMucHVzaCgn5bCd6K+V5Yi35paw6aG16Z2i6YeN5paw5Yqg6L296ISa5pysJyk7DQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5yZWNvbW1lbmRhdGlvbnMucHVzaCgn5qOA5p+l5rWP6KeI5Zmo5o6n5Yi25Y+w5piv5ZCm5pyJSmF2YVNjcmlwdOmUmeivrycpOw0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMucmVjb21tZW5kYXRpb25zLnB1c2goJ+ehruS/neiEmuacrOWujOWFqOWKoOi9veWujOaIkCcpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiBkaWFnbm9zaXM7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfor4rmlq3ov73nsonnu5/orqHmmL7npLrlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygpLA0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgaXNzdWVzOiBbJ+iviuaWrei/h+eoi+WPkeeUn+W8guW4uCddLA0KICAgICAgICAgICAgICAgICAgICByZWNvbW1lbmRhdGlvbnM6IFsn6K+35qOA5p+l5rWP6KeI5Zmo5o6n5Yi25Y+w6ZSZ6K+v5L+h5oGvJ10NCiAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDor4rmlq3ov73nsonphY3nva7nirbmgIENCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g6K+K5pat57uT5p6cDQogICAgICAgICAqLw0KICAgICAgICBkaWFnbm9zZUZvbGxvd1VwQ29uZmlnKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBkaWFnbm9zaXMgPSB7DQogICAgICAgICAgICAgICAgICAgIHN0YXR1czogJ2hlYWx0aHknLA0KICAgICAgICAgICAgICAgICAgICBpc3N1ZXM6IFtdLA0KICAgICAgICAgICAgICAgICAgICB3YXJuaW5nczogW10sDQogICAgICAgICAgICAgICAgICAgIGNvbmZpZzoge30sDQogICAgICAgICAgICAgICAgICAgIHJlY29tbWVuZGF0aW9uczogW10NCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5YWz6ZSu6YWN572u6aG5DQogICAgICAgICAgICAgICAgY29uc3QgZm9sbG93VXBFbmFibGVkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwRW5hYmxlZCcsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICBjb25zdCBmb2xsb3dVcEludGVydmFsID0gQ29uZmlnTWFu",
        "YWdlci5nZXQoJ2ZvbGxvd1VwSW50ZXJ2YWwnLCAyNCk7DQogICAgICAgICAgICAgICAgY29uc3QgZm9sbG93VXBTY2FuRGF5cyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcFNjYW5EYXlzJywgMyk7DQogICAgICAgICAgICAgICAgY29uc3QgZm9sbG93VXBNYXhDb3VudCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcE1heENvdW50JywgMik7DQoNCiAgICAgICAgICAgICAgICBkaWFnbm9zaXMuY29uZmlnID0gew0KICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiBmb2xsb3dVcEVuYWJsZWQsDQogICAgICAgICAgICAgICAgICAgIGludGVydmFsOiBmb2xsb3dVcEludGVydmFsLA0KICAgICAgICAgICAgICAgICAgICBzY2FuRGF5czogZm9sbG93VXBTY2FuRGF5cywNCiAgICAgICAgICAgICAgICAgICAgbWF4Q291bnQ6IGZvbGxvd1VwTWF4Q291bnQsDQogICAgICAgICAgICAgICAgICAgIGludGVydmFsVHlwZTogdHlwZW9mIGZvbGxvd1VwSW50ZXJ2YWwsDQogICAgICAgICAgICAgICAgICAgIGludGVydmFsVmFsaWQ6IHR5cGVvZiBmb2xsb3dVcEludGVydmFsID09PSAnbnVtYmVyJyAmJiAhaXNOYU4oZm9sbG93VXBJbnRlcnZhbCkgJiYgZm9sbG93VXBJbnRlcnZhbCA+IDANCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l6Ze06ZqU6YWN572uDQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBmb2xsb3dVcEludGVydmFsICE9PSAnbnVtYmVyJyB8fCBpc05hTihmb2xsb3dVcEludGVydmFsKSB8fCBmb2xsb3dVcEludGVydmFsIDw9IDApIHsNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmlzc3Vlcy5wdXNoKCflm57orr/pl7TpmpTphY3nva7ml6DmlYjvvJonICsgZm9sbG93VXBJbnRlcnZhbCk7DQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5zdGF0dXMgPSAnZXJyb3InOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeiwg+W6puWZqOWFvOWuueaApw0KICAgICAgICAgICAgICAgIGNvbnN0IHNjaGVkdWxlckludGVydmFsID0gMzA7IC8vIOWIhumSnw0KICAgICAgICAgICAgICAgIGlmIChmb2xsb3dVcEludGVydmFsICogNjAgPCBzY2hlZHVsZXJJbnRlcnZhbCkgew0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMud2FybmluZ3MucHVzaChg5Zue6K6/6Ze06ZqUKCR7Zm9sbG93VXBJbnRlcnZhbH3lsI/ml7Yp5bCP5LqO6LCD5bqm5Zmo5qOA5p+l6Ze06ZqUKCR7c2NoZWR1bGVySW50ZXJ2YWx95YiG6ZKfKWApOw0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMucmVjb21tZW5kYXRpb25zLnB1c2goJ+W7uuiuruiuvue9ruS4jeWwj+S6jjAuNeWwj+aXtueahOWbnuiuv+mXtOmalCcpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpVVJ5YWD57SgDQogICAgICAgICAgICAgICAgY29uc3QgaW50ZXJ2YWxTZWxlY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFp",
        "LWZvbGxvd3VwLWludGVydmFsJyk7DQogICAgICAgICAgICAgICAgaWYgKCFpbnRlcnZhbFNlbGVjdCkgew0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuaXNzdWVzLnB1c2goJ+Wbnuiuv+mXtOmalFVJ5YWD57Sg5pyq5om+5YiwJyk7DQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5zdGF0dXMgPSAnZXJyb3InOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5jb25maWcudWlWYWx1ZSA9IGludGVydmFsU2VsZWN0LnZhbHVlOw0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuY29uZmlnLnVpVmFsdWVUeXBlID0gdHlwZW9mIGludGVydmFsU2VsZWN0LnZhbHVlOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChwYXJzZUludChpbnRlcnZhbFNlbGVjdC52YWx1ZSkgIT09IGZvbGxvd1VwSW50ZXJ2YWwpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy53YXJuaW5ncy5wdXNoKCdVSeaYvuekuuWAvOS4jumFjee9ruWAvOS4jeS4gOiHtCcpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l6LCD5bqm5Zmo54q25oCBDQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBGb2xsb3dVcFNjaGVkdWxlciAhPT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2NoZWR1bGVyU3RhdHVzID0gRm9sbG93VXBTY2hlZHVsZXIuZ2V0U3RhdHVzKCk7DQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5jb25maWcuc2NoZWR1bGVyUnVubmluZyA9IHNjaGVkdWxlclN0YXR1cy5pc1J1bm5pbmc7DQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5jb25maWcuc2NoZWR1bGVyUHJvY2Vzc2luZyA9IHNjaGVkdWxlclN0YXR1cy5pc1Byb2Nlc3Npbmc7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGZvbGxvd1VwRW5hYmxlZCAmJiAhc2NoZWR1bGVyU3RhdHVzLmlzUnVubmluZykgew0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLndhcm5pbmdzLnB1c2goJ+i/veeyieWKn+iDveW3suWQr+eUqOS9huiwg+W6puWZqOacqui/kOihjCcpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyiemFjee9ruiviuaWreWujOaIkCcsIGRpYWdub3Npcyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGRpYWdub3NpczsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyiemFjee9ruiviuaWreWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAnZXJyb3InLA0KICAgICAgICAgICAgICAgICAgICBpc3N1ZXM6IFsn6K+K5pat6L+H56iL5Y+R55Sf5byC5bi4OiAnICsgZXJy",
        "b3IubWVzc2FnZV0sDQogICAgICAgICAgICAgICAgICAgIHdhcm5pbmdzOiBbXSwNCiAgICAgICAgICAgICAgICAgICAgY29uZmlnOiB7fSwNCiAgICAgICAgICAgICAgICAgICAgcmVjb21tZW5kYXRpb25zOiBbXQ0KICAgICAgICAgICAgICAgIH07DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhui/veeyiemFjee9ruiviuaWrQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlRGlhZ25vc2VGb2xsb3dVcCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWRpYWdub3NlLWZvbGxvd3VwJyk7DQogICAgICAgICAgICAgICAgaWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn6K+K5pat5LitLi4uJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBjb25maWdEaWFnbm9zaXMgPSB0aGlzLmRpYWdub3NlRm9sbG93VXBDb25maWcoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzdGF0c0RpYWdub3NpcyA9IHRoaXMuZGlhZ25vc2VGb2xsb3dVcFN0YXRzRGlzcGxheSgpOw0KDQogICAgICAgICAgICAgICAgLy8g5p6E5bu66K+K5pat5oql5ZGKDQogICAgICAgICAgICAgICAgbGV0IHJlcG9ydEh0bWwgPSAnPGRpdiBzdHlsZT0ibWF4LWhlaWdodDogNTAwcHg7IG92ZXJmbG93LXk6IGF1dG87IHBhZGRpbmc6IDEwcHg7IGJhY2tncm91bmQ6ICNmNWY1ZjU7IGJvcmRlci1yYWRpdXM6IDRweDsgbWFyZ2luOiAxMHB4IDA7Ij4nOw0KICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzxoND7wn5SNIOi/veeyieezu+e7n+iviuaWreaKpeWRijwvaDQ+JzsNCg0KICAgICAgICAgICAgICAgIC8vIOmFjee9rueKtuaAgeamguiniA0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpZ1N0YXR1c0ljb24gPSBjb25maWdEaWFnbm9zaXMuc3RhdHVzID09PSAnaGVhbHRoeScgPyAn4pyFJyA6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlnRGlhZ25vc2lzLnN0YXR1cyA9PT0gJ2Vycm9yJyA/ICfinYwnIDogJ+KaoO+4jyc7DQogICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPHA+PHN0cm9uZz7phY3nva7nirbmgIHvvJo8L3N0cm9uZz4gJHtjb25maWdTdGF0dXNJY29ufSAke2NvbmZpZ0RpYWdub3Npcy5zdGF0dXMudG9VcHBlckNhc2UoKX08L3A+YDsNCg0KICAgICAgICAgICAgICAgIC8vIOe7n+iuoeaYvuekuueKtuaAgeamguiniA0KICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzU3RhdHVzSWNvbiA9IHN0YXRzRGlhZ25vc2lzLmlzc3Vlcy5sZW5ndGggPT09IDAgPyAn4pyFJyA6ICfinYwnOw0KICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzU3RhdHVzID0gc3RhdHNEaWFnbm9zaXMu",
        "aXNzdWVzLmxlbmd0aCA9PT0gMCA/ICdIRUFMVEhZJyA6ICdFUlJPUic7DQogICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPHA+PHN0cm9uZz7nu5/orqHmmL7npLrvvJo8L3N0cm9uZz4gJHtzdGF0c1N0YXR1c0ljb259ICR7c3RhdHNTdGF0dXN9PC9wPmA7DQoNCiAgICAgICAgICAgICAgICAvLyDphY3nva7kv6Hmga8NCiAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8aDU+8J+TiyDlvZPliY3phY3nva48L2g1Pic7DQogICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPHVsPic7DQogICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpPuWKn+iDveWQr+eUqO+8miR7Y29uZmlnRGlhZ25vc2lzLmNvbmZpZy5lbmFibGVkID8gJ+KchSDmmK8nIDogJ+KdjCDlkKYnfTwvbGk+YDsNCiAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGk+5Zue6K6/6Ze06ZqU77yaJHtjb25maWdEaWFnbm9zaXMuY29uZmlnLmludGVydmFsfeWwj+aXtiAoJHtjb25maWdEaWFnbm9zaXMuY29uZmlnLmludGVydmFsVHlwZX0pPC9saT5gOw0KICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gYDxsaT7miavmj4/lpKnmlbDvvJoke2NvbmZpZ0RpYWdub3Npcy5jb25maWcuc2NhbkRheXN95aSpPC9saT5gOw0KICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gYDxsaT7mnIDlpKflm57orr/mrKHmlbDvvJoke2NvbmZpZ0RpYWdub3Npcy5jb25maWcubWF4Q291bnR95qyhPC9saT5gOw0KICAgICAgICAgICAgICAgIGlmIChjb25maWdEaWFnbm9zaXMuY29uZmlnLnVpVmFsdWUgIT09IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGk+VUnmmL7npLrlgLzvvJoke2NvbmZpZ0RpYWdub3Npcy5jb25maWcudWlWYWx1ZX0gKCR7Y29uZmlnRGlhZ25vc2lzLmNvbmZpZy51aVZhbHVlVHlwZX0pPC9saT5gOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAoY29uZmlnRGlhZ25vc2lzLmNvbmZpZy5zY2hlZHVsZXJSdW5uaW5nICE9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpPuiwg+W6puWZqOi/kOihjO+8miR7Y29uZmlnRGlhZ25vc2lzLmNvbmZpZy5zY2hlZHVsZXJSdW5uaW5nID8gJ+KchSDmmK8nIDogJ+KdjCDlkKYnfTwvbGk+YDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPC91bD4nOw0KDQogICAgICAgICAgICAgICAgLy8g57uf6K6h5pWw5o2u5L+h5oGvDQogICAgICAgICAgICAgICAgaWYgKHN0YXRzRGlhZ25vc2lzLmRhdGFTdGF0dXMucmVjb3JkU3RhdHMpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhdHMgPSBzdGF0c0RpYWdub3Npcy5kYXRhU3RhdHVzLnJlY29yZFN0YXRzOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8aDU+8J+TiiDlvZPliY3nu5/orqHmlbDmja48L2g1Pic7DQogICAgICAgICAgICAgICAgICAg",
        "IHJlcG9ydEh0bWwgKz0gJzx1bD4nOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGk+5oC755So5oi35pWw77yaJHtzdGF0cy50b3RhbFVzZXJzfTwvbGk+YDsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpPuW+heWbnuiuv+eUqOaIt++8miR7c3RhdHMucGVuZGluZ1VzZXJzfTwvbGk+YDsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpPuaAu+Wbnuiuv+asoeaVsO+8miR7c3RhdHMudG90YWxGb2xsb3dVcHN9PC9saT5gOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGk+5bey6I6355WZ5a6i6LWE77yaJHtzdGF0cy5sZWFkc0FjcXVpcmVkVXNlcnN9PC9saT5gOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8L3VsPic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHN0YXRzRGlhZ25vc2lzLmRhdGFTdGF0dXMuc2NoZWR1bGVyU3RhdHVzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1cyA9IHN0YXRzRGlhZ25vc2lzLmRhdGFTdGF0dXMuc2NoZWR1bGVyU3RhdHVzOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8aDU+4pqZ77iPIOiwg+W6puWZqOeKtuaAgTwvaDU+JzsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPHVsPic7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gYDxsaT7ov5DooYznirbmgIHvvJoke3N0YXR1cy5pc1J1bm5pbmcgPyAn4pyFIOi/kOihjOS4rScgOiAn4p2MIOW3suWBnOatoid9PC9saT5gOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGk+5aSE55CG54q25oCB77yaJHtzdGF0dXMuaXNQcm9jZXNzaW5nID8gJ/CflIQg5aSE55CG5LitJyA6ICfij7jvuI8g56m66ZeyJ308L2xpPmA7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gYDxsaT7ku4rml6XlpITnkIbvvJoke3N0YXR1cy50b2RheVByb2Nlc3NlZENvdW50feasoTwvbGk+YDsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1cy5sYXN0UmVzZXREYXRlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGk+6K6h5pWw6YeN572u77yaJHtzdGF0dXMubGFzdFJlc2V0RGF0ZX08L2xpPmA7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPC91bD4nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIERPTeWFg+e0oOeKtuaAgQ0KICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzxoNT7wn5al77iPIOeVjOmdouWFg+e0oOeKtuaAgTwvaDU+JzsNCiAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8dWw+JzsNCiAgICAgICAgICAgICAgICBPYmplY3QuZW50cmllcyhzdGF0c0RpYWdub3Npcy5kb21FbGVtZW50cykuZm9yRWFjaCgoW3NlbGVjdG9yLCBpbmZvXSkgPT4gew0KICAg",
        "ICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXNJY29uID0gaW5mby5leGlzdHMgPyAoaW5mby52aXNpYmxlID8gJ+KchScgOiAn4pqg77iPJykgOiAn4p2MJzsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzVGV4dCA9IGluZm8uZXhpc3RzID8gKGluZm8udmlzaWJsZSA/ICfmraPluLgnIDogJ+makOiXjycpIDogJ+S4jeWtmOWcqCc7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGRpc3BsYXlWYWx1ZSA9IGluZm8udGV4dENvbnRlbnQgPyBgICjlgLw6ICR7aW5mby50ZXh0Q29udGVudH0pYCA6ICcnOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGk+JHtzZWxlY3Rvcn06ICR7c3RhdHVzSWNvbn0gJHtzdGF0dXNUZXh0fSR7ZGlzcGxheVZhbHVlfTwvbGk+YDsNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8L3VsPic7DQoNCiAgICAgICAgICAgICAgICAvLyDphY3nva7pl67popjliJfooagNCiAgICAgICAgICAgICAgICBpZiAoY29uZmlnRGlhZ25vc2lzLmlzc3Vlcy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzxoNT7inYwg6YWN572u6Zeu6aKYPC9oNT4nOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8dWw+JzsNCiAgICAgICAgICAgICAgICAgICAgY29uZmlnRGlhZ25vc2lzLmlzc3Vlcy5mb3JFYWNoKGlzc3VlID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gYDxsaSBzdHlsZT0iY29sb3I6ICNkMzJmMmY7Ij4ke2lzc3VlfTwvbGk+YDsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzwvdWw+JzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnu5/orqHmmL7npLrpl67popjliJfooagNCiAgICAgICAgICAgICAgICBpZiAoc3RhdHNEaWFnbm9zaXMuaXNzdWVzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPGg1PuKdjCDnu5/orqHmmL7npLrpl67popg8L2g1Pic7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzx1bD4nOw0KICAgICAgICAgICAgICAgICAgICBzdGF0c0RpYWdub3Npcy5pc3N1ZXMuZm9yRWFjaChpc3N1ZSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGkgc3R5bGU9ImNvbG9yOiAjZDMyZjJmOyI+JHtpc3N1ZX08L2xpPmA7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8L3VsPic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6K2m5ZGK5YiX6KGoDQogICAgICAgICAgICAgICAgaWYgKGNvbmZpZ0RpYWdub3Npcy53YXJuaW5ncy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzxoNT7imqDvuI8g6K2m5ZGK",
        "5L+h5oGvPC9oNT4nOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8dWw+JzsNCiAgICAgICAgICAgICAgICAgICAgY29uZmlnRGlhZ25vc2lzLndhcm5pbmdzLmZvckVhY2god2FybmluZyA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGkgc3R5bGU9ImNvbG9yOiAjZjU3YzAwOyI+JHt3YXJuaW5nfTwvbGk+YDsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzwvdWw+JzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlu7rorq7liJfooagNCiAgICAgICAgICAgICAgICBjb25zdCBhbGxSZWNvbW1lbmRhdGlvbnMgPSBbLi4uY29uZmlnRGlhZ25vc2lzLnJlY29tbWVuZGF0aW9ucywgLi4uc3RhdHNEaWFnbm9zaXMucmVjb21tZW5kYXRpb25zXTsNCiAgICAgICAgICAgICAgICBpZiAoYWxsUmVjb21tZW5kYXRpb25zLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPGg1PvCfkqEg5bu66K6uPC9oNT4nOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8dWw+JzsNCiAgICAgICAgICAgICAgICAgICAgYWxsUmVjb21tZW5kYXRpb25zLmZvckVhY2gocmVjID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gYDxsaSBzdHlsZT0iY29sb3I6ICMxOTc2ZDI7Ij4ke3JlY308L2xpPmA7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8L3VsPic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPC9kaXY+JzsNCg0KICAgICAgICAgICAgICAgIC8vIOaYvuekuuiviuaWree7k+aenA0KICAgICAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nUmVwb3J0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjZm9sbG93dXAtZGlhZ25vc2lzLXJlcG9ydCcpOw0KICAgICAgICAgICAgICAgIGlmIChleGlzdGluZ1JlcG9ydCkgew0KICAgICAgICAgICAgICAgICAgICBleGlzdGluZ1JlcG9ydC5yZW1vdmUoKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCByZXBvcnREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsNCiAgICAgICAgICAgICAgICByZXBvcnREaXYuaWQgPSAnZm9sbG93dXAtZGlhZ25vc2lzLXJlcG9ydCc7DQogICAgICAgICAgICAgICAgcmVwb3J0RGl2LmlubmVySFRNTCA9IHJlcG9ydEh0bWw7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBmb2xsb3dVcENvbnRlbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtY29udGVudCcpOw0KICAgICAgICAgICAgICAgIGlmIChmb2xsb3dVcENvbnRlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBDb250ZW50LmFwcGVuZENoaWxkKHJlcG9ydERpdik7DQogICAg",
        "ICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qC55o2u6K+K5pat57uT5p6c5pi+56S66YCa55+lDQogICAgICAgICAgICAgICAgY29uc3QgdG90YWxJc3N1ZXMgPSBjb25maWdEaWFnbm9zaXMuaXNzdWVzLmxlbmd0aCArIHN0YXRzRGlhZ25vc2lzLmlzc3Vlcy5sZW5ndGg7DQogICAgICAgICAgICAgICAgY29uc3QgdG90YWxXYXJuaW5ncyA9IGNvbmZpZ0RpYWdub3Npcy53YXJuaW5ncy5sZW5ndGg7DQoNCiAgICAgICAgICAgICAgICBpZiAodG90YWxJc3N1ZXMgPT09IDAgJiYgdG90YWxXYXJuaW5ncyA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+i/veeyieezu+e7n+iviuaWreWujOaIkO+8muezu+e7n+ato+W4uCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0b3RhbElzc3VlcyA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+i/veeyieezu+e7n+iviuaWreWujOaIkO+8muWPkeeOsOitpuWRiicsICd3YXJuaW5nJyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKGDov73nsonns7vnu5/or4rmlq3lrozmiJDvvJrlj5HnjrAke3RvdGFsSXNzdWVzfeS4qumXrumimGAsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonns7vnu5/or4rmlq3lrozmiJAnLCB7IGNvbmZpZ0RpYWdub3Npcywgc3RhdHNEaWFnbm9zaXMgfSk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonphY3nva7or4rmlq3lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6YWN572u6K+K5pat5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9IGZpbmFsbHkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1kaWFnbm9zZS1mb2xsb3d1cCcpOw0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfphY3nva7or4rmlq0nOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5omr5o+P55So5oi3DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVTY2FuVXNlcnMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zY2FuLXVzZXJzJyk7DQogICAgICAgICAgICAgICAg",
        "aWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5pm66IO95omr5o+P5LitLi4uJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBhd2FpdCBGb2xsb3dVcE1hbmFnZXIuc2NhbkFuZEFkZFVzZXJzKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmiavmj4/lrozmiJDlkI7lvLrliLbliLfmlrDnu5/orqHkv6Hmga8NCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5mb3JjZVJlZnJlc2hGb2xsb3dVcFN0YXRzKCk7DQogICAgICAgICAgICAgICAgfSwgNTAwKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5pm66IO95omr5o+P5a6M5oiQ77yM5bey6I635Y+W5omA5pyJ5Lya6K+d5pWw5o2uJywgJ3N1Y2Nlc3MnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfmmbrog73miavmj4/nlKjmiLcnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmmbrog73miavmj4/nlKjmiLflpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5pm66IO95omr5o+P55So5oi35aSx6LSlJywgJ2Vycm9yJyk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2Nhbi11c2VycycpOw0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfmmbrog73miavmj4/nlKjmiLcnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG56uL5Y2z5Zue6K6/DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVUcmlnZ2VyRm9sbG93VXAoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10cmlnZ2VyLWZvbGxvd3VwJyk7DQogICAgICAgICAgICAgICAgaWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5Zue6K6/5LitLi4uJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlhYjmo4Dmn6XmmK/lkKbmnInlvoXlm57orr/nlKjmiLcNCiAgICAgICAgICAgICAgICBj",
        "b25zdCBwZW5kaW5nVXNlcnMgPSBGb2xsb3dVcFJlY29yZE1hbmFnZXIuZ2V0UGVuZGluZ1VzZXJzKCk7DQogICAgICAgICAgICAgICAgaWYgKHBlbmRpbmdVc2Vycy5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG90YWxSZWNvcmRzID0gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlID8gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlLnNpemUgOiAwOw0KICAgICAgICAgICAgICAgICAgICBpZiAodG90YWxSZWNvcmRzID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+aXoOeUqOaIt+iusOW9le+8jOivt+WFiOaJp+ihjCLmmbrog73miavmj4/nlKjmiLciJywgJ3dhcm5pbmcnKTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5b2T5YmN5peg5b6F5Zue6K6/55So5oi377yM6K+35qOA5p+l5Zue6K6/5p2h5Lu26K6+572uJywgJ3dhcm5pbmcnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGF3YWl0IEZvbGxvd1VwTWFuYWdlci50cmlnZ2VyRm9sbG93VXBDaGVjaygpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUZvbGxvd1VwU3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKGDnq4vljbPlm57orr/lrozmiJDvvIzlpITnkIbkuoYgJHtwZW5kaW5nVXNlcnMubGVuZ3RofSDkuKrnlKjmiLdgLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfnq4vljbPlm57orr8nOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfnq4vljbPlm57orr/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign56uL5Y2z5Zue6K6/5aSx6LSlJywgJ2Vycm9yJyk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdHJpZ2dlci1mb2xsb3d1cCcpOw0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfnq4vljbPlm57orr8nOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5by65Yi25Yi35paw6L+957KJ57uf6K6h5pWw5o2uDQogICAgICAgICAq",
        "Lw0KICAgICAgICBmb3JjZVJlZnJlc2hGb2xsb3dVcFN0YXRzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5byA5aeL5by65Yi25Yi35paw6L+957KJ57uf6K6h5pWw5o2uJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDlvLrliLbph43mlrDliqDovb3orrDlvZXmlbDmja4NCiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIEZvbGxvd1VwUmVjb3JkTWFuYWdlciAhPT0gJ3VuZGVmaW5lZCcgJiYgRm9sbG93VXBSZWNvcmRNYW5hZ2VyLmxvYWRSZWNvcmRzRnJvbVN0b3JhZ2UpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5sb2FkUmVjb3Jkc0Zyb21TdG9yYWdlKCk7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+W8uuWItumHjeaWsOWKoOi9vei/veeyieiusOW9leaIkOWKnycpOw0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChsb2FkRXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5by65Yi26YeN5paw5Yqg6L296L+957KJ6K6w5b2V5aSx6LSlJywgeyBlcnJvcjogbG9hZEVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDph43nva7osIPluqblmajnirbmgIENCiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIEZvbGxvd1VwU2NoZWR1bGVyICE9PSAndW5kZWZpbmVkJyAmJiBGb2xsb3dVcFNjaGVkdWxlci5yZXNldERhaWx5Q291bnRJZk5lZWRlZCkgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgRm9sbG93VXBTY2hlZHVsZXIucmVzZXREYWlseUNvdW50SWZOZWVkZWQoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6YeN572u6LCD5bqm5Zmo5q+P5pel6K6h5pWw5oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKHJlc2V0RXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6YeN572u6LCD5bqm5Zmo5q+P5pel6K6h5pWw5aSx6LSlJywgeyBlcnJvcjogcmVzZXRFcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw57uf6K6h5pi+56S6DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVGb2xsb3dVcFN0YXRzKCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5by65Yi25Yi35paw6L+957KJ57uf6K6h5pWw5o2u5a6M5oiQJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflvLrliLbliLfmlrDov73nsonnu5/orqHmlbDmja7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5t",
        "ZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5Yi35paw6L+957KJ57uf6K6hDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVSZWZyZXNoRm9sbG93VXBTdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXJlZnJlc2gtZm9sbG93dXAtc3RhdHMnKTsNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfliLfmlrDkuK0uLi4nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOS9v+eUqOW8uuWItuWIt+aWsOaWueazlQ0KICAgICAgICAgICAgICAgIGNvbnN0IHN1Y2Nlc3MgPSB0aGlzLmZvcmNlUmVmcmVzaEZvbGxvd1VwU3RhdHMoKTsNCg0KICAgICAgICAgICAgICAgIGlmIChzdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign57uf6K6h5L+h5oGv5bey5Yi35pawJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WIt+aWsOe7n+iuoeWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfliLfmlrDnu5/orqEnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliLfmlrDov73nsonnu5/orqHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Yi35paw57uf6K6h5aSx6LSlJywgJ2Vycm9yJyk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcmVmcmVzaC1mb2xsb3d1cC1zdGF0cycpOw0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfliLfmlrDnu5/orqEnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5riF56m66L+957KJ6K6w5b2VDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVDbGVhckZvbGxvd1VwUmVjb3JkcygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAg",
        "ICAgICAgICAgICAgaWYgKGNvbmZpcm0oJ+ehruWumuimgea4heepuuaJgOaciei/veeyieiusOW9leWQl++8n+atpOaTjeS9nOS4jeWPr+aSpOmUgOOAgicpKSB7DQogICAgICAgICAgICAgICAgICAgIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5jbGVhckFsbFJlY29yZHMoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVGb2xsb3dVcFN0YXRzKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6L+957KJ6K6w5b2V5bey5riF56m6JywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiusOW9leW3sua4heepuicpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmuIXnqbrov73nsonorrDlvZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5riF56m66L+957KJ6K6w5b2V5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpei/veeyieeuoeeQhuWZqOWIneWni+WMlueKtuaAgQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDliJ3lp4vljJbnirbmgIHmo4Dmn6Xnu5PmnpwNCiAgICAgICAgICovDQogICAgICAgIGNoZWNrRm9sbG93VXBNYW5hZ2Vyc0luaXRpYWxpemF0aW9uKCkgew0KICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gew0KICAgICAgICAgICAgICAgIGFsbEluaXRpYWxpemVkOiB0cnVlLA0KICAgICAgICAgICAgICAgIGlzc3VlczogW10NCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIC8vIOajgOafpSBGb2xsb3dVcFJlY29yZE1hbmFnZXINCiAgICAgICAgICAgIGlmICh0eXBlb2YgRm9sbG93VXBSZWNvcmRNYW5hZ2VyID09PSAndW5kZWZpbmVkJykgew0KICAgICAgICAgICAgICAgIHJlc3VsdC5hbGxJbml0aWFsaXplZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIHJlc3VsdC5pc3N1ZXMucHVzaCgnRm9sbG93VXBSZWNvcmRNYW5hZ2Vy5pyq5a6a5LmJJyk7DQogICAgICAgICAgICB9IGVsc2UgaWYgKCFGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkQ2FjaGUpIHsNCiAgICAgICAgICAgICAgICByZXN1bHQuYWxsSW5pdGlhbGl6ZWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICByZXN1bHQuaXNzdWVzLnB1c2goJ0ZvbGxvd1VwUmVjb3JkTWFuYWdlcue8k+WtmOacquWIneWni+WMlicpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6UgRm9sbG93VXBTY2hlZHVsZXINCiAgICAgICAgICAgIGlmICh0eXBlb2YgRm9sbG93VXBTY2hlZHVsZXIgPT09ICd1bmRlZmluZWQnKSB7DQogICAgICAgICAgICAgICAgcmVzdWx0LmFsbEluaXRpYWxpemVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgcmVzdWx0Lmlzc3Vlcy5w",
        "dXNoKCdGb2xsb3dVcFNjaGVkdWxlcuacquWumuS5iScpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6UgRm9sbG93VXBCbGFja2xpc3RNYW5hZ2VyDQogICAgICAgICAgICBpZiAodHlwZW9mIEZvbGxvd1VwQmxhY2tsaXN0TWFuYWdlciA9PT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICAgICAgICByZXN1bHQuaXNzdWVzLnB1c2goJ0ZvbGxvd1VwQmxhY2tsaXN0TWFuYWdlcuacquWumuS5ie+8iOmdnuWFs+mUru+8iScpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gcmVzdWx0Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmm7TmlrDov73nsonnu5/orqHkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZUZvbGxvd1VwU3RhdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5byA5aeL5pu05paw6L+957KJ57uf6K6h5L+h5oGvJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XnrqHnkIblmajliJ3lp4vljJbnirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBpbml0Q2hlY2sgPSB0aGlzLmNoZWNrRm9sbG93VXBNYW5hZ2Vyc0luaXRpYWxpemF0aW9uKCk7DQogICAgICAgICAgICAgICAgaWYgKCFpbml0Q2hlY2suYWxsSW5pdGlhbGl6ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajmnKrlrozlhajliJ3lp4vljJbvvIzml6Dms5Xmm7TmlrDnu5/orqEnLCB7IGlzc3VlczogaW5pdENoZWNrLmlzc3VlcyB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDlsJ3or5XmmL7npLrplJnor6/nirbmgIENCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1zdGF0dXMnKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1c0VsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c0VsZW1lbnQudGV4dENvbnRlbnQgPSAn5Yid5aeL5YyW5aSx6LSlJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c0VsZW1lbnQuc3R5bGUuY29sb3IgPSAnI2ZmNmI2Yic7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChpbml0Q2hlY2suaXNzdWVzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqOmDqOWIhue7hOS7tuacquWIneWni+WMlicsIHsgaXNzdWVzOiBpbml0Q2hlY2suaXNzdWVzIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WPlue7n+iuoeaVsOaNru+8jOa3u+WKoOmUmeivr+WkhOeQhg0KICAgICAgICAgICAgICAgIGxldCBzdGF0cywgc2NoZWR1bGVyU3RhdHVzLCBwZW5kaW5nVXNlcnM7DQoN",
        "CiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBzdGF0cyA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5nZXRTdGF0cygpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+iOt+WPluiusOW9lee7n+iuoeaIkOWKnycsIHN0YXRzKTsNCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+iOt+WPluiusOW9lee7n+iuoeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgIHN0YXRzID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxVc2VyczogMCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHBlbmRpbmdVc2VyczogMCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd2luZ1VzZXJzOiAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29tcGxldGVkVXNlcnM6IDAsDQogICAgICAgICAgICAgICAgICAgICAgICBibG9ja2VkVXNlcnM6IDAsDQogICAgICAgICAgICAgICAgICAgICAgICBsZWFkc0FjcXVpcmVkVXNlcnM6IDAsDQogICAgICAgICAgICAgICAgICAgICAgICB0b3RhbEZvbGxvd1VwczogMA0KICAgICAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIHNjaGVkdWxlclN0YXR1cyA9IEZvbGxvd1VwU2NoZWR1bGVyLmdldFN0YXR1cygpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+iOt+WPluiwg+W6puWZqOeKtuaAgeaIkOWKnycsIHNjaGVkdWxlclN0YXR1cyk7DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfojrflj5bosIPluqblmajnirbmgIHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICBzY2hlZHVsZXJTdGF0dXMgPSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpc1J1bm5pbmc6IGZhbHNlLA0KICAgICAgICAgICAgICAgICAgICAgICAgaXNQcm9jZXNzaW5nOiBmYWxzZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvZGF5UHJvY2Vzc2VkQ291bnQ6IDAsDQogICAgICAgICAgICAgICAgICAgICAgICBsYXN0UmVzZXREYXRlOiBudWxsLA0KICAgICAgICAgICAgICAgICAgICAgICAgbmV4dENoZWNrVGltZTogbnVsbA0KICAgICAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIHBlbmRpbmdVc2VycyA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5nZXRQZW5kaW5nVXNlcnMoKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfojrflj5blvoXlm57orr/nlKjmiLfmiJDlip8nLCB7IGNvdW50OiBwZW5kaW5nVXNlcnMubGVuZ3RoIH0pOw0KICAgICAgICAgICAgICAgIH0gY2F0Y2gg",
        "KGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6I635Y+W5b6F5Zue6K6/55So5oi35aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgcGVuZGluZ1VzZXJzID0gW107DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw57uf6K6h5pi+56S677yM5re75Yqg5pu06K+m57uG55qE6ZSZ6K+v5aSE55CGDQogICAgICAgICAgICAgICAgY29uc3QgcGVuZGluZ0NvdW50RWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1wZW5kaW5nLWNvdW50Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgdG9kYXlDb3VudEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtdG9kYXktY291bnQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0b3RhbENvdW50RWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC10b3RhbC1jb3VudCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGxlYWRzQ291bnRFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWxlYWRzLWNvdW50Jyk7DQogICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1zdGF0dXMnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpURPTeWFg+e0oOaYr+WQpuWtmOWcqA0KICAgICAgICAgICAgICAgIGNvbnN0IG1pc3NpbmdFbGVtZW50cyA9IFtdOw0KICAgICAgICAgICAgICAgIGlmICghcGVuZGluZ0NvdW50RWxlbWVudCkgbWlzc2luZ0VsZW1lbnRzLnB1c2goJyN4aHMtYWktZm9sbG93dXAtcGVuZGluZy1jb3VudCcpOw0KICAgICAgICAgICAgICAgIGlmICghdG9kYXlDb3VudEVsZW1lbnQpIG1pc3NpbmdFbGVtZW50cy5wdXNoKCcjeGhzLWFpLWZvbGxvd3VwLXRvZGF5LWNvdW50Jyk7DQogICAgICAgICAgICAgICAgaWYgKCF0b3RhbENvdW50RWxlbWVudCkgbWlzc2luZ0VsZW1lbnRzLnB1c2goJyN4aHMtYWktZm9sbG93dXAtdG90YWwtY291bnQnKTsNCiAgICAgICAgICAgICAgICBpZiAoIWxlYWRzQ291bnRFbGVtZW50KSBtaXNzaW5nRWxlbWVudHMucHVzaCgnI3hocy1haS1mb2xsb3d1cC1sZWFkcy1jb3VudCcpOw0KICAgICAgICAgICAgICAgIGlmICghc3RhdHVzRWxlbWVudCkgbWlzc2luZ0VsZW1lbnRzLnB1c2goJyN4aHMtYWktZm9sbG93dXAtc3RhdHVzJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAobWlzc2luZ0VsZW1lbnRzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+mDqOWIhue7n+iuoeaYvuekuuWFg+e0oOS4jeWtmOWcqCcsIHsgbWlzc2luZ0VsZW1lbnRzIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWuieWFqOabtOaWsERP",
        "TeWFg+e0oA0KICAgICAgICAgICAgICAgIGlmIChwZW5kaW5nQ291bnRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHBlbmRpbmdDb3VudCA9IEFycmF5LmlzQXJyYXkocGVuZGluZ1VzZXJzKSA/IHBlbmRpbmdVc2Vycy5sZW5ndGggOiAwOw0KICAgICAgICAgICAgICAgICAgICBwZW5kaW5nQ291bnRFbGVtZW50LnRleHRDb250ZW50ID0gcGVuZGluZ0NvdW50LnRvU3RyaW5nKCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5pu05paw5b6F5Zue6K6/55So5oi35pWw6YePJywgeyBjb3VudDogcGVuZGluZ0NvdW50IH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICh0b2RheUNvdW50RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0b2RheUNvdW50ID0gc2NoZWR1bGVyU3RhdHVzLnRvZGF5UHJvY2Vzc2VkQ291bnQgfHwgMDsNCiAgICAgICAgICAgICAgICAgICAgdG9kYXlDb3VudEVsZW1lbnQudGV4dENvbnRlbnQgPSB0b2RheUNvdW50LnRvU3RyaW5nKCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5pu05paw5LuK5pel5aSE55CG5pWw6YePJywgeyBjb3VudDogdG9kYXlDb3VudCB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAodG90YWxDb3VudEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG90YWxDb3VudCA9IHN0YXRzLnRvdGFsRm9sbG93VXBzIHx8IDA7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsQ291bnRFbGVtZW50LnRleHRDb250ZW50ID0gdG90YWxDb3VudC50b1N0cmluZygpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+abtOaWsOaAu+Wbnuiuv+asoeaVsCcsIHsgY291bnQ6IHRvdGFsQ291bnQgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGxlYWRzQ291bnRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGxlYWRzQ291bnQgPSBzdGF0cy5sZWFkc0FjcXVpcmVkVXNlcnMgfHwgMDsNCiAgICAgICAgICAgICAgICAgICAgbGVhZHNDb3VudEVsZW1lbnQudGV4dENvbnRlbnQgPSBsZWFkc0NvdW50LnRvU3RyaW5nKCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5pu05paw5bey6I6355WZ5a6i6LWE55So5oi35pWwJywgeyBjb3VudDogbGVhZHNDb3VudCB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwRW5hYmxlZCcsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNSdW5uaW5nID0gc2NoZWR1bGVyU3RhdHVzLmlzUnVubmluZyB8fCBmYWxzZTsNCg0KICAgICAgICAgICAgICAgICAgICBsZXQgc3RhdHVzVGV4dCwgc3RhdHVzQ29sb3I7DQogICAgICAgICAgICAg",
        "ICAgICAgIGlmIChlbmFibGVkICYmIGlzUnVubmluZykgew0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzVGV4dCA9ICfov5DooYzkuK0nOw0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzQ29sb3IgPSAnIzJlZDU3Myc7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZW5hYmxlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzVGV4dCA9ICflt7LlkK/nlKgnOw0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzQ29sb3IgPSAnI2ZmYTUwMic7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0ID0gJ+W3suemgeeUqCc7DQogICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNDb2xvciA9ICcjZmY2YjZiJzsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIHN0YXR1c0VsZW1lbnQudGV4dENvbnRlbnQgPSBzdGF0dXNUZXh0Ow0KICAgICAgICAgICAgICAgICAgICBzdGF0dXNFbGVtZW50LnN0eWxlLmNvbG9yID0gc3RhdHVzQ29sb3I7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5pu05paw5Yqf6IO954q25oCBJywgeyBlbmFibGVkLCBpc1J1bm5pbmcsIHN0YXR1c1RleHQgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnu5/orqHkv6Hmga/mm7TmlrDlrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgIHBlbmRpbmc6IEFycmF5LmlzQXJyYXkocGVuZGluZ1VzZXJzKSA/IHBlbmRpbmdVc2Vycy5sZW5ndGggOiAwLA0KICAgICAgICAgICAgICAgICAgICB0b2RheTogc2NoZWR1bGVyU3RhdHVzLnRvZGF5UHJvY2Vzc2VkQ291bnQgfHwgMCwNCiAgICAgICAgICAgICAgICAgICAgdG90YWw6IHN0YXRzLnRvdGFsRm9sbG93VXBzIHx8IDAsDQogICAgICAgICAgICAgICAgICAgIGxlYWRzOiBzdGF0cy5sZWFkc0FjcXVpcmVkVXNlcnMgfHwgMCwNCiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwRW5hYmxlZCcsIGZhbHNlKSwNCiAgICAgICAgICAgICAgICAgICAgcnVubmluZzogc2NoZWR1bGVyU3RhdHVzLmlzUnVubmluZyB8fCBmYWxzZQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw6L+957KJ57uf6K6h5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgc3RhY2s6IGVycm9yLnN0YWNrDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDlnKjlh7rplJnml7bmmL7npLrplJnor6/nirbmgIENCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXNFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVy",
        "eVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXN0YXR1cycpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdHVzRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzRWxlbWVudC50ZXh0Q29udGVudCA9ICfnirbmgIHlvILluLgnOw0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzRWxlbWVudC5zdHlsZS5jb2xvciA9ICcjZmY2YjZiJzsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCforr7nva7plJnor6/nirbmgIHlpLHotKUnLCB7IGVycm9yOiBlLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliqDovb3ov73nsonphY3nva4NCiAgICAgICAgICovDQogICAgICAgIGxvYWRGb2xsb3dVcENvbmZpZygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5Yqg6L295Z+65pys6YWN572uDQogICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzY2FuRGF5c1NlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1zY2FuLWRheXMnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBpbnRlcnZhbFNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1pbnRlcnZhbCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IG1heENvdW50U2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLW1heC1jb3VudCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRhaWx5TGltaXRJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1kYWlseS1saW1pdCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGJhdGNoU2l6ZUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWJhdGNoLXNpemUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBtYW51YWxCYXRjaFNpemVJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1tYW51YWwtYmF0Y2gtc2l6ZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IG1heEVtcHR5U2NhbnNJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1tYXgtZW1wdHktc2NhbnMnKTsNCiAgICAgICAgICAgICAgICBjb25zdCByYW5kb21EZWxheUNoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXJhbmRvbS1kZWxheScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IG1pbkRlbGF5SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5",
        "U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtbWluLWRlbGF5Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgbWF4RGVsYXlJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1tYXgtZGVsYXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhdXRvUmVjb3JkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtYXV0by1yZWNvcmQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhdXRvUmVjb3JkRGVsYXlJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1hdXRvLXJlY29yZC1kZWxheScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlTW9kZVNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC10ZW1wbGF0ZS1tb2RlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVzQ29udGFpbmVyID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlcy1jb250YWluZXInKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhcGlMZWFkc0NoZWNrQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtYXBpLWxlYWRzLWNoZWNrJyk7DQogICAgICAgICAgICAgICAgY29uc3QgcmVhbHRpbWVMZWFkc0NoZWNrQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtcmVhbHRpbWUtbGVhZHMtY2hlY2snKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkZWVwTGVhZHNDaGVja0NoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWRlZXAtbGVhZHMtY2hlY2snKTsNCiAgICAgICAgICAgICAgICBjb25zdCBjYWNoZVRpbWVTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtY2FjaGUtdGltZScpOw0KDQogICAgICAgICAgICAgICAgaWYgKGVuYWJsZWRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBlbmFibGVkQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEVuYWJsZWQnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcEVuYWJsZWQpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChzY2FuRGF5c1NlbGVjdCkgew0KICAgICAgICAgICAgICAgICAgICBzY2FuRGF5c1NlbGVjdC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcFNjYW5EYXlzJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBTY2FuRGF5cyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGludGVydmFsU2VsZWN0KSB7DQogICAgICAgICAgICAgICAgICAgIGludGVydmFsU2VsZWN0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwSW50ZXJ2YWwnLCBDT05GSUcu",
        "REVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcEludGVydmFsKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAobWF4Q291bnRTZWxlY3QpIHsNCiAgICAgICAgICAgICAgICAgICAgbWF4Q291bnRTZWxlY3QudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBNYXhDb3VudCcsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwTWF4Q291bnQpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChkYWlseUxpbWl0SW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgZGFpbHlMaW1pdElucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwRGFpbHlMaW1pdCcsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwRGFpbHlMaW1pdCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGJhdGNoU2l6ZUlucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIGJhdGNoU2l6ZUlucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwQmF0Y2hTaXplJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBCYXRjaFNpemUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChtYW51YWxCYXRjaFNpemVJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBtYW51YWxCYXRjaFNpemVJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcE1hbnVhbEJhdGNoU2l6ZScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwTWFudWFsQmF0Y2hTaXplKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAobWF4RW1wdHlTY2Fuc0lucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIG1heEVtcHR5U2NhbnNJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcE1heEVtcHR5U2NhbnMnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcE1heEVtcHR5U2NhbnMpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChyYW5kb21EZWxheUNoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIHJhbmRvbURlbGF5Q2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcFJhbmRvbURlbGF5JywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBSYW5kb21EZWxheSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKG1pbkRlbGF5SW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgbWluRGVsYXlJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcE1pbkRlbGF5JywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBNaW5EZWxheSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKG1heERlbGF5SW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgbWF4RGVsYXlJbnB1dC52YWx1ZSA9",
        "IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcE1heERlbGF5JywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBNYXhEZWxheSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGF1dG9SZWNvcmRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBhdXRvUmVjb3JkQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEF1dG9SZWNvcmQnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcEF1dG9SZWNvcmQpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChhdXRvUmVjb3JkRGVsYXlJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBhdXRvUmVjb3JkRGVsYXlJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEF1dG9SZWNvcmREZWxheScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwQXV0b1JlY29yZERlbGF5KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDliqDovb3nlZnlrqLotYTmo4DmtYvphY3nva4NCiAgICAgICAgICAgICAgICBpZiAoYXBpTGVhZHNDaGVja0NoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIGFwaUxlYWRzQ2hlY2tDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwQXBpTGVhZHNDaGVjaycsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwQXBpTGVhZHNDaGVjayk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHJlYWx0aW1lTGVhZHNDaGVja0NoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIHJlYWx0aW1lTGVhZHNDaGVja0NoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBSZWFsdGltZUxlYWRzQ2hlY2snLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcFJlYWx0aW1lTGVhZHNDaGVjayk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGRlZXBMZWFkc0NoZWNrQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgZGVlcExlYWRzQ2hlY2tDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwRGVlcExlYWRzQ2hlY2snLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcERlZXBMZWFkc0NoZWNrKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoY2FjaGVUaW1lU2VsZWN0KSB7DQogICAgICAgICAgICAgICAgICAgIGNhY2hlVGltZVNlbGVjdC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcExlYWRzQ2FjaGVUaW1lJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBMZWFkc0NhY2hlVGltZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5Yqg6L296K+d5pyv5qih5byPDQogICAgICAgICAgICAgICAgaWYgKHRlbXBsYXRlTW9kZVNlbGVjdCkgew0K",
        "ICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZU1vZGVTZWxlY3QudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBUZW1wbGF0ZU1vZGUnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcFRlbXBsYXRlTW9kZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5Yqg6L296K+d5pyv5qih5p2/DQogICAgICAgICAgICAgICAgaWYgKHRlbXBsYXRlc0NvbnRhaW5lcikgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzYXZlZFRlbXBsYXRlcyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcFRlbXBsYXRlcycsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwVGVtcGxhdGVzKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVUZXh0YXJlYXMgPSB0ZW1wbGF0ZXNDb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLnhocy1haS1mb2xsb3d1cC10ZW1wbGF0ZScpOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWhq+WFheeOsOacieaooeadvw0KICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZVRleHRhcmVhcy5mb3JFYWNoKCh0ZXh0YXJlYSwgaW5kZXgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzYXZlZFRlbXBsYXRlc1tpbmRleF0pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0YXJlYS52YWx1ZSA9IHNhdmVkVGVtcGxhdGVzW2luZGV4XTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5Yqg6L295pe26Ze054K56K6+572uDQogICAgICAgICAgICAgICAgY29uc3Qgc2NoZWR1bGVIb3VycyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcFNjaGVkdWxlSG91cnMnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcFNjaGVkdWxlSG91cnMpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVTbG90Q2hlY2tib3hlcyA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvckFsbCgnLnhocy1haS10aW1lLXNsb3RzIGlucHV0W3R5cGU9ImNoZWNrYm94Il0nKTsNCiAgICAgICAgICAgICAgICB0aW1lU2xvdENoZWNrYm94ZXMuZm9yRWFjaChjaGVja2JveCA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNoZWNrYm94LmNoZWNrZWQgPSBzY2hlZHVsZUhvdXJzLmluY2x1ZGVzKHBhcnNlSW50KGNoZWNrYm94LnZhbHVlKSk7DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDmmL7npLrnirbmgIENCiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZUZvbGxvd1VwRW5hYmxlZENoYW5nZSgpOw0KICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlRm9sbG93VXBSYW5kb21EZWxheUNoYW5nZSgpOw0KICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlRm9sbG93VXBBdXRvUmVjb3JkQ2hhbmdlKCk7DQogICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVUZW1wbGF0ZU1vZGVDaGFu",
        "Z2UoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUZvbGxvd1VwU3RhdHMoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWIneWni+WMlui/veeyieWQjeWNleeuoeeQhuebuOWFs+WPmOmHjw0KICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEZvbGxvd1VwUGFnZSA9IDE7DQogICAgICAgICAgICAgICAgdGhpcy50b3RhbEZvbGxvd1VwUGFnZXMgPSAxOw0KICAgICAgICAgICAgICAgIHRoaXMuZm9sbG93VXBTZWFyY2hUaW1lb3V0ID0gbnVsbDsNCg0KICAgICAgICAgICAgICAgIC8vIPCfhpUg5Yid5aeL5YyW5om56YeP5pON5L2c55u45YWz5Y+Y6YePDQogICAgICAgICAgICAgICAgdGhpcy5iYXRjaE1vZGVFbmFibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFVzZXJJZHMgPSBuZXcgU2V0KCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyiemFjee9ruW3suWKoOi9vScpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WKoOi9vei/veeyiemFjee9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuivneacr+aooeW8j+WPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlVGVtcGxhdGVNb2RlQ2hhbmdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBtb2RlU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlLW1vZGUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZXNDb250YWluZXIgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtdGVtcGxhdGVzLWNvbnRhaW5lcicpOw0KDQogICAgICAgICAgICAgICAgaWYgKG1vZGVTZWxlY3QgJiYgdGVtcGxhdGVzQ29udGFpbmVyKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vZGUgPSBtb2RlU2VsZWN0LnZhbHVlOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIEFJ5qih5byP5LiL6ZqQ6JeP5qih5p2/57yW6L6R77yM5YW25LuW5qih5byP5pi+56S6DQogICAgICAgICAgICAgICAgICAgIGlmIChtb2RlID09PSAnYWknKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZXNDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICcwLjUnOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVzQ29udGFpbmVyLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnbm9uZSc7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZXNDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICcxJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlc0NvbnRhaW5lci5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ2F1dG8nOw0KICAgICAgICAgICAg",
        "ICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfor53mnK/mqKHlvI/lt7LliIfmjaInLCB7IG1vZGUgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WkhOeQhuivneacr+aooeW8j+WPmOWMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhua3u+WKoOivneacr+aooeadvw0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQWRkVGVtcGxhdGUoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC10ZW1wbGF0ZXMtY29udGFpbmVyJyk7DQogICAgICAgICAgICAgICAgaWYgKCFjb250YWluZXIpIHJldHVybjsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlQ291bnQgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLnhocy1haS10ZW1wbGF0ZS1pdGVtJykubGVuZ3RoOw0KICAgICAgICAgICAgICAgIGNvbnN0IG5ld0luZGV4ID0gdGVtcGxhdGVDb3VudCArIDE7DQoNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZUl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsNCiAgICAgICAgICAgICAgICB0ZW1wbGF0ZUl0ZW0uY2xhc3NOYW1lID0gJ3hocy1haS10ZW1wbGF0ZS1pdGVtJzsNCiAgICAgICAgICAgICAgICB0ZW1wbGF0ZUl0ZW0uaW5uZXJIVE1MID0gYA0KICAgICAgICAgICAgICAgICAgICA8bGFiZWw+56ysJHtuZXdJbmRleH3mrKHlm57orr/or53mnK86PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtdGVtcGxhdGUiIHJvd3M9IjQiDQogICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0i6K+36L6T5YWl56ysJHtuZXdJbmRleH3mrKHlm57orr/nmoTor53mnK/lhoXlrrkuLi4iPjwvdGV4dGFyZWE+DQogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIHhocy1haS1yZW1vdmUtdGVtcGxhdGUiDQogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLXRvcDogNXB4OyBiYWNrZ3JvdW5kOiAjZmY2YjZiOyI+5Yig6ZmkPC9idXR0b24+DQogICAgICAgICAgICAgICAgYDsNCg0KICAgICAgICAgICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh0ZW1wbGF0ZUl0ZW0pOw0KDQogICAgICAgICAgICAgICAgLy8g57uR5a6a5Yig6Zmk5oyJ6ZKu5LqL5Lu2DQogICAgICAgICAgICAgICAgY29uc3QgcmVtb3ZlQnRuID0gdGVtcGxhdGVJdGVtLnF1ZXJ5U2VsZWN0b3IoJy54aHMtYWktcmVtb3ZlLXRlbXBsYXRlJyk7DQogICAgICAgICAgICAg",
        "ICAgcmVtb3ZlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZUl0ZW0ucmVtb3ZlKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlVGVtcGxhdGVMYWJlbHMoKTsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6K+d5pyv5qih5p2/5bey5re75YqgJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a3u+WKoOivneacr+aooeadvycsIHsgbmV3SW5kZXggfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5re75Yqg6K+d5pyv5qih5p2/5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+a3u+WKoOivneacr+aooeadv+Wksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbph43nva7or53mnK/mqKHmnb8NCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVJlc2V0VGVtcGxhdGVzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIWNvbmZpcm0oJ+ehruWumuimgemHjee9ruS4uum7mOiupOivneacr+aooeadv+WQl++8n+W9k+WJjeeahOiHquWumuS5ieivneacr+Wwhuiiq+a4heepuuOAgicpKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtdGVtcGxhdGVzLWNvbnRhaW5lcicpOw0KICAgICAgICAgICAgICAgIGlmICghY29udGFpbmVyKSByZXR1cm47DQoNCiAgICAgICAgICAgICAgICAvLyDmuIXnqbrnjrDmnInmqKHmnb8NCiAgICAgICAgICAgICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gJyc7DQoNCiAgICAgICAgICAgICAgICAvLyDmt7vliqDpu5jorqTmqKHmnb8NCiAgICAgICAgICAgICAgICBjb25zdCBkZWZhdWx0VGVtcGxhdGVzID0gQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBUZW1wbGF0ZXM7DQogICAgICAgICAgICAgICAgZGVmYXVsdFRlbXBsYXRlcy5mb3JFYWNoKCh0ZW1wbGF0ZSwgaW5kZXgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7DQogICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlSXRlbS5jbGFzc05hbWUgPSAneGhzLWFpLXRlbXBsYXRlLWl0ZW0nOw0KICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZUl0ZW0uaW5uZXJIVE1MID0gYA0KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuesrCR7aW5kZXggKyAxfeasoeWbnuiuv+ivneacrzo8L2xhYmVsPg0KICAgICAg",
        "ICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtdGVtcGxhdGUiIHJvd3M9IjQiPiR7dGVtcGxhdGV9PC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICAgICAgYDsNCiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHRlbXBsYXRlSXRlbSk7DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ivneacr+aooeadv+W3sumHjee9ruS4uum7mOiupCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+ivneacr+aooeadv+W3sumHjee9ruS4uum7mOiupCcpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+mHjee9ruivneacr+aooeadv+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfph43nva7or53mnK/mqKHmnb/lpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw5qih5p2/5qCH562+5bqP5Y+3DQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVUZW1wbGF0ZUxhYmVscygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgY29udGFpbmVyID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlcy1jb250YWluZXInKTsNCiAgICAgICAgICAgICAgICBpZiAoIWNvbnRhaW5lcikgcmV0dXJuOw0KDQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVJdGVtcyA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcueGhzLWFpLXRlbXBsYXRlLWl0ZW0nKTsNCiAgICAgICAgICAgICAgICB0ZW1wbGF0ZUl0ZW1zLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGxhYmVsID0gaXRlbS5xdWVyeVNlbGVjdG9yKCdsYWJlbCcpOw0KICAgICAgICAgICAgICAgICAgICBpZiAobGFiZWwpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsLnRleHRDb250ZW50ID0gYOesrCR7aW5kZXggKyAxfeasoeWbnuiuv+ivneacrzpgOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw5qih5p2/5qCH562+5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgICAgICAvLyDov73nsonlkI3ljZXnrqHnkIbnm7jlhbPlpITnkIbmlrnms5UNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCg0KICAgICAgICAvKioN",
        "CiAgICAgICAgICog5aSE55CG6L+957KJ5ZCN5Y2V5bGV5byAL+aUtui1tw0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlVG9nZ2xlRm9sbG93VXBMaXN0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWxpc3QtY29udGVudCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtZm9sbG93dXAtbGlzdCcpOw0KDQogICAgICAgICAgICAgICAgaWYgKGNvbnRlbnQgJiYgYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IGNvbnRlbnQuc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnOw0KICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN0eWxlLmRpc3BsYXkgPSBpc1Zpc2libGUgPyAnbm9uZScgOiAnYmxvY2snOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSBpc1Zpc2libGUgPyAn5bGV5byAJyA6ICfmlLbotbcnOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOWxleW8gO+8jOWImeWIt+aWsOWIl+ihqA0KICAgICAgICAgICAgICAgICAgICBpZiAoIWlzVmlzaWJsZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJGb2xsb3dVcExpc3QoKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliIfmjaLov73nsonlkI3ljZXmmL7npLrlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbov73nsonlkI3ljZXmkJzntKINCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUZvbGxvd1VwU2VhcmNoKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDpmLLmipblpITnkIYNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5mb2xsb3dVcFNlYXJjaFRpbWVvdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuZm9sbG93VXBTZWFyY2hUaW1lb3V0KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0aGlzLmZvbGxvd1VwU2VhcmNoVGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckZvbGxvd1VwTGlzdCgpOw0KICAgICAgICAgICAgICAgIH0sIDMwMCk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ5ZCN5Y2V5pCc57Si5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6L+957KJ",
        "5ZCN5Y2V562b6YCJDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVGb2xsb3dVcEZpbHRlcigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50Rm9sbG93VXBQYWdlID0gMTsgLy8g6YeN572u5Yiw56ys5LiA6aG1DQogICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJGb2xsb3dVcExpc3QoKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonlkI3ljZXnrZvpgInlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbliLfmlrDov73nsonlkI3ljZUNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVJlZnJlc2hGb2xsb3dVcExpc3QoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9sbG93VXBMaXN0KCk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfov73nsonlkI3ljZXlt7LliLfmlrAnLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WIt+aWsOi/veeyieWQjeWNleWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfliLfmlrDov73nsonlkI3ljZXlpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6L+957KJ5ZCN5Y2V5LiK5LiA6aG1DQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVGb2xsb3dVcFByZXZQYWdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50Rm9sbG93VXBQYWdlID4gMSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRGb2xsb3dVcFBhZ2UtLTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJGb2xsb3dVcExpc3QoKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ5ZCN5Y2V57+76aG15aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6L+957KJ5ZCN5Y2V5LiL5LiA6aG1DQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVGb2xsb3dVcE5leHRQYWdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCB0b3RhbFBhZ2VzID0gdGhpcy50b3RhbEZvbGxvd1VwUGFnZXMgfHwgMTsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50Rm9sbG93VXBQYWdlIDwgdG90YWxQYWdlcykgew0KICAgICAgICAgICAgICAg",
        "ICAgICB0aGlzLmN1cnJlbnRGb2xsb3dVcFBhZ2UrKzsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJGb2xsb3dVcExpc3QoKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ5ZCN5Y2V57+76aG15aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riy5p+T6L+957KJ5ZCN5Y2VDQogICAgICAgICAqLw0KICAgICAgICByZW5kZXJGb2xsb3dVcExpc3QoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOWIneWni+WMluWIhumhteWPmOmHjw0KICAgICAgICAgICAgICAgIGlmICghdGhpcy5jdXJyZW50Rm9sbG93VXBQYWdlKSB0aGlzLmN1cnJlbnRGb2xsb3dVcFBhZ2UgPSAxOw0KICAgICAgICAgICAgICAgIGNvbnN0IHBhZ2VTaXplID0gMTA7IC8vIOavj+mhteaYvuekujEw5Liq55So5oi3DQoNCiAgICAgICAgICAgICAgICAvLyDojrflj5bmkJzntKLlkoznrZvpgInmnaHku7YNCiAgICAgICAgICAgICAgICBjb25zdCBzZWFyY2hJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1zZWFyY2gnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBmaWx0ZXJTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtZmlsdGVyJyk7DQogICAgICAgICAgICAgICAgY29uc3Qgc2VhcmNoVGVybSA9IHNlYXJjaElucHV0ID8gc2VhcmNoSW5wdXQudmFsdWUudHJpbSgpLnRvTG93ZXJDYXNlKCkgOiAnJzsNCiAgICAgICAgICAgICAgICBjb25zdCBmaWx0ZXJTdGF0dXMgPSBmaWx0ZXJTZWxlY3QgPyBmaWx0ZXJTZWxlY3QudmFsdWUgOiAnYWxsJzsNCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WPluaJgOaciei/veeyieiusOW9lQ0KICAgICAgICAgICAgICAgIGNvbnN0IGFsbFJlY29yZHMgPSBBcnJheS5mcm9tKEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5lbnRyaWVzKCkpLm1hcCgoW3VzZXJJZCwgcmVjb3JkXSkgPT4gKHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAuLi5yZWNvcmQNCiAgICAgICAgICAgICAgICB9KSk7DQoNCiAgICAgICAgICAgICAgICAvLyDlupTnlKjmkJzntKLlkoznrZvpgIkNCiAgICAgICAgICAgICAgICBsZXQgZmlsdGVyZWRSZWNvcmRzID0gYWxsUmVjb3Jkcy5maWx0ZXIocmVjb3JkID0+IHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5pCc57Si6L+H5rukDQogICAgICAgICAgICAgICAgICAgIGlmIChzZWFyY2hUZXJtICYmICFyZWNvcmQudXNlck5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICB9",
        "DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g54q25oCB6L+H5rukDQogICAgICAgICAgICAgICAgICAgIGlmIChmaWx0ZXJTdGF0dXMgIT09ICdhbGwnICYmIHJlY29yZC5zdGF0dXMgIT09IGZpbHRlclN0YXR1cykgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmjInmnIDlkI7ogZTns7vml7bpl7TmjpLluo8NCiAgICAgICAgICAgICAgICBmaWx0ZXJlZFJlY29yZHMuc29ydCgoYSwgYikgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0aW1lQSA9IGEubGFzdEZvbGxvd1VwIHx8IGEuZmlyc3RDb250YWN0IHx8IDA7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVCID0gYi5sYXN0Rm9sbG93VXAgfHwgYi5maXJzdENvbnRhY3QgfHwgMDsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRpbWVCIC0gdGltZUE7DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDorqHnrpfliIbpobUNCiAgICAgICAgICAgICAgICBjb25zdCB0b3RhbFJlY29yZHMgPSBmaWx0ZXJlZFJlY29yZHMubGVuZ3RoOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsUGFnZXMgPSBNYXRoLmNlaWwodG90YWxSZWNvcmRzIC8gcGFnZVNpemUpOw0KICAgICAgICAgICAgICAgIHRoaXMudG90YWxGb2xsb3dVcFBhZ2VzID0gdG90YWxQYWdlczsNCg0KICAgICAgICAgICAgICAgIC8vIOehruS/neW9k+WJjemhteWcqOacieaViOiMg+WbtOWGhQ0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRGb2xsb3dVcFBhZ2UgPiB0b3RhbFBhZ2VzICYmIHRvdGFsUGFnZXMgPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEZvbGxvd1VwUGFnZSA9IHRvdGFsUGFnZXM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6I635Y+W5b2T5YmN6aG155qE6K6w5b2VDQogICAgICAgICAgICAgICAgY29uc3Qgc3RhcnRJbmRleCA9ICh0aGlzLmN1cnJlbnRGb2xsb3dVcFBhZ2UgLSAxKSAqIHBhZ2VTaXplOw0KICAgICAgICAgICAgICAgIGNvbnN0IGVuZEluZGV4ID0gc3RhcnRJbmRleCArIHBhZ2VTaXplOw0KICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRQYWdlUmVjb3JkcyA9IGZpbHRlcmVkUmVjb3Jkcy5zbGljZShzdGFydEluZGV4LCBlbmRJbmRleCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDorqHmlbDmmL7npLoNCiAgICAgICAgICAgICAgICBjb25zdCBjb3VudEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtbGlzdC1jb3VudCcpOw0KICAgICAgICAgICAgICAgIGlmIChjb3VudEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgY291bnRFbGVtZW50LnRleHRDb250ZW50ID0gdG90YWxSZWNvcmRz",
        "Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOa4suafk+eUqOaIt+WIl+ihqA0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1saXN0LWNvbnRhaW5lcicpOw0KICAgICAgICAgICAgICAgIGlmICghY29udGFpbmVyKSByZXR1cm47DQoNCiAgICAgICAgICAgICAgICBpZiAoY3VycmVudFBhZ2VSZWNvcmRzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gJzxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1saXN0LWVtcHR5Ij7mmoLml6DnrKblkIjmnaHku7bnmoTnlKjmiLc8L2Rpdj4nOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSBjdXJyZW50UGFnZVJlY29yZHMubWFwKHJlY29yZCA9PiB0aGlzLmNyZWF0ZUZvbGxvd1VwVXNlckl0ZW0ocmVjb3JkKSkuam9pbignJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g57uR5a6a5pON5L2c5oyJ6ZKu5LqL5Lu2DQogICAgICAgICAgICAgICAgICAgIHRoaXMuYmluZEZvbGxvd1VwVXNlckFjdGlvbnMoY29udGFpbmVyKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDwn4aVIOe7keWumuaJuemHj+aTjeS9nOebuOWFs+S6i+S7tg0KICAgICAgICAgICAgICAgICAgICB0aGlzLmJpbmRCYXRjaE9wZXJhdGlvbkV2ZW50cyhjb250YWluZXIpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIPCfhpUg5pu05paw5om56YeP5pON5L2c55WM6Z2i54q25oCBDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVCYXRjaE9wZXJhdGlvblVJKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDliIbpobXmjqfliLYNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUZvbGxvd1VwUGFnaW5hdGlvbih0b3RhbFBhZ2VzKTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+a4suafk+i/veeyieWQjeWNleWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIm+W7uui/veeyieeUqOaIt+WIl+ihqOmhuQ0KICAgICAgICAgKi8NCiAgICAgICAgY3JlYXRlRm9sbG93VXBVc2VySXRlbShyZWNvcmQpIHsNCiAgICAgICAgICAgIGNvbnN0IHN0YXR1c1RleHQgPSB0aGlzLmdldFN0YXR1c1RleHQocmVjb3JkLnN0YXR1cyk7DQogICAgICAgICAgICBjb25zdCBzdGF0dXNDbGFzcyA9IHJlY29yZC5zdGF0dXMgfHwgJ3BlbmRpbmcnOw0KICAgICAgICAgICAgY29uc3QgZmlyc3RDb250YWN0VGltZSA9IHJlY29yZC5maXJzdENvbnRhY3QgPyBuZXcgRGF0ZShyZWNvcmQuZmlyc3RDb250YWN0KS50b0xvY2FsZVN0cmluZygpIDogJ04vQSc7DQogICAgICAgICAg",
        "ICBjb25zdCBsYXN0Rm9sbG93VXBUaW1lID0gcmVjb3JkLmxhc3RGb2xsb3dVcCA/IG5ldyBEYXRlKHJlY29yZC5sYXN0Rm9sbG93VXApLnRvTG9jYWxlU3RyaW5nKCkgOiAn5pyq5Zue6K6/JzsNCiAgICAgICAgICAgIGNvbnN0IGlzQmxhY2tsaXN0ZWQgPSBGb2xsb3dVcEJsYWNrbGlzdE1hbmFnZXIuaXNCbGFja2xpc3RlZChyZWNvcmQudXNlcklkKTsNCg0KICAgICAgICAgICAgLy8g8J+GlSDmibnph4/moIforrDlip/og73vvJrlj6rmnInlnKjmibnph4/mqKHlvI/kuIvkuJTlvoXlm57orr/lkozlm57orr/kuK3nmoTnlKjmiLfmiY3mmL7npLrlpI3pgInmoYYNCiAgICAgICAgICAgIGNvbnN0IGNhbk1hcmtBc1Zpc2l0ZWQgPSAocmVjb3JkLnN0YXR1cyA9PT0gJ3BlbmRpbmcnIHx8IHJlY29yZC5zdGF0dXMgPT09ICdmb2xsb3dpbmcnKSAmJiB0aGlzLmJhdGNoTW9kZUVuYWJsZWQ7DQoNCiAgICAgICAgICAgIHJldHVybiBgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXVzZXItaXRlbSIgZGF0YS11c2VyLWlkPSIke3JlY29yZC51c2VySWR9Ij4NCiAgICAgICAgICAgICAgICAgICAgJHtjYW5NYXJrQXNWaXNpdGVkID8NCiAgICAgICAgICAgICAgICAgICAgICAgIGA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtdXNlci1jaGVja2JveCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLWNoZWNrYm94IiBkYXRhLXVzZXItaWQ9IiR7cmVjb3JkLnVzZXJJZH0iICR7dGhpcy5zZWxlY3RlZFVzZXJJZHMuaGFzKHJlY29yZC51c2VySWQpID8gJ2NoZWNrZWQnIDogJyd9IC8+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5gIDoNCiAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzLmJhdGNoTW9kZUVuYWJsZWQgPyAnPGRpdiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXVzZXItY2hlY2tib3gtcGxhY2Vob2xkZXIiPjwvZGl2PicgOiAnJykNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtdXNlci1pbmZvIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC11c2VyLW5hbWUiPiR7cmVjb3JkLnVzZXJOYW1lfTwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXVzZXItbWV0YSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+6aaW5qyh6IGU57O7OiAke2ZpcnN0Q29udGFjdFRpbWV9PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuacgOWQjuWbnuiuvzogJHtsYXN0Rm9sbG93VXBUaW1lfTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7lm57orr/mrKHmlbA6ICR7cmVjb3JkLmZvbGxvd1VwQ291bnQgfHwgMH08L3NwYW4+DQogICAgICAgICAgICAgICAg",
        "ICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC11c2VyLXN0YXR1cyAke3N0YXR1c0NsYXNzfSI+JHtzdGF0dXNUZXh0fTwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtdXNlci1hY3Rpb25zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICR7aXNCbGFja2xpc3RlZCA/DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJzxidXR0b24gY2xhc3M9Inhocy1haS1mb2xsb3d1cC1hY3Rpb24tYnRuIHVuYmxhY2tsaXN0IiBkYXRhLWFjdGlvbj0idW5ibGFja2xpc3QiPuenu+WHuum7keWQjeWNlTwvYnV0dG9uPicgOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8YnV0dG9uIGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtYWN0aW9uLWJ0biBibGFja2xpc3QiIGRhdGEtYWN0aW9uPSJibGFja2xpc3QiPuWKoOWFpem7keWQjeWNlTwvYnV0dG9uPicNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICBgOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bnirbmgIHmlofmnKwNCiAgICAgICAgICovDQogICAgICAgIGdldFN0YXR1c1RleHQoc3RhdHVzKSB7DQogICAgICAgICAgICBjb25zdCBzdGF0dXNNYXAgPSB7DQogICAgICAgICAgICAgICAgJ3BlbmRpbmcnOiAn5b6F5Zue6K6/JywNCiAgICAgICAgICAgICAgICAnZm9sbG93aW5nJzogJ+Wbnuiuv+S4rScsDQogICAgICAgICAgICAgICAgJ2NvbXBsZXRlZCc6ICflt7LlrozmiJAnLA0KICAgICAgICAgICAgICAgICdsZWFkc19hY3F1aXJlZCc6ICflt7LojrfnlZnlrqLotYQnLA0KICAgICAgICAgICAgICAgICdibG9ja2VkJzogJ+W3suWxj+iUvScNCiAgICAgICAgICAgIH07DQogICAgICAgICAgICByZXR1cm4gc3RhdHVzTWFwW3N0YXR1c10gfHwgJ+acquefpSc7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOe7keWumui/veeyieeUqOaIt+aTjeS9nOS6i+S7tg0KICAgICAgICAgKi8NCiAgICAgICAgYmluZEZvbGxvd1VwVXNlckFjdGlvbnMoY29udGFpbmVyKSB7DQogICAgICAgICAgICBjb25zdCBhY3Rpb25CdXR0b25zID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy54aHMtYWktZm9sbG93dXAtYWN0aW9uLWJ0bicpOw0KICAgICAgICAgICAgYWN0aW9uQnV0dG9ucy5mb3JFYWNoKGJ0biA9PiB7DQogICAgICAgICAgICAgICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgYWN0aW9uID0gZS50YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLWFjdGlvbicpOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySXRlbSA9IGUudGFyZ2V0LmNsb3Nlc3QoJy54aHMtYWkt",
        "Zm9sbG93dXAtdXNlci1pdGVtJyk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IHVzZXJJdGVtLmdldEF0dHJpYnV0ZSgnZGF0YS11c2VyLWlkJyk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJOYW1lID0gdXNlckl0ZW0ucXVlcnlTZWxlY3RvcignLnhocy1haS1mb2xsb3d1cC11c2VyLW5hbWUnKS50ZXh0Q29udGVudDsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aW9uID09PSAnYmxhY2tsaXN0Jykgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVBZGRUb0ZvbGxvd1VwQmxhY2tsaXN0KHVzZXJJZCwgdXNlck5hbWUpOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGFjdGlvbiA9PT0gJ3VuYmxhY2tsaXN0Jykgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVSZW1vdmVGcm9tRm9sbG93VXBCbGFja2xpc3QodXNlcklkLCB1c2VyTmFtZSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmm7TmlrDov73nsonlkI3ljZXliIbpobXmjqfliLYNCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZUZvbGxvd1VwUGFnaW5hdGlvbih0b3RhbFBhZ2VzKSB7DQogICAgICAgICAgICBjb25zdCBwYWdlSW5mbyA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1wYWdlLWluZm8nKTsNCiAgICAgICAgICAgIGNvbnN0IHByZXZCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtcHJldi1wYWdlJyk7DQogICAgICAgICAgICBjb25zdCBuZXh0QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLW5leHQtcGFnZScpOw0KDQogICAgICAgICAgICBpZiAocGFnZUluZm8pIHsNCiAgICAgICAgICAgICAgICBwYWdlSW5mby50ZXh0Q29udGVudCA9IGDnrKwgJHt0aGlzLmN1cnJlbnRGb2xsb3dVcFBhZ2V9IOmhte+8jOWFsSAke3RvdGFsUGFnZXN9IOmhtWA7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmIChwcmV2QnRuKSB7DQogICAgICAgICAgICAgICAgcHJldkJ0bi5kaXNhYmxlZCA9IHRoaXMuY3VycmVudEZvbGxvd1VwUGFnZSA8PSAxOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAobmV4dEJ0bikgew0KICAgICAgICAgICAgICAgIG5leHRCdG4uZGlzYWJsZWQgPSB0aGlzLmN1cnJlbnRGb2xsb3dVcFBhZ2UgPj0gdG90YWxQYWdlczsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5re75Yqg5Yiw5Zue6K6/6buR5ZCN5Y2VDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVBZGRUb0ZvbGxvd1VwQmxhY2tsaXN0KHVzZXJJZCwgdXNlck5hbWUpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKGNvbmZpcm0oYOehruWu",
        "muimgeWwhueUqOaItyIke3VzZXJOYW1lfSLmt7vliqDliLDlm57orr/pu5HlkI3ljZXlkJfvvJ9cblxu5re75Yqg5ZCO6K+l55So5oi35bCG5LiN5YaN5o6l5pS26Ieq5Yqo5Zue6K6/5raI5oGv44CCYCkpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3VjY2VzcyA9IEZvbGxvd1VwQmxhY2tsaXN0TWFuYWdlci5hZGQodXNlcklkLCB1c2VyTmFtZSwgJ21hbnVhbCcpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKGDlt7LlsIYiJHt1c2VyTmFtZX0i5re75Yqg5Yiw5Zue6K6/6buR5ZCN5Y2VYCwgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9sbG93VXBMaXN0KCk7IC8vIOWIt+aWsOWIl+ihqA0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJGb2xsb3dVcEJsYWNrbGlzdCgpOyAvLyDliLfmlrDpu5HlkI3ljZUNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5re75Yqg5Yiw5Zue6K6/6buR5ZCN5Y2V5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5re75Yqg5Yiw5Zue6K6/6buR5ZCN5Y2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+a3u+WKoOWIsOWbnuiuv+m7keWQjeWNleWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbku47lm57orr/pu5HlkI3ljZXnp7vpmaQNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVJlbW92ZUZyb21Gb2xsb3dVcEJsYWNrbGlzdCh1c2VySWQsIHVzZXJOYW1lKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmIChjb25maXJtKGDnoa7lrpropoHlsIbnlKjmiLciJHt1c2VyTmFtZX0i5LuO5Zue6K6/6buR5ZCN5Y2V56e76Zmk5ZCX77yfXG5cbuenu+mZpOWQjuivpeeUqOaIt+WwhumHjeaWsOaOpeaUtuiHquWKqOWbnuiuv+a2iOaBr+OAgmApKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN1Y2Nlc3MgPSBGb2xsb3dVcEJsYWNrbGlzdE1hbmFnZXIucmVtb3ZlKHVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgIGlmIChzdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oYOW3suWwhiIke3VzZXJOYW1lfSLku47lm57orr/pu5HlkI3ljZXnp7vpmaRgLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJGb2xsb3dVcExpc3QoKTsgLy8g5Yi35paw5YiX6KGoDQogICAgICAg",
        "ICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckZvbGxvd1VwQmxhY2tsaXN0KCk7IC8vIOWIt+aWsOm7keWQjeWNlQ0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfku47lm57orr/pu5HlkI3ljZXnp7vpmaTlpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfku47lm57orr/pu5HlkI3ljZXnp7vpmaTlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5LuO5Zue6K6/6buR5ZCN5Y2V56e76Zmk5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAgICAgLy8g8J+GlSDmibnph4/mk43kvZznm7jlhbPlpITnkIbmlrnms5UNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5YiH5o2i5om56YeP5pON5L2c5qih5byPDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVUb2dnbGVCYXRjaE1vZGUoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHRoaXMuYmF0Y2hNb2RlRW5hYmxlZCA9ICF0aGlzLmJhdGNoTW9kZUVuYWJsZWQ7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBiYXRjaE9wZXJhdGlvbnNHcm91cCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1iYXRjaC1vcGVyYXRpb25zLWdyb3VwJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdG9nZ2xlQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS1iYXRjaC1tb2RlJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoYmF0Y2hPcGVyYXRpb25zR3JvdXAgJiYgdG9nZ2xlQnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmJhdGNoTW9kZUVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGJhdGNoT3BlcmF0aW9uc0dyb3VwLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOw0KICAgICAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQnRuLnRleHRDb250ZW50ID0gJ+mAgOWHuuaJuemHjyc7DQogICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVCdG4uY2xhc3NMaXN0LmFkZCgneGhzLWFpLWJ0bi1kYW5nZXInKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZUJ0bi5jbGFzc0xpc3QucmVtb3ZlKCd4aHMtYWktYnRuLXNtYWxsJyk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBiYXRjaE9wZXJhdGlvbnNHcm91cC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOw0KICAgICAgICAgICAgICAgICAg",
        "ICAgICAgdG9nZ2xlQnRuLnRleHRDb250ZW50ID0gJ+aJuemHj+aTjeS9nCc7DQogICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVCdG4uY2xhc3NMaXN0LnJlbW92ZSgneGhzLWFpLWJ0bi1kYW5nZXInKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZUJ0bi5jbGFzc0xpc3QuYWRkKCd4aHMtYWktYnRuLXNtYWxsJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmuIXnqbrpgInmi6kNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRVc2VySWRzLmNsZWFyKCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDph43mlrDmuLLmn5PliJfooajku6XmmL7npLov6ZqQ6JeP5aSN6YCJ5qGGDQogICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJGb2xsb3dVcExpc3QoKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmibnph4/mk43kvZzmqKHlvI/liIfmjaInLCB7IGVuYWJsZWQ6IHRoaXMuYmF0Y2hNb2RlRW5hYmxlZCB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliIfmjaLmibnph4/mk43kvZzmqKHlvI/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmiafooYzpgInmi6nmk43kvZzvvIjpgInmi6nmnKzpobUv5YWo6YOo77yJDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVFeGVjdXRlU2VsZWN0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RNb2RlID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNlbGVjdC1tb2RlJyk7DQogICAgICAgICAgICAgICAgaWYgKCFzZWxlY3RNb2RlKSByZXR1cm47DQoNCiAgICAgICAgICAgICAgICBjb25zdCBtb2RlID0gc2VsZWN0TW9kZS52YWx1ZTsNCg0KICAgICAgICAgICAgICAgIGlmIChtb2RlID09PSAncGFnZScpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RDdXJyZW50UGFnZSgpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobW9kZSA9PT0gJ2FsbCcpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RBbGxVc2VycygpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmiafooYzpgInmi6nmk43kvZzlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpgInmi6nlvZPliY3pobXpnaLnmoTmiYDmnInnlKjmiLcNCiAgICAgICAgICovDQogICAgICAgIHNlbGVjdEN1cnJlbnRQYWdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCB1c2VyQ2hlY2ti",
        "b3hlcyA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvckFsbCgnLnhocy1haS1mb2xsb3d1cC1jaGVja2JveCcpOw0KDQogICAgICAgICAgICAgICAgdXNlckNoZWNrYm94ZXMuZm9yRWFjaChjaGVja2JveCA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNoZWNrYm94LmNoZWNrZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySWQgPSBjaGVja2JveC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdXNlci1pZCcpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkVXNlcklkcy5hZGQodXNlcklkKTsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU2VsZWN0ZWRDb3VudCgpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6YCJ5oup5b2T5YmN6aG1JywgeyBzZWxlY3RlZENvdW50OiB0aGlzLnNlbGVjdGVkVXNlcklkcy5zaXplIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+mAieaLqeW9k+WJjemhteWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmAieaLqeaJgOacieeUqOaIt++8iOWMheaLrOWFtuS7lumhtemdou+8iQ0KICAgICAgICAgKi8NCiAgICAgICAgc2VsZWN0QWxsVXNlcnMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOiOt+WPluaJgOaciei/veeyieiusOW9lQ0KICAgICAgICAgICAgICAgIGNvbnN0IGFsbFJlY29yZHMgPSBBcnJheS5mcm9tKEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5lbnRyaWVzKCkpOw0KDQogICAgICAgICAgICAgICAgLy8g5bqU55So5b2T5YmN55qE5pCc57Si5ZKM562b6YCJ5p2h5Lu2DQogICAgICAgICAgICAgICAgY29uc3Qgc2VhcmNoSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtc2VhcmNoJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZmlsdGVyU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWZpbHRlcicpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNlYXJjaFRlcm0gPSBzZWFyY2hJbnB1dCA/IHNlYXJjaElucHV0LnZhbHVlLnRyaW0oKS50b0xvd2VyQ2FzZSgpIDogJyc7DQogICAgICAgICAgICAgICAgY29uc3QgZmlsdGVyU3RhdHVzID0gZmlsdGVyU2VsZWN0ID8gZmlsdGVyU2VsZWN0LnZhbHVlIDogJ2FsbCc7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBmaWx0ZXJlZFJlY29yZHMgPSBhbGxSZWNvcmRzLmZpbHRlcigoW3VzZXJJZCwgcmVjb3JkXSkgPT4gew0KICAgICAgICAgICAgICAgICAgICAvLyDlupTnlKjmkJzntKLmnaHku7YNCiAgICAgICAgICAgICAgICAgICAgaWYgKHNlYXJjaFRlcm0gJiYgIXJlY29yZC51c2VyTmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaFRl",
        "cm0pKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgLy8g5bqU55So54q25oCB562b6YCJDQogICAgICAgICAgICAgICAgICAgIGlmIChmaWx0ZXJTdGF0dXMgIT09ICdhbGwnICYmIHJlY29yZC5zdGF0dXMgIT09IGZpbHRlclN0YXR1cykgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5riF56m65b2T5YmN6YCJ5oupDQogICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFVzZXJJZHMuY2xlYXIoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOmAieaLqeaJgOacieespuWQiOadoeS7tueahOeUqOaItw0KICAgICAgICAgICAgICAgIGZpbHRlcmVkUmVjb3Jkcy5mb3JFYWNoKChbdXNlcklkLCByZWNvcmRdKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWPqumAieaLqeW+heWbnuiuv+WSjOWbnuiuv+S4reeahOeUqOaIt++8iOS4juaJuemHj+agh+iusOWKn+iDveS/neaMgeS4gOiHtO+8iQ0KICAgICAgICAgICAgICAgICAgICBpZiAocmVjb3JkLnN0YXR1cyA9PT0gJ3BlbmRpbmcnIHx8IHJlY29yZC5zdGF0dXMgPT09ICdmb2xsb3dpbmcnKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkVXNlcklkcy5hZGQodXNlcklkKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw5b2T5YmN6aG16Z2i55qE5aSN6YCJ5qGG54q25oCBDQogICAgICAgICAgICAgICAgY29uc3QgdXNlckNoZWNrYm94ZXMgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy54aHMtYWktZm9sbG93dXAtY2hlY2tib3gnKTsNCiAgICAgICAgICAgICAgICB1c2VyQ2hlY2tib3hlcy5mb3JFYWNoKGNoZWNrYm94ID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gY2hlY2tib3guZ2V0QXR0cmlidXRlKCdkYXRhLXVzZXItaWQnKTsNCiAgICAgICAgICAgICAgICAgICAgY2hlY2tib3guY2hlY2tlZCA9IHRoaXMuc2VsZWN0ZWRVc2VySWRzLmhhcyh1c2VySWQpOw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZWxlY3RlZENvdW50KCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpgInmi6nlhajpg6jnlKjmiLcnLCB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsRmlsdGVyZWQ6IGZpbHRlcmVkUmVjb3Jkcy5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkQ291bnQ6IHRoaXMuc2VsZWN0ZWRVc2VySWRzLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVy",
        "cm9yKCfpgInmi6nlhajpg6jnlKjmiLflpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmibnph4/moIforrDlt7Llm57orr8NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGhhbmRsZUJhdGNoTWFya1Zpc2l0ZWQoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdGVkVXNlcklkcy5zaXplID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6K+35YWI6YCJ5oup6KaB5qCH6K6w55qE55So5oi3JywgJ3dhcm5pbmcnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkQ291bnQgPSB0aGlzLnNlbGVjdGVkVXNlcklkcy5zaXplOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpcm1NZXNzYWdlID0gYOehruWumuimgeWwhumAieS4reeahCAke3NlbGVjdGVkQ291bnR9IOS4queUqOaIt+agh+iusOS4uuW3suWbnuiuv+WQl++8n1xuXG7mraTmk43kvZzlsIbvvJpcbi0g6K6+572u5pyA5ZCO5Zue6K6/5pe26Ze05Li65b2T5YmN5pe26Ze0XG4tIOWinuWKoOWbnuiuv+asoeaVsFxuLSDmoLnmja7phY3nva7mm7TmlrDnlKjmiLfnirbmgIFgOw0KDQogICAgICAgICAgICAgICAgaWYgKCFjb25maXJtKGNvbmZpcm1NZXNzYWdlKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJhdGNoLW1hcmstdmlzaXRlZCcpOw0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+agh+iusOS4rS4uLic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgbGV0IHN1Y2Nlc3NDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgbGV0IGZhaWx1cmVDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRVc2VyQXJyYXkgPSBBcnJheS5mcm9tKHRoaXMuc2VsZWN0ZWRVc2VySWRzKTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdXNlcklkIG9mIHNlbGVjdGVkVXNlckFycmF5KSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDojrflj5bnlKjmiLforrDlvZUNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlY29yZCA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5nZXQodXNlcklkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcmVjb3JkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4o",
        "J+aJuemHj+agh+iusO+8mueUqOaIt+iusOW9leS4jeWtmOWcqCcsIHsgdXNlcklkIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhaWx1cmVDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDosIPnlKhyZWNvcmRGb2xsb3dVcOaWueazleagh+iusOWbnuiuvw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGUgPSAn5omL5Yqo5qCH6K6w5bey5Zue6K6/JzsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHN1Y2Nlc3MgPSBGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkRm9sbG93VXAoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY29yZC51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWNvcmQuY29udmVyc2F0aW9uSWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5om56YeP5qCH6K6w77ya55So5oi35qCH6K6w5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiByZWNvcmQudXNlck5hbWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFpbHVyZUNvdW50Kys7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBmYWlsdXJlQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5om56YeP5qCH6K6w77ya5aSE55CG55So5oi35aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmmL7npLrnu5PmnpwNCiAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzc0NvdW50ID4gMCkgew0KICAgICAgICAgICAgICAgICAgICB0",
        "aGlzLnNob3dOb3RpZmljYXRpb24oYOaIkOWKn+agh+iusCAke3N1Y2Nlc3NDb3VudH0g5Liq55So5oi35Li65bey5Zue6K6/JHtmYWlsdXJlQ291bnQgPiAwID8gYO+8jCR7ZmFpbHVyZUNvdW50fSDkuKrlpLHotKVgIDogJyd9YCwgJ3N1Y2Nlc3MnKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDmuIXnqbrpgInmi6nlubbpgIDlh7rmibnph4/mqKHlvI8NCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFVzZXJJZHMuY2xlYXIoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5iYXRjaE1vZGVFbmFibGVkID0gZmFsc2U7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5Yi35paw55WM6Z2iDQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9sbG93VXBMaXN0KCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlRm9sbG93VXBTdGF0cygpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbihg5om56YeP5qCH6K6w5aSx6LSl77yMJHtmYWlsdXJlQ291bnR9IOS4queUqOaIt+WkhOeQhuWksei0pWAsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaBouWkjeaMiemSrueKtuaAgQ0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfmoIforrDlt7Llm57orr8nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmibnph4/moIforrDlt7Llm57orr/lrozmiJAnLCB7IHN1Y2Nlc3NDb3VudCwgZmFpbHVyZUNvdW50IH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aJuemHj+agh+iusOW3suWbnuiuv+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmibnph4/moIforrDmk43kvZzlpLHotKUnLCAnZXJyb3InKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaBouWkjeaMiemSrueKtuaAgQ0KICAgICAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1iYXRjaC1tYXJrLXZpc2l0ZWQnKTsNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5qCH6K6w5bey5Zue6K6/JzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuaJuemHj+WIoOmZpOeUqOaItw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlQmF0Y2hEZWxldGUoKSB7DQogICAgICAgICAgICB0",
        "cnkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdGVkVXNlcklkcy5zaXplID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6K+35YWI6YCJ5oup6KaB5Yig6Zmk55qE55So5oi3JywgJ3dhcm5pbmcnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkQ291bnQgPSB0aGlzLnNlbGVjdGVkVXNlcklkcy5zaXplOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpcm1NZXNzYWdlID0gYOKaoO+4jyDnoa7lrpropoHliKDpmaTpgInkuK3nmoQgJHtzZWxlY3RlZENvdW50fSDkuKrnlKjmiLflkJfvvJ9cblxu5q2k5pON5L2c5bCG77yaXG4tIOS7jui/veeyieWQjeWNleS4reawuOS5heWIoOmZpOi/meS6m+eUqOaIt1xuLSDliKDpmaTmiYDmnInnm7jlhbPnmoTlm57orr/orrDlvZVcbi0g5q2k5pON5L2c5LiN5Y+v5pKk6ZSAXG5cbuivt+iwqOaFjuaTjeS9nO+8gWA7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWNvbmZpcm0oY29uZmlybU1lc3NhZ2UpKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkuozmrKHnoa7orqQNCiAgICAgICAgICAgICAgICBpZiAoIWNvbmZpcm0oJ+acgOWQjuehruiupO+8muecn+eahOimgeWIoOmZpOi/meS6m+eUqOaIt+WQl++8n+atpOaTjeS9nOS4jeWPr+aSpOmUgO+8gScpKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmF0Y2gtZGVsZXRlJyk7DQogICAgICAgICAgICAgICAgaWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5Yig6Zmk5LitLi4uJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBsZXQgc3VjY2Vzc0NvdW50ID0gMDsNCiAgICAgICAgICAgICAgICBsZXQgZmFpbHVyZUNvdW50ID0gMDsNCiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RlZFVzZXJBcnJheSA9IEFycmF5LmZyb20odGhpcy5zZWxlY3RlZFVzZXJJZHMpOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCB1c2VySWQgb2Ygc2VsZWN0ZWRVc2VyQXJyYXkpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOiOt+WPlueUqOaIt+iusOW9le+8iOeUqOS6juaXpeW/l++8iQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVjb3JkID0gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlLmdldCh1c2VySWQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlck5hbWUgPSByZWNvcmQgPyByZWNvcmQudXNlck5h",
        "bWUgOiAn5pyq55+l55So5oi3JzsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5LuO57yT5a2Y5Lit5Yig6ZmkDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkZWxldGVkID0gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlLmRlbGV0ZSh1c2VySWQpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGVsZXRlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmibnph4/liKDpmaTvvJrnlKjmiLfliKDpmaTmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhaWx1cmVDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmibnph4/liKDpmaTvvJrnlKjmiLforrDlvZXkuI3lrZjlnKgnLCB7IHVzZXJJZCB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGZhaWx1cmVDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmibnph4/liKDpmaTvvJrlpITnkIbnlKjmiLflpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWQjOatpeWIsOWtmOWCqA0KICAgICAgICAgICAgICAgIGlmIChzdWNjZXNzQ291bnQgPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5zeW5jVG9TdG9yYWdlSWZOZWVkZWQoKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmmL7npLrnu5PmnpwNCiAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzc0NvdW50ID4gMCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oYOaIkOWKn+WIoOmZpCAke3N1Y2Nlc3NDb3VudH0g5Liq55So5oi3JHtmYWlsdXJlQ291bnQgPiAwID8gYO+8jCR7ZmFpbHVyZUNvdW50fSDkuKrlpLHotKVgIDogJyd9YCwgJ3N1Y2Nlc3MnKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDmuIXnqbrpgInmi6nlubbpgIDlh7rmibnph4/mqKHlvI8NCiAgICAgICAg",
        "ICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFVzZXJJZHMuY2xlYXIoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5iYXRjaE1vZGVFbmFibGVkID0gZmFsc2U7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5Yi35paw55WM6Z2iDQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9sbG93VXBMaXN0KCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlRm9sbG93VXBTdGF0cygpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbihg5om56YeP5Yig6Zmk5aSx6LSl77yMJHtmYWlsdXJlQ291bnR9IOS4queUqOaIt+WkhOeQhuWksei0pWAsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaBouWkjeaMiemSrueKtuaAgQ0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfmibnph4/liKDpmaQnOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmibnph4/liKDpmaTlrozmiJAnLCB7IHN1Y2Nlc3NDb3VudCwgZmFpbHVyZUNvdW50IH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aJuemHj+WIoOmZpOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmibnph4/liKDpmaTmk43kvZzlpLHotKUnLCAnZXJyb3InKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaBouWkjeaMiemSrueKtuaAgQ0KICAgICAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1iYXRjaC1kZWxldGUnKTsNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5om56YeP5Yig6ZmkJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWPlua2iOaJuemHj+mAieaLqQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQ2FuY2VsQmF0Y2hTZWxlY3Rpb24oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOa4heepuuaJgOaciemAieaLqQ0KICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRVc2VySWRzLmNsZWFyKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDlj5bmtojmiYDmnInlpI3pgInmoYbnmoTpgInkuK3nirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCB1c2VyQ2hlY2tib3hlcyA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvckFsbCgnLnhocy1haS1mb2xsb3d1cC1jaGVj",
        "a2JveCcpOw0KICAgICAgICAgICAgICAgIHVzZXJDaGVja2JveGVzLmZvckVhY2goY2hlY2tib3ggPT4gew0KICAgICAgICAgICAgICAgICAgICBjaGVja2JveC5jaGVja2VkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNlbGVjdGVkQ291bnQoKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5bey5Y+W5raI5omA5pyJ5om56YeP6YCJ5oupJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Y+W5raI5om56YeP6YCJ5oup5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog57uR5a6a5om56YeP5pON5L2c55u45YWz5LqL5Lu2DQogICAgICAgICAqLw0KICAgICAgICBiaW5kQmF0Y2hPcGVyYXRpb25FdmVudHMoY29udGFpbmVyKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghdGhpcy5iYXRjaE1vZGVFbmFibGVkKSByZXR1cm47DQoNCiAgICAgICAgICAgICAgICBjb25zdCB1c2VyQ2hlY2tib3hlcyA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcueGhzLWFpLWZvbGxvd3VwLWNoZWNrYm94Jyk7DQogICAgICAgICAgICAgICAgdXNlckNoZWNrYm94ZXMuZm9yRWFjaChjaGVja2JveCA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySWQgPSBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdXNlci1pZCcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGUudGFyZ2V0LmNoZWNrZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkVXNlcklkcy5hZGQodXNlcklkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFVzZXJJZHMuZGVsZXRlKHVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNlbGVjdGVkQ291bnQoKTsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign57uR5a6a5om56YeP5pON5L2c5LqL5Lu25aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw5om56YeP5pON5L2c55WM6Z2i54q25oCBDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVCYXRjaE9wZXJhdGlvblVJKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBj",
        "b25zdCBiYXRjaE9wZXJhdGlvbnNHcm91cCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1iYXRjaC1vcGVyYXRpb25zLWdyb3VwJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdG9nZ2xlQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS1iYXRjaC1tb2RlJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoYmF0Y2hPcGVyYXRpb25zR3JvdXApIHsNCiAgICAgICAgICAgICAgICAgICAgYmF0Y2hPcGVyYXRpb25zR3JvdXAuc3R5bGUuZGlzcGxheSA9IHRoaXMuYmF0Y2hNb2RlRW5hYmxlZCA/ICdibG9jaycgOiAnbm9uZSc7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHRvZ2dsZUJ0bikgew0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5iYXRjaE1vZGVFbmFibGVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVCdG4udGV4dENvbnRlbnQgPSAn6YCA5Ye65om56YePJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZUJ0bi5jbGFzc0xpc3QuYWRkKCd4aHMtYWktYnRuLWRhbmdlcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQnRuLmNsYXNzTGlzdC5yZW1vdmUoJ3hocy1haS1idG4tc21hbGwnKTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZUJ0bi50ZXh0Q29udGVudCA9ICfmibnph4/mk43kvZwnOw0KICAgICAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQnRuLmNsYXNzTGlzdC5yZW1vdmUoJ3hocy1haS1idG4tZGFuZ2VyJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVCdG4uY2xhc3NMaXN0LmFkZCgneGhzLWFpLWJ0bi1zbWFsbCcpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZWxlY3RlZENvdW50KCk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw5om56YeP5pON5L2c55WM6Z2i54q25oCB5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw6YCJ5Lit5pWw6YeP5pi+56S6DQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVTZWxlY3RlZENvdW50KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RlZENvdW50RWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zZWxlY3RlZC1jb3VudCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGJhdGNoTWFya1Zpc2l0ZWRCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmF0Y2gtbWFyay12aXNpdGVkJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYmF0Y2hEZWxldGVCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0",
        "b3IoJyN4aHMtYWktYmF0Y2gtZGVsZXRlJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWRDb3VudEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRDb3VudEVsZW1lbnQudGV4dENvbnRlbnQgPSB0aGlzLnNlbGVjdGVkVXNlcklkcy5zaXplOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGhhc1NlbGVjdGlvbiA9IHRoaXMuc2VsZWN0ZWRVc2VySWRzLnNpemUgPiAwOw0KICAgICAgICAgICAgICAgIGlmIChiYXRjaE1hcmtWaXNpdGVkQnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJhdGNoTWFya1Zpc2l0ZWRCdG4uZGlzYWJsZWQgPSAhaGFzU2VsZWN0aW9uOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAoYmF0Y2hEZWxldGVCdG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYmF0Y2hEZWxldGVCdG4uZGlzYWJsZWQgPSAhaGFzU2VsZWN0aW9uOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmm7TmlrDpgInkuK3mlbDph4/mmL7npLrlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQoNCg0KICAgICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgICAgICAvLyDlm57orr/pu5HlkI3ljZXnrqHnkIbnm7jlhbPlpITnkIbmlrnms5UNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5Zue6K6/6buR5ZCN5Y2V5bGV5byAL+aUtui1tw0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlVG9nZ2xlRm9sbG93VXBCbGFja2xpc3QoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LWNvbnRlbnQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWZvbGxvd3VwLWJsYWNrbGlzdCcpOw0KDQogICAgICAgICAgICAgICAgaWYgKGNvbnRlbnQgJiYgYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IGNvbnRlbnQuc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnOw0KICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN0eWxlLmRpc3BsYXkgPSBpc1Zpc2libGUgPyAnbm9uZScgOiAnYmxvY2snOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSBpc1Zpc2libGUgPyAn5bGV5byAJyA6ICfmlLbotbcnOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOWxleW8gO+8jOWImeWIt+aWsOm7keWQjeWNlQ0KICAgICAgICAgICAgICAgICAgICBpZiAoIWlzVmlzaWJsZSkgew0KICAgICAgICAgICAgICAgICAg",
        "ICAgICAgdGhpcy5yZW5kZXJGb2xsb3dVcEJsYWNrbGlzdCgpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WIh+aNouWbnuiuv+m7keWQjeWNleaYvuekuuWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWIt+aWsOWbnuiuv+m7keWQjeWNlQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlUmVmcmVzaEZvbGxvd1VwQmxhY2tsaXN0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckZvbGxvd1VwQmxhY2tsaXN0KCk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCflm57orr/pu5HlkI3ljZXlt7LliLfmlrAnLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WIt+aWsOWbnuiuv+m7keWQjeWNleWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfliLfmlrDlm57orr/pu5HlkI3ljZXlpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5riF56m65Zue6K6/6buR5ZCN5Y2VDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVDbGVhckZvbGxvd1VwQmxhY2tsaXN0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoY29uZmlybSgn56Gu5a6a6KaB5riF56m65omA5pyJ5Zue6K6/6buR5ZCN5Y2V5ZCX77yfXG5cbuatpOaTjeS9nOS4jeWPr+aSpOmUgO+8jOa4heepuuWQjuaJgOacieeUqOaIt+WwhumHjeaWsOaOpeaUtuiHquWKqOWbnuiuv+a2iOaBr+OAgicpKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN1Y2Nlc3MgPSBGb2xsb3dVcEJsYWNrbGlzdE1hbmFnZXIuY2xlYXIoKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Zue6K6/6buR5ZCN5Y2V5bey5riF56m6JywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9sbG93VXBCbGFja2xpc3QoKTsgLy8g5Yi35paw6buR5ZCN5Y2VDQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckZvbGxvd1VwTGlzdCgpOyAvLyDliLfmlrDov73nsonlkI3ljZUNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5riF56m65Zue6K6/6buR5ZCN5Y2V5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAg",
        "ICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5riF56m65Zue6K6/6buR5ZCN5Y2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+a4heepuuWbnuiuv+m7keWQjeWNleWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuLLmn5Plm57orr/pu5HlkI3ljZUNCiAgICAgICAgICovDQogICAgICAgIHJlbmRlckZvbGxvd1VwQmxhY2tsaXN0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBibGFja2xpc3QgPSBGb2xsb3dVcEJsYWNrbGlzdE1hbmFnZXIuZ2V0QWxsKCk7DQogICAgICAgICAgICAgICAgY29uc3QgY291bnRFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1jb3VudCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtY29udGFpbmVyJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDorqHmlbANCiAgICAgICAgICAgICAgICBpZiAoY291bnRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGNvdW50RWxlbWVudC50ZXh0Q29udGVudCA9IGJsYWNrbGlzdC5sZW5ndGg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKCFjb250YWluZXIpIHJldHVybjsNCg0KICAgICAgICAgICAgICAgIC8vIOa4suafk+m7keWQjeWNleWIl+ihqA0KICAgICAgICAgICAgICAgIGlmIChibGFja2xpc3QubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1lbXB0eSI+5pqC5peg5Zue6K6/6buR5ZCN5Y2V55So5oi3PC9kaXY+JzsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gYmxhY2tsaXN0Lm1hcChpdGVtID0+IHRoaXMuY3JlYXRlRm9sbG93VXBCbGFja2xpc3RJdGVtKGl0ZW0pKS5qb2luKCcnKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDnu5Hlrprnp7vpmaTmjInpkq7kuovku7YNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5iaW5kRm9sbG93VXBCbGFja2xpc3RBY3Rpb25zKGNvbnRhaW5lcik7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+a4suafk+Wbnuiuv+m7keWQjeWNleWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIm+W7",
        "uuWbnuiuv+m7keWQjeWNleWIl+ihqOmhuQ0KICAgICAgICAgKi8NCiAgICAgICAgY3JlYXRlRm9sbG93VXBCbGFja2xpc3RJdGVtKGl0ZW0pIHsNCiAgICAgICAgICAgIGNvbnN0IGFkZGVkVGltZSA9IG5ldyBEYXRlKGl0ZW0uYWRkZWRBdCkudG9Mb2NhbGVTdHJpbmcoKTsNCiAgICAgICAgICAgIGNvbnN0IHJlYXNvblRleHQgPSBpdGVtLnJlYXNvbiA9PT0gJ21hbnVhbCcgPyAn5omL5Yqo5re75YqgJyA6ICfoh6rliqjmt7vliqAnOw0KDQogICAgICAgICAgICByZXR1cm4gYA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtaXRlbSIgZGF0YS11c2VyLWlkPSIke2l0ZW0udXNlcklkfSI+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtaW5mbyI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LW5hbWUiPiR7aXRlbS51c2VyTmFtZX08L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtbWV0YSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHthZGRlZFRpbWV9IMK3ICR7cmVhc29uVGV4dH0NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1yZW1vdmUiIGRhdGEtdXNlci1pZD0iJHtpdGVtLnVzZXJJZH0iPuenu+mZpDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgYDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog57uR5a6a5Zue6K6/6buR5ZCN5Y2V5pON5L2c5LqL5Lu2DQogICAgICAgICAqLw0KICAgICAgICBiaW5kRm9sbG93VXBCbGFja2xpc3RBY3Rpb25zKGNvbnRhaW5lcikgew0KICAgICAgICAgICAgY29uc3QgcmVtb3ZlQnV0dG9ucyA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcueGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1yZW1vdmUnKTsNCiAgICAgICAgICAgIHJlbW92ZUJ1dHRvbnMuZm9yRWFjaChidG4gPT4gew0KICAgICAgICAgICAgICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS11c2VyLWlkJyk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJdGVtID0gZS50YXJnZXQuY2xvc2VzdCgnLnhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtaXRlbScpOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VyTmFtZSA9IHVzZXJJdGVtLnF1ZXJ5U2VsZWN0b3IoJy54aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LW5hbWUnKS50ZXh0Q29udGVudDsNCg0KICAgICAgICAgICAgICAgICAg",
        "ICB0aGlzLmhhbmRsZVJlbW92ZUZyb21Gb2xsb3dVcEJsYWNrbGlzdCh1c2VySWQsIHVzZXJOYW1lKTsNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmm7TmlrDogZrlhYnov5vnur/nu5/orqHkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZVNwb3RsaWdodFN0YXRzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBzdGF0cyA9IFNwb3RsaWdodExlYWRQcm9jZXNzb3IuZ2V0U3RhdHMoKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHByb2Nlc3NlZENvdW50RWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtcHJvY2Vzc2VkLWNvdW50Jyk7DQogICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtc3RhdHVzJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzc2VkQ291bnRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHByb2Nlc3NlZENvdW50RWxlbWVudC50ZXh0Q29udGVudCA9IHN0YXRzLnByb2Nlc3NlZENvdW50Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChzdGF0dXNFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHN0YXR1c0VsZW1lbnQudGV4dENvbnRlbnQgPSBzdGF0cy5lbmFibGVkID8gJ+W3suWQr+eUqCcgOiAn5bey56aB55SoJzsNCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzRWxlbWVudC5zdHlsZS5jb2xvciA9IHN0YXRzLmVuYWJsZWQgPyAnIzJlZDU3MycgOiAnI2ZmNDc1Nyc7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfogZrlhYnov5vnur/nu5/orqHkv6Hmga/lt7Lmm7TmlrAnLCBzdGF0cyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw6IGa5YWJ6L+b57q/57uf6K6h5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgICAgICAvLyDplJnor6/mjqjpgIHlip/og73nm7jlhbPmlrnms5UNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yqg6L296ZSZ6K+v5o6o6YCB6YWN572uDQogICAgICAgICAqLw0KICAgICAgICBsb2FkRXJyb3JOb3RpZmljYXRpb25Db25maWcoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1ub3RpZmljYXRpb24tZW5hYmxlZCcpOw0KICAgICAgICAgICAgICAgIGNv",
        "bnN0IGFwaUtleUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1hcGkta2V5Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgY2hhbm5lbHNTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWNoYW5uZWxzJyk7DQogICAgICAgICAgICAgICAgY29uc3QgcmF0ZUxpbWl0SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItcmF0ZS1saW1pdCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlZHVwbGljYXRpb25DaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1kZWR1cGxpY2F0aW9uJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVkdXBsaWNhdGlvbldpbmRvd0lucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLWRlZHVwbGljYXRpb24td2luZG93Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgdGVzdE1vZGVDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci10ZXN0LW1vZGUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZVRleHRhcmVhID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLXRlbXBsYXRlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgaW5jbHVkZUtleXdvcmRzSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItaW5jbHVkZS1rZXl3b3JkcycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGV4Y2x1ZGVLZXl3b3Jkc0lucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLWV4Y2x1ZGUta2V5d29yZHMnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOmUmeivr+e6p+WIq+WkjemAieahhg0KICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItbGV2ZWwtZXJyb3InKTsNCiAgICAgICAgICAgICAgICBjb25zdCB3YXJuQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItbGV2ZWwtd2FybicpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGluZm9DaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1sZXZlbC1pbmZvJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDliqDovb3ln7rmnKzphY3nva4NCiAgICAgICAgICAgICAgICBpZiAoZW5hYmxlZENoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIGVuYWJsZWRDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uRW5hYmxlZCcsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVFcnJvck5vdGlmaWNhdGlvbkVuYWJsZWRDaGFuZ2UoKTsgLy8g6Kem5Y+R5pi+56S6L+makOiXj+mAu+i+kQ0K",
        "ICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChhcGlLZXlJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBhcGlLZXlJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkFwaUtleScsICcnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoY2hhbm5lbHNTZWxlY3QpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2hhbm5lbHMgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25DaGFubmVscycsICdXWF9NUCcpLnNwbGl0KCcsJyk7DQogICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oY2hhbm5lbHNTZWxlY3Qub3B0aW9ucykuZm9yRWFjaChvcHRpb24gPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uLnNlbGVjdGVkID0gY2hhbm5lbHMuaW5jbHVkZXMob3B0aW9uLnZhbHVlKTsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHJhdGVMaW1pdElucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIHJhdGVMaW1pdElucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uUmF0ZUxpbWl0JywgNSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGRlZHVwbGljYXRpb25DaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBkZWR1cGxpY2F0aW9uQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkRlZHVwbGljYXRpb24nLCB0cnVlKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoZGVkdXBsaWNhdGlvbldpbmRvd0lucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIGRlZHVwbGljYXRpb25XaW5kb3dJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkRlZHVwbGljYXRpb25XaW5kb3cnLCAxMCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHRlc3RNb2RlQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgdGVzdE1vZGVDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uVGVzdE1vZGUnLCBmYWxzZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHRlbXBsYXRlVGV4dGFyZWEpIHsNCiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVUZXh0YXJlYS52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvblRlbXBsYXRlJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZXJyb3JOb3RpZmljYXRpb25UZW1wbGF0ZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGluY2x1ZGVLZXl3b3Jkc0lucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIGluY2x1ZGVLZXl3b3Jkc0lucHV0LnZhbHVlID0g",
        "Q29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uS2V5d29yZHMnLCAnJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGV4Y2x1ZGVLZXl3b3Jkc0lucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIGV4Y2x1ZGVLZXl3b3Jkc0lucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uRXhjbHVkZUtleXdvcmRzJywgJycpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWKoOi9vemUmeivr+e6p+WIq+mFjee9rg0KICAgICAgICAgICAgICAgIGNvbnN0IGxldmVscyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkxldmVscycsICdlcnJvcicpLnNwbGl0KCcsJyk7DQogICAgICAgICAgICAgICAgaWYgKGVycm9yQ2hlY2tib3gpIGVycm9yQ2hlY2tib3guY2hlY2tlZCA9IGxldmVscy5pbmNsdWRlcygnZXJyb3InKTsNCiAgICAgICAgICAgICAgICBpZiAod2FybkNoZWNrYm94KSB3YXJuQ2hlY2tib3guY2hlY2tlZCA9IGxldmVscy5pbmNsdWRlcygnd2FybicpOw0KICAgICAgICAgICAgICAgIGlmIChpbmZvQ2hlY2tib3gpIGluZm9DaGVja2JveC5jaGVja2VkID0gbGV2ZWxzLmluY2x1ZGVzKCdpbmZvJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDnu5/orqHkv6Hmga8NCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUVycm9yTm90aWZpY2F0aW9uU3RhdHMoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUVycm9yTm90aWZpY2F0aW9uSGlzdG9yeSgpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfplJnor6/mjqjpgIHphY3nva7lt7LliqDovb0nKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliqDovb3plJnor6/mjqjpgIHphY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmm7TmlrDplJnor6/mjqjpgIHnu5/orqHkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZUVycm9yTm90aWZpY2F0aW9uU3RhdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzID0gRXJyb3JOb3RpZmljYXRpb25NYW5hZ2VyLmdldFN0YXRzKCk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCB0b3RhbFB1c2hlc0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItdG90YWwtcHVzaGVzJyk7DQogICAgICAgICAgICAgICAgY29uc3QgcHVzaGVzMjRoRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1wdXNoZXMtMjRoJyk7DQogICAgICAgICAgICAgICAgY29uc3QgcHVzaGVzMWhFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLXB1c2hlcy0xaCcpOw0K",
        "ICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1c0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLXN0YXR1cycpOw0KDQogICAgICAgICAgICAgICAgaWYgKHRvdGFsUHVzaGVzRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICB0b3RhbFB1c2hlc0VsZW1lbnQudGV4dENvbnRlbnQgPSBzdGF0cy50b3RhbFB1c2hlczsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAocHVzaGVzMjRoRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBwdXNoZXMyNGhFbGVtZW50LnRleHRDb250ZW50ID0gc3RhdHMucHVzaGVzTGFzdDI0aDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAocHVzaGVzMWhFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHB1c2hlczFoRWxlbWVudC50ZXh0Q29udGVudCA9IHN0YXRzLnB1c2hlc0xhc3RIb3VyOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChzdGF0dXNFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGxldCBzdGF0dXNUZXh0ID0gJ+W3suemgeeUqCc7DQogICAgICAgICAgICAgICAgICAgIGxldCBzdGF0dXNDb2xvciA9ICcjZmY0NzU3JzsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdHMuZW5hYmxlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXRzLnRlc3RNb2RlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzVGV4dCA9ICfmtYvor5XmqKHlvI8nOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c0NvbG9yID0gJyNmZmE1MDInOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0ID0gJ+W3suWQr+eUqCc7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzQ29sb3IgPSAnIzJlZDU3Myc7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBzdGF0dXNFbGVtZW50LnRleHRDb250ZW50ID0gc3RhdHVzVGV4dDsNCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzRWxlbWVudC5zdHlsZS5jb2xvciA9IHN0YXR1c0NvbG9yOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6ZSZ6K+v5o6o6YCB57uf6K6h5L+h5oGv5bey5pu05pawJywgc3RhdHMpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOmUmeivr+aOqOmAgee7n+iuoeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOmUmeivr+aOqOmAgeWOhuWPsuiusOW9lQ0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRl",
        "RXJyb3JOb3RpZmljYXRpb25IaXN0b3J5KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBoaXN0b3J5ID0gRXJyb3JOb3RpZmljYXRpb25NYW5hZ2VyLmdldFB1c2hIaXN0b3J5KDEwKTsgLy8g6I635Y+W5pyA6L+RMTDmnaHorrDlvZUNCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWhpc3RvcnknKTsNCg0KICAgICAgICAgICAgICAgIGlmICghY29udGFpbmVyKSByZXR1cm47DQoNCiAgICAgICAgICAgICAgICBpZiAoaGlzdG9yeS5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPSJ4aHMtYWktaGlzdG9yeS1lbXB0eSI+5pqC5peg5o6o6YCB6K6w5b2VPC9kaXY+JzsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gaGlzdG9yeS5tYXAocmVjb3JkID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpbWUgPSBuZXcgRGF0ZShyZWNvcmQudGltZXN0YW1wKS50b0xvY2FsZVN0cmluZygnemgtQ04nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1oaXN0b3J5LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWhpc3RvcnktdGltZSI+JHt0aW1lfTwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1lcnJvci1ub3RpZmljYXRpb24taGlzdG9yeS1sZXZlbCAke3JlY29yZC5sZXZlbH0iPiR7cmVjb3JkLmxldmVsLnRvVXBwZXJDYXNlKCl9PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1lcnJvci1ub3RpZmljYXRpb24taGlzdG9yeS1tZXNzYWdlIj4ke3JlY29yZC5tZXNzYWdlfTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICBgOw0KICAgICAgICAgICAgICAgICAgICB9KS5qb2luKCcnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mUmeivr+aOqOmAgeWOhuWPsuiusOW9leW3suabtOaWsCcsIHsgY291bnQ6IGhpc3RvcnkubGVuZ3RoIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOmUmeivr+aOqOmAgeWOhuWPsuWksei0pScsIHsgZXJy",
        "b3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDkuLvlupTnlKjnsbsNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNsYXNzIFhIU0F1dG9SZXBseUFwcCB7DQogICAgICAgIGNvbnN0cnVjdG9yKCkgew0KICAgICAgICAgICAgdGhpcy5pc1J1bm5pbmcgPSBmYWxzZTsNCiAgICAgICAgICAgIHRoaXMubWVzc2FnZU9ic2VydmVyID0gbnVsbDsNCiAgICAgICAgICAgIHRoaXMucHJvY2Vzc2VkTWVzc2FnZXMgPSBuZXcgU2V0KCk7DQogICAgICAgICAgICB0aGlzLmN1cnJlbnRVc2VyID0gbnVsbDsNCiAgICAgICAgICAgIHRoaXMucGFnZUVsZW1lbnRzID0gbnVsbDsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+Wwj+e6ouS5pkFJ6Ieq5Yqo5Zue5aSN5bel5YW35Yid5aeL5YyWJyk7DQogICAgICAgIH0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yid5aeL5YyW5bqU55SoDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBpbml0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XpobXpnaLmmK/lkKbmraPnoa4NCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuY2hlY2tQYWdlKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+W9k+WJjemhtemdouS4jeaYr+Wwj+e6ouS5puengeS/oeeuoeeQhumhtemdoicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W8gOWni+WIneWni+WMluW6lOeUqC4uLicpOw0KDQogICAgICAgICAgICAgICAgLy8g562J5b6F6aG16Z2i5Yqg6L295a6M5oiQDQogICAgICAgICAgICAgICAgYXdhaXQgdGhpcy53YWl0Rm9yUGFnZVJlYWR5KCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XpobXpnaLlhYPntKANCiAgICAgICAgICAgICAgICB0aGlzLnBhZ2VFbGVtZW50cyA9IFBhZ2VFbGVtZW50TWFuYWdlci5jaGVja1BhZ2VFbGVtZW50cygpOw0KDQogICAgICAgICAgICAgICAgaWYgKCF0aGlzLnBhZ2VFbGVtZW50cy5hbGxWYWxpZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+mhtemdouWFs+mUruWFg+e0oOe8uuWkse+8jOaXoOazleato+W4uOi/kOihjCcpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5ZCv5Yqo5raI5oGv55uR5ZCs5ZmoDQogICAgICAgICAgICAgICAgTWVzc2FnZUxpc3RlbmVyLnN0YXJ0KCk7DQoNCiAgICAgICAgICAgICAgICAvLyDliJ3lp4vljJbpu5HlkI3ljZXnrqHnkIblmagNCiAgICAgICAgICAgICAgICBCbGFja2xpc3RNYW5hZ2VyLmluaXQoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWIneWni+WMluiiq+aLiem7keajgOa1",
        "i+WZqA0KICAgICAgICAgICAgICAgIEJsb2NrZWRVc2VyRGV0ZWN0b3IuaW5pdCgpOw0KDQogICAgICAgICAgICAgICAgLy8g5Yid5aeL5YyW5YO15bC45pyq6K+7566h55CG5ZmoDQogICAgICAgICAgICAgICAgWm9tYmllVW5yZWFkTWFuYWdlci5pbml0KCk7DQoNCiAgICAgICAgICAgICAgICAvLyDliJ3lp4vljJZTZWxsZXIgSUTmj5Dlj5blmagNCiAgICAgICAgICAgICAgICBTZWxsZXJJZEV4dHJhY3Rvci5pbml0KCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmt7vliqDlhajlsYDmtYvor5Xlh73mlbDvvIjmlrnkvr/osIPor5XvvIkNCiAgICAgICAgICAgICAgICB3aW5kb3cudGVzdFNlbGxlcklkRXh0cmFjdGlvbiA9ICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ/Cfp6og5byA5aeL5rWL6K+Vc2VsbGVyX2lk5o+Q5Y+W5Yqf6IO9Li4uJyk7DQogICAgICAgICAgICAgICAgICAgIFNlbGxlcklkRXh0cmFjdG9yLnRlc3RFeHRyYWN0aW9uKCk7DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIHdpbmRvdy5kZWJ1Z1NlbGxlcklkRXh0cmFjdG9yID0gKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBTZWxsZXJJZEV4dHJhY3Rvci5kZWJ1ZygpOw0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICB3aW5kb3cucmVmcmVzaFNlbGxlcklkRXh0cmFjdG9yID0gKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBTZWxsZXJJZEV4dHJhY3Rvci5mb3JjZVJlZnJlc2goKTsNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgLy8g5re75Yqg6Ieq5Yqo5L+u5aSN5rWL6K+V5Ye95pWwDQogICAgICAgICAgICAgICAgd2luZG93LnRlc3RTZWxsZXJJZEF1dG9SZXBhaXIgPSAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfwn5SnIOW8gOWni+a1i+ivlVNlbGxlciBJROiHquWKqOS/ruWkjeWKn+iDvS4uLicpOw0KICAgICAgICAgICAgICAgICAgICBTZWxsZXJJZEV4dHJhY3Rvci5zdGFydEF1dG9SZXBhaXIoKTsNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgd2luZG93LmdldFNlbGxlcklkU3RhdHVzID0gKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBTZWxsZXJJZEV4dHJhY3Rvci5nZXRTdGF0dXNSZXBvcnQoKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ/Cfk4ogU2VsbGVyIElE54q25oCB5oql5ZGKOicsIHN0YXR1cyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBzdGF0dXM7DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIC8vIOa3u+WKoOWDteWwuOacquivu+WkhOeQhua1i+ivleWHveaVsO+8iOaWueS+v+iwg+ivle+8iQ0KICAgICAgICAgICAgICAgIHdpbmRvdy50ZXN0Wm9tYmllVW5yZWFkRGV0ZWN0aW9uID0gKHVzZXJOYW1lID0gJ+a1i+ivleeUqOaItycsIG1lc3NhZ2VQcmV2aWV3ID0gJ+WvueaWuemAmui/h+OA",
        "jOa1i+ivleivvueoi+OAjei/m+WFpeengeS/oe+8jOW/q+WOu+iBlOezu+WQpycpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ/Cfp58g5byA5aeL5rWL6K+V5YO15bC45pyq6K+75qOA5rWL5Yqf6IO9Li4uJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGV0ZWN0aW9uID0gWm9tYmllVW5yZWFkTWFuYWdlci5kZXRlY3Rab21iaWVVbnJlYWQoDQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG51bGwsIC8vIOaXoOa2iOaBr+WGheWuuQ0KICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZVByZXZpZXcsDQogICAgICAgICAgICAgICAgICAgICAgICB0cnVlICAvLyDlt7Llj5HpgIHkuLvliqjor53mnK8NCiAgICAgICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5qOA5rWL57uT5p6cOicsIGRldGVjdGlvbik7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGRldGVjdGlvbi5pc1pvbWJpZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29vbGRvd25TdGF0dXMgPSBab21iaWVVbnJlYWRNYW5hZ2VyLmNoZWNrQ29vbGRvd24odXNlck5hbWUsIGRldGVjdGlvbi5maW5nZXJwcmludCk7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5Ya35Y2054q25oCBOicsIGNvb2xkb3duU3RhdHVzKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFjb29sZG93blN0YXR1cy5pbkNvb2xkb3duKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgWm9tYmllVW5yZWFkTWFuYWdlci5yZWNvcmRab21iaWVQcm9jZXNzKHVzZXJOYW1lLCBkZXRlY3Rpb24uZmluZ2VycHJpbnQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfinIUg5bey6K6w5b2V5YO15bC45pyq6K+75aSE55CGJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0cyA9IFpvbWJpZVVucmVhZE1hbmFnZXIuZ2V0U3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+e7n+iuoeS/oeaBrzonLCBzdGF0cyk7DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIHdpbmRvdy5kZWJ1Z1pvbWJpZVVucmVhZE1hbmFnZXIgPSAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfwn6efIOWDteWwuOacquivu+euoeeQhuWZqOiwg+ivleS/oeaBrzonKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+e8k+WtmOWkp+WwjzonLCBab21iaWVVbnJlYWRNYW5hZ2VyLmNhY2hlLnNpemUpOw0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn57uf6K6h5L+h5oGvOicsIFpvbWJpZVVucmVhZE1hbmFnZXIuZ2V0U3RhdHMoKSk7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfm",
        "iYDmnInorrDlvZU6JywgQXJyYXkuZnJvbShab21iaWVVbnJlYWRNYW5hZ2VyLmNhY2hlLmVudHJpZXMoKSkpOw0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICB3aW5kb3cuY2xlYXJab21iaWVVbnJlYWRSZWNvcmRzID0gKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBab21iaWVVbnJlYWRNYW5hZ2VyLnJlc2V0KCk7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfwn6efIOWDteWwuOacquivu+iusOW9leW3sua4heepuicpOw0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAvLyDliJ3lp4vljJbkvJror53orrDlv4bnrqHnkIblmagNCiAgICAgICAgICAgICAgICBDaGF0U2Vzc2lvbk1hbmFnZXIuaW5pdCgpOw0KDQogICAgICAgICAgICAgICAgLy8g5Yid5aeL5YyW6L+957KJ566h55CG5ZmoDQogICAgICAgICAgICAgICAgRm9sbG93VXBNYW5hZ2VyLmluaXQoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWIneWni+WMlueUqOaIt+eVjOmdog0KICAgICAgICAgICAgICAgIFVJTWFuYWdlci5pbml0KCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5bqU55So5Yid5aeL5YyW5a6M5oiQJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5bqU55So5Yid5aeL5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlkK/liqjoh6rliqjlm57lpI0NCiAgICAgICAgICovDQogICAgICAgIHN0YXJ0KCkgew0KICAgICAgICAgICAgLy8g5qOA5p+l5pyN5Yqh56uv5piv5ZCm5YWB6K646ISa5pys6L+Q6KGMDQogICAgICAgICAgICBpZiAoIVNlcnZlck1hbmFnZXIuaXNTY3JpcHRBbGxvd2VkKCkpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign8J+aqyDohJrmnKzlt7LooqvmnI3liqHnq6/npoHnlKjvvIzml6Dms5XlkK/liqgnKTsNCiAgICAgICAgICAgICAgICBHTV9ub3RpZmljYXRpb24oew0KICAgICAgICAgICAgICAgICAgICB0aXRsZTogQ09ORklHLkFQUF9OQU1FLA0KICAgICAgICAgICAgICAgICAgICB0ZXh0OiAn6ISa5pys5bey6KKr5byA5Y+R6ICF56aB55So77yM5peg5rOV5ZCv5YqoJywNCiAgICAgICAgICAgICAgICAgICAgdGltZW91dDogNTAwMA0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKHRoaXMuaXNSdW5uaW5nKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+iHquWKqOWbnuWkjeW3suWcqOi/kOihjCcpOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZW5hYmxlZCcsIHRydWUpOw0KICAgICAgICAgICAgICAgIHRoaXMuaXNSdW5u",
        "aW5nID0gdHJ1ZTsNCg0KICAgICAgICAgICAgICAgIC8vIOWIneWni+WMluWFg+e0oOeuoeeQhuWZqA0KICAgICAgICAgICAgICAgIEVsZW1lbnRNYW5hZ2VyLmluaXQoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWQr+WKqOa2iOaBr+ebkeWQrA0KICAgICAgICAgICAgICAgIGlmICghTWVzc2FnZUxpc3RlbmVyLmlzTGlzdGVuaW5nKSB7DQogICAgICAgICAgICAgICAgICAgIE1lc3NhZ2VMaXN0ZW5lci5zdGFydCgpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfoh6rliqjlm57lpI3lt7LlkK/liqjvvIjlt7LlkK/nlKhET03nqLPlrprmgKfkvJjljJbvvIknKTsNCg0KICAgICAgICAgICAgICAgIC8vIOeri+WNs+ajgOafpeS4gOasoeaWsOa2iOaBrw0KICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tGb3JOZXdNZXNzYWdlcygpOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5ZCv5Yqo6Ieq5Yqo5Zue5aSN5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLmlzUnVubmluZyA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdlbmFibGVkJywgZmFsc2UpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWBnOatouiHquWKqOWbnuWkjQ0KICAgICAgICAgKi8NCiAgICAgICAgc3RvcCgpIHsNCiAgICAgICAgICAgIGlmICghdGhpcy5pc1J1bm5pbmcpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6Ieq5Yqo5Zue5aSN5pyq5Zyo6L+Q6KGMJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdlbmFibGVkJywgZmFsc2UpOw0KICAgICAgICAgICAgICAgIHRoaXMuaXNSdW5uaW5nID0gZmFsc2U7DQoNCiAgICAgICAgICAgICAgICAvLyDlgZzmraLmtojmga/nm5HlkKwNCiAgICAgICAgICAgICAgICBNZXNzYWdlTGlzdGVuZXIuc3RvcCgpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+iHquWKqOWbnuWkjeW3suWBnOatoicpOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5YGc5q2i6Ieq5Yqo5Zue5aSN5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmlrDmtojmga/vvIjnlLFNZXNzYWdlTGlzdGVuZXLosIPnlKjvvIkNCiAgICAgICAgICogQHBhcmFtIHtBcnJheX0gZWxlbWVudHMg5YyF5ZCr5paw5raI5oGv55qE5YWD57Sg5YiX6KGoDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVOZXdNZXNzYWdlcyhlbGVtZW50cykgew0KICAgICAgICAg",
        "ICAgLy8g5qOA5p+l5pyN5Yqh56uv5piv5ZCm5YWB6K646ISa5pys6L+Q6KGMDQogICAgICAgICAgICBpZiAoIVNlcnZlck1hbmFnZXIuaXNTY3JpcHRBbGxvd2VkKCkpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign8J+aqyDohJrmnKzlt7LooqvmnI3liqHnq6/npoHnlKjvvIzlgZzmraLlpITnkIbmtojmga8nKTsNCiAgICAgICAgICAgICAgICB0aGlzLnN0b3AoKTsgLy8g6Ieq5Yqo5YGc5q2i6ISa5pysDQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoIXRoaXMuaXNSdW5uaW5nIHx8ICFDb25maWdNYW5hZ2VyLmdldCgnZW5hYmxlZCcpKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfoh6rliqjlm57lpI3mnKrlkK/nlKjvvIzot7Pov4flpITnkIYnKTsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmlLbliLDmlrDmtojmga/pgJrnn6UnLCB7IGNvdW50OiBlbGVtZW50cy5sZW5ndGggfSk7DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgYXdhaXQgTWVzc2FnZVByb2Nlc3Nvci5wcm9jZXNzTmV3TWVzc2FnZXMoZWxlbWVudHMpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WkhOeQhuaWsOa2iOaBr+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog5omL5Yqo5qOA5p+l5paw5raI5oGvDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBjaGVja0Zvck5ld01lc3NhZ2VzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWN0c1dpdGhNZXNzYWdlcyA9IFBhZ2VFbGVtZW50TWFuYWdlci5nZXRDb250YWN0c1dpdGhOZXdNZXNzYWdlcygpOw0KICAgICAgICAgICAgICAgIGlmIChjb250YWN0c1dpdGhNZXNzYWdlcy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmiYvliqjmo4Dmn6Xlj5HnjrDmlrDmtojmga8nLCB7IGNvdW50OiBjb250YWN0c1dpdGhNZXNzYWdlcy5sZW5ndGggfSk7DQogICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuaGFuZGxlTmV3TWVzc2FnZXMoY29udGFjdHNXaXRoTWVzc2FnZXMubWFwKGMgPT4gYy5lbGVtZW50KSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmiYvliqjmo4Dmn6XmnKrlj5HnjrDmlrDmtojmga8nKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5omL5Yqo5qOA5p+l5paw5raI5oGv5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0K",
        "DQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XlvZPliY3pobXpnaINCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBjaGVja1BhZ2UoKSB7DQogICAgICAgICAgICBjb25zdCB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjsNCiAgICAgICAgICAgIGNvbnN0IGlzQ29ycmVjdFBhZ2UgPSB1cmwuaW5jbHVkZXMoJ3Byby54aWFvaG9uZ3NodS5jb20vaW0vbXVsdGlDdXN0b21lclNlcnZpY2UnKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpobXpnaLmo4Dmn6UnLCB7DQogICAgICAgICAgICAgICAgdXJsLA0KICAgICAgICAgICAgICAgIGlzQ29ycmVjdFBhZ2UsDQogICAgICAgICAgICAgICAgdGl0bGU6IGRvY3VtZW50LnRpdGxlDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgcmV0dXJuIGlzQ29ycmVjdFBhZ2U7DQogICAgICAgIH0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog562J5b6F6aG16Z2i5YeG5aSH5bCx57uqDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyB3YWl0Rm9yUGFnZVJlYWR5KCkgew0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+etieW+hemhtemdouWFg+e0oOWKoOi9vS4uLicpOw0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOetieW+heWFs+mUruWFg+e0oOWHuueOsA0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLndhaXRGb3JFbGVtZW50KENPTkZJRy5TRUxFQ1RPUlMuY29udGFjdExpc3QsIDE1MDAwKTsNCg0KICAgICAgICAgICAgICAgIC8vIOmineWkluetieW+heehruS/nemhtemdouWujOWFqOWKoOi9vQ0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDIwMDApOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+mhtemdouWKoOi9veWujOaIkCcpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+mhtemdouWKoOi9vei2heaXticsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W6aG16Z2i54q25oCB5L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBnZXRQYWdlU3RhdHVzKCkgew0KICAgICAgICAgICAgY29uc3QgY29udGFjdHNXaXRoTWVzc2FnZXMgPSBQYWdlRWxlbWVudE1hbmFnZXIuZ2V0Q29udGFjdHNXaXRoTmV3TWVzc2FnZXMoKTsNCiAgICAgICAgICAgIGNvbnN0IGlucHV0Qm94ID0gUGFnZUVsZW1lbnRNYW5hZ2VyLmdldE1lc3NhZ2VJbnB1dEJveCgpOw0KICAgICAgICAgICAgY29uc3Qgc2VuZEJ1dHRvbiA9IFBhZ2VFbGVtZW50TWFuYWdlci5nZXRTZW5kQnV0dG9uKCk7DQoNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgaXNPbkNvcnJlY3RQYWdlOiB0aGlz",
        "LmNoZWNrUGFnZSgpLA0KICAgICAgICAgICAgICAgIGhhc05ld01lc3NhZ2VzOiBjb250YWN0c1dpdGhNZXNzYWdlcy5sZW5ndGggPiAwLA0KICAgICAgICAgICAgICAgIG5ld01lc3NhZ2VDb3VudDogY29udGFjdHNXaXRoTWVzc2FnZXMubGVuZ3RoLA0KICAgICAgICAgICAgICAgIGNhblNlbmRNZXNzYWdlOiAhIShpbnB1dEJveCAmJiBzZW5kQnV0dG9uKSwNCiAgICAgICAgICAgICAgICBjb250YWN0c1dpdGhNZXNzYWdlcw0KICAgICAgICAgICAgfTsNCiAgICAgICAgfQ0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5blupTnlKjnu5/orqHkv6Hmga8NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldFN0YXRzKCkgew0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICBhcHA6IHsNCiAgICAgICAgICAgICAgICAgICAgdmVyc2lvbjogQ09ORklHLlZFUlNJT04sDQogICAgICAgICAgICAgICAgICAgIGlzUnVubmluZzogdGhpcy5pc1J1bm5pbmcsDQogICAgICAgICAgICAgICAgICAgIHVwdGltZTogRGF0ZS5ub3coKSAtICh0aGlzLnN0YXJ0VGltZSB8fCBEYXRlLm5vdygpKQ0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgcGFnZTogdGhpcy5nZXRQYWdlU3RhdHVzKCksDQogICAgICAgICAgICAgICAgcHJvY2Vzc29yOiBNZXNzYWdlUHJvY2Vzc29yLmdldFN0YXRzKCksDQogICAgICAgICAgICAgICAgbGlzdGVuZXI6IHsNCiAgICAgICAgICAgICAgICAgICAgaXNMaXN0ZW5pbmc6IE1lc3NhZ2VMaXN0ZW5lci5pc0xpc3RlbmluZywNCiAgICAgICAgICAgICAgICAgICAgbGFzdENoZWNrVGltZTogTWVzc2FnZUxpc3RlbmVyLmxhc3RDaGVja1RpbWUNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIGRlZHVwbGljYXRvcjogTWVzc2FnZURlZHVwbGljYXRvci5nZXRTdGF0cygpLA0KICAgICAgICAgICAgICAgIGNvbmZpZzogQ29uZmlnTWFuYWdlci5nZXRBbGwoKQ0KICAgICAgICAgICAgfTsNCiAgICAgICAgfQ0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlr7zlh7rphY3nva4NCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIGV4cG9ydENvbmZpZygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgY29uZmlnID0gQ29uZmlnTWFuYWdlci5nZXRBbGwoKTsNCiAgICAgICAgICAgICAgICAvLyDnp7vpmaTmlY/mhJ/kv6Hmga8NCiAgICAgICAgICAgICAgICBjb25zdCBleHBvcnRDb25maWcgPSB7IC4uLmNvbmZpZyB9Ow0KICAgICAgICAgICAgICAgIGRlbGV0ZSBleHBvcnRDb25maWcuYXBpS2V5Ow0KDQogICAgICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGV4cG9ydENvbmZpZywgbnVsbCwgMik7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5a+85Ye66YWN572u5aSx",
        "6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlr7zlhaXphY3nva4NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbmZpZ0pzb24g6YWN572uSlNPTuWtl+espuS4sg0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGltcG9ydENvbmZpZyhjb25maWdKc29uKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpZyA9IEpTT04ucGFyc2UoY29uZmlnSnNvbik7DQoNCiAgICAgICAgICAgICAgICAvLyDpqozor4HphY3nva7moLzlvI8NCiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbmZpZyAhPT0gJ29iamVjdCcpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfphY3nva7moLzlvI/ml6DmlYgnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlr7zlhaXphY3nva7vvIjmjpLpmaTmlY/mhJ/kv6Hmga/vvIkNCiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhjb25maWcpLmZvckVhY2goa2V5ID0+IHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGtleSAhPT0gJ2FwaUtleScgJiYgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuaGFzT3duUHJvcGVydHkoa2V5KSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoa2V5LCBjb25maWdba2V5XSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfphY3nva7lr7zlhaXmiJDlip8nKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflr7zlhaXphY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDph43lkK/lupTnlKgNCiAgICAgICAgICovDQogICAgICAgIHJlc3RhcnQoKSB7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn6YeN5ZCv5bqU55SoLi4uJyk7DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5YGc5q2i5omA5pyJ5pyN5YqhDQogICAgICAgICAgICAgICAgdGhpcy5zdG9wKCk7DQogICAgICAgICAgICAgICAgTWVzc2FnZUxpc3RlbmVyLnN0b3AoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOa4heeQhueKtuaAgQ0KICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc2VkTWVzc2FnZXMuY2xlYXIoKTsNCiAgICAgICAgICAgICAgICBNZXNzYWdlRGVkdXBsaWNhdG9yLmNsZWFyKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDph43nva7oh6rliqjkv67lpI3ns7vn",
        "u58NCiAgICAgICAgICAgICAgICBBdXRvUmVwYWlyU3lzdGVtLnJlc2V0KCk7DQoNCiAgICAgICAgICAgICAgICAvLyDph43mlrDliJ3lp4vljJYNCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbml0KCk7DQogICAgICAgICAgICAgICAgfSwgMTAwMCk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfph43lkK/lupTnlKjlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhue9kee7nOaBouWkjQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlTmV0d29ya1Jlc3RvcmUoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflpITnkIbnvZHnu5zmgaLlpI3kuovku7YnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOmHjeaWsOWQr+eUqOebkeaOpw0KICAgICAgICAgICAgICAgIGlmICghdGhpcy5pc1J1bm5pbmcpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGFydCgpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeW+heWkhOeQhueahOa2iOaBrw0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNoZWNrRm9yTmV3TWVzc2FnZXMoKTsNCiAgICAgICAgICAgICAgICB9LCAyMDAwKTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WkhOeQhue9kee7nOaBouWkjeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG572R57uc5pat5byADQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVOZXR3b3JrTG9zcygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+WkhOeQhue9kee7nOaWreW8gOS6i+S7ticpOw0KDQogICAgICAgICAgICAgICAgLy8g5pqC5YGc6Ieq5Yqo5aSE55CG77yM5L2G5LiN5a6M5YWo5YGc5q2iDQogICAgICAgICAgICAgICAgdGhpcy5wYXVzZUF1dG9Qcm9jZXNzaW5nID0gdHJ1ZTsNCg0KICAgICAgICAgICAgICAgIC8vIOaYvuekuue9kee7nOaWreW8gOmAmuefpQ0KICAgICAgICAgICAgICAgIGlmIChVSU1hbmFnZXIgJiYgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24pIHsNCiAgICAgICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24oJ+e9kee7nOi/nuaOpeW3suaWreW8gO+8jOiHquWKqOWbnuWkjeW3suaaguWBnCcsICd3YXJuaW5nJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dl",
        "ci5lcnJvcign5aSE55CG572R57uc5pat5byA5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g572R57uc6K+35rGC55uR5o6n5ZmoIC0g5aKe5by654mI6Z2e5L615YWl5byP55uR5o6nDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBOZXR3b3JrTW9uaXRvciA9IHsNCiAgICAgICAgcmVxdWVzdHM6IFtdLA0KICAgICAgICBtYXhSZXF1ZXN0czogMTAwLA0KICAgICAgICBlbmFibGVkOiB0cnVlLA0KICAgICAgICBvcmlnaW5hbFhIUjogbnVsbCwNCiAgICAgICAgb3JpZ2luYWxGZXRjaDogbnVsbCwNCg0KICAgICAgICAvLyBBUEnnmb3lkI3ljZUgLSDov5nkuptBUEnkuI3kvJrooqvlubLmibANCiAgICAgICAgYXBpV2hpdGVsaXN0OiBbDQogICAgICAgICAgICAnL2ZhYXMvcHJvdG8vJywNCiAgICAgICAgICAgICcvanNvbi10by1wcm90by1qc29uLXRvLXByb3RvLycsDQogICAgICAgICAgICAnL2FwaS9zbnMvd2ViLycsDQogICAgICAgICAgICAnL2FwaS9zdG9yZS9qcGQvJywNCiAgICAgICAgICAgICcvcGhvZW5peC9hcGkvJw0KICAgICAgICBdLA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliJ3lp4vljJbnvZHnu5znm5HmjqcNCiAgICAgICAgICovDQogICAgICAgIGluaXQoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOS/neWtmOWOn+Wni+WHveaVsOW8leeUqA0KICAgICAgICAgICAgICAgIHRoaXMub3JpZ2luYWxYSFIgPSB3aW5kb3cuWE1MSHR0cFJlcXVlc3Q7DQogICAgICAgICAgICAgICAgdGhpcy5vcmlnaW5hbEZldGNoID0gd2luZG93LmZldGNoOw0KDQogICAgICAgICAgICAgICAgdGhpcy5zZXR1cE5vbkludHJ1c2l2ZVhIUk1vbml0b3JpbmcoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnNldHVwTm9uSW50cnVzaXZlRmV0Y2hNb25pdG9yaW5nKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflop7lvLrniYjnvZHnu5znm5Hmjqflmajlt7LliJ3lp4vljJYnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfnvZHnu5znm5HmjqflmajliJ3lp4vljJblpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuZW5hYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6VVUkzmmK/lkKblnKjnmb3lkI3ljZXkuK0NCiAgICAgICAgICovDQogICAgICAgIGlzV2hpdGVsaXN0ZWQodXJsKSB7DQogICAgICAgICAgICBpZiAoIXVybCkgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXBpV2hpdGVsaXN0LnNvbWUocGF0dGVybiA9PiB1cmwuaW5jbHVkZXMocGF0dGVy",
        "bikpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpnZ7kvrXlhaXlvI9YTUxIdHRwUmVxdWVzdOebkeaOpw0KICAgICAgICAgKi8NCiAgICAgICAgc2V0dXBOb25JbnRydXNpdmVYSFJNb25pdG9yaW5nKCkgew0KICAgICAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7DQogICAgICAgICAgICBjb25zdCBPcmlnaW5hbFhIUiA9IHRoaXMub3JpZ2luYWxYSFI7DQoNCiAgICAgICAgICAgIC8vIOS9v+eUqFByb3h55Luj55CG6ICM5LiN5piv55u05o6l5pu/5o2iDQogICAgICAgICAgICB3aW5kb3cuWE1MSHR0cFJlcXVlc3QgPSBuZXcgUHJveHkoT3JpZ2luYWxYSFIsIHsNCiAgICAgICAgICAgICAgICBjb25zdHJ1Y3QodGFyZ2V0LCBhcmdzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHhociA9IG5ldyB0YXJnZXQoLi4uYXJncyk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5Y+q5a+56Z2e55m95ZCN5Y2VQVBJ6L+b6KGM55uR5o6nDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsT3BlbiA9IHhoci5vcGVuOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBvcmlnaW5hbFNlbmQgPSB4aHIuc2VuZDsNCg0KICAgICAgICAgICAgICAgICAgICB4aHIub3BlbiA9IGZ1bmN0aW9uKG1ldGhvZCwgdXJsLCAuLi5vcGVuQXJncykgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5feGhzTW9uaXRvciA9IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6IG1ldGhvZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHVybCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydFRpbWU6IERhdGUubm93KCksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNXaGl0ZWxpc3RlZDogc2VsZi5pc1doaXRlbGlzdGVkKHVybCkNCiAgICAgICAgICAgICAgICAgICAgICAgIH07DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxPcGVuLmFwcGx5KHRoaXMsIFttZXRob2QsIHVybCwgLi4ub3BlbkFyZ3NdKTsNCiAgICAgICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgICAgICB4aHIuc2VuZCA9IGZ1bmN0aW9uKGRhdGEpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vbml0b3IgPSB0aGlzLl94aHNNb25pdG9yOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAobW9uaXRvciAmJiAhbW9uaXRvci5pc1doaXRlbGlzdGVkICYmIHNlbGYuZW5hYmxlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWPquWvuemdnueZveWQjeWNlUFQSea3u+WKoOebkeaOpw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxvYWRlbmRIYW5kbGVyID0gZnVuY3Rpb24oKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBlbmRUaW1lID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGR1cmF0aW9uID0gZW5kVGltZSAtIG1vbml0b3Iuc3RhcnRUaW1lOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobW9uaXRvci51cmwgJiYgbW9uaXRvci51cmwuaW5jbHVkZXMoJ3hpYW9ob25nc2h1LmNvbScpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5yZWNvcmRSZXF1ZXN0KHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiBtb25pdG9yLm1ldGhvZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBtb25pdG9yLnVybCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiB0aGlzLnN0YXR1cywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IGR1cmF0aW9uLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiB0aGlzLnN0YXR1cyA+PSAyMDAgJiYgdGhpcy5zdGF0dXMgPCAzMDAsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ1hIUicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaXRlbGlzdGVkOiBmYWxzZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ1hIUuebkeaOp+iusOW9leWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdsb2FkZW5kJywgbG9hZGVuZEhhbmRsZXIsIHsgb25jZTogdHJ1ZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsU2VuZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOw0KICAgICAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgICAgIHJldHVybiB4aHI7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmdnuS+teWFpeW8j0ZldGNo55uR5o6nDQogICAgICAgICAqLw0KICAgICAgICBzZXR1cE5vbkludHJ1c2l2ZUZldGNoTW9uaXRvcmluZygpIHsNCiAgICAg",
        "ICAgICAgIGNvbnN0IHNlbGYgPSB0aGlzOw0KICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxGZXRjaCA9IHRoaXMub3JpZ2luYWxGZXRjaDsNCg0KICAgICAgICAgICAgd2luZG93LmZldGNoID0gbmV3IFByb3h5KG9yaWdpbmFsRmV0Y2gsIHsNCiAgICAgICAgICAgICAgICBhcHBseSh0YXJnZXQsIHRoaXNBcmcsIGFyZ3MpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgW3VybCwgb3B0aW9ucyA9IHt9XSA9IGFyZ3M7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzV2hpdGVsaXN0ZWQgPSBzZWxmLmlzV2hpdGVsaXN0ZWQodXJsKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDlr7nnmb3lkI3ljZVBUEnnm7TmjqXosIPnlKjljp/lp4tmZXRjaO+8jOS4jea3u+WKoOS7u+S9leebkeaOpw0KICAgICAgICAgICAgICAgICAgICBpZiAoaXNXaGl0ZWxpc3RlZCB8fCAhc2VsZi5lbmFibGVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0LmFwcGx5KHRoaXNBcmcsIGFyZ3MpOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5hcHBseSh0aGlzQXJnLCBhcmdzKQ0KICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVuZFRpbWUgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkdXJhdGlvbiA9IGVuZFRpbWUgLSBzdGFydFRpbWU7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHVybCAmJiB1cmwuaW5jbHVkZXMoJ3hpYW9ob25nc2h1LmNvbScpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnJlY29yZFJlcXVlc3Qoew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogb3B0aW9ucy5tZXRob2QgfHwgJ0dFVCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IGR1cmF0aW9uLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHJlc3BvbnNlLm9rLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnRmV0Y2gnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaXRlbGlzdGVkOiBmYWxzZQ0KICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2FybignRmV0Y2jnm5HmjqforrDlvZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVuZFRpbWUgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkdXJhdGlvbiA9IGVuZFRpbWUgLSBzdGFydFRpbWU7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHVybCAmJiB1cmwuaW5jbHVkZXMoJ3hpYW9ob25nc2h1LmNvbScpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLnJlY29yZFJlcXVlc3Qoew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogb3B0aW9ucy5tZXRob2QgfHwgJ0dFVCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiBkdXJhdGlvbiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ0ZldGNoJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGl0ZWxpc3RlZDogZmFsc2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAocmVjb3JkRXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ0ZldGNo6ZSZ6K+v55uR5o6n6K6w5b2V5aSx6LSlJywgeyBlcnJvcjogcmVjb3JkRXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICB0aHJvdyBlcnJvcjsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorrDlvZXor7fmsYINCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHJlcXVlc3RJbmZvIOivt+axguS/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgcmVjb3JkUmVxdWVzdChyZXF1ZXN0SW5mbykgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3RzLnB1c2gocmVxdWVzdEluZm8pOw0KDQogICAgICAgICAgICAgICAgLy8g6ZmQ5Yi26K6w5b2V5pWw6YePDQogICAgICAgICAgICAgICAgaWYgKHRoaXMucmVxdWVzdHMubGVuZ3RoID4gdGhpcy5tYXhSZXF1ZXN0cykgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3RzLnNoaWZ0KCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6K6w5b2V5aSx6LSl55qE6K+35rGC77yI5L2G5LiN6K6w5b2V55m95ZCN5Y2VQVBJ55qE5aSx6LSl77yJDQogICAgICAgICAgICAgICAgaWYgKCFyZXF1ZXN0SW5mby5zdWNjZXNzICYmICFyZXF1ZXN0SW5mby53aGl0ZWxpc3RlZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign572R57uc6K+35rGC5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgLi4ucmVxdWVzdEluZm8sDQogICAgICAgICAgICAgICAgICAgICAgICBub3RlOiAn6Z2e55m95ZCN5Y2VQVBJ6K+35rGC5aSx6LSlJw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6K6w5b2V6K+35rGC5L+h5oGv5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W6K+35rGC57uf6K6hDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgdG90YWwgPSB0aGlzLnJlcXVlc3RzLmxlbmd0aDsNCiAgICAgICAgICAgICAgICBjb25zdCBzdWNjZXNzZnVsID0gdGhpcy5yZXF1ZXN0cy5maWx0ZXIociA9PiByLnN1Y2Nlc3MpLmxlbmd0aDsNCiAgICAgICAgICAgICAgICBjb25zdCBmYWlsZWQgPSB0b3RhbCAtIHN1Y2Nlc3NmdWw7DQogICAgICAgICAgICAgICAgY29uc3Qgd2hpdGVsaXN0ZWQgPSB0aGlzLnJlcXVlc3RzLmZpbHRlcihyID0+IHIud2hpdGVsaXN0ZWQpLmxlbmd0aDsNCiAgICAgICAgICAgICAgICBjb25zdCBhdmdEdXJhdGlvbiA9IHRvdGFsID4gMCA/DQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVxdWVzdHMucmVkdWNlKChzdW0sIHIpID0+IHN1bSArIHIu",
        "ZHVyYXRpb24sIDApIC8gdG90YWwgOiAwOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgdG90YWwsDQogICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NmdWwsDQogICAgICAgICAgICAgICAgICAgIGZhaWxlZCwNCiAgICAgICAgICAgICAgICAgICAgd2hpdGVsaXN0ZWQsDQogICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NSYXRlOiB0b3RhbCA+IDAgPyAoc3VjY2Vzc2Z1bCAvIHRvdGFsICogMTAwKS50b0ZpeGVkKDIpICsgJyUnIDogJzAlJywNCiAgICAgICAgICAgICAgICAgICAgYXZnRHVyYXRpb246IE1hdGgucm91bmQoYXZnRHVyYXRpb24pICsgJ21zJywNCiAgICAgICAgICAgICAgICAgICAgcmVjZW50UmVxdWVzdHM6IHRoaXMucmVxdWVzdHMuc2xpY2UoLTEwKSwNCiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogdGhpcy5lbmFibGVkDQogICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfojrflj5bnu5/orqHkv6Hmga/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiB7IGVycm9yOiAn57uf6K6h5L+h5oGv6I635Y+W5aSx6LSlJyB9Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5blpLHotKXnmoTor7fmsYINCiAgICAgICAgICogQHJldHVybnMge0FycmF5fQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0RmFpbGVkUmVxdWVzdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnJlcXVlc3RzLmZpbHRlcihyID0+ICFyLnN1Y2Nlc3MgJiYgIXIud2hpdGVsaXN0ZWQpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+iOt+WPluWksei0peivt+axguWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlkK/nlKgv56aB55So55uR5o6nDQogICAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gZW5hYmxlZCDmmK/lkKblkK/nlKgNCiAgICAgICAgICovDQogICAgICAgIHNldEVuYWJsZWQoZW5hYmxlZCkgew0KICAgICAgICAgICAgdGhpcy5lbmFibGVkID0gZW5hYmxlZDsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKGDnvZHnu5znm5Hmjqflt7Ike2VuYWJsZWQgPyAn5ZCv55SoJyA6ICfnpoHnlKgnfWApOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmgaLlpI3ljp/lp4vnvZHnu5zlh73mlbANCiAgICAgICAgICovDQogICAgICAgIHJlc3RvcmUoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLm9yaWdpbmFsWEhSKSB7DQogICAgICAgICAgICAgICAgICAg",
        "IHdpbmRvdy5YTUxIdHRwUmVxdWVzdCA9IHRoaXMub3JpZ2luYWxYSFI7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmICh0aGlzLm9yaWdpbmFsRmV0Y2gpIHsNCiAgICAgICAgICAgICAgICAgICAgd2luZG93LmZldGNoID0gdGhpcy5vcmlnaW5hbEZldGNoOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn572R57uc55uR5o6n5bey5oGi5aSN5Y6f5aeL54q25oCBJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5oGi5aSN5Y6f5aeL572R57uc5Ye95pWw5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K+K5pat572R57uc54q25oCBDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBkaWFnbm9zZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc3RhdHMgPSB0aGlzLmdldFN0YXRzKCk7DQogICAgICAgICAgICAgICAgY29uc3QgZmFpbGVkUmVxdWVzdHMgPSB0aGlzLmdldEZhaWxlZFJlcXVlc3RzKCk7DQogICAgICAgICAgICAgICAgY29uc3QgcmVjZW50RXJyb3JzID0gZmFpbGVkUmVxdWVzdHMuc2xpY2UoLTUpOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBzdGF0cy5mYWlsZWQgPiAwID8gJ3dhcm5pbmcnIDogJ2hlYWx0aHknLA0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBzdGF0cy5mYWlsZWQgPiAwID8NCiAgICAgICAgICAgICAgICAgICAgICAgIGDmo4DmtYvliLAke3N0YXRzLmZhaWxlZH3kuKrlpLHotKXor7fmsYJgIDogJ+e9kee7nOeKtuaAgeato+W4uCcsDQogICAgICAgICAgICAgICAgICAgIHN0YXRzLA0KICAgICAgICAgICAgICAgICAgICByZWNlbnRFcnJvcnMsDQogICAgICAgICAgICAgICAgICAgIHJlY29tbWVuZGF0aW9uczogdGhpcy5nZXRSZWNvbW1lbmRhdGlvbnMoc3RhdHMsIGZhaWxlZFJlcXVlc3RzKQ0KICAgICAgICAgICAgICAgIH07DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign572R57uc6K+K5pat5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4geyBzdGF0dXM6ICdlcnJvcicsIG1lc3NhZ2U6ICfor4rmlq3lpLHotKUnIH07DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluS/ruWkjeW7uuiurg0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gc3RhdHMg57uf6K6h5L+h5oGvDQogICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IGZhaWxlZFJlcXVlc3RzIOWksei0peivt+axgg0KICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9DQogICAg",
        "ICAgICAqLw0KICAgICAgICBnZXRSZWNvbW1lbmRhdGlvbnMoc3RhdHMsIGZhaWxlZFJlcXVlc3RzKSB7DQogICAgICAgICAgICBjb25zdCByZWNvbW1lbmRhdGlvbnMgPSBbXTsNCg0KICAgICAgICAgICAgaWYgKHN0YXRzLmZhaWxlZCA+IDUpIHsNCiAgICAgICAgICAgICAgICByZWNvbW1lbmRhdGlvbnMucHVzaCgn5qOA5rWL5Yiw5aSa5Liq572R57uc6K+35rGC5aSx6LSl77yM5bu66K6u5qOA5p+l572R57uc6L+e5o6lJyk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmIChmYWlsZWRSZXF1ZXN0cy5zb21lKHIgPT4gci5zdGF0dXMgPT09IDQwMCkpIHsNCiAgICAgICAgICAgICAgICByZWNvbW1lbmRhdGlvbnMucHVzaCgn5qOA5rWL5YiwNDAw6ZSZ6K+v77yM5Y+v6IO95piv6K+35rGC5Y+C5pWw6Zeu6aKYJyk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmIChmYWlsZWRSZXF1ZXN0cy5zb21lKHIgPT4gci5zdGF0dXMgPT09IDApKSB7DQogICAgICAgICAgICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+ajgOa1i+WIsOe9kee7nOi/nuaOpemUmeivr++8jOW7uuiuruajgOafpemYsueBq+Wimeiuvue9ricpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoc3RhdHMuYXZnRHVyYXRpb24gPiA1MDAwKSB7DQogICAgICAgICAgICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+e9kee7nOivt+axguWTjeW6lOi+g+aFou+8jOW7uuiuruajgOafpee9kee7nOi0qOmHjycpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gcmVjb21tZW5kYXRpb25zOw0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g5aKe5by654mI5YWo5bGA6ZSZ6K+v5aSE55CG5ZKM5YW85a655oCn566h55CGDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBHbG9iYWxFcnJvckhhbmRsZXIgPSB7DQogICAgICAgIGVycm9yQ291bnQ6IDAsDQogICAgICAgIG1heEVycm9yczogNTAsDQogICAgICAgIGNocm9tZUV4dGVuc2lvbkVycm9yczogMCwNCg0KICAgICAgICBpbml0KCkgew0KICAgICAgICAgICAgdGhpcy5zZXR1cEVycm9ySGFuZGxpbmcoKTsNCiAgICAgICAgICAgIHRoaXMuc2V0dXBDaHJvbWVFeHRlbnNpb25Db21wYXRpYmlsaXR5KCk7DQogICAgICAgICAgICB0aGlzLnNldHVwTmV0d29ya0Vycm9ySGFuZGxpbmcoKTsNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5aKe5by654mI5YWo5bGA6ZSZ6K+v5aSE55CG5Zmo5bey5Yid5aeL5YyWJyk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiuvue9ruWfuuehgOmUmeivr+WkhOeQhg0KICAgICAgICAgKi8NCiAgICAgICAgc2V0dXBFcnJvckhhbmRsaW5nKCkgew0KICAgICAgICAgICAgLy8g5o2V6I635pyq5aSE55CG55qE6ZSZ6K+vDQogICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcign",
        "ZXJyb3InLCAoZXZlbnQpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmVycm9yQ291bnQrKzsNCg0KICAgICAgICAgICAgICAgIC8vIOWMuuWIhuiEmuacrOmUmeivr+WSjOmhtemdoumUmeivrw0KICAgICAgICAgICAgICAgIGNvbnN0IGlzU2NyaXB0RXJyb3IgPSBldmVudC5maWxlbmFtZSAmJg0KICAgICAgICAgICAgICAgICAgICAoZXZlbnQuZmlsZW5hbWUuaW5jbHVkZXMoJ3VzZXIuanMnKSB8fCBldmVudC5maWxlbmFtZS5pbmNsdWRlcygndGFtcGVybW9ua2V5JykpOw0KDQogICAgICAgICAgICAgICAgaWYgKGlzU2NyaXB0RXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfohJrmnKzplJnor68nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBldmVudC5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICAgICAgZmlsZW5hbWU6IGV2ZW50LmZpbGVuYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgbGluZW5vOiBldmVudC5saW5lbm8sDQogICAgICAgICAgICAgICAgICAgICAgICBjb2xubzogZXZlbnQuY29sbm8sDQogICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXZlbnQuZXJyb3IgPyBldmVudC5lcnJvci5zdGFjayA6IG51bGwsDQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc2NyaXB0Jw0KICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDohJrmnKzplJnor6/kuI3pmLvmraLpobXpnaLov5DooYwNCiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6aG16Z2i6ZSZ6K+v77yI6Z2e6ISa5pys77yJJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZXZlbnQubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGVuYW1lOiBldmVudC5maWxlbmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdwYWdlJw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g5o2V6I635pyq5aSE55CG55qEUHJvbWlzZeaLkue7nQ0KICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3VuaGFuZGxlZHJlamVjdGlvbicsIChldmVudCkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMuZXJyb3JDb3VudCsrOw0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5piv6ISa5pys55u45YWz55qEUHJvbWlzZeaLkue7nQ0KICAgICAgICAgICAgICAgIGNvbnN0IGlzU2NyaXB0UHJvbWlzZSA9IGV2ZW50LnJlYXNvbiAmJg0KICAgICAgICAgICAgICAgICAgICAoZXZlbnQucmVhc29uLnN0YWNrICYmIGV2ZW50LnJlYXNvbi5zdGFjay5pbmNsdWRlcygndXNlci5qcycpKTsNCg0KICAgICAgICAgICAgICAgIGlmIChpc1NjcmlwdFByb21pc2UpIHsNCiAg"，
        "ICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfohJrmnKxQcm9taXNl5ouS57udJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmVhc29uOiBldmVudC5yZWFzb24sDQogICAgICAgICAgICAgICAgICAgICAgICBwcm9taXNlOiBldmVudC5wcm9taXNlLA0KICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3NjcmlwdC1wcm9taXNlJw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6aG16Z2iUHJvbWlzZeaLkue7ne+8iOmdnuiEmuacrO+8iScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlYXNvbjogZXZlbnQucmVhc29uID8gZXZlbnQucmVhc29uLnRvU3RyaW5nKCkgOiAnVW5rbm93bicsDQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAncGFnZS1wcm9taXNlJw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICogQ2hyb21l5omp5bGV5YW85a655oCn5aSE55CGDQogICAgICAgICAqLw0KICAgICAgICBzZXR1cENocm9tZUV4dGVuc2lvbkNvbXBhdGliaWxpdHkoKSB7DQogICAgICAgICAgICAvLyDmo4DmtYtDaHJvbWXmianlsZXnjq/looMNCiAgICAgICAgICAgIGlmICh0eXBlb2YgY2hyb21lICE9PSAndW5kZWZpbmVkJyAmJiBjaHJvbWUucnVudGltZSkgew0KICAgICAgICAgICAgICAgIC8vIOWkhOeQhnJ1bnRpbWUubGFzdEVycm9yDQogICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxTZW5kTWVzc2FnZSA9IGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlOw0KICAgICAgICAgICAgICAgIGlmIChvcmlnaW5hbFNlbmRNZXNzYWdlKSB7DQogICAgICAgICAgICAgICAgICAgIGNocm9tZS5ydW50aW1lLnNlbmRNZXNzYWdlID0gZnVuY3Rpb24oLi4uYXJncykgew0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBvcmlnaW5hbFNlbmRNZXNzYWdlLmFwcGx5KHRoaXMsIGFyZ3MpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+lcnVudGltZS5sYXN0RXJyb3INCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNocm9tZS5ydW50aW1lLmxhc3RFcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR2xvYmFsRXJyb3JIYW5kbGVyLmNocm9tZUV4dGVuc2lvbkVycm9ycysrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ0Nocm9tZeaJqeWxlemUmeivrycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg"，
        "ICAgICAgICBlcnJvcjogY2hyb21lLnJ1bnRpbWUubGFzdEVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Nocm9tZS1leHRlbnNpb24nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDApOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdDaHJvbWXmianlsZXmtojmga/lj5HpgIHlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnY2hyb21lLWV4dGVuc2lvbi1zZW5kJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IGVycm9yOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOebkeWQrOaJqeWxlea2iOaBrw0KICAgICAgICAgICAgICAgIGlmIChjaHJvbWUucnVudGltZS5vbk1lc3NhZ2UpIHsNCiAgICAgICAgICAgICAgICAgICAgY2hyb21lLnJ1bnRpbWUub25NZXNzYWdlLmFkZExpc3RlbmVyKChtZXNzYWdlLCBzZW5kZXIsIHNlbmRSZXNwb25zZSkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDnoa7kv53kuI3lubLmibDlhbbku5bmianlsZXnmoTmtojmga8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobWVzc2FnZSAmJiBtZXNzYWdlLnNvdXJjZSA9PT0gJ3hocy1hdXRvLXJlcGx5Jykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aUtuWIsOaJqeWxlea2iOaBrycsIHsgbWVzc2FnZSwgc2VuZGVyIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7IC8vIOS4jeWkhOeQhu+8jOiuqeWFtuS7luebkeWQrOWZqOWkhOeQhg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflpITnkIbmianlsZXmtojmga/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQog"，
        "ICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOe9kee7nOmUmeivr+WkhOeQhg0KICAgICAgICAgKi8NCiAgICAgICAgc2V0dXBOZXR3b3JrRXJyb3JIYW5kbGluZygpIHsNCiAgICAgICAgICAgIC8vIOebkeWQrOe9kee7nOeKtuaAgeWPmOWMlg0KICAgICAgICAgICAgaWYgKCdvbkxpbmUnIGluIG5hdmlnYXRvcikgew0KICAgICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvbmxpbmUnLCAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfnvZHnu5zov57mjqXlt7LmgaLlpI0nKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVOZXR3b3JrUmVzdG9yZSgpOw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29mZmxpbmUnLCAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfnvZHnu5zov57mjqXlt7Lmlq3lvIAnKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVOZXR3b3JrTG9zcygpOw0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbnvZHnu5zmgaLlpI0NCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZU5ldHdvcmtSZXN0b3JlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDph43mlrDlkK/nlKjnvZHnu5znm5HmjqcNCiAgICAgICAgICAgICAgICBpZiAoTmV0d29ya01vbml0b3IgJiYgIU5ldHdvcmtNb25pdG9yLmVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTmV0d29ya01vbml0b3Iuc2V0RW5hYmxlZCh0cnVlKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDpgJrnn6XlupTnlKjnvZHnu5zlt7LmgaLlpI0NCiAgICAgICAgICAgICAgICBpZiAod2luZG93LlhIU0F1dG9SZXBseSAmJiB3aW5kb3cuWEhTQXV0b1JlcGx5LmhhbmRsZU5ldHdvcmtSZXN0b3JlKSB7DQogICAgICAgICAgICAgICAgICAgIHdpbmRvdy5YSFNBdXRvUmVwbHkuaGFuZGxlTmV0d29ya1Jlc3RvcmUoKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5aSE55CG572R57uc5oGi5aSN5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG572R57uc5pat5byADQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVOZXR3b3JrTG9zcygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5pqC5YGc572R57uc55uR5o6nDQogICAgICAgICAgICAgICAgaWYgKE5ldHdvcmtNb25pdG9yICYmIE5ldHdvcmtNb25pdG9yLmVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTmV0d29ya01v"，
        "bml0b3Iuc2V0RW5hYmxlZChmYWxzZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6YCa55+l5bqU55So572R57uc5bey5pat5byADQogICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5YSFNBdXRvUmVwbHkgJiYgd2luZG93LlhIU0F1dG9SZXBseS5oYW5kbGVOZXR3b3JrTG9zcykgew0KICAgICAgICAgICAgICAgICAgICB3aW5kb3cuWEhTQXV0b1JlcGx5LmhhbmRsZU5ldHdvcmtMb3NzKCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WkhOeQhue9kee7nOaWreW8gOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPlumUmeivr+e7n+iuoQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0RXJyb3JTdGF0cygpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgdG90YWxFcnJvcnM6IHRoaXMuZXJyb3JDb3VudCwNCiAgICAgICAgICAgICAgICBjaHJvbWVFeHRlbnNpb25FcnJvcnM6IHRoaXMuY2hyb21lRXh0ZW5zaW9uRXJyb3JzLA0KICAgICAgICAgICAgICAgIG5ldHdvcmtPbmxpbmU6IG5hdmlnYXRvci5vbkxpbmUsDQogICAgICAgICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkNCiAgICAgICAgICAgIH07DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmHjee9rumUmeivr+iuoeaVsA0KICAgICAgICAgKi8NCiAgICAgICAgcmVzZXRFcnJvckNvdW50KCkgew0KICAgICAgICAgICAgdGhpcy5lcnJvckNvdW50ID0gMDsNCiAgICAgICAgICAgIHRoaXMuY2hyb21lRXh0ZW5zaW9uRXJyb3JzID0gMDsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfplJnor6/orqHmlbDlt7Lph43nva4nKTsNCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOiHquWKqOS/ruWkjeWSjOiviuaWreezu+e7nw0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgQXV0b1JlcGFpclN5c3RlbSA9IHsNCiAgICAgICAgcmVwYWlyQXR0ZW1wdHM6IDAsDQogICAgICAgIG1heFJlcGFpckF0dGVtcHRzOiAzLA0KICAgICAgICBsYXN0UmVwYWlyVGltZTogMCwNCiAgICAgICAgcmVwYWlyQ29vbGRvd246IDMwMDAwLCAvLyAzMOenkuWGt+WNtOaXtumXtA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4DmtYvlubbkv67lpI3nvZHnu5zpl67popgNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGRldGVjdEFuZFJlcGFpcigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICBpZiAo"，
        "bm93IC0gdGhpcy5sYXN0UmVwYWlyVGltZSA8IHRoaXMucmVwYWlyQ29vbGRvd24pIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfkv67lpI3ns7vnu5/lhrfljbTkuK3vvIzot7Pov4fmo4DmtYsnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGRpYWdub3NpcyA9IE5ldHdvcmtNb25pdG9yLmRpYWdub3NlKCk7DQogICAgICAgICAgICAgICAgaWYgKGRpYWdub3Npcy5zdGF0dXMgPT09ICd3YXJuaW5nJyB8fCBkaWFnbm9zaXMuc3RhdHVzID09PSAnZXJyb3InKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmo4DmtYvliLDnvZHnu5zpl67popjvvIzlsJ3or5Xoh6rliqjkv67lpI0nLCBkaWFnbm9zaXMpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5wZXJmb3JtUmVwYWlyKGRpYWdub3Npcyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6Ieq5Yqo5L+u5aSN5qOA5rWL5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaJp+ihjOS/ruWkjeaTjeS9nA0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZGlhZ25vc2lzIOiviuaWree7k+aenA0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgcGVyZm9ybVJlcGFpcihkaWFnbm9zaXMpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLnJlcGFpckF0dGVtcHRzID49IHRoaXMubWF4UmVwYWlyQXR0ZW1wdHMpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S/ruWkjeWwneivleasoeaVsOW3sui+vuS4iumZkO+8jOWIh+aNouWIsOWuieWFqOaooeW8jycpOw0KICAgICAgICAgICAgICAgIHRoaXMuZW5hYmxlU2FmZU1vZGUoKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMucmVwYWlyQXR0ZW1wdHMrKzsNCiAgICAgICAgICAgIHRoaXMubGFzdFJlcGFpclRpbWUgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKGDlvIDlp4vnrKwke3RoaXMucmVwYWlyQXR0ZW1wdHN95qyh5L+u5aSN5bCd6K+VYCk7DQoNCiAgICAgICAgICAgICAgICAvLyDkv67lpI3nrZbnlaUx77ya6YeN572u572R57uc55uR5o6nDQogICAgICAgICAgICAgICAgaWYgKGRpYWdub3Npcy5zdGF0cy5mYWlsZWQgPiA1KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfph43nva7nvZHnu5znm5HmjqflmagnKTsNCiAgICAgICAgICAgICAgICAgICAgTmV0d29ya01vbml0b3Iuc2V0RW5h"，
        "YmxlZChmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDEwMDApOw0KICAgICAgICAgICAgICAgICAgICBOZXR3b3JrTW9uaXRvci5zZXRFbmFibGVkKHRydWUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOS/ruWkjeetlueVpTLvvJrmuIXnkIbplJnor6/nirbmgIENCiAgICAgICAgICAgICAgICBpZiAoR2xvYmFsRXJyb3JIYW5kbGVyLmVycm9yQ291bnQgPiAxMCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6YeN572u6ZSZ6K+v6K6h5pWwJyk7DQogICAgICAgICAgICAgICAgICAgIEdsb2JhbEVycm9ySGFuZGxlci5yZXNldEVycm9yQ291bnQoKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkv67lpI3nrZbnlaUz77ya6YeN5ZCv5bqU55So5qC45b+D5Yqf6IO9DQogICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5YSFNBdXRvUmVwbHkgJiYgIXdpbmRvdy5YSFNBdXRvUmVwbHkuaXNSdW5uaW5nKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfph43lkK/lupTnlKjmoLjlv4Plip/og70nKTsNCiAgICAgICAgICAgICAgICAgICAgYXdhaXQgd2luZG93LlhIU0F1dG9SZXBseS5yZXN0YXJ0KCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+S/ruWkjeaTjeS9nOWujOaIkCcpOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5L+u5aSN5pON5L2c5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWQr+eUqOWuieWFqOaooeW8jw0KICAgICAgICAgKi8NCiAgICAgICAgZW5hYmxlU2FmZU1vZGUoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCflkK/nlKjlronlhajmqKHlvI8nKTsNCg0KICAgICAgICAgICAgICAgIC8vIOemgeeUqOe9kee7nOebkeaOpw0KICAgICAgICAgICAgICAgIE5ldHdvcmtNb25pdG9yLnNldEVuYWJsZWQoZmFsc2UpOw0KDQogICAgICAgICAgICAgICAgLy8g5oGi5aSN5Y6f5aeL572R57uc5Ye95pWwDQogICAgICAgICAgICAgICAgTmV0d29ya01vbml0b3IucmVzdG9yZSgpOw0KDQogICAgICAgICAgICAgICAgLy8g5pi+56S65a6J5YWo5qih5byP6YCa55+lDQogICAgICAgICAgICAgICAgaWYgKFVJTWFuYWdlciAmJiBVSU1hbmFnZXIuc2hvd05vdGlmaWNhdGlvbikgew0KICAgICAgICAgICAgICAgICAgICBVSU1hbmFnZXIuc2hvd05vdGlmaWNhdGlvbigNCiAgICAgICAgICAgICAgICAgICAgICAgICflt7LlkK/nlKjlronlhajmqKHlvI/vvIznvZHnu5znm5Hmjqflt7LnpoHnlKjvvIxBSeWbnuWkjeWK"，
        "n+iDveS7jeWPr+ato+W4uOS9v+eUqCcsDQogICAgICAgICAgICAgICAgICAgICAgICAnd2FybmluZycNCiAgICAgICAgICAgICAgICAgICAgKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5a6J5YWo5qih5byP5bey5ZCv55SoJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5ZCv55So5a6J5YWo5qih5byP5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6YeN572u5L+u5aSN54q25oCBDQogICAgICAgICAqLw0KICAgICAgICByZXNldCgpIHsNCiAgICAgICAgICAgIHRoaXMucmVwYWlyQXR0ZW1wdHMgPSAwOw0KICAgICAgICAgICAgdGhpcy5sYXN0UmVwYWlyVGltZSA9IDA7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn6Ieq5Yqo5L+u5aSN57O757uf5bey6YeN572uJyk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgY29uc3QgUGVyZm9ybWFuY2VNb25pdG9yID0gew0KICAgICAgICBtZXRyaWNzOiB7DQogICAgICAgICAgICBhcGlDYWxsczogMCwNCiAgICAgICAgICAgIGFwaVN1Y2Nlc3NSYXRlOiAwLA0KICAgICAgICAgICAgYXZlcmFnZVJlc3BvbnNlVGltZTogMCwNCiAgICAgICAgICAgIG1lc3NhZ2VzUHJvY2Vzc2VkOiAwLA0KICAgICAgICAgICAgZXJyb3JzQ291bnQ6IDANCiAgICAgICAgfSwNCg0KICAgICAgICBzdGFydFRpbWU6IERhdGUubm93KCksDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiusOW9lUFQSeiwg+eUqA0KICAgICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHN1Y2Nlc3Mg5piv5ZCm5oiQ5YqfDQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSByZXNwb25zZVRpbWUg5ZON5bqU5pe26Ze0DQogICAgICAgICAqLw0KICAgICAgICByZWNvcmRBUElDYWxsKHN1Y2Nlc3MsIHJlc3BvbnNlVGltZSkgew0KICAgICAgICAgICAgdGhpcy5tZXRyaWNzLmFwaUNhbGxzKys7DQogICAgICAgICAgICBpZiAoc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgIHRoaXMubWV0cmljcy5hdmVyYWdlUmVzcG9uc2VUaW1lID0NCiAgICAgICAgICAgICAgICAgICAgKHRoaXMubWV0cmljcy5hdmVyYWdlUmVzcG9uc2VUaW1lICsgcmVzcG9uc2VUaW1lKSAvIDI7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHRoaXMubWV0cmljcy5lcnJvcnNDb3VudCsrOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0aGlzLm1ldHJpY3MuYXBpU3VjY2Vzc1JhdGUgPQ0KICAgICAgICAgICAgICAgICgodGhpcy5tZXRyaWNzLmFwaUNhbGxzIC0gdGhpcy5tZXRyaWNzLmVycm9yc0NvdW50KSAvIHRoaXMubWV0cmljcy5hcGlDYWxscykgKiAxMDA7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiusOW9lea2iOaBr+WkhOeQhg0KICAgICAgICAgKi8NCiAgICAg"，
        "ICAgcmVjb3JkTWVzc2FnZVByb2Nlc3NlZCgpIHsNCiAgICAgICAgICAgIHRoaXMubWV0cmljcy5tZXNzYWdlc1Byb2Nlc3NlZCsrOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorrDlvZXnvZHnu5zplJnor68NCiAgICAgICAgICovDQogICAgICAgIHJlY29yZE5ldHdvcmtFcnJvcigpIHsNCiAgICAgICAgICAgIHRoaXMubWV0cmljcy5lcnJvcnNDb3VudCsrOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmgKfog73miqXlkYoNCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldFJlcG9ydCgpIHsNCiAgICAgICAgICAgIGNvbnN0IHVwdGltZSA9IERhdGUubm93KCkgLSB0aGlzLnN0YXJ0VGltZTsNCiAgICAgICAgICAgIGNvbnN0IG5ldHdvcmtTdGF0cyA9IE5ldHdvcmtNb25pdG9yLmdldFN0YXRzKCk7DQogICAgICAgICAgICBjb25zdCBlcnJvclN0YXRzID0gR2xvYmFsRXJyb3JIYW5kbGVyLmdldEVycm9yU3RhdHMoKTsNCg0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICB1cHRpbWU6IE1hdGguZmxvb3IodXB0aW1lIC8gMTAwMCksIC8vIOenkg0KICAgICAgICAgICAgICAgIC4uLnRoaXMubWV0cmljcywNCiAgICAgICAgICAgICAgICBtZXNzYWdlc1BlckhvdXI6IE1hdGguZmxvb3IoKHRoaXMubWV0cmljcy5tZXNzYWdlc1Byb2Nlc3NlZCAvIHVwdGltZSkgKiAzNjAwMDAwKSwNCiAgICAgICAgICAgICAgICBuZXR3b3JrU3RhdHMsDQogICAgICAgICAgICAgICAgZXJyb3JTdGF0cywNCiAgICAgICAgICAgICAgICBoZWFsdGhTY29yZTogdGhpcy5jYWxjdWxhdGVIZWFsdGhTY29yZSgpLA0KICAgICAgICAgICAgICAgIGF1dG9SZXBhaXJBdHRlbXB0czogQXV0b1JlcGFpclN5c3RlbS5yZXBhaXJBdHRlbXB0cw0KICAgICAgICAgICAgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K6h566X5YGl5bq35YiG5pWwDQogICAgICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IDAtMTAw55qE5YGl5bq35YiG5pWwDQogICAgICAgICAqLw0KICAgICAgICBjYWxjdWxhdGVIZWFsdGhTY29yZSgpIHsNCiAgICAgICAgICAgIGxldCBzY29yZSA9IDEwMDsNCg0KICAgICAgICAgICAgLy8gQVBJ5oiQ5Yqf546H5b2x5ZONDQogICAgICAgICAgICBpZiAodGhpcy5tZXRyaWNzLmFwaUNhbGxzID4gMCkgew0KICAgICAgICAgICAgICAgIHNjb3JlIC09ICgxMDAgLSB0aGlzLm1ldHJpY3MuYXBpU3VjY2Vzc1JhdGUpICogMC4zOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDplJnor6/mlbDph4/lvbHlk40NCiAgICAgICAgICAgIGlmICh0aGlzLm1ldHJpY3MuZXJyb3JzQ291bnQgPiAxMCkgc2NvcmUgLT0gMjA7DQogICAgICAgICAgICBpZiAoR2xvYmFsRXJyb3JIYW5kbGVyLmVycm9yQ291bnQgPiAxMCkgc2NvcmUgLT0gMTU7DQoNCiAgICAgICAgICAgIC8vIOS/ruWkjeWwneivleW9"，
        "seWTjQ0KICAgICAgICAgICAgaWYgKEF1dG9SZXBhaXJTeXN0ZW0ucmVwYWlyQXR0ZW1wdHMgPiAwKSB7DQogICAgICAgICAgICAgICAgc2NvcmUgLT0gQXV0b1JlcGFpclN5c3RlbS5yZXBhaXJBdHRlbXB0cyAqIDU7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOe9kee7nOeKtuaAgeW9seWTjQ0KICAgICAgICAgICAgaWYgKCFuYXZpZ2F0b3Iub25MaW5lKSBzY29yZSAtPSAzMDsNCg0KICAgICAgICAgICAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKDEwMCwgTWF0aC5yb3VuZChzY29yZSkpKTsNCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOW6lOeUqOWQr+WKqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCiAgICAvLyDliJ3lp4vljJblhajlsYDplJnor6/lpITnkIblkozmgKfog73nm5HmjqcNCiAgICBHbG9iYWxFcnJvckhhbmRsZXIuaW5pdCgpOw0KICAgIFBlcmZvcm1hbmNlTW9uaXRvci5zdGFydFRpbWUgPSBEYXRlLm5vdygpOw0KDQogICAgLy8g5Yid5aeL5YyW6ZSZ6K+v5o6o6YCB566h55CG5ZmoDQogICAgRXJyb3JOb3RpZmljYXRpb25NYW5hZ2VyLmluaXQoKTsNCg0KICAgIC8vIOWIneWni+WMlue9kee7nOebkeaOp+WZqA0KICAgIE5ldHdvcmtNb25pdG9yLmluaXQoKTsNCg0KICAgIC8vIOWIm+W7uuWFqOWxgOW6lOeUqOWunuS+iw0KICAgIHdpbmRvdy5YSFNBdXRvUmVwbHkgPSBuZXcgWEhTQXV0b1JlcGx5QXBwKCk7DQogICAgd2luZG93LlhIU0F1dG9SZXBseS51aSA9IFVJTWFuYWdlcjsNCiAgICB3aW5kb3cuWEhTQXV0b1JlcGx5LnBlcmZvcm1hbmNlID0gUGVyZm9ybWFuY2VNb25pdG9yOw0KICAgIHdpbmRvdy5YSFNBdXRvUmVwbHkuc3RhcnRUaW1lID0gRGF0ZS5ub3coKTsNCg0KICAgIC8vIOa3u+WKoOWFqOWxgOW/q+aNt+mUruaUr+aMgQ0KICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZSkgPT4gew0KICAgICAgICB0cnkgew0KICAgICAgICAgICAgLy8gQ3RybCtTaGlmdCtYIOWIh+aNoumdouadv+aYvuekug0KICAgICAgICAgICAgaWYgKGUuY3RybEtleSAmJiBlLnNoaWZ0S2V5ICYmIGUua2V5ID09PSAnWCcpIHsNCiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7DQogICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnRvZ2dsZSgpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyBDdHJsK1NoaWZ0K1Mg5b+r6YCf5ZCv5YqoL+WBnOatog0KICAgICAgICAgICAgaWYgKGUuY3RybEtleSAmJiBlLnNoaWZ0S2V5ICYmIGUua2V5ID09PSAnUycpIHsNCiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7DQogICAgICAgICAgICAgICAgVUlNYW5hZ2VyLmhhbmRsZVRvZ2dsZSgpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyBDdHJsK1NoaWZ0K1Ig6YeN5ZCv5bqU55SoDQogICAgICAgICAgICBpZiAoZS5j"，
        "dHJsS2V5ICYmIGUuc2hpZnRLZXkgJiYgZS5rZXkgPT09ICdSJykgew0KICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsNCiAgICAgICAgICAgICAgICBpZiAoY29uZmlybSgn56Gu5a6a6KaB6YeN5ZCv5bqU55So5ZCX77yfJykpIHsNCiAgICAgICAgICAgICAgICAgICAgd2luZG93LlhIU0F1dG9SZXBseS5yZXN0YXJ0KCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyBDdHJsK1NoaWZ0K0Qg5YiH5o2i6LCD6K+V5qih5byPDQogICAgICAgICAgICBpZiAoZS5jdHJsS2V5ICYmIGUuc2hpZnRLZXkgJiYgZS5rZXkgPT09ICdEJykgew0KICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkZWJ1Z01vZGUgPSAhQ29uZmlnTWFuYWdlci5nZXQoJ2RlYnVnTW9kZScpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdkZWJ1Z01vZGUnLCBkZWJ1Z01vZGUpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKGDosIPor5XmqKHlvI/lt7Ike2RlYnVnTW9kZSA/ICflvIDlkK8nIDogJ+WFs+mXrSd9YCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+W/q+aNt+mUruWkhOeQhuWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgIH0NCiAgICB9KTsNCg0KICAgIC8vIOmhtemdouWKoOi9veWujOaIkOWQjuWIneWni+WMlg0KICAgIGNvbnN0IGluaXRBcHAgPSBhc3luYyAoKSA9PiB7DQogICAgICAgIHRyeSB7DQogICAgICAgICAgICBhd2FpdCB3aW5kb3cuWEhTQXV0b1JlcGx5LmluaXQoKTsNCg0KICAgICAgICAgICAgLy8g5bCGVUlNYW5hZ2Vy6K6+5Li65YWo5bGA5Y+v6K6/6ZeuDQogICAgICAgICAgICB3aW5kb3cuVUlNYW5hZ2VyID0gVUlNYW5hZ2VyOw0KDQogICAgICAgICAgICAvLyDliJ3lp4vljJbmnI3liqHnq6/nrqHnkIblmagNCiAgICAgICAgICAgIFNlcnZlck1hbmFnZXIuaW5pdCgpOw0KDQogICAgICAgICAgICAvLyDmmL7npLrmrKLov47kv6Hmga8NCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn46JIOWwj+e6ouS5pkFJ6Ieq5Yqo5Zue5aSN5bel5YW35bey5bCx57uq77yBJywgew0KICAgICAgICAgICAgICAgIHZlcnNpb246IENPTkZJRy5WRVJTSU9OLA0KICAgICAgICAgICAgICAgIHNlcnZlclVybDogQ09ORklHLlNFUlZFUi5iYXNlVXJsLA0KICAgICAgICAgICAgICAgIHVzZXJJZDogU2VydmVyTWFuYWdlci51c2VySWQsDQogICAgICAgICAgICAgICAgc2hvcnRjdXRzOiB7DQogICAgICAgICAgICAgICAgICAgICdDdHJsK1NoaWZ0K1gnOiAn5YiH5o2i6Z2i5p2/JywNCiAgICAgICAgICAgICAgICAgICAgJ0N0cmwrU2hpZnQrUyc6ICflkK/liqgv5YGc5q2iJywNCiAgICAgICAgICAgICAgICAgICAgJ0N0cmwrU2hpZnQrUic6ICfph43lkK/lupTnlKgnLA0KICAgICAgICAgICAgICAg"，
        "ICAgICAnQ3RybCtTaGlmdCtEJzogJ+iwg+ivleaooeW8jycNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g5qOA5p+l6YWN572u5a6M5pW05oCnDQogICAgICAgICAgICBjb25zdCBhcGlLZXkgPSBDb25maWdNYW5hZ2VyLmdldCgnYXBpS2V5Jyk7DQogICAgICAgICAgICBpZiAoIWFwaUtleSkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfimqDvuI8g6K+35YWI6YWN572uQVBJ5a+G6ZKl5omN6IO95L2/55So6Ieq5Yqo5Zue5aSN5Yqf6IO9Jyk7DQogICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnRvZ2dsZSgpOyAvLyDoh6rliqjmmL7npLrphY3nva7pnaLmnb8NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5bu26L+f6I635Y+W5YWs5ZGK77yM6YG/5YWN5LiO5Yid5aeL5YyW5Yay56qBDQogICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICBTZXJ2ZXJNYW5hZ2VyLmdldEFubm91bmNlbWVudHMoKTsNCiAgICAgICAgICAgIH0sIDUwMDApOw0KDQogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+W6lOeUqOWIneWni+WMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICdsb2FkaW5nJykgew0KICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgaW5pdEFwcCk7DQogICAgfSBlbHNlIHsNCiAgICAgICAgaW5pdEFwcCgpOw0KICAgIH0NCg0KICAgIC8vIOWumuacn+abtOaWsFVJ54q25oCB5ZKM5oCn6IO955uR5o6nDQogICAgc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgICB0cnkgew0KICAgICAgICAgICAgaWYgKFVJTWFuYWdlci5pc1Zpc2libGUgJiYgVUlNYW5hZ2VyLnBhbmVsKSB7DQogICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnVwZGF0ZVVJKCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOavj+WIhumSn+iusOW9leS4gOasoeaAp+iDveaVsOaNrg0KICAgICAgICAgICAgaWYgKERhdGUubm93KCkgJSA2MDAwMCA8IDUwMDApIHsNCiAgICAgICAgICAgICAgICBjb25zdCByZXBvcnQgPSBQZXJmb3JtYW5jZU1vbml0b3IuZ2V0UmVwb3J0KCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmgKfog73miqXlkYonLCByZXBvcnQpOw0KDQogICAgICAgICAgICAgICAgLy8g5YGl5bq35YiG5pWw6L+H5L2O5pe26Kem5Y+R6Ieq5Yqo5L+u5aSNDQogICAgICAgICAgICAgICAgaWYgKHJlcG9ydC5oZWFsdGhTY29yZSA8IDYwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfns7vnu5/lgaXlurfliIbmlbDov4fkvY7vvIzop6blj5Hoh6rliqjkv67lpI0nLCB7IGhlYWx0aFNjb3JlOiByZXBvcnQuaGVhbHRoU2NvcmUgfSk7DQogICAgICAgICAgICAgICAgICAgIEF1dG9SZXBhaXJTeXN0"，
        "ZW0uZGV0ZWN0QW5kUmVwYWlyKCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmr48zMOenkuajgOa1i+S4gOasoee9kee7nOmXrumimA0KICAgICAgICAgICAgaWYgKERhdGUubm93KCkgJSAzMDAwMCA8IDUwMDApIHsNCiAgICAgICAgICAgICAgICBBdXRvUmVwYWlyU3lzdGVtLmRldGVjdEFuZFJlcGFpcigpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+Wumuacn+abtOaWsOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgIH0NCiAgICB9LCA1MDAwKTsNCg0KICAgIC8vIOmhtemdouWNuOi9veaXtua4heeQhg0KICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdiZWZvcmV1bmxvYWQnLCAoKSA9PiB7DQogICAgICAgIHRyeSB7DQogICAgICAgICAgICBpZiAod2luZG93LlhIU0F1dG9SZXBseSAmJiB3aW5kb3cuWEhTQXV0b1JlcGx5LmlzUnVubmluZykgew0KICAgICAgICAgICAgICAgIHdpbmRvdy5YSFNBdXRvUmVwbHkuc3RvcCgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgTWVzc2FnZUxpc3RlbmVyLnN0b3AoKTsNCg0KICAgICAgICAgICAgLy8g5riF55CG5pyN5Yqh56uv566h55CG5ZmoDQogICAgICAgICAgICBTZXJ2ZXJNYW5hZ2VyLmRlc3Ryb3koKTsNCg0KICAgICAgICAgICAgLy8g5riF55CGVUnotYTmupANCiAgICAgICAgICAgIGlmIChVSU1hbmFnZXIubWluaUZsb2F0KSB7DQogICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnJlbW92ZU1pbmlGbG9hdCgpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuaW5mbygn5bqU55So5bey5riF55CGJyk7DQogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICBjb25zb2xlLmVycm9yKCfmuIXnkIblpLHotKU6JywgZXJyb3IpOw0KICAgICAgICB9DQogICAgfSk7DQoNCiAgICBMb2dnZXIuaW5mbygn8J+agCDlsI/nuqLkuaZBSeiHquWKqOWbnuWkjeW3peWFt+iEmuacrOWKoOi9veWujOaIkCcsIHsNCiAgICAgICAgdmVyc2lvbjogQ09ORklHLlZFUlNJT04sDQogICAgICAgIGxvYWRUaW1lOiBEYXRlLm5vdygpIC0gUGVyZm9ybWFuY2VNb25pdG9yLnN0YXJ0VGltZSArICdtcycsDQogICAgICAgIGZlYXR1cmVzOiB7DQogICAgICAgICAgICBuZXR3b3JrTW9uaXRvcmluZzogTmV0d29ya01vbml0b3IuZW5hYmxlZCwNCiAgICAgICAgICAgIGF1dG9SZXBhaXI6IHRydWUsDQogICAgICAgICAgICBjaHJvbWVFeHRlbnNpb25Db21wYXRpYmlsaXR5OiB0cnVlLA0KICAgICAgICAgICAgYXBpV2hpdGVsaXN0OiBOZXR3b3JrTW9uaXRvci5hcGlXaGl0ZWxpc3QubGVuZ3RoLA0KICAgICAgICAgICAgc2VydmVySW50ZWdyYXRpb246IENPTkZJRy5TRVJWRVIuZW5hYmxlZCwNCiAgICAgICAgICAgIHNlcnZlclVybDogQ09ORklHLlNFUlZFUi5iYXNlVXJsDQogICAgICAgIH0NCiAgICB9"，
        "KTsNCg0KICAgIC8vIOaJp+ihjOWQr+WKqOWQjueahOezu+e7n+ajgOafpQ0KICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICB0cnkgew0KICAgICAgICAgICAgY29uc3QgZGlhZ25vc2lzID0gTmV0d29ya01vbml0b3IuZGlhZ25vc2UoKTsNCiAgICAgICAgICAgIGNvbnN0IGhlYWx0aFNjb3JlID0gUGVyZm9ybWFuY2VNb25pdG9yLmNhbGN1bGF0ZUhlYWx0aFNjb3JlKCk7DQoNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5SNIOezu+e7n+WQr+WKqOajgOafpeWujOaIkCcsIHsNCiAgICAgICAgICAgICAgICBuZXR3b3JrU3RhdHVzOiBkaWFnbm9zaXMuc3RhdHVzLA0KICAgICAgICAgICAgICAgIGhlYWx0aFNjb3JlOiBoZWFsdGhTY29yZSwNCiAgICAgICAgICAgICAgICBuZXR3b3JrTW9uaXRvckVuYWJsZWQ6IE5ldHdvcmtNb25pdG9yLmVuYWJsZWQsDQogICAgICAgICAgICAgICAgYXV0b1JlcGFpclJlYWR5OiB0cnVlDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g5aaC5p6c5YGl5bq35YiG5pWw6L+H5L2O77yM5o+Q56S655So5oi3DQogICAgICAgICAgICBpZiAoaGVhbHRoU2NvcmUgPCA3MCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfimqDvuI8g57O757uf5YGl5bq35YiG5pWw6L6D5L2O77yM5bu66K6u6L+Q6KGM6K+K5pat5qOA5p+lJywgew0KICAgICAgICAgICAgICAgICAgICBoZWFsdGhTY29yZTogaGVhbHRoU2NvcmUsDQogICAgICAgICAgICAgICAgICAgIHN1Z2dlc3Rpb246ICfmjIkgQ3RybCtTaGlmdCtYIOaJk+W8gOaOp+WItumdouadv++8jOeCueWHuyLpobXpnaLor4rmlq0i5oyJ6ZKuJw0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflkK/liqjmo4Dmn6XlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICB9DQogICAgfSwgMzAwMCk7DQoNCn0pKCk7DQo="
    ];
    
    // 组装编码数据
    var encodedData = encodedChunks.join('');
    
    // 解码并执行
    try {
        console.log('🔓 开始UTF-8安全解码...');
        var decodedCode = _decode(encodedData);
        
        // 基本验证
        if (!decodedCode || decodedCode.length < 100) {
            throw new Error('解码失败或结果过短');
        }
        
        console.log('✅ UTF-8解码成功，代码长度:', decodedCode.length);
        
        // 验证中文字符是否正确
        if (decodedCode.indexOf('全局配置') > -1) {
            console.log('✅ 中文字符解码正确');
        } else {
            console.warn('⚠️ 中文字符可能解码异常');
        }
        
        // 检查代码开头
        var trimmedCode = decodedCode.trim();
        if (trimmedCode.startsWith('(function()')) {
            console.log('✅ 代码结构正确');
        } else {
            console.warn('⚠️ 代码结构异常，开头:', JSON.stringify(trimmedCode.substring(0, 50)));
        }
        
        // 执行代码
        eval(decodedCode);
        
        console.log('✅ 脚本执行成功');
        
    } catch(e) {
        console.error('❌ 脚本执行失败:', e);
        
        // 详细调试信息
        if (typeof decodedCode === 'string') {
            console.log('📊 解码结果统计:');
            console.log('  - 长度:', decodedCode.length);
            console.log('  - 前100字符:', JSON.stringify(decodedCode.substring(0, 100)));
            console.log('  - 后100字符:', JSON.stringify(decodedCode.substring(decodedCode.length - 100)));
            
            // 检查UTF-8字符
            var chineseChars = decodedCode.match(/[\u4e00-\u9fff]/g);
            if (chineseChars) {
                console.log('  - 中文字符数量:', chineseChars.length);
                console.log('  - 中文字符示例:', chineseChars.slice(0, 10));
            }
            
            // 尝试语法检查
            try {
                new Function(decodedCode);
                console.log('  - 语法检查: 通过');
            } catch(syntaxError) {
                console.log('  - 语法检查失败:', syntaxError.message);
            }
        }
    }
})();

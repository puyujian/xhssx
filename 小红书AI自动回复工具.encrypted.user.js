// ==UserScript==
// @name         小红书AI自动回复工具
// @namespace    http://tampermonkey.net/
// @version      1.1.0
// @description  基于FastGPT API的小红书私信自动回复工具
// @author       迪迦yyds
// @match        https://pro.xiaohongshu.com/im/multiCustomerService*
// @grant        GM_setValue
// @grant        GM_getValue
// @grant        GM_xmlhttpRequest
// @grant        GM_notification
// @grant        GM_download
// @grant        unsafeWindow
// @run-at       document-idle
// @updateURL
// @downloadURL
// ==/UserScript==

var _decode = function(encodedData) {
    try {
        // 使用现代浏览器的TextDecoder确保UTF-8正确解码
        if (typeof TextDecoder !== 'undefined') {
            // 现代方法：使用TextDecoder
            var binaryString = atob(encodedData);
            var bytes = new Uint8Array(binaryString.length);
            for (var i = 0; i < binaryString.length; i++) {
                bytes[i] = binaryString.charCodeAt(i);
            }
            var decoder = new TextDecoder('utf-8');
            return decoder.decode(bytes);
        } else {
            // 兼容方法：手动UTF-8解码
            var binaryString = atob(encodedData);
            var result = '';
            var i = 0;
            while (i < binaryString.length) {
                var byte1 = binaryString.charCodeAt(i++);
                if (byte1 < 0x80) {
                    // ASCII字符
                    result += String.fromCharCode(byte1);
                } else if ((byte1 & 0xE0) === 0xC0) {
                    // 2字节UTF-8字符
                    var byte2 = binaryString.charCodeAt(i++);
                    result += String.fromCharCode(((byte1 & 0x1F) << 6) | (byte2 & 0x3F));
                } else if ((byte1 & 0xF0) === 0xE0) {
                    // 3字节UTF-8字符
                    var byte2 = binaryString.charCodeAt(i++);
                    var byte3 = binaryString.charCodeAt(i++);
                    result += String.fromCharCode(((byte1 & 0x0F) << 12) | ((byte2 & 0x3F) << 6) | (byte3 & 0x3F));
                } else {
                    // 跳过不支持的字符
                    result += '?';
                }
            }
            return result;
        }
    } catch(e) {
        console.error('UTF-8解码失败:', e);
        return '';
    }
};

(function() {
    'use strict';
    
    // Base64编码数据（UTF-8安全）
    var encodedChunks = [
        "DQoNCihmdW5jdGlvbigpIHsNCiAgICAndXNlIHN0cmljdCc7DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOWFqOWxgOmFjee9ruWSjOW4uOmHjw0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgQ09ORklHID0gew0KICAgICAgICAvLyDlupTnlKjkv6Hmga8NCiAgICAgICAgQVBQX05BTUU6ICflsI/nuqLkuaZBSeiHquWKqOWbnuWkjeW3peWFtycsDQogICAgICAgIFZFUlNJT046ICcxLjEuMCcsDQoNCiAgICAgICAgLy8g5pyN5Yqh56uv6YWN572u77yI5byA5Y+R6ICF5o6n5Yi277yJDQogICAgICAgIFNFUlZFUjogew0KICAgICAgICAgICAgYmFzZVVybDogJ2h0dHBzOi8veGhzLnBlaS5lZScsDQogICAgICAgICAgICBjaGVja0ludGVydmFsOiAzMDAwMCwgLy8gMzDnp5Lmo4Dmn6XkuIDmrKENCiAgICAgICAgICAgIGhlYXJ0YmVhdEludGVydmFsOiA2MDAwMCwgLy8gNjDnp5Llv4Pot7PkuIDmrKENCiAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsIC8vIOacjeWKoeerr+WKn+iDveW8gOWFsw0KICAgICAgICAgICAgbWF4UmV0cmllczogMywNCiAgICAgICAgICAgIHRpbWVvdXQ6IDEwMDAwIC8vIDEw56eS6LaF5pe2DQogICAgICAgIH0sDQoNCiAgICAgICAgLy8g6buY6K6k6YWN572uDQogICAgICAgIERFRkFVTFRfU0VUVElOR1M6IHsNCiAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlLA0KICAgICAgICAgICAgYXBpS2V5OiAnJywNCiAgICAgICAgICAgIGFwaVVybDogJ2h0dHBzOi8vYXBpLmZhc3RncHQuaW4vYXBpL3YxL2NoYXQvY29tcGxldGlvbnMnLA0KICAgICAgICAgICAgcmVwbHlEZWxheTogMzAwMCwNCiAgICAgICAgICAgIG1heFJldHJpZXM6IDMsDQogICAgICAgICAgICBkZWJ1Z01vZGU6IGZhbHNlLA0KICAgICAgICAgICAgYXV0b1JlcGx5UHJvbXB0OiAn5L2g5piv5LiA5Liq5Y+L5aW955qE5a6i5pyN5Yqp5omL77yM6K+35qC55o2u55So5oi355qE5raI5oGv57uZ5Ye65ZCI6YCC55qE5Zue5aSN44CC5Zue5aSN6KaB566A5rSB44CB56S86LKM44CB5pyJ5biu5Yqp44CCJywNCg0KICAgICAgICAgICAgLy8g5pm66IO96I635a6i6YWN572uDQogICAgICAgICAgICBhY3F1aXNpdGlvbkVuYWJsZWQ6IGZhbHNlLA0KICAgICAgICAgICAgYWNxdWlzaXRpb25UcmlnZ2VyUm91bmQ6IDIsDQogICAgICAgICAgICBhY3F1aXNpdGlvbkZhbGxiYWNrUm91bmQ6IDMsDQogICAgICAgICAgICBhY3F1aXNpdGlvbktleXdvcmRzOiAn5Lu35qC8LOS6huinoyzotK3kubAs5ZKo6K+iLOivpue7hizmgI7kuYjmoLcs5aSa5bCR6ZKxLOiBlOezuyzlvq7kv6EnLA0KICAgICAgICAgICAgYWNxdWlzaXRpb25Ub29sVHlwZTogJ+eVmei1hOWNoScsDQogICAgICAgICAgICBhY3F1aXNpdGlvblRvb2xOYW1lOiAnJywNCiAgICAgICAgICAgIGFjcXVpc2l0aW9uRGVsYXk6IDIwMDAsDQogICAgICAgICAgICBhY3F1aXNpdGlvbkFsbG93UmVwZWF0OiBmYWxz",
        "ZSwNCg0KICAgICAgICAgICAgLy8g6buR5ZCN5Y2V6YWN572uDQogICAgICAgICAgICBibGFja2xpc3Q6IFtdLCAgICAgICAgICAgICAgICAvLyDpu5HlkI3ljZXliJfooagNCiAgICAgICAgICAgIGJsYWNrbGlzdEVuYWJsZWQ6IHRydWUsICAgICAgIC8vIOm7keWQjeWNleWKn+iDveW8gOWFsw0KICAgICAgICAgICAgYXV0b0RldGVjdEJsb2NrZWQ6IHRydWUsICAgICAgLy8g6Ieq5Yqo5qOA5rWL6KKr5ouJ6buR5Yqf6IO9DQoNCiAgICAgICAgICAgIC8vIOS8muivneiusOW/humFjee9rg0KICAgICAgICAgICAgc2Vzc2lvbk1lbW9yeUVuYWJsZWQ6IHRydWUsICAgLy8g5Lya6K+d6K6w5b+G5Yqf6IO95byA5YWzDQogICAgICAgICAgICBzZXNzaW9uRXhwaXJlRGF5czogNywgICAgICAgICAvLyDkvJror53ov4fmnJ/lpKnmlbANCiAgICAgICAgICAgIG1heFNlc3Npb25zOiAxMDAsICAgICAgICAgICAgIC8vIOacgOWkp+S8muivneaVsOmHjw0KDQogICAgICAgICAgICAvLyDoh6rliqjov73nsonphY3nva4NCiAgICAgICAgICAgIGZvbGxvd1VwRW5hYmxlZDogZmFsc2UsICAgICAgIC8vIOi/veeyieWKn+iDveW8gOWFsw0KICAgICAgICAgICAgZm9sbG93VXBTY2FuRGF5czogMywgICAgICAgICAvLyDmiavmj4/lh6DlpKnlhoXnmoTnlKjmiLcNCiAgICAgICAgICAgIGZvbGxvd1VwSW50ZXJ2YWw6IDI0LCAgICAgICAgLy8g5Zue6K6/6Ze06ZqU77yI5bCP5pe277yJDQogICAgICAgICAgICBmb2xsb3dVcE1heENvdW50OiAyLCAgICAgICAgIC8vIOacgOWkp+Wbnuiuv+asoeaVsA0KICAgICAgICAgICAgZm9sbG93VXBBdXRvUmVjb3JkOiB0cnVlLCAgICAvLyDoh6rliqjorrDlvZXmlrDnlKjmiLfvvIjml6DpnIDmiYvliqjmiavmj4/vvIkNCiAgICAgICAgICAgIGZvbGxvd1VwQXV0b1JlY29yZERlbGF5OiA1LCAgLy8g6Ieq5Yqo6K6w5b2V5bu26L+f77yI56eS77yJDQogICAgICAgICAgICBmb2xsb3dVcFRlbXBsYXRlOiAn5oKo5aW9e+eUqOaIt+WQjX3vvIzmiJHmmK/mgqjnmoTkuJPlsZ7pob7pl67vvIznnIvliLDmgqjkuYvliY3lr7nmiJHku6znmoTkuqflk4HmnInlhbTotqPjgIJcXG5cXG7miJHmg7Pkuobop6PkuIDkuIvmgqjnjrDlnKjnmoTpnIDmsYLmg4XlhrXvvIzmmK/lkKbov5jpnIDopoHov5vkuIDmraXnmoTlkqjor6LlkozmnI3liqHvvJ9cXG5cXG7lpoLmnpzmlrnkvr/nmoTor53vvIzlj6/ku6Xmt7vliqDmiJHnmoTlvq7kv6Hov5vooYzor6bnu4bmsp/pgJrvvIzmiJHkvJrkuLrmgqjmj5Dkvpvmm7TkuJPkuJrnmoTlu7rorq7lkozkvJjmg6Dkv6Hmga/jgILmnJ/lvoXmgqjnmoTlm57lpI3vvIHwn5iKJywNCiAgICAgICAgICAgIGZvbGxvd1VwVGVtcGxhdGVzOiBbDQogICAgICAgICAgICAgICAgJ+aCqOWlvXvnlKjmiLflkI1977yM5oiR5piv5oKo55qE5LiT5bGe6aG+6Zeu77yM55yL5Yiw5oKo5LmL5YmN5a+55oiR5Lus55qE5Lqn5ZOB5pyJ5YW06Laj44CCXFxuXFxu5oiR5oOz5LqG6Kej5LiA5LiL5oKo546w5Zyo",
        "55qE6ZyA5rGC5oOF5Ya177yM5piv5ZCm6L+Y6ZyA6KaB6L+b5LiA5q2l55qE5ZKo6K+i5ZKM5pyN5Yqh77yfXFxuXFxu5aaC5p6c5pa55L6/55qE6K+d77yM5Y+v5Lul5re75Yqg5oiR55qE5b6u5L+h6L+b6KGM6K+m57uG5rKf6YCa77yM5oiR5Lya5Li65oKo5o+Q5L6b5pu05LiT5Lia55qE5bu66K6u5ZKM5LyY5oOg5L+h5oGv44CC5pyf5b6F5oKo55qE5Zue5aSN77yB8J+YiicsDQogICAgICAgICAgICAgICAgJ+aCqOWlvXvnlKjmiLflkI1977yB5oSf6LCi5oKo5LmL5YmN5a+55oiR5Lus5Lqn5ZOB55qE5YWz5rOo44CCXFxuXFxu5oiR5rOo5oSP5Yiw5oKo5Y+v6IO96L+Y5Zyo6ICD6JmR5Lit77yM5oOz5YaN5qyh5Li65oKo5LuL57uN5LiA5LiL5oiR5Lus55qE5LyY5Yq/5ZKM5pyA5paw5LyY5oOg44CCXFxuXFxu5aaC5p6c5oKo5pyJ5Lu75L2V55aR6Zeu5oiW6ZyA6KaB5pu06K+m57uG55qE6LWE5paZ77yM6ZqP5pe25Y+v5Lul6IGU57O75oiR77yM5oiR5Lya56ys5LiA5pe26Ze05Li65oKo6Kej562U44CC5pyf5b6F5LiO5oKo6L+b5LiA5q2l5Lqk5rWB77yBJywNCiAgICAgICAgICAgICAgICAn5Lqy54ix55qEe+eUqOaIt+WQjX3vvIzluIzmnJvmgqjkuIDliIfpg73lpb3vvIFcXG5cXG7miJHmg7Pot5/ov5vkuIDkuIvmgqjkuYvliY3lkqjor6LnmoTkuqflk4HvvIznnIvnnIvmmK/lkKbov5jmnInku4DkuYjlj6/ku6XluK7liqnmgqjnmoTlnLDmlrnjgIJcXG5cXG7miJHku6zmnIDov5Hmjqjlh7rkuobkuIDkupvmlrDnmoTmnI3liqHlkozkvJjmg6DmlL/nrZbvvIznm7jkv6HkvJrlr7nmgqjmnInmiYDluK7liqnjgILlpoLmnpzmlrnkvr/nmoTor53vvIzmiJHku6zlj6/ku6XlronmjpLkuIDkuKrnroDnn63nmoTpgJror53or6bnu4bmsp/pgJrjgIInDQogICAgICAgICAgICBdLA0KICAgICAgICAgICAgZm9sbG93VXBUZW1wbGF0ZU1vZGU6ICdzZXF1ZW5jZScsIC8vIHNlcXVlbmNlOiDmjInmrKHluo8sIHJhbmRvbTog6ZqP5py6LCBhaTogQUnnlJ/miJANCiAgICAgICAgICAgIGZvbGxvd1VwRGVlcExlYWRzQ2hlY2s6IGZhbHNlLCAgICAvLyDmmK/lkKblkK/nlKjmt7HluqbnlZnlrqLotYTmo4Dmn6XvvIjovoPmhaLkvYbmm7Tlh4bnoa7vvIkNCiAgICAgICAgICAgIGZvbGxvd1VwQXBpTGVhZHNDaGVjazogdHJ1ZSwgICAgICAvLyDmmK/lkKblkK/nlKhBUEnnlZnlrqLotYTmo4Dmn6XvvIjlv6vpgJ/kuJTlh4bnoa7vvIkNCiAgICAgICAgICAgIGZvbGxvd1VwUmVhbHRpbWVMZWFkc0NoZWNrOiB0cnVlLCAvLyDmmK/lkKblkK/nlKjlvLrliLblrp7ml7bnlZnlrqLotYTmo4DmtYvvvIjkuI3kvp3otZbnvJPlrZjvvIkNCiAgICAgICAgICAgIGZvbGxvd1VwTGVhZHNDYWNoZVRpbWU6IDMwLCAgICAgICAvLyDnlZnlrqLotYTnirbmgIHnvJPlrZjml7bpl7TvvIjnp5LvvIww6KGo56S656aB55So57yT5a2Y77yJDQogICAgICAgICAgICBmb2xsb3dVcFNjaGVkdWxlSG91cnM6IFs5LCAxNCwgMThdLCAvLyDlm57orr/ml7bpl7Tn",
        "grnvvIgyNOWwj+aXtuWItu+8iQ0KICAgICAgICAgICAgZm9sbG93VXBSYW5kb21EZWxheTogdHJ1ZSwgICAvLyDlkK/nlKjpmo/mnLrlu7bov58NCiAgICAgICAgICAgIGZvbGxvd1VwTWluRGVsYXk6IDMwLCAgICAgICAgLy8g5pyA5bCP5bu26L+f77yI56eS77yJDQogICAgICAgICAgICBmb2xsb3dVcE1heERlbGF5OiAzMDAsICAgICAgIC8vIOacgOWkp+W7tui/n++8iOenku+8iQ0KICAgICAgICAgICAgZm9sbG93VXBEYWlseUxpbWl0OiAxMCwgICAgICAvLyDmr4/ml6Xlm57orr/kuIrpmZANCiAgICAgICAgICAgIGZvbGxvd1VwQmF0Y2hTaXplOiAxMCwgICAgICAgLy8g5Y2V5qyh5om56YeP5aSE55CG5pWw6YePDQogICAgICAgICAgICBmb2xsb3dVcE1hbnVhbEJhdGNoU2l6ZTogMjAsIC8vIOaJi+WKqOaooeW8j+aJuemHj+WkhOeQhuaVsOmHjw0KICAgICAgICAgICAgZm9sbG93VXBNYXhFbXB0eVNjYW5zOiAxMCwgICAvLyDomZrmi5/mu5rliqjmnIDlpKfnqbrmiavmj4/mrKHmlbANCiAgICAgICAgICAgIGZvbGxvd1VwTGVhZHNNb25pdG9yOiB0cnVlLCAgLy8g55uR5o6n55WZ5a6i6LWE54q25oCB5Y+Y5YyWDQogICAgICAgICAgICBmb2xsb3dVcExlYWRzQ2hlY2tJbnRlcnZhbDogMzAsIC8vIOeVmeWuoui1hOajgOafpemXtOmalO+8iOWIhumSn++8iQ0KDQogICAgICAgICAgICAvLyDogZrlhYnov5vnur/phY3nva4NCiAgICAgICAgICAgIHNwb3RsaWdodExlYWRFbmFibGVkOiBmYWxzZSwgIC8vIOiBmuWFiei/m+e6v+iHquWKqOWbnuWkjeW8gOWFsw0KICAgICAgICAgICAgc3BvdGxpZ2h0TGVhZFRlbXBsYXRlOiAn5oKo5aW9e+eUqOaIt+aYteensH3vvIzmhJ/osKLmgqjpgJrov4fjgIx76K++56iL5ZCN56ewfeOAjei/m+WFpeengeS/oe+8geaIkeaYr+S4k+S4mueahOivvueoi+mhvumXru+8jOW+iOmrmOWFtOS4uuaCqOacjeWKoeOAglxuXG7miJHms6jmhI/liLDmgqjlr7nmiJHku6znmoTor77nqIvmhJ/lhbTotqPvvIzmiJHlj6/ku6XkuLrmgqjor6bnu4bku4vnu43or77nqIvlhoXlrrnjgIHlrabkuaDmlrnlvI/lkozkvJjmg6DmlL/nrZbjgILor7fpl67mgqjluIzmnJvkuobop6Plk6rmlrnpnaLnmoTkv6Hmga/lkaLvvJ9cblxu5pyf5b6F5LiO5oKo6L+b5LiA5q2l5Lqk5rWB77yBIPCfmIonLA0KICAgICAgICAgICAgc3BvdGxpZ2h0QWN0aXZlV2VsY29tZUVuYWJsZWQ6IGZhbHNlLCAgLy8g5Li75Yqo6L+b57q/6K+d5pyv5byA5YWzDQogICAgICAgICAgICBzcG90bGlnaHRBY3RpdmVXZWxjb21lQ291cnNlTmFtZTogJ+aIkeS7rOeahOivvueoiycsICAvLyDkuLvliqjov5vnur/or53mnK/pu5jorqTor77nqIvlkI3np7ANCiAgICAgICAgICAgIHNwb3RsaWdodERlZmF1bHRDb3Vyc2VOYW1lOiAn5oiR5Lus55qE6K++56iLJywgIC8vIOiBmuWFiei/m+e6v+m7mOiupOivvueoi+WQjeensO+8iOivhuWIq+Wksei0peaXtuS9v+eUqO+8iQ0KDQogICAgICAgICAgICAvLyDplJnor6/mjqjpgIHphY3nva4NCiAgICAg",
        "ICAgICAgIGVycm9yTm90aWZpY2F0aW9uRW5hYmxlZDogZmFsc2UsICAgICAgLy8g6ZSZ6K+v5o6o6YCB5oC75byA5YWzDQogICAgICAgICAgICBlcnJvck5vdGlmaWNhdGlvbkFwaUtleTogJycsICAgICAgICAgIC8vIHh4dHVpLmNvbSBBUEnlr4bpkqUNCiAgICAgICAgICAgIGVycm9yTm90aWZpY2F0aW9uQ2hhbm5lbHM6ICdXWF9NUCcsICAgLy8g5o6o6YCB5rig6YGT77yI5aSa5Liq55So6YCX5Y+35YiG6ZqU77yJDQogICAgICAgICAgICBlcnJvck5vdGlmaWNhdGlvbkxldmVsczogJ2Vycm9yJywgICAgIC8vIOaOqOmAgemUmeivr+e6p+WIq++8iGVycm9yLHdhcm4saW5mb++8iQ0KICAgICAgICAgICAgZXJyb3JOb3RpZmljYXRpb25LZXl3b3JkczogJycsICAgICAgICAvLyDlhbPplK7or43ov4fmu6TvvIjljIXlkKvvvIzlpJrkuKrnlKjpgJflj7fliIbpmpTvvIkNCiAgICAgICAgICAgIGVycm9yTm90aWZpY2F0aW9uRXhjbHVkZUtleXdvcmRzOiAnJywgLy8g5o6S6Zmk5YWz6ZSu6K+N77yI5aSa5Liq55So6YCX5Y+35YiG6ZqU77yJDQogICAgICAgICAgICBlcnJvck5vdGlmaWNhdGlvblJhdGVMaW1pdDogNSwgICAgICAgIC8vIOaOqOmAgemikeeOh+mZkOWItu+8iOWIhumSn+WGheacgOWkp+aOqOmAgeasoeaVsO+8iQ0KICAgICAgICAgICAgZXJyb3JOb3RpZmljYXRpb25UZW1wbGF0ZTogJ/Cfmqgg5bCP57qi5LmmQUnoh6rliqjlm57lpI3lt6XlhbfplJnor6/miqXoraZcblxu4o+wIOaXtumXtO+8mnt0aW1lc3RhbXB9XG7wn5SNIOmUmeivr+exu+Wei++8mntsZXZlbH1cbvCfk50g6ZSZ6K+v5L+h5oGv77yae21lc3NhZ2V9XG7wn5GkIOeUqOaIt++8mnt1c2VyfVxu8J+UlyDor6bmg4XvvJp7ZGV0YWlsc30nLA0KICAgICAgICAgICAgZXJyb3JOb3RpZmljYXRpb25EZWR1cGxpY2F0aW9uOiB0cnVlLCAvLyDlkK/nlKjplJnor6/ljrvph40NCiAgICAgICAgICAgIGVycm9yTm90aWZpY2F0aW9uRGVkdXBsaWNhdGlvbldpbmRvdzogMTAsIC8vIOWOu+mHjeaXtumXtOeql+WPo++8iOWIhumSn++8iQ0KICAgICAgICAgICAgZXJyb3JOb3RpZmljYXRpb25UZXN0TW9kZTogZmFsc2UsICAgICAvLyDmtYvor5XmqKHlvI/vvIjku4XorrDlvZXml6Xlv5fkuI3lrp7pmYXmjqjpgIHvvIkNCg0KICAgICAgICAgICAgLy8g5YO15bC45pyq6K+75aSE55CG6YWN572uDQogICAgICAgICAgICB6b21iaWVVbnJlYWRFbmFibGVkOiB0cnVlLCAgICAgICAgICAgIC8vIOWDteWwuOacquivu+WkhOeQhuW8gOWFsw0KICAgICAgICAgICAgem9tYmllVW5yZWFkQ29vbGRvd25NaW51dGVzOiA2MCwgICAgICAvLyDlg7XlsLjmnKror7vlhrfljbTml7bpl7TvvIjliIbpkp/vvIkNCiAgICAgICAgICAgIHpvbWJpZVVucmVhZE1heFJldHJpZXM6IDMsICAgICAgICAgICAgLy8g5pyA5aSn6YeN6K+V5qyh5pWwDQogICAgICAgICAgICB6b21iaWVVbnJlYWREZWJ1Z01vZGU6IGZhbHNlLCAgICAgICAgIC8vIOWDteWwuOacquivu+iwg+ivleaooeW8jw0KICAg",
        "ICAgICAgICAgem9tYmllVW5yZWFkQXV0b0NsZWFudXA6IHRydWUsICAgICAgICAvLyDoh6rliqjmuIXnkIbov4fmnJ/orrDlvZUNCiAgICAgICAgICAgIHpvbWJpZVVucmVhZENsZWFudXBEYXlzOiA3ICAgICAgICAgICAgLy8g5riF55CG5aSp5pWwDQogICAgICAgIH0sDQoNCiAgICAgICAgLy8g5raI5oGv57G75Z6L5bi46YePDQogICAgICAgIE1FU1NBR0VfVFlQRVM6IHsNCiAgICAgICAgICAgIFRFWFQ6ICdURVhUJywNCiAgICAgICAgICAgIENBUkQ6ICdDQVJEJywNCiAgICAgICAgICAgIEVNT0pJOiAnRU1PSkknLA0KICAgICAgICAgICAgU1BPVExJR0hUX0xFQUQ6ICdTUE9UTElHSFRfTEVBRCcsDQogICAgICAgICAgICBVTktOT1dOOiAnVU5LTk9XTicNCiAgICAgICAgfSwNCg0KICAgICAgICAvLyDpobXpnaLlhYPntKDpgInmi6nlmaggLSDlt7Lmm7TmlrDku6XpgILphY3mnIDmlrDpobXpnaLnu5PmnoQNCiAgICAgICAgU0VMRUNUT1JTOiB7DQogICAgICAgICAgICAvLyDlt6bkvqfkvJrlkZjliJfooagNCiAgICAgICAgICAgIGNvbnRhY3RMaXN0OiAnLmNoYXQtbGlzdC1ib3ggLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyJywNCiAgICAgICAgICAgIGNvbnRhY3RJdGVtOiAnLnN4LWNvbnRhY3QtaXRlbScsDQogICAgICAgICAgICBhY3RpdmVDb250YWN0OiAnLnN4LWNvbnRhY3QtaXRlbS5hY3RpdmUnLA0KICAgICAgICAgICAgbmV3TWVzc2FnZUJhZGdlOiAnLmQtYmFkZ2UtZG90JywNCiAgICAgICAgICAgIHVzZXJOYW1lOiAnLnN4LWNvbnRhY3QtaXRlbSAubmljay1uYW1lJywgLy8g5pu05paw5Li65pyA5pawRE9N57uT5p6EDQogICAgICAgICAgICBsYXN0TWVzc2FnZTogJy5jb250ZW50JywNCiAgICAgICAgICAgIG1lc3NhZ2VUaW1lOiAnLnRpbWUnLA0KDQogICAgICAgICAgICAvLyDlr7nor53nqpflj6MgLSDmm7TmlrDkuLrmlrDnmoRET03nu5PmnoQNCiAgICAgICAgICAgIGNoYXRXaW5kb3c6ICcjcHJvLW1zZy1ib3gnLA0KICAgICAgICAgICAgY2hhdENvbnRhaW5lcjogJyNwcm8tbXNnLWJveCAudnVlLXJlY3ljbGUtc2Nyb2xsZXInLA0KICAgICAgICAgICAgbWVzc2FnZUxpc3Q6ICcudnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0td3JhcHBlcicsDQogICAgICAgICAgICBtZXNzYWdlSXRlbTogJy5pbS1tc2ctaXRlbScsDQogICAgICAgICAgICBtZXNzYWdlVmlldzogJy52dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3JywNCg0KICAgICAgICAgICAgLy8g5raI5oGv5YaF5a656YCJ5oup5ZmoDQogICAgICAgICAgICB0ZXh0TWVzc2FnZTogJy50ZXh0LW1lc3NhZ2UnLA0KICAgICAgICAgICAgbGVmdE1lc3NhZ2U6ICcubGVmdCAudGV4dC1tZXNzYWdlJywNCiAgICAgICAgICAgIHJpZ2h0TWVzc2FnZTogJy5yaWdodCAudGV4dC1tZXNzYWdlJywNCiAgICAgICAgICAgIGNlbnRlck1lc3NhZ2U6ICcuY2VudGVyIC5oaW50LW1lc3NhZ2UnLA0KDQogICAgICAgICAgICAvLyDovpPlhaXlkozlj5HpgIENCiAgICAgICAg",
        "ICAgIGlucHV0Qm94OiAndGV4dGFyZWEucmVwbHktdGV4dGFyZWEnLA0KICAgICAgICAgICAgc2VuZEJ1dHRvbjogJy5zZW5kX2J0bicsDQoNCiAgICAgICAgICAgIC8vIOWkh+mAiemAieaLqeWZqA0KICAgICAgICAgICAgZmFsbGJhY2tTZWxlY3RvcnM6IHsNCiAgICAgICAgICAgICAgICBjaGF0V2luZG93OiBbDQogICAgICAgICAgICAgICAgICAgICcjcHJvLW1zZy1ib3gnLA0KICAgICAgICAgICAgICAgICAgICAnLmNoYXQtd2luZG93JywNCiAgICAgICAgICAgICAgICAgICAgJy5tZXNzYWdlLWNvbnRhaW5lcicsDQogICAgICAgICAgICAgICAgICAgICcuY2hhdC1jb250YWluZXInDQogICAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICAgICBtZXNzYWdlTGlzdDogWw0KICAgICAgICAgICAgICAgICAgICAnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXdyYXBwZXInLA0KICAgICAgICAgICAgICAgICAgICAnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyJywNCiAgICAgICAgICAgICAgICAgICAgJy5tZXNzYWdlLWxpc3QnLA0KICAgICAgICAgICAgICAgICAgICAnLmNoYXQtY29udGVudCcNCiAgICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgICAgIG1lc3NhZ2VJdGVtOiBbDQogICAgICAgICAgICAgICAgICAgICcuaW0tbXNnLWl0ZW0nLA0KICAgICAgICAgICAgICAgICAgICAnLm1lc3NhZ2UtaXRlbScsDQogICAgICAgICAgICAgICAgICAgICcuY2hhdC1tZXNzYWdlJywNCiAgICAgICAgICAgICAgICAgICAgJy5tc2ctaXRlbScNCiAgICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgICAgIGlucHV0Qm94OiBbDQogICAgICAgICAgICAgICAgICAgICd0ZXh0YXJlYVtwbGFjZWhvbGRlcio9Iui+k+WFpSJdJywNCiAgICAgICAgICAgICAgICAgICAgJ3RleHRhcmVhW3BsYWNlaG9sZGVyKj0i6K+36L6T5YWlIl0nLA0KICAgICAgICAgICAgICAgICAgICAnLmlucHV0LWJveCB0ZXh0YXJlYScsDQogICAgICAgICAgICAgICAgICAgICdbY29udGVudGVkaXRhYmxlPSJ0cnVlIl0nLA0KICAgICAgICAgICAgICAgICAgICAnaW5wdXRbdHlwZT0idGV4dCJdJw0KICAgICAgICAgICAgICAgIF0sDQogICAgICAgICAgICAgICAgc2VuZEJ1dHRvbjogWw0KICAgICAgICAgICAgICAgICAgICAnLnNlbmRfYnRuJywNCiAgICAgICAgICAgICAgICAgICAgJ2J1dHRvbi5zZW5kX2J0bicsDQogICAgICAgICAgICAgICAgICAgICcuZC1idXR0b24uc2VuZF9idG4nLA0KICAgICAgICAgICAgICAgICAgICAnYnV0dG9uW2NsYXNzKj0ic2VuZCJdJywNCiAgICAgICAgICAgICAgICAgICAgJy5zZW5kLWJ1dHRvbicsDQogICAgICAgICAgICAgICAgICAgICdidXR0b25bdHlwZT0ic3VibWl0Il0nDQogICAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgfSwNCg0KICAgICAgICAgICAgLy8g5o6n5Yi26Z2i5p2/DQogICAgICAgICAgICBjb250cm9sUGFuZWw6ICcjeGhzLWFpLWNvbnRyb2wtcGFuZWwnDQogICAgICAgIH0sDQoNCiAgICAgICAg",
        "Ly8g5bu26L+f6YWN572uDQogICAgICAgIERFTEFZUzogew0KICAgICAgICAgICAgY2xpY2tEZWxheTogMTAwMCwNCiAgICAgICAgICAgIHR5cGVEZWxheTogNTAwLA0KICAgICAgICAgICAgc2VuZERlbGF5OiAxMDAwLA0KICAgICAgICAgICAgY2hlY2tJbnRlcnZhbDogMjAwMA0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g5bel5YW35Ye95pWw5bqTDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBVdGlscyA9IHsNCiAgICAgICAgLyoqDQogICAgICAgICAqIOW7tui/n+aJp+ihjA0KICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gbXMg5bu26L+f5q+r56eS5pWwDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlfQ0KICAgICAgICAgKi8NCiAgICAgICAgZGVsYXk6IChtcykgPT4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKSksDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWuieWFqOeahERPTeafpeivog0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3IgQ1NT6YCJ5oup5ZmoDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gcGFyZW50IOeItuWFg+e0oO+8jOm7mOiupOS4umRvY3VtZW50DQogICAgICAgICAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBxdWVyeVNlbGVjdG9yOiAoc2VsZWN0b3IsIHBhcmVudCA9IGRvY3VtZW50KSA9PiB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHJldHVybiBwYXJlbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcignRE9N5p+l6K+i5aSx6LSlJywgeyBzZWxlY3RvciwgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWuieWFqOeahERPTeafpeivou+8iOWkmuS4quWFg+e0oO+8iQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3IgQ1NT6YCJ5oup5ZmoDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gcGFyZW50IOeItuWFg+e0oO+8jOm7mOiupOS4umRvY3VtZW50DQogICAgICAgICAqIEByZXR1cm5zIHtOb2RlTGlzdH0NCiAgICAgICAgICovDQogICAgICAgIHF1ZXJ5U2VsZWN0b3JBbGw6IChzZWxlY3RvciwgcGFyZW50ID0gZG9jdW1lbnQpID0+IHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdET03mn6Xor6LlpLHotKUnLCB7IHNlbGVjdG9yLCBlcnJvcjogZXJyb3IubWVz",
        "c2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gW107DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOetieW+heWFg+e0oOWHuueOsA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3IgQ1NT6YCJ5oup5ZmoDQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lb3V0IOi2heaXtuaXtumXtO+8iOavq+enku+8iQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IHBhcmVudCDniLblhYPntKANCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8RWxlbWVudD59DQogICAgICAgICAqLw0KICAgICAgICB3YWl0Rm9yRWxlbWVudDogKHNlbGVjdG9yLCB0aW1lb3V0ID0gMTAwMDAsIHBhcmVudCA9IGRvY3VtZW50KSA9PiB7DQogICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gew0KICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yLCBwYXJlbnQpOw0KICAgICAgICAgICAgICAgIGlmIChlbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKChtdXRhdGlvbnMsIG9icykgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcihzZWxlY3RvciwgcGFyZW50KTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG9icy5kaXNjb25uZWN0KCk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKHBhcmVudCwgew0KICAgICAgICAgICAgICAgICAgICBjaGlsZExpc3Q6IHRydWUsDQogICAgICAgICAgICAgICAgICAgIHN1YnRyZWU6IHRydWUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7DQogICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYOWFg+e0oOacquaJvuWIsDogJHtzZWxlY3Rvcn1gKSk7DQogICAgICAgICAgICAgICAgfSwgdGltZW91dCk7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qih5ouf54K55Ye75LqL5Lu2DQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDnm67moIflhYPntKANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBzaW11bGF0ZUNsaWNrOiAoZWxlbWVudCkgPT4gew0KICAg",
        "ICAgICAgICAgaWYgKCFlbGVtZW50KSByZXR1cm4gZmFsc2U7DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5bCd6K+V5aSa56eN54K55Ye75pa55byP77yM56Gu5L+d5YW85a655oCnDQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Ux77ya5bCd6K+V5Y6f55SfY2xpY2vmlrnms5UNCiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGVsZW1lbnQuY2xpY2sgPT09ICdmdW5jdGlvbicpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xpY2soKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5L2/55So5Y6f55SfY2xpY2vmlrnms5XmiJDlip8nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChjbGlja0Vycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WOn+eUn2NsaWNr5pa55rOV5aSx6LSlJywgeyBlcnJvcjogY2xpY2tFcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMu+8muWwneivleWIm+W7uk1vdXNlRXZlbnTvvIjlpJrnp413aW5kb3flr7nosaHvvIkNCiAgICAgICAgICAgICAgICBjb25zdCBnZXRWYWxpZFdpbmRvdyA9ICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5bCd6K+V5LiN5ZCM55qEd2luZG935a+56LGhDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHdpbmRvd0NhbmRpZGF0ZXMgPSBbDQogICAgICAgICAgICAgICAgICAgICAgICBudWxsLCAvLyDkuI3kvKDpgJJ2aWV35Y+C5pWwDQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlb2YgdW5zYWZlV2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHVuc2FmZVdpbmRvdyA6IG51bGwsIC8vIFRhbXBlcm1vbmtleeeOr+Wigw0KICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZGVmYXVsdFZpZXcsIC8vIOagh+WHhuaWueW8jw0KICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LCAvLyDlvZPliY13aW5kb3cNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvcCwgLy8g6aG25bGCd2luZG93DQogICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQgLy8g54i257qnd2luZG93DQogICAgICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCB3aW4gb2Ygd2luZG93Q2FuZGlkYXRlcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmtYvor5XmmK/lkKblj6/ku6XliJvlu7pNb3VzZUV2ZW50DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGVzdEV2ZW50ID0gbmV3IE1vdXNlRXZlbnQoJ3Rlc3QnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXc6IHdpbiwNCiAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgYnViYmxlczogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB3aW47DQogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHZhbGlkV2luZG93ID0gZ2V0VmFsaWRXaW5kb3coKTsNCiAgICAgICAgICAgICAgICBjb25zdCBldmVudHMgPSBbJ21vdXNlZG93bicsICdtb3VzZXVwJywgJ2NsaWNrJ107DQoNCiAgICAgICAgICAgICAgICBldmVudHMuZm9yRWFjaChldmVudFR5cGUgPT4gew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXZlbnRPcHRpb25zID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wb3NlZDogdHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Y+q5pyJ5ZyodmFsaWRXaW5kb3flrZjlnKjml7bmiY3mt7vliqB2aWV35bGe5oCnDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsaWRXaW5kb3cgIT09IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVudE9wdGlvbnMudmlldyA9IHZhbGlkV2luZG93Ow0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBldmVudCA9IG5ldyBNb3VzZUV2ZW50KGV2ZW50VHlwZSwgZXZlbnRPcHRpb25zKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV2ZW50RXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zyhg5Yib5bu6JHtldmVudFR5cGV95LqL5Lu25aSx6LSlYCwgeyBlcnJvcjogZXZlbnRFcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Uz77ya5bCd6K+V6Kem5Y+R5oyH6ZKI5LqL5Lu277yI546w5Luj5rWP6KeI5Zmo77yJDQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgcG9pbnRlckV2ZW50cyA9IFsncG9pbnRlcmRvd24nLCAncG9pbnRlcnVwJ107DQogICAgICAgICAgICAgICAgICAg",
        "IHBvaW50ZXJFdmVudHMuZm9yRWFjaChldmVudFR5cGUgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBuZXcgUG9pbnRlckV2ZW50KGV2ZW50VHlwZSwgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludGVySWQ6IDEsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNQcmltYXJ5OiB0cnVlDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChldmVudCk7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKHBvaW50ZXJFcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aMh+mSiOS6i+S7tuWIm+W7uuWksei0pScsIHsgZXJyb3I6IHBvaW50ZXJFcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5qih5ouf54K55Ye75LqL5Lu25bey6Kem5Y+RJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmqKHmi5/ngrnlh7vlrozlhajlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qih5ouf6L6T5YWl5paH5pysDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDovpPlhaXmoYblhYPntKANCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQg6KaB6L6T5YWl55qE5paH5pysDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgc2ltdWxhdGVJbnB1dDogKGVsZW1lbnQsIHRleHQpID0+IHsNCiAgICAgICAgICAgIGlmICghZWxlbWVudCkgcmV0dXJuIGZhbHNlOw0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOiBmueEpuWFg+e0oA0KICAgICAgICAgICAgICAgIGVsZW1lbnQuZm9jdXMoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOa4heepuueOsOacieWGheWuuQ0KICAgICAgICAgICAgICAgIGVsZW1lbnQudmFsdWUgPSAnJzsNCg0KICAgICAgICAgICAgICAgIC8vIOiuvue9ruaWsOWGheWuuQ0KICAgICAgICAgICAgICAgIGVsZW1lbnQudmFsdWUgPSB0ZXh0Ow0KDQogICAgICAgICAgICAgICAgLy8g6Kem5Y+R6L6T5YWl5LqL5Lu2DQogICAgICAgICAgICAgICAgY29uc3QgZXZlbnRzID0gWydpbnB1dCcsICdjaGFuZ2UnXTsNCiAgICAgICAgICAgICAgICBldmVudHMuZm9yRWFjaChldmVudFR5cGUgPT4gew0KICAgICAgICAgICAg",
        "ICAgICAgICBjb25zdCBldmVudCA9IG5ldyBFdmVudChldmVudFR5cGUsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsDQogICAgICAgICAgICAgICAgICAgICAgICBjYW5jZWxhYmxlOiB0cnVlDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5qih5ouf6L6T5YWl5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOeUn+aIkOWUr+S4gElEDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBnZW5lcmF0ZUlkOiAoKSA9PiB7DQogICAgICAgICAgICByZXR1cm4gJ3hoc18nICsgRGF0ZS5ub3coKSArICdfJyArIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qC85byP5YyW5pe26Ze0DQogICAgICAgICAqIEBwYXJhbSB7RGF0ZX0gZGF0ZSDml6XmnJ/lr7nosaENCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIGZvcm1hdFRpbWU6IChkYXRlID0gbmV3IERhdGUoKSkgPT4gew0KICAgICAgICAgICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVUaW1lU3RyaW5nKCd6aC1DTicsIHsNCiAgICAgICAgICAgICAgICBob3VyMTI6IGZhbHNlLA0KICAgICAgICAgICAgICAgIGhvdXI6ICcyLWRpZ2l0JywNCiAgICAgICAgICAgICAgICBtaW51dGU6ICcyLWRpZ2l0JywNCiAgICAgICAgICAgICAgICBzZWNvbmQ6ICcyLWRpZ2l0Jw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDml6Xlv5fns7vnu58NCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IExvZ2dlciA9IHsNCiAgICAgICAgbG9nczogW10sDQogICAgICAgIG1heExvZ3M6IDEwMDAsDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiusOW9leaXpeW/lw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGV2ZWwg5pel5b+X57qn5YirDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIOa2iOaBrw0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSDpmYTliqDmlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGxvZzogZnVuY3Rpb24obGV2ZWwsIG1lc3NhZ2UsIGRhdGEgPSB7fSkgew0KICAgICAgICAgICAgY29uc3QgbG9nRW50cnkgPSB7DQogICAgICAgICAgICAg",
        "ICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLA0KICAgICAgICAgICAgICAgIGxldmVsLA0KICAgICAgICAgICAgICAgIG1lc3NhZ2UsDQogICAgICAgICAgICAgICAgZGF0YQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgdGhpcy5sb2dzLnB1c2gobG9nRW50cnkpOw0KDQogICAgICAgICAgICAvLyDpmZDliLbml6Xlv5fmlbDph48NCiAgICAgICAgICAgIGlmICh0aGlzLmxvZ3MubGVuZ3RoID4gdGhpcy5tYXhMb2dzKSB7DQogICAgICAgICAgICAgICAgdGhpcy5sb2dzLnNoaWZ0KCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOaOp+WItuWPsOi+k+WHug0KICAgICAgICAgICAgY29uc3QgY29uc29sZU1ldGhvZCA9IGNvbnNvbGVbbGV2ZWxdIHx8IGNvbnNvbGUubG9nOw0KICAgICAgICAgICAgY29uc3QgdGltZVN0ciA9IFV0aWxzLmZvcm1hdFRpbWUobG9nRW50cnkudGltZXN0YW1wKTsNCiAgICAgICAgICAgIGNvbnNvbGVNZXRob2QoYFske0NPTkZJRy5BUFBfTkFNRX1dICR7dGltZVN0cn0gWyR7bGV2ZWwudG9VcHBlckNhc2UoKX1dICR7bWVzc2FnZX1gLCBkYXRhKTsNCg0KICAgICAgICAgICAgLy8g6YCa55+lVUnmm7TmlrANCiAgICAgICAgICAgIGlmICh3aW5kb3cuWEhTQXV0b1JlcGx5ICYmIHdpbmRvdy5YSFNBdXRvUmVwbHkudWkpIHsNCiAgICAgICAgICAgICAgICB3aW5kb3cuWEhTQXV0b1JlcGx5LnVpLnVwZGF0ZUxvZ3MoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICBpbmZvOiBmdW5jdGlvbihtZXNzYWdlLCBkYXRhKSB7DQogICAgICAgICAgICB0aGlzLmxvZygnaW5mbycsIG1lc3NhZ2UsIGRhdGEpOw0KICAgICAgICAgICAgLy8g5byC5q2l5Y+R6YCB5o6o6YCB6YCa55+l77yI5LiN6Zi75aGe5Li75rWB56iL77yJDQogICAgICAgICAgICBpZiAodHlwZW9mIEVycm9yTm90aWZpY2F0aW9uTWFuYWdlciAhPT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgRXJyb3JOb3RpZmljYXRpb25NYW5hZ2VyLnNlbmROb3RpZmljYXRpb24oJ2luZm8nLCBtZXNzYWdlLCBkYXRhKS5jYXRjaChlcnIgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCflj5HpgIFpbmZv5o6o6YCB5aSx6LSlOicsIGVycik7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0sIDApOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICB3YXJuOiBmdW5jdGlvbihtZXNzYWdlLCBkYXRhKSB7DQogICAgICAgICAgICB0aGlzLmxvZygnd2FybicsIG1lc3NhZ2UsIGRhdGEpOw0KICAgICAgICAgICAgLy8g5byC5q2l5Y+R6YCB5o6o6YCB6YCa55+l77yI5LiN6Zi75aGe5Li75rWB56iL77yJDQogICAgICAgICAgICBpZiAodHlwZW9mIEVycm9yTm90aWZpY2F0aW9uTWFuYWdlciAhPT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0",
        "KCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgRXJyb3JOb3RpZmljYXRpb25NYW5hZ2VyLnNlbmROb3RpZmljYXRpb24oJ3dhcm4nLCBtZXNzYWdlLCBkYXRhKS5jYXRjaChlcnIgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCflj5HpgIF3YXJu5o6o6YCB5aSx6LSlOicsIGVycik7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0sIDApOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBlcnJvcjogZnVuY3Rpb24obWVzc2FnZSwgZGF0YSkgew0KICAgICAgICAgICAgdGhpcy5sb2coJ2Vycm9yJywgbWVzc2FnZSwgZGF0YSk7DQogICAgICAgICAgICAvLyDlvILmraXlj5HpgIHmjqjpgIHpgJrnn6XvvIjkuI3pmLvloZ7kuLvmtYHnqIvvvIkNCiAgICAgICAgICAgIGlmICh0eXBlb2YgRXJyb3JOb3RpZmljYXRpb25NYW5hZ2VyICE9PSAndW5kZWZpbmVkJykgew0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBFcnJvck5vdGlmaWNhdGlvbk1hbmFnZXIuc2VuZE5vdGlmaWNhdGlvbignZXJyb3InLCBtZXNzYWdlLCBkYXRhKS5jYXRjaChlcnIgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCflj5HpgIFlcnJvcuaOqOmAgeWksei0pTonLCBlcnIpOw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9LCAwKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgZGVidWc6IGZ1bmN0aW9uKG1lc3NhZ2UsIGRhdGEpIHsNCiAgICAgICAgICAgIGlmIChDb25maWdNYW5hZ2VyLmdldCgnZGVidWdNb2RlJykpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmxvZygnZGVidWcnLCBtZXNzYWdlLCBkYXRhKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5pyA6L+R55qE5pel5b+XDQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBjb3VudCDmlbDph48NCiAgICAgICAgICogQHJldHVybnMge0FycmF5fQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0UmVjZW50TG9nczogZnVuY3Rpb24oY291bnQgPSA1MCkgew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMubG9ncy5zbGljZSgtY291bnQpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuIXnqbrml6Xlv5cNCiAgICAgICAgICovDQogICAgICAgIGNsZWFyOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIHRoaXMubG9ncyA9IFtdOw0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+aXpeW/l+W3sua4heepuicpOw0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g6YWN572u566h55CG5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBDb25maWdNYW5hZ2VyID0gew0KICAgICAgICAvKioNCiAg",
        "ICAgICAgICog6I635Y+W6YWN572uDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXkg6YWN572u6ZSuDQogICAgICAgICAqIEBwYXJhbSB7Kn0gZGVmYXVsdFZhbHVlIOm7mOiupOWAvA0KICAgICAgICAgKiBAcmV0dXJucyB7Kn0NCiAgICAgICAgICovDQogICAgICAgIGdldDogZnVuY3Rpb24oa2V5LCBkZWZhdWx0VmFsdWUgPSBudWxsKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gR01fZ2V0VmFsdWUoa2V5LCBkZWZhdWx0VmFsdWUpOw0KICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSAhPT0gbnVsbCA/IHZhbHVlIDogQ09ORklHLkRFRkFVTFRfU0VUVElOR1Nba2V5XTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfojrflj5bphY3nva7lpLHotKUnLCB7IGtleSwgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTW2tleV0gfHwgZGVmYXVsdFZhbHVlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorr7nva7phY3nva4NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGtleSDphY3nva7plK4NCiAgICAgICAgICogQHBhcmFtIHsqfSB2YWx1ZSDphY3nva7lgLwNCiAgICAgICAgICovDQogICAgICAgIHNldDogZnVuY3Rpb24oa2V5LCB2YWx1ZSkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZShrZXksIHZhbHVlKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mFjee9ruW3suabtOaWsCcsIHsga2V5LCB2YWx1ZSB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCforr7nva7phY3nva7lpLHotKUnLCB7IGtleSwgdmFsdWUsIGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmiYDmnInphY3nva4NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldEFsbDogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBjb25zdCBzZXR0aW5ncyA9IHt9Ow0KICAgICAgICAgICAgT2JqZWN0LmtleXMoQ09ORklHLkRFRkFVTFRfU0VUVElOR1MpLmZvckVhY2goa2V5ID0+IHsNCiAgICAgICAgICAgICAgICBzZXR0aW5nc1trZXldID0gdGhpcy5nZXQoa2V5KTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgcmV0dXJuIHNldHRpbmdzOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDph43nva7phY3nva4NCiAgICAgICAgICovDQogICAgICAgIHJlc2V0OiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIE9iamVjdC5rZXlzKENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTKS5mb3JFYWNoKGtleSA9PiB7DQogICAg",
        "ICAgICAgICAgICAgdGhpcy5zZXQoa2V5LCBDT05GSUcuREVGQVVMVF9TRVRUSU5HU1trZXldKTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+mFjee9ruW3sumHjee9ruS4uum7mOiupOWAvCcpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmiYDmnInphY3nva7lj4rlhYPmlbDmja4NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldEFsbENvbmZpZ1dpdGhNZXRhZGF0YTogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBjb25zdCBjb25maWcgPSB0aGlzLmdldEFsbCgpOw0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICBtZXRhZGF0YTogew0KICAgICAgICAgICAgICAgICAgICBleHBvcnRUaW1lOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksDQogICAgICAgICAgICAgICAgICAgIHZlcnNpb246IENPTkZJRy5WRVJTSU9OLA0KICAgICAgICAgICAgICAgICAgICBhcHBOYW1lOiBDT05GSUcuQVBQX05BTUUsDQogICAgICAgICAgICAgICAgICAgIGV4cG9ydFR5cGU6ICdjb25maWcnDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBjb25maWc6IGNvbmZpZw0KICAgICAgICAgICAgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5a6M5pW05pWw5o2u77yI6YWN572uK+eUqOaIt+aVsOaNru+8iQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0RnVsbERhdGFXaXRoTWV0YWRhdGE6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3QgY29uZmlnID0gdGhpcy5nZXRBbGwoKTsNCiAgICAgICAgICAgIGNvbnN0IHVzZXJEYXRhID0gdGhpcy5nZXRVc2VyRGF0YSgpOw0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICBtZXRhZGF0YTogew0KICAgICAgICAgICAgICAgICAgICBleHBvcnRUaW1lOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksDQogICAgICAgICAgICAgICAgICAgIHZlcnNpb246IENPTkZJRy5WRVJTSU9OLA0KICAgICAgICAgICAgICAgICAgICBhcHBOYW1lOiBDT05GSUcuQVBQX05BTUUsDQogICAgICAgICAgICAgICAgICAgIGV4cG9ydFR5cGU6ICdmdWxsJw0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgY29uZmlnOiBjb25maWcsDQogICAgICAgICAgICAgICAgdXNlckRhdGE6IHVzZXJEYXRhDQogICAgICAgICAgICB9Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bnlKjmiLfmlbDmja4NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldFVzZXJEYXRhOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgYmxhY2tsaXN0OiB0aGlzLmdldCgnYmxhY2tsaXN0JywgW10p",
        "LA0KICAgICAgICAgICAgICAgICAgICBzZXNzaW9uTWVtb3J5OiBHTV9nZXRWYWx1ZSgnc2Vzc2lvbk1lbW9yeScsIHt9KSwNCiAgICAgICAgICAgICAgICAgICAgc3BvdGxpZ2h0Q2FjaGU6IEdNX2dldFZhbHVlKCdzcG90bGlnaHRQcm9jZXNzZWRVc2VycycsIHt9KSwNCiAgICAgICAgICAgICAgICAgICAgYWNxdWlzaXRpb25TZW50VXNlcnM6IEdNX2dldFZhbHVlKCdhY3F1aXNpdGlvblNlbnRVc2VycycsIHt9KSwNCiAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBSZWNvcmRzOiBHTV9nZXRWYWx1ZSgneGhzX2ZvbGxvd3VwX3JlY29yZHMnLCB7fSksDQogICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwQmxhY2tsaXN0OiBHTV9nZXRWYWx1ZSgneGhzX2ZvbGxvd3VwX2JsYWNrbGlzdCcsIHt9KSwNCiAgICAgICAgICAgICAgICAgICAgem9tYmllVW5yZWFkUmVjb3JkczogR01fZ2V0VmFsdWUoJ3hoc196b21iaWVfdW5yZWFkX3JlY29yZHMnLCAne30nKQ0KICAgICAgICAgICAgICAgIH07DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6I635Y+W55So5oi35pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4ge307DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmqjOivgemFjee9ruaVsOaNrg0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gY29uZmlnRGF0YSDphY3nva7mlbDmja4NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g6aqM6K+B57uT5p6cDQogICAgICAgICAqLw0KICAgICAgICB2YWxpZGF0ZUNvbmZpZ0RhdGE6IGZ1bmN0aW9uKGNvbmZpZ0RhdGEpIHsNCiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHsNCiAgICAgICAgICAgICAgICB2YWxpZDogdHJ1ZSwNCiAgICAgICAgICAgICAgICBlcnJvcnM6IFtdLA0KICAgICAgICAgICAgICAgIHdhcm5pbmdzOiBbXQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgLy8g5qOA5p+l5Z+65pys57uT5p6EDQogICAgICAgICAgICBpZiAoIWNvbmZpZ0RhdGEgfHwgdHlwZW9mIGNvbmZpZ0RhdGEgIT09ICdvYmplY3QnKSB7DQogICAgICAgICAgICAgICAgcmVzdWx0LnZhbGlkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgcmVzdWx0LmVycm9ycy5wdXNoKCfphY3nva7mlbDmja7moLzlvI/ml6DmlYgnKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6XlhYPmlbDmja4NCiAgICAgICAgICAgIGlmICghY29uZmlnRGF0YS5tZXRhZGF0YSkgew0KICAgICAgICAgICAgICAgIHJlc3VsdC53YXJuaW5ncy5wdXNoKCfnvLrlsJHlhYPmlbDmja7kv6Hmga8nKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgaWYgKCFjb25maWdEYXRhLm1ldGFkYXRhLnZlcnNpb24pIHsNCiAgICAgICAgICAg",
        "ICAgICAgICAgcmVzdWx0Lndhcm5pbmdzLnB1c2goJ+e8uuWwkeeJiOacrOS/oeaBrycpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAoIWNvbmZpZ0RhdGEubWV0YWRhdGEuYXBwTmFtZSB8fCBjb25maWdEYXRhLm1ldGFkYXRhLmFwcE5hbWUgIT09IENPTkZJRy5BUFBfTkFNRSkgew0KICAgICAgICAgICAgICAgICAgICByZXN1bHQud2FybmluZ3MucHVzaCgn5bqU55So5ZCN56ew5LiN5Yy56YWNJyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6XphY3nva7pobkNCiAgICAgICAgICAgIGlmICghY29uZmlnRGF0YS5jb25maWcpIHsNCiAgICAgICAgICAgICAgICByZXN1bHQudmFsaWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICByZXN1bHQuZXJyb3JzLnB1c2goJ+e8uuWwkemFjee9ruaVsOaNricpOw0KICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOmqjOivgeWFs+mUrumFjee9rumhuQ0KICAgICAgICAgICAgY29uc3QgcmVxdWlyZWRDb25maWdzID0gWydhcGlVcmwnLCAncmVwbHlEZWxheScsICdtYXhSZXRyaWVzJ107DQogICAgICAgICAgICByZXF1aXJlZENvbmZpZ3MuZm9yRWFjaChrZXkgPT4gew0KICAgICAgICAgICAgICAgIGlmICghKGtleSBpbiBjb25maWdEYXRhLmNvbmZpZykpIHsNCiAgICAgICAgICAgICAgICAgICAgcmVzdWx0Lndhcm5pbmdzLnB1c2goYOe8uuWwkemFjee9rumhuTogJHtrZXl9YCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOmqjOivgeaVsOaNruexu+Weiw0KICAgICAgICAgICAgY29uc3QgdHlwZVZhbGlkYXRpb25zID0gew0KICAgICAgICAgICAgICAgICdyZXBseURlbGF5JzogJ251bWJlcicsDQogICAgICAgICAgICAgICAgJ21heFJldHJpZXMnOiAnbnVtYmVyJywNCiAgICAgICAgICAgICAgICAnZW5hYmxlZCc6ICdib29sZWFuJywNCiAgICAgICAgICAgICAgICAnZGVidWdNb2RlJzogJ2Jvb2xlYW4nLA0KICAgICAgICAgICAgICAgICdhY3F1aXNpdGlvbkVuYWJsZWQnOiAnYm9vbGVhbicsDQogICAgICAgICAgICAgICAgJ2JsYWNrbGlzdEVuYWJsZWQnOiAnYm9vbGVhbicNCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKHR5cGVWYWxpZGF0aW9ucykuZm9yRWFjaCgoW2tleSwgZXhwZWN0ZWRUeXBlXSkgPT4gew0KICAgICAgICAgICAgICAgIGlmIChrZXkgaW4gY29uZmlnRGF0YS5jb25maWcgJiYgdHlwZW9mIGNvbmZpZ0RhdGEuY29uZmlnW2tleV0gIT09IGV4cGVjdGVkVHlwZSkgew0KICAgICAgICAgICAgICAgICAgICByZXN1bHQuZXJyb3JzLnB1c2goYOmFjee9rumhuSAke2tleX0g57G75Z6L6ZSZ6K+v77yM5pyf5pybICR7ZXhwZWN0ZWRUeXBlfWApOw0KICAgICAgICAgICAgICAgICAgICByZXN1bHQudmFsaWQgPSBmYWxzZTsNCiAgICAgICAg",
        "ICAgICAgICB9DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g6aqM6K+B5pWw5YC86IyD5Zu0DQogICAgICAgICAgICBpZiAoY29uZmlnRGF0YS5jb25maWcucmVwbHlEZWxheSAmJiAoY29uZmlnRGF0YS5jb25maWcucmVwbHlEZWxheSA8IDEwMDAgfHwgY29uZmlnRGF0YS5jb25maWcucmVwbHlEZWxheSA+IDMwMDAwKSkgew0KICAgICAgICAgICAgICAgIHJlc3VsdC5lcnJvcnMucHVzaCgn5Zue5aSN5bu26L+f5b+F6aG75ZyoMTAwMC0zMDAwMG1z5LmL6Ze0Jyk7DQogICAgICAgICAgICAgICAgcmVzdWx0LnZhbGlkID0gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmIChjb25maWdEYXRhLmNvbmZpZy5tYXhSZXRyaWVzICYmIChjb25maWdEYXRhLmNvbmZpZy5tYXhSZXRyaWVzIDwgMSB8fCBjb25maWdEYXRhLmNvbmZpZy5tYXhSZXRyaWVzID4gMTApKSB7DQogICAgICAgICAgICAgICAgcmVzdWx0LmVycm9ycy5wdXNoKCfmnIDlpKfph43or5XmrKHmlbDlv4XpobvlnKgxLTEw5LmL6Ze0Jyk7DQogICAgICAgICAgICAgICAgcmVzdWx0LnZhbGlkID0gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOW6lOeUqOWvvOWFpeeahOmFjee9rg0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gY29uZmlnRGF0YSDphY3nva7mlbDmja4NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMg5a+85YWl6YCJ6aG5DQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOW6lOeUqOe7k+aenA0KICAgICAgICAgKi8NCiAgICAgICAgYXBwbHlJbXBvcnRlZENvbmZpZzogZnVuY3Rpb24oY29uZmlnRGF0YSwgb3B0aW9ucyA9IHt9KSB7DQogICAgICAgICAgICBjb25zdCByZXN1bHQgPSB7DQogICAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSwNCiAgICAgICAgICAgICAgICBhcHBsaWVkOiAwLA0KICAgICAgICAgICAgICAgIHNraXBwZWQ6IDAsDQogICAgICAgICAgICAgICAgZXJyb3JzOiBbXQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDpqozor4HmlbDmja4NCiAgICAgICAgICAgICAgICBjb25zdCB2YWxpZGF0aW9uID0gdGhpcy52YWxpZGF0ZUNvbmZpZ0RhdGEoY29uZmlnRGF0YSk7DQogICAgICAgICAgICAgICAgaWYgKCF2YWxpZGF0aW9uLnZhbGlkKSB7DQogICAgICAgICAgICAgICAgICAgIHJlc3VsdC5zdWNjZXNzID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIHJlc3VsdC5lcnJvcnMgPSB2YWxpZGF0aW9uLmVycm9yczsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlupTnlKjphY3nva7pobkNCiAgICAgICAgICAgICAgICBpZiAoY29uZmlnRGF0YS5jb25maWcpIHsNCiAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmVu",
        "dHJpZXMoY29uZmlnRGF0YS5jb25maWcpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblnKjpu5jorqTphY3nva7kuK0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoa2V5IGluIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0KGtleSwgdmFsdWUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQuYXBwbGllZCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5za2lwcGVkKys7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKGDot7Pov4fmnKrnn6XphY3nva7pobk6ICR7a2V5fWApOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmVycm9ycy5wdXNoKGDlupTnlKjphY3nva7pobkgJHtrZXl9IOWksei0pTogJHtlcnJvci5tZXNzYWdlfWApOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlupTnlKjnlKjmiLfmlbDmja7vvIjlpoLmnpzlrZjlnKjkuJTpgInmi6nlr7zlhaXvvIkNCiAgICAgICAgICAgICAgICBpZiAoY29uZmlnRGF0YS51c2VyRGF0YSAmJiBvcHRpb25zLmluY2x1ZGVVc2VyRGF0YSkgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbmZpZ0RhdGEudXNlckRhdGEuYmxhY2tsaXN0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXQoJ2JsYWNrbGlzdCcsIGNvbmZpZ0RhdGEudXNlckRhdGEuYmxhY2tsaXN0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb25maWdEYXRhLnVzZXJEYXRhLnNlc3Npb25NZW1vcnkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgnc2Vzc2lvbk1lbW9yeScsIGNvbmZpZ0RhdGEudXNlckRhdGEuc2Vzc2lvbk1lbW9yeSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29uZmlnRGF0YS51c2VyRGF0YS5zcG90bGlnaHRDYWNoZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCdzcG90bGlnaHRQcm9jZXNzZWRVc2VycycsIGNvbmZpZ0RhdGEudXNlckRhdGEuc3BvdGxpZ2h0Q2FjaGUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbmZpZ0Rh",
        "dGEudXNlckRhdGEuYWNxdWlzaXRpb25TZW50VXNlcnMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgnYWNxdWlzaXRpb25TZW50VXNlcnMnLCBjb25maWdEYXRhLnVzZXJEYXRhLmFjcXVpc2l0aW9uU2VudFVzZXJzKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWvvOWFpeWbnuiuv+m7keWQjeWNleaVsOaNrg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbmZpZ0RhdGEudXNlckRhdGEuZm9sbG93VXBCbGFja2xpc3QpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgnZm9sbG93VXBCbGFja2xpc3QnLCBjb25maWdEYXRhLnVzZXJEYXRhLmZvbGxvd1VwQmxhY2tsaXN0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Zue6K6/6buR5ZCN5Y2V5pWw5o2u5a+85YWl5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudDogT2JqZWN0LmtleXMoY29uZmlnRGF0YS51c2VyRGF0YS5mb2xsb3dVcEJsYWNrbGlzdCkubGVuZ3RoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlr7zlhaXlm57orr/ljoblj7LmlbDmja4NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb25maWdEYXRhLnVzZXJEYXRhLmZvbGxvd1VwSGlzdG9yeSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCdmb2xsb3dVcEhpc3RvcnknLCBjb25maWdEYXRhLnVzZXJEYXRhLmZvbGxvd1VwSGlzdG9yeSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+Wbnuiuv+WOhuWPsuaVsOaNruWvvOWFpeaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQ6IE9iamVjdC5rZXlzKGNvbmZpZ0RhdGEudXNlckRhdGEuZm9sbG93VXBIaXN0b3J5KS5sZW5ndGgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWvvOWFpeWDteWwuOacquivu+iusOW9leaVsOaNrg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbmZpZ0RhdGEudXNlckRhdGEuem9tYmllVW5yZWFkUmVjb3Jkcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCd4aHNfem9tYmllX3VucmVhZF9yZWNvcmRzJywgY29uZmlnRGF0YS51c2VyRGF0YS56b21iaWVVbnJlYWRSZWNvcmRzKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5YO15bC45pyq6K+76K6w5b2V5pWw5o2u5a+85YWl5oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAg",
        "ICAgICByZXN1bHQuZXJyb3JzLnB1c2goYOW6lOeUqOeUqOaIt+aVsOaNruWksei0pTogJHtlcnJvci5tZXNzYWdlfWApOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+mFjee9ruWvvOWFpeWujOaIkCcsIHsgYXBwbGllZDogcmVzdWx0LmFwcGxpZWQsIHNraXBwZWQ6IHJlc3VsdC5za2lwcGVkIH0pOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIHJlc3VsdC5zdWNjZXNzID0gZmFsc2U7DQogICAgICAgICAgICAgICAgcmVzdWx0LmVycm9ycy5wdXNoKGDlr7zlhaXov4fnqIvlj5HnlJ/plJnor686ICR7ZXJyb3IubWVzc2FnZX1gKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+mFjee9ruWvvOWFpeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDlg7XlsLjmnKror7vlpITnkIbnrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IFpvbWJpZVVucmVhZE1hbmFnZXIgPSB7DQogICAgICAgIC8vIOWtmOWCqOmUruWQjQ0KICAgICAgICBTVE9SQUdFX0tFWTogJ3hoc196b21iaWVfdW5yZWFkX3JlY29yZHMnLA0KDQogICAgICAgIC8vIOWGheWtmOe8k+WtmA0KICAgICAgICBjYWNoZTogbmV3IE1hcCgpLA0KDQogICAgICAgIC8vIOWIneWni+WMluagh+W/lw0KICAgICAgICBpbml0aWFsaXplZDogZmFsc2UsDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIneWni+WMluWDteWwuOacquivu+euoeeQhuWZqA0KICAgICAgICAgKi8NCiAgICAgICAgaW5pdCgpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmluaXRpYWxpemVkKSByZXR1cm47DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgdGhpcy5sb2FkRnJvbVN0b3JhZ2UoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0Q2xlYW51cFRpbWVyKCk7DQogICAgICAgICAgICAgICAgdGhpcy5pbml0aWFsaXplZCA9IHRydWU7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfp58g5YO15bC45pyq6K+7566h55CG5Zmo5bey5Yid5aeL5YyWJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5YO15bC45pyq6K+7566h55CG5Zmo5Yid5aeL5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5rWL5piv5ZCm5Li65YO15bC45pyq6K+754q25oCBDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtz",
        "dHJpbmd9IG1lc3NhZ2VDb250ZW50IOa2iOaBr+WGheWuue+8iOWPr+iDveS4um51bGzvvIkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGxhc3RNZXNzYWdlUHJldmlldyDkvJror53liJfooajkuK3nmoTmnIDlkI7mtojmga/pooTop4gNCiAgICAgICAgICogQHBhcmFtIHtib29sZWFufSBoYXNBY3RpdmVXZWxjb21lU2VudCDmmK/lkKblt7Llj5HpgIHkuLvliqjor53mnK8NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g5qOA5rWL57uT5p6cDQogICAgICAgICAqLw0KICAgICAgICBkZXRlY3Rab21iaWVVbnJlYWQodXNlck5hbWUsIG1lc3NhZ2VDb250ZW50LCBsYXN0TWVzc2FnZVByZXZpZXcsIGhhc0FjdGl2ZVdlbGNvbWVTZW50KSB7DQogICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCd6b21iaWVVbnJlYWRFbmFibGVkJywgdHJ1ZSkpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4geyBpc1pvbWJpZTogZmFsc2UsIHJlYXNvbjogJ+WKn+iDveacquWQr+eUqCcgfTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5rWL5p2h5Lu277yaDQogICAgICAgICAgICAvLyAxLiDml6Dms5Xmj5Dlj5bliLDnlKjmiLfmtojmga/lhoXlrrnvvIhtZXNzYWdlQ29udGVudOS4um51bGzvvIkNCiAgICAgICAgICAgIC8vIDIuIOW3suWPkemAgei/h+S4u+WKqOasoui/juivneacrw0KICAgICAgICAgICAgLy8gMy4g5Lya6K+d5YiX6KGo5pi+56S655qE5piv6IGa5YWJ6L+b57q/5o+Q56S65raI5oGvDQogICAgICAgICAgICBjb25zdCBpc1pvbWJpZSA9ICFtZXNzYWdlQ29udGVudCAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzQWN0aXZlV2VsY29tZVNlbnQgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaXNTcG90bGlnaHRMZWFkTWVzc2FnZShsYXN0TWVzc2FnZVByZXZpZXcpOw0KDQogICAgICAgICAgICBpZiAoaXNab21iaWUpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBmaW5nZXJwcmludCA9IHRoaXMuZ2VuZXJhdGVNZXNzYWdlRmluZ2VycHJpbnQodXNlck5hbWUsIGxhc3RNZXNzYWdlUHJldmlldyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgaXNab21iaWU6IHRydWUsDQogICAgICAgICAgICAgICAgICAgIGZpbmdlcnByaW50LA0KICAgICAgICAgICAgICAgICAgICByZWFzb246ICfmo4DmtYvliLDlg7XlsLjmnKror7vvvJrml6DnlKjmiLfmtojmga8r5bey5Y+R6YCB5Li75Yqo6K+d5pyvK+iBmuWFiei/m+e6vycNCiAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4geyBpc1pvbWJpZTogZmFsc2UsIHJlYXNvbjogJ+S4jeespuWQiOWDteWwuOacquivu+adoeS7ticgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l5piv5ZCm5Zyo5Ya35Y205pyf5YaFDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0N",
        "CiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGZpbmdlcnByaW50IOa2iOaBr+aMh+e6uQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDlhrfljbTnirbmgIENCiAgICAgICAgICovDQogICAgICAgIGNoZWNrQ29vbGRvd24odXNlck5hbWUsIGZpbmdlcnByaW50KSB7DQogICAgICAgICAgICBjb25zdCByZWNvcmQgPSB0aGlzLmdldFJlY29yZCh1c2VyTmFtZSk7DQogICAgICAgICAgICBpZiAoIXJlY29yZCkgew0KICAgICAgICAgICAgICAgIHJldHVybiB7IGluQ29vbGRvd246IGZhbHNlLCByZWFzb246ICfml6DlhrfljbTorrDlvZUnIH07DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBjb25zdCBjb29sZG93bk1zID0gQ29uZmlnTWFuYWdlci5nZXQoJ3pvbWJpZVVucmVhZENvb2xkb3duTWludXRlcycsIDYwKSAqIDYwICogMTAwMDsNCiAgICAgICAgICAgIGNvbnN0IHRpbWVTaW5jZUxhc3RQcm9jZXNzID0gbm93IC0gcmVjb3JkLmxhc3RQcm9jZXNzVGltZTsNCg0KICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm6LaF6L+H5Ya35Y205pe26Ze0DQogICAgICAgICAgICBpZiAodGltZVNpbmNlTGFzdFByb2Nlc3MgPiBjb29sZG93bk1zKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHsgaW5Db29sZG93bjogZmFsc2UsIHJlYXNvbjogJ+WGt+WNtOaXtumXtOW3sui/h+acnycgfTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5p+l5raI5oGv5oyH57q55piv5ZCm5Y+Y5YyW77yI6KGo56S65pyJ5paw5raI5oGv77yJDQogICAgICAgICAgICBpZiAocmVjb3JkLmZpbmdlcnByaW50ICE9PSBmaW5nZXJwcmludCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5SEIOajgOa1i+WIsOa2iOaBr+WGheWuueWPmOWMlu+8jOa4hemZpOWGt+WNtOeKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIG9sZEZpbmdlcnByaW50OiByZWNvcmQuZmluZ2VycHJpbnQ/LnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgbmV3RmluZ2VycHJpbnQ6IGZpbmdlcnByaW50Py5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLmNsZWFyUmVjb3JkKHVzZXJOYW1lKTsNCiAgICAgICAgICAgICAgICByZXR1cm4geyBpbkNvb2xkb3duOiBmYWxzZSwgcmVhc29uOiAn5raI5oGv5YaF5a655bey5Y+Y5YyWJyB9Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb25zdCByZW1haW5pbmdNcyA9IGNvb2xkb3duTXMgLSB0aW1lU2luY2VMYXN0UHJvY2VzczsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgaW5Db29sZG93bjogdHJ1ZSwNCiAgICAgICAgICAgICAgICByZW1haW5pbmdNcywNCiAgICAgICAgICAgICAgICByZW1haW5pbmdNaW51dGVzOiBNYXRoLmNl",
        "aWwocmVtYWluaW5nTXMgLyA2MDAwMCksDQogICAgICAgICAgICAgICAgcmVhc29uOiBg5Ya35Y205Lit77yM5Ymp5L2ZJHtNYXRoLmNlaWwocmVtYWluaW5nTXMgLyA2MDAwMCl95YiG6ZKfYA0KICAgICAgICAgICAgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K6w5b2V5YO15bC45pyq6K+75aSE55CGDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGZpbmdlcnByaW50IOa2iOaBr+aMh+e6uQ0KICAgICAgICAgKi8NCiAgICAgICAgcmVjb3JkWm9tYmllUHJvY2Vzcyh1c2VyTmFtZSwgZmluZ2VycHJpbnQpIHsNCiAgICAgICAgICAgIGNvbnN0IHJlY29yZCA9IHsNCiAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICBmaW5nZXJwcmludCwNCiAgICAgICAgICAgICAgICBsYXN0UHJvY2Vzc1RpbWU6IERhdGUubm93KCksDQogICAgICAgICAgICAgICAgcHJvY2Vzc0NvdW50OiAodGhpcy5nZXRSZWNvcmQodXNlck5hbWUpPy5wcm9jZXNzQ291bnQgfHwgMCkgKyAxLA0KICAgICAgICAgICAgICAgIGNyZWF0ZWRBdDogdGhpcy5nZXRSZWNvcmQodXNlck5hbWUpPy5jcmVhdGVkQXQgfHwgRGF0ZS5ub3coKQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgdGhpcy5jYWNoZS5zZXQodXNlck5hbWUsIHJlY29yZCk7DQogICAgICAgICAgICB0aGlzLnNhdmVUb1N0b3JhZ2UoKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfp58g6K6w5b2V5YO15bC45pyq6K+75aSE55CGJywgew0KICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgIHByb2Nlc3NDb3VudDogcmVjb3JkLnByb2Nlc3NDb3VudCwNCiAgICAgICAgICAgICAgICBmaW5nZXJwcmludDogZmluZ2VycHJpbnQ/LnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOeUn+aIkOa2iOaBr+aMh+e6uQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCNDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlUHJldmlldyDmtojmga/pooTop4gNCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30g5raI5oGv5oyH57q5DQogICAgICAgICAqLw0KICAgICAgICBnZW5lcmF0ZU1lc3NhZ2VGaW5nZXJwcmludCh1c2VyTmFtZSwgbWVzc2FnZVByZXZpZXcpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBgJHt1c2VyTmFtZX06JHttZXNzYWdlUHJldmlldyB8fCAnJ31gOw0KICAgICAgICAgICAgLy8g566A5Y2V55qE5ZOI5biM5Ye95pWwDQogICAgICAgICAgICBsZXQgaGFzaCA9IDA7DQogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbnRlbnQubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgICBjb25zdCBjaGFyID0gY29udGVudC5jaGFyQ29kZUF0KGkpOw0K",
        "ICAgICAgICAgICAgICAgIGhhc2ggPSAoKGhhc2ggPDwgNSkgLSBoYXNoKSArIGNoYXI7DQogICAgICAgICAgICAgICAgaGFzaCA9IGhhc2ggJiBoYXNoOyAvLyDovazmjaLkuLozMuS9jeaVtOaVsA0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIGhhc2gudG9TdHJpbmcoMzYpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XmmK/lkKbkuLrogZrlhYnov5vnur/mtojmga8NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VQcmV2aWV3IOa2iOaBr+mihOiniA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGlzU3BvdGxpZ2h0TGVhZE1lc3NhZ2UobWVzc2FnZVByZXZpZXcpIHsNCiAgICAgICAgICAgIGlmICghbWVzc2FnZVByZXZpZXcpIHJldHVybiBmYWxzZTsNCg0KICAgICAgICAgICAgY29uc3Qgc3BvdGxpZ2h0S2V5d29yZHMgPSBbDQogICAgICAgICAgICAgICAgJ+mAmui/h+OAjCcsDQogICAgICAgICAgICAgICAgJ+i/m+WFpeengeS/oScsDQogICAgICAgICAgICAgICAgJ+W/q+WOu+iBlOezu+WQpycsDQogICAgICAgICAgICAgICAgJ+iBmuWFieeBrycsDQogICAgICAgICAgICAgICAgJ+W5v+WRiui/m+WFpScNCiAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgIHJldHVybiBzcG90bGlnaHRLZXl3b3Jkcy5zb21lKGtleXdvcmQgPT4gbWVzc2FnZVByZXZpZXcuaW5jbHVkZXMoa2V5d29yZCkpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bnlKjmiLforrDlvZUNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBnZXRSZWNvcmQodXNlck5hbWUpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLmNhY2hlLmdldCh1c2VyTmFtZSkgfHwgbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF6Zmk55So5oi36K6w5b2VDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICovDQogICAgICAgIGNsZWFyUmVjb3JkKHVzZXJOYW1lKSB7DQogICAgICAgICAgICB0aGlzLmNhY2hlLmRlbGV0ZSh1c2VyTmFtZSk7DQogICAgICAgICAgICB0aGlzLnNhdmVUb1N0b3JhZ2UoKTsNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+nnyDmuIXpmaTlg7XlsLjmnKror7vorrDlvZUnLCB7IHVzZXJOYW1lIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDku47lrZjlgqjliqDovb3mlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGxvYWRGcm9tU3RvcmFnZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IEdNX2dldFZhbHVlKHRoaXMuU1RPUkFHRV9LRVksICd7fScpOw0KICAgICAgICAgICAgICAgIGNvbnN0",
        "IHJlY29yZHMgPSBKU09OLnBhcnNlKGRhdGEpOw0KDQogICAgICAgICAgICAgICAgdGhpcy5jYWNoZS5jbGVhcigpOw0KICAgICAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKHJlY29yZHMpLmZvckVhY2goKFt1c2VyTmFtZSwgcmVjb3JkXSkgPT4gew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNhY2hlLnNldCh1c2VyTmFtZSwgcmVjb3JkKTsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+nnyDku47lrZjlgqjliqDovb3lg7XlsLjmnKror7vorrDlvZUnLCB7IGNvdW50OiB0aGlzLmNhY2hlLnNpemUgfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Yqg6L295YO15bC45pyq6K+76K6w5b2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLmNhY2hlLmNsZWFyKCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS/neWtmOWIsOWtmOWCqA0KICAgICAgICAgKi8NCiAgICAgICAgc2F2ZVRvU3RvcmFnZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgcmVjb3JkcyA9IHt9Ow0KICAgICAgICAgICAgICAgIHRoaXMuY2FjaGUuZm9yRWFjaCgocmVjb3JkLCB1c2VyTmFtZSkgPT4gew0KICAgICAgICAgICAgICAgICAgICByZWNvcmRzW3VzZXJOYW1lXSA9IHJlY29yZDsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKHRoaXMuU1RPUkFHRV9LRVksIEpTT04uc3RyaW5naWZ5KHJlY29yZHMpKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/Cfp58g5L+d5a2Y5YO15bC45pyq6K+76K6w5b2V5Yiw5a2Y5YKoJywgeyBjb3VudDogdGhpcy5jYWNoZS5zaXplIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S/neWtmOWDteWwuOacquivu+iusOW9leWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWQr+WKqOa4heeQhuWumuaXtuWZqA0KICAgICAgICAgKi8NCiAgICAgICAgc3RhcnRDbGVhbnVwVGltZXIoKSB7DQogICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCd6b21iaWVVbnJlYWRBdXRvQ2xlYW51cCcsIHRydWUpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmr4/lsI/ml7bmuIXnkIbkuIDmrKHov4fmnJ/orrDlvZUNCiAgICAgICAgICAgIHNldEludGVydmFsKCgpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmNsZWFudXBFeHBpcmVkUmVjb3JkcygpOw0KICAgICAgICAgICAgfSwgNjAgKiA2MCAqIDEwMDApOw0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWco",
        "J/Cfp58g5YO15bC45pyq6K+75riF55CG5a6a5pe25Zmo5bey5ZCv5YqoJyk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heeQhui/h+acn+iusOW9lQ0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYW51cEV4cGlyZWRSZWNvcmRzKCkgew0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGNvbnN0IGV4cGlyZURheXMgPSBDb25maWdNYW5hZ2VyLmdldCgnem9tYmllVW5yZWFkQ2xlYW51cERheXMnLCA3KTsNCiAgICAgICAgICAgIGNvbnN0IGV4cGlyZU1zID0gZXhwaXJlRGF5cyAqIDI0ICogNjAgKiA2MCAqIDEwMDA7DQoNCiAgICAgICAgICAgIGxldCBjbGVhbmVkQ291bnQgPSAwOw0KDQogICAgICAgICAgICB0aGlzLmNhY2hlLmZvckVhY2goKHJlY29yZCwgdXNlck5hbWUpID0+IHsNCiAgICAgICAgICAgICAgICBpZiAobm93IC0gcmVjb3JkLmNyZWF0ZWRBdCA+IGV4cGlyZU1zKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuY2FjaGUuZGVsZXRlKHVzZXJOYW1lKTsNCiAgICAgICAgICAgICAgICAgICAgY2xlYW5lZENvdW50Kys7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIGlmIChjbGVhbmVkQ291bnQgPiAwKSB7DQogICAgICAgICAgICAgICAgdGhpcy5zYXZlVG9TdG9yYWdlKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfp58g5riF55CG6L+H5pyf5YO15bC45pyq6K+76K6w5b2VJywgew0KICAgICAgICAgICAgICAgICAgICBjbGVhbmVkQ291bnQsDQogICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ0NvdW50OiB0aGlzLmNhY2hlLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W57uf6K6h5L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0cygpIHsNCiAgICAgICAgICAgIGNvbnN0IHJlY29yZHMgPSBBcnJheS5mcm9tKHRoaXMuY2FjaGUudmFsdWVzKCkpOw0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGNvbnN0IGNvb2xkb3duTXMgPSBDb25maWdNYW5hZ2VyLmdldCgnem9tYmllVW5yZWFkQ29vbGRvd25NaW51dGVzJywgNjApICogNjAgKiAxMDAwOw0KDQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIHRvdGFsUmVjb3JkczogcmVjb3Jkcy5sZW5ndGgsDQogICAgICAgICAgICAgICAgaW5Db29sZG93bjogcmVjb3Jkcy5maWx0ZXIociA9PiBub3cgLSByLmxhc3RQcm9jZXNzVGltZSA8IGNvb2xkb3duTXMpLmxlbmd0aCwNCiAgICAgICAgICAgICAgICB0b3RhbFByb2Nlc3NlczogcmVjb3Jkcy5yZWR1Y2UoKHN1bSwgcikgPT4gc3VtICsgci5wcm9jZXNzQ291bnQsIDApLA0KICAgICAgICAgICAgICAgIG9sZGVzdFJlY29yZDogcmVjb3Jkcy5sZW5ndGgg",
        "PiAwID8gTWF0aC5taW4oLi4ucmVjb3Jkcy5tYXAociA9PiByLmNyZWF0ZWRBdCkpIDogbnVsbA0KICAgICAgICAgICAgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6YeN572u5omA5pyJ6K6w5b2V77yI6LCD6K+V55So77yJDQogICAgICAgICAqLw0KICAgICAgICByZXNldCgpIHsNCiAgICAgICAgICAgIHRoaXMuY2FjaGUuY2xlYXIoKTsNCiAgICAgICAgICAgIHRoaXMuc2F2ZVRvU3RvcmFnZSgpOw0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfp58g5bey6YeN572u5omA5pyJ5YO15bC45pyq6K+76K6w5b2VJyk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDmnI3liqHnq6/nrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IFNlcnZlck1hbmFnZXIgPSB7DQogICAgICAgIC8vIOeUqOaIt+WUr+S4gOagh+ivhg0KICAgICAgICB1c2VySWQ6IG51bGwsDQoNCiAgICAgICAgLy8g5a6a5pe25ZmoDQogICAgICAgIGNoZWNrVGltZXI6IG51bGwsDQogICAgICAgIGhlYXJ0YmVhdFRpbWVyOiBudWxsLA0KDQogICAgICAgIC8vIOeKtuaAgQ0KICAgICAgICBpc0Nvbm5lY3RlZDogZmFsc2UsDQogICAgICAgIGxhc3RDaGVja1RpbWU6IG51bGwsDQogICAgICAgIHJldHJ5Q291bnQ6IDAsDQoNCiAgICAgICAgLy8g5pyN5Yqh56uv5o6n5Yi254q25oCB77yI5YWz6ZSu77ya6L+Z5Liq5Yaz5a6a6ISa5pys5piv5ZCm5Y+v5Lul6L+Q6KGM77yJDQogICAgICAgIHNlcnZlckVuYWJsZWQ6IHRydWUsDQogICAgICAgIGxhc3RTZXJ2ZXJDaGVjazogbnVsbCwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yid5aeL5YyW5pyN5Yqh56uv566h55CG5ZmoDQogICAgICAgICAqLw0KICAgICAgICBpbml0KCkgew0KICAgICAgICAgICAgaWYgKCFDT05GSUcuU0VSVkVSLmVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/CfjJAg5pyN5Yqh56uv5Yqf6IO95bey56aB55SoJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOeUn+aIkOaIluiOt+WPlueUqOaIt0lEDQogICAgICAgICAgICAgICAgdGhpcy51c2VySWQgPSB0aGlzLmdldFVzZXJJZCgpOw0KDQogICAgICAgICAgICAgICAgLy8g56uL5Y2z5qOA5p+l5LiA5qyhDQogICAgICAgICAgICAgICAgdGhpcy5jaGVja1NlcnZlclN0YXR1cygpOw0KDQogICAgICAgICAgICAgICAgLy8g5ZCv5Yqo5a6a5pe25qOA5p+lDQogICAgICAgICAgICAgICAgdGhpcy5zdGFydFRpbWVycygpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CfjJAg5pyN5Yqh56uv566h55CG5Zmo5bey5Yid5aeL5YyWJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHRoaXMudXNlcklkLA0KICAgICAgICAgICAgICAg",
        "ICAgICBzZXJ2ZXJVcmw6IENPTkZJRy5TRVJWRVIuYmFzZVVybA0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+acjeWKoeerr+euoeeQhuWZqOWIneWni+WMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluaIlueUn+aIkOeUqOaIt0lEDQogICAgICAgICAqLw0KICAgICAgICBnZXRVc2VySWQoKSB7DQogICAgICAgICAgICBsZXQgdXNlcklkID0gR01fZ2V0VmFsdWUoJ3NlcnZlcl91c2VyX2lkJyk7DQogICAgICAgICAgICBpZiAoIXVzZXJJZCkgew0KICAgICAgICAgICAgICAgIHVzZXJJZCA9ICd1c2VyXycgKyBEYXRlLm5vdygpICsgJ18nICsgTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpOw0KICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCdzZXJ2ZXJfdXNlcl9pZCcsIHVzZXJJZCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CfhpQg55Sf5oiQ5paw55So5oi3SUQnLCB7IHVzZXJJZCB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHJldHVybiB1c2VySWQ7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWQr+WKqOWumuaXtuWZqA0KICAgICAgICAgKi8NCiAgICAgICAgc3RhcnRUaW1lcnMoKSB7DQogICAgICAgICAgICAvLyDnirbmgIHmo4Dmn6Xlrprml7blmagNCiAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrVGltZXIpIHsNCiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuY2hlY2tUaW1lcik7DQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLmNoZWNrVGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5jaGVja1NlcnZlclN0YXR1cygpOw0KICAgICAgICAgICAgfSwgQ09ORklHLlNFUlZFUi5jaGVja0ludGVydmFsKTsNCg0KICAgICAgICAgICAgLy8g5b+D6Lez5a6a5pe25ZmoDQogICAgICAgICAgICBpZiAodGhpcy5oZWFydGJlYXRUaW1lcikgew0KICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5oZWFydGJlYXRUaW1lcik7DQogICAgICAgICAgICB9DQogICAgICAgICAgICB0aGlzLmhlYXJ0YmVhdFRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMuc2VuZEhlYXJ0YmVhdCgpOw0KICAgICAgICAgICAgfSwgQ09ORklHLlNFUlZFUi5oZWFydGJlYXRJbnRlcnZhbCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWBnOatouWumuaXtuWZqA0KICAgICAgICAgKi8NCiAgICAgICAgc3RvcFRpbWVycygpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrVGltZXIpIHsNCiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuY2hlY2tUaW1lcik7DQogICAgICAgICAgICAgICAgdGhp",
        "cy5jaGVja1RpbWVyID0gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGlmICh0aGlzLmhlYXJ0YmVhdFRpbWVyKSB7DQogICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmhlYXJ0YmVhdFRpbWVyKTsNCiAgICAgICAgICAgICAgICB0aGlzLmhlYXJ0YmVhdFRpbWVyID0gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Y+R6YCBSFRUUOivt+axguWIsOacjeWKoeerrw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgc2VuZFJlcXVlc3QoZW5kcG9pbnQsIGRhdGEgPSBudWxsLCBtZXRob2QgPSAnR0VUJykgew0KICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsNCiAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSBgJHtDT05GSUcuU0VSVkVSLmJhc2VVcmx9L2FwaS92MSR7ZW5kcG9pbnR9YDsNCiAgICAgICAgICAgICAgICBjb25zdCByZXF1ZXN0RGF0YSA9IHsNCiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiBtZXRob2QsDQogICAgICAgICAgICAgICAgICAgIHVybDogdXJsLA0KICAgICAgICAgICAgICAgICAgICB0aW1lb3V0OiBDT05GSUcuU0VSVkVSLnRpbWVvdXQsDQogICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsDQogICAgICAgICAgICAgICAgICAgICAgICAnVXNlci1BZ2VudCc6IGAke0NPTkZJRy5BUFBfTkFNRX0vJHtDT05GSUcuVkVSU0lPTn1gDQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIG9ubG9hZDogKHJlc3BvbnNlKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPj0gMjAwICYmIHJlc3BvbnNlLnN0YXR1cyA8IDMwMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBKU09OLnBhcnNlKHJlc3BvbnNlLnJlc3BvbnNlVGV4dCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmVzdWx0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGBIVFRQICR7cmVzcG9uc2Uuc3RhdHVzfTogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYOino+aekOWTjeW6lOWksei0pTogJHtlcnJvci5tZXNzYWdlfWApKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgb25lcnJvcjog",
        "KGVycm9yKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGDnvZHnu5zor7fmsYLlpLHotKU6ICR7ZXJyb3IubWVzc2FnZSB8fCAn5pyq55+l6ZSZ6K+vJ31gKSk7DQogICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgIG9udGltZW91dDogKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcign6K+35rGC6LaF5pe2JykpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIGlmIChkYXRhICYmIChtZXRob2QgPT09ICdQT1NUJyB8fCBtZXRob2QgPT09ICdQVVQnKSkgew0KICAgICAgICAgICAgICAgICAgICByZXF1ZXN0RGF0YS5kYXRhID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgR01feG1saHR0cFJlcXVlc3QocmVxdWVzdERhdGEpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpeacjeWKoeerr+eKtuaAgeWSjOabtOaWsA0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgY2hlY2tTZXJ2ZXJTdGF0dXMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHRoaXMubGFzdENoZWNrVGltZSA9IERhdGUubm93KCk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuc2VuZFJlcXVlc3QoJy9zY3JpcHQvY2hlY2stdXBkYXRlJywgew0KICAgICAgICAgICAgICAgICAgICBjdXJyZW50VmVyc2lvbjogQ09ORklHLlZFUlNJT04sDQogICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdGhpcy51c2VySWQsDQogICAgICAgICAgICAgICAgICAgIHVzZXJBZ2VudDogbmF2aWdhdG9yLnVzZXJBZ2VudCwNCiAgICAgICAgICAgICAgICAgICAgbGFzdENoZWNrVGltZTogdGhpcy5sYXN0Q2hlY2tUaW1lID8gbmV3IERhdGUodGhpcy5sYXN0Q2hlY2tUaW1lKS50b0lTT1N0cmluZygpIDogbnVsbA0KICAgICAgICAgICAgICAgIH0sICdQT1NUJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmlzQ29ubmVjdGVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXRyeUNvdW50ID0gMDsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5sYXN0U2VydmVyQ2hlY2sgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSByZXNwb25zZS5kYXRhOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOa3u+WKoOiwg+ivleaXpeW/lw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/CflI0g5pyN5Yqh56uv5ZON5bqU5pWw5o2uJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgaGFzVXBkYXRlOiBkYXRhLmhhc1VwZGF0ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGxhdGVzdFZlcnNp",
        "b246IGRhdGEubGF0ZXN0VmVyc2lvbiwNCiAgICAgICAgICAgICAgICAgICAgICAgIHZlcnNpb246IGRhdGEudmVyc2lvbiwNCiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWZXJzaW9uOiBkYXRhLmN1cnJlbnRWZXJzaW9uLA0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yY2VVcGRhdGU6IGRhdGEuZm9yY2VVcGRhdGUsDQogICAgICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiBkYXRhLmVuYWJsZWQsDQogICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVVcmw6IGRhdGEudXBkYXRlVXJsLA0KICAgICAgICAgICAgICAgICAgICAgICAgdmVyc2lvbkluZm86IGRhdGEudmVyc2lvbkluZm8sDQogICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJDb25maWc6IGRhdGEuc2VydmVyQ29uZmlnDQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeiEmuacrOaYr+WQpuiiq+emgeeUqA0KICAgICAgICAgICAgICAgICAgICBpZiAoIWRhdGEuZW5hYmxlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ/Cfmqsg6ISa5pys5bey6KKr5byA5Y+R6ICF56aB55SoJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlcnZlckVuYWJsZWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlU2NyaXB0RGlzYWJsZWQoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOiEmuacrOiiq+mHjeaWsOWQr+eUqA0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLnNlcnZlckVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOiEmuacrOW3suiiq+W8gOWPkeiAhemHjeaWsOWQr+eUqCcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VydmVyRW5hYmxlZCA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVTY3JpcHRFbmFibGVkKCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAvLyDlhbzlrrnmlrDml6dBUEnmoLzlvI8NCiAgICAgICAgICAgICAgICAgICAgY29uc3QgbGF0ZXN0VmVyc2lvbiA9IGRhdGEubGF0ZXN0VmVyc2lvbiB8fCBkYXRhLnZlcnNpb24gfHwgJ3Vua25vd24nOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeW8uuWItuabtOaWsA0KICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5oYXNVcGRhdGUgJiYgZGF0YS5mb3JjZVVwZGF0ZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ/CflIQg5qOA5rWL5Yiw5by65Yi25pu05pawJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWZXJzaW9uOiBDT05GSUcuVkVSU0lPTiwNCiAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICBsYXRlc3RWZXJzaW9uOiBsYXRlc3RWZXJzaW9uLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlclJlc3BvbnNlOiBkYXRhDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlRm9yY2VVcGRhdGUoZGF0YSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6Xmma7pgJrmm7TmlrANCiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuaGFzVXBkYXRlICYmICFkYXRhLmZvcmNlVXBkYXRlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+TpiDmo4DmtYvliLDlj6/pgInmm7TmlrAnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFZlcnNpb246IENPTkZJRy5WRVJTSU9OLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhdGVzdFZlcnNpb246IGxhdGVzdFZlcnNpb24sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VydmVyUmVzcG9uc2U6IGRhdGENCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVPcHRpb25hbFVwZGF0ZShkYXRhKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn4pyFIOacjeWKoeerr+eKtuaAgeajgOafpeaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IGRhdGEuZW5hYmxlZCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc1VwZGF0ZTogZGF0YS5oYXNVcGRhdGUsDQogICAgICAgICAgICAgICAgICAgICAgICB2ZXJzaW9uOiBsYXRlc3RWZXJzaW9uLA0KICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlU3RyYXRlZ3k6IGRhdGEuc2VydmVyQ29uZmlnPy51cGRhdGVTdHJhdGVneSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRDaGVja1RpbWU6IGRhdGEubmV4dENoZWNrVGltZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDpgJrnn6VVSeabtOaWsOeKtuaAgQ0KICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeVVJVXBkYXRlKCk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHJlc3BvbnNlLmVycm9yIHx8ICfmnI3liqHnq6/ov5Tlm57plJnor68nKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc0Nvbm5lY3RlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIHRoaXMucmV0cnlDb3VudCsrOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfinYwg5pyN5Yqh56uv54q25oCB5qOA5p+l5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAg",
        "ICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgcmV0cnlDb3VudDogdGhpcy5yZXRyeUNvdW50DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDpgJrnn6VVSeabtOaWsOeKtuaAgQ0KICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5VUlVcGRhdGUoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOi+vuWIsOacgOWkp+mHjeivleasoeaVsOWQjumZjeS9juajgOafpemikeeOhw0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnJldHJ5Q291bnQgPj0gQ09ORklHLlNFUlZFUi5tYXhSZXRyaWVzKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfwn5SEIOacjeWKoeerr+i/nuaOpeWksei0pe+8jOmZjeS9juajgOafpemikeeOhycpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmFkanVzdENoZWNrSW50ZXJ2YWwodHJ1ZSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlj5HpgIHlv4Pot7MNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHNlbmRIZWFydGJlYXQoKSB7DQogICAgICAgICAgICBpZiAoIXRoaXMuaXNDb25uZWN0ZWQpIHJldHVybjsNCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuc2VuZFJlcXVlc3QoJy9zY3JpcHQvaGVhcnRiZWF0Jywgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHRoaXMudXNlcklkLA0KICAgICAgICAgICAgICAgICAgICB2ZXJzaW9uOiBDT05GSUcuVkVSU0lPTiwNCiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpLA0KICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IENvbmZpZ01hbmFnZXIuZ2V0KCdlbmFibGVkJyksDQogICAgICAgICAgICAgICAgICAgICAgICBydW5uaW5nOiB3aW5kb3cuWEhTQXV0b1JlcGx5Py5pc1J1bm5pbmcgfHwgZmFsc2UsDQogICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHdpbmRvdy5sb2NhdGlvbi5ocmVmDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9LCAnUE9TVCcpOw0KDQogICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfwn5KTIOW/g+i3s+WPkemAgeaIkOWKnycpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+SlCDlv4Pot7Plj5HpgIHlpLHotKUnLCB7IGVycm9yOiByZXNwb25zZS5lcnJvciB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+SlCDlv4Pot7Plj5HpgIHlvILluLgnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAg",
        "fQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbohJrmnKzooqvnpoHnlKgNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVNjcmlwdERpc2FibGVkKCkgew0KICAgICAgICAgICAgLy8g5YGc5q2i6ISa5pys6L+Q6KGMDQogICAgICAgICAgICBpZiAod2luZG93LlhIU0F1dG9SZXBseSAmJiB3aW5kb3cuWEhTQXV0b1JlcGx5LmlzUnVubmluZykgew0KICAgICAgICAgICAgICAgIHdpbmRvdy5YSFNBdXRvUmVwbHkuc3RvcCgpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmmL7npLrpgJrnn6UNCiAgICAgICAgICAgIEdNX25vdGlmaWNhdGlvbih7DQogICAgICAgICAgICAgICAgdGl0bGU6IENPTkZJRy5BUFBfTkFNRSwNCiAgICAgICAgICAgICAgICB0ZXh0OiAn6ISa5pys5bey6KKr5byA5Y+R6ICF56aB55So77yM6K+36IGU57O75byA5Y+R6ICF5LqG6Kej6K+m5oOFJywNCiAgICAgICAgICAgICAgICB0aW1lb3V0OiAxMDAwMA0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOemgeeUqOacrOWcsOmFjee9rg0KICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2VuYWJsZWQnLCBmYWxzZSk7DQoNCiAgICAgICAgICAgIC8vIOiuvue9ruacjeWKoeerr+emgeeUqOagh+iusA0KICAgICAgICAgICAgdGhpcy5sYXN0U2VydmVyQ2hlY2sgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICBMb2dnZXIud2Fybign8J+aqyDohJrmnKzlt7LooqvmnI3liqHnq6/npoHnlKgnKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6ISa5pys6KKr6YeN5paw5ZCv55SoDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVTY3JpcHRFbmFibGVkKCkgew0KICAgICAgICAgICAgLy8g5pi+56S66YCa55+lDQogICAgICAgICAgICBHTV9ub3RpZmljYXRpb24oew0KICAgICAgICAgICAgICAgIHRpdGxlOiBDT05GSUcuQVBQX05BTUUsDQogICAgICAgICAgICAgICAgdGV4dDogJ+iEmuacrOW3suiiq+W8gOWPkeiAhemHjeaWsOWQr+eUqCcsDQogICAgICAgICAgICAgICAgdGltZW91dDogNTAwMA0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOmHjeaWsOWQr+eUqOacrOWcsOmFjee9rg0KICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2VuYWJsZWQnLCB0cnVlKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDohJrmnKzlt7LooqvmnI3liqHnq6/ph43mlrDlkK/nlKgnKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5by65Yi25pu05pawDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVGb3JjZVVwZGF0ZSh1cGRhdGVEYXRhKSB7DQogICAgICAgICAgICAvLyDlhbzlrrnmlrDml6dBUEnmoLzlvI8NCiAgICAgICAgICAgIGNvbnN0IGxhdGVzdFZlcnNpb24gPSB1cGRhdGVEYXRhLmxhdGVzdFZlcnNpb24gfHwgdXBkYXRlRGF0YS52ZXJzaW9uIHx8ICd1bmtub3duJzsNCiAgICAgICAg",
        "ICAgIGNvbnN0IGNoYW5nZWxvZyA9IHVwZGF0ZURhdGEuY2hhbmdlbG9nIHx8IHVwZGF0ZURhdGEudmVyc2lvbkluZm8/LmNoYW5nZWxvZyB8fCAn6K+35pu05paw5Yiw5pyA5paw54mI5pysJzsNCiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZVVybCA9IHVwZGF0ZURhdGEudXBkYXRlVXJsIHx8IHVwZGF0ZURhdGEudmVyc2lvbkluZm8/LnVwZGF0ZVVybCB8fCAnJzsNCg0KICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IGDmo4DmtYvliLDlvLrliLbmm7TmlrDvvIFcblxu5b2T5YmN54mI5pys77yaJHtDT05GSUcuVkVSU0lPTn1cbuacgOaWsOeJiOacrO+8miR7bGF0ZXN0VmVyc2lvbn1cblxuJHtjaGFuZ2Vsb2d9XG5cbueCueWHu+ehruWumui3s+i9rOWIsOabtOaWsOmhtemdomA7DQoNCiAgICAgICAgICAgIEdNX25vdGlmaWNhdGlvbih7DQogICAgICAgICAgICAgICAgdGl0bGU6ICflvLrliLbmm7TmlrDpgJrnn6UnLA0KICAgICAgICAgICAgICAgIHRleHQ6IGDlj5HnjrDmlrDniYjmnKwgJHtsYXRlc3RWZXJzaW9ufe+8jOWNs+WwhuiHquWKqOabtOaWsC4uLmAsDQogICAgICAgICAgICAgICAgdGltZW91dDogNTAwMA0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIDPnp5LlkI7oh6rliqjot7PovawNCiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgIGlmICh1cGRhdGVVcmwpIHsNCiAgICAgICAgICAgICAgICAgICAgd2luZG93Lm9wZW4odXBkYXRlVXJsLCAnX2JsYW5rJyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ+ivt+aJi+WKqOabtOaWsOiEmuacrOWIsOacgOaWsOeJiOacrO+8micgKyBsYXRlc3RWZXJzaW9uKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9LCAzMDAwKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ/CflIQg5by65Yi25pu05paw6Kem5Y+RJywgew0KICAgICAgICAgICAgICAgIC4uLnVwZGF0ZURhdGEsDQogICAgICAgICAgICAgICAgcGFyc2VkVmVyc2lvbjogbGF0ZXN0VmVyc2lvbiwNCiAgICAgICAgICAgICAgICBwYXJzZWRVcmw6IHVwZGF0ZVVybA0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWPr+mAieabtOaWsA0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlT3B0aW9uYWxVcGRhdGUodXBkYXRlRGF0YSkgew0KICAgICAgICAgICAgLy8g5YW85a655paw5penQVBJ5qC85byPDQogICAgICAgICAgICBjb25zdCBsYXRlc3RWZXJzaW9uID0gdXBkYXRlRGF0YS5sYXRlc3RWZXJzaW9uIHx8IHVwZGF0ZURhdGEudmVyc2lvbiB8fCAndW5rbm93bic7DQogICAgICAgICAgICBjb25zdCB1cGRhdGVVcmwgPSB1cGRhdGVEYXRhLnVwZGF0ZVVybCB8fCB1cGRhdGVEYXRhLnZlcnNpb25JbmZvPy51cGRhdGVVcmwgfHwgJyc7DQoNCiAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuW3sue7j+aPkOekuui/h+i/meS4queJ",
        "iOacrA0KICAgICAgICAgICAgY29uc3QgbGFzdE5vdGlmaWVkVmVyc2lvbiA9IEdNX2dldFZhbHVlKCdsYXN0X25vdGlmaWVkX3ZlcnNpb24nKTsNCiAgICAgICAgICAgIGlmIChsYXN0Tm90aWZpZWRWZXJzaW9uID09PSBsYXRlc3RWZXJzaW9uKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBHTV9ub3RpZmljYXRpb24oew0KICAgICAgICAgICAgICAgIHRpdGxlOiAn5Y+R546w5paw54mI5pysJywNCiAgICAgICAgICAgICAgICB0ZXh0OiBg5Y+R546w5paw54mI5pysICR7bGF0ZXN0VmVyc2lvbn3vvIzngrnlh7vmn6XnnIvmm7TmlrBgLA0KICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDgwMDAsDQogICAgICAgICAgICAgICAgb25jbGljazogKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBpZiAodXBkYXRlVXJsKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cub3Blbih1cGRhdGVVcmwsICdfYmxhbmsnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAvLyDorrDlvZXlt7Lmj5DnpLrnmoTniYjmnKwNCiAgICAgICAgICAgIEdNX3NldFZhbHVlKCdsYXN0X25vdGlmaWVkX3ZlcnNpb24nLCBsYXRlc3RWZXJzaW9uKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfk6Yg5Y+v6YCJ5pu05paw6YCa55+l5bey5pi+56S6Jywgew0KICAgICAgICAgICAgICAgIC4uLnVwZGF0ZURhdGEsDQogICAgICAgICAgICAgICAgcGFyc2VkVmVyc2lvbjogbGF0ZXN0VmVyc2lvbiwNCiAgICAgICAgICAgICAgICBwYXJzZWRVcmw6IHVwZGF0ZVVybA0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiwg+aVtOajgOafpemXtOmalA0KICAgICAgICAgKi8NCiAgICAgICAgYWRqdXN0Q2hlY2tJbnRlcnZhbChpbmNyZWFzZSA9IGZhbHNlKSB7DQogICAgICAgICAgICBpZiAoaW5jcmVhc2UpIHsNCiAgICAgICAgICAgICAgICAvLyDlop7liqDmo4Dmn6Xpl7TpmpTliLA15YiG6ZKfDQogICAgICAgICAgICAgICAgaWYgKHRoaXMuY2hlY2tUaW1lcikgew0KICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuY2hlY2tUaW1lcik7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tUaW1lciA9IHNldEludGVydmFsKCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tTZXJ2ZXJTdGF0dXMoKTsNCiAgICAgICAgICAgICAgICAgICAgfSwgMzAwMDAwKTsgLy8gNeWIhumSnw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgLy8g5oGi5aSN5q2j5bi45qOA5p+l6Ze06ZqUDQogICAgICAgICAgICAgICAgdGhpcy5zdGFydFRpbWVycygpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5blhazl",
        "kYoNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGdldEFubm91bmNlbWVudHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zZW5kUmVxdWVzdCgnL2Fubm91bmNlbWVudHMvcHVibGljJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3VjY2VzcyAmJiByZXNwb25zZS5kYXRhLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UuZGF0YS5mb3JFYWNoKGFubm91bmNlbWVudCA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dBbm5vdW5jZW1lbnQoYW5ub3VuY2VtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+iOt+WPluWFrOWRiuWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaYvuekuuWFrOWRig0KICAgICAgICAgKi8NCiAgICAgICAgc2hvd0Fubm91bmNlbWVudChhbm5vdW5jZW1lbnQpIHsNCiAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuW3sue7j+aYvuekuui/h+i/meS4quWFrOWRig0KICAgICAgICAgICAgY29uc3Qgc2hvd25Bbm5vdW5jZW1lbnRzID0gR01fZ2V0VmFsdWUoJ3Nob3duX2Fubm91bmNlbWVudHMnLCBbXSk7DQogICAgICAgICAgICBpZiAoc2hvd25Bbm5vdW5jZW1lbnRzLmluY2x1ZGVzKGFubm91bmNlbWVudC5pZCkpIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOagueaNruWFrOWRiuexu+Wei+mAieaLqemAmuefpeagt+W8jw0KICAgICAgICAgICAgbGV0IHRpdGxlID0gJ/Cfk6Ig57O757uf5YWs5ZGKJzsNCiAgICAgICAgICAgIHN3aXRjaCAoYW5ub3VuY2VtZW50LnR5cGUpIHsNCiAgICAgICAgICAgICAgICBjYXNlICd3YXJuaW5nJzoNCiAgICAgICAgICAgICAgICAgICAgdGl0bGUgPSAn4pqg77iPIOmHjeimgeaPkOmGkic7DQogICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgIGNhc2UgJ2Vycm9yJzoNCiAgICAgICAgICAgICAgICAgICAgdGl0bGUgPSAn8J+aqCDntKfmgKXpgJrnn6UnOw0KICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICBjYXNlICdzdWNjZXNzJzoNCiAgICAgICAgICAgICAgICAgICAgdGl0bGUgPSAn4pyFIOWlvea2iOaBryc7DQogICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBHTV9ub3RpZmljYXRpb24oew0KICAgICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSwNCiAgICAgICAgICAgICAgICB0ZXh0OiBgJHthbm5vdW5jZW1lbnQudGl0bGV9XG5cbiR7YW5ub3VuY2VtZW50LmNvbnRlbnR9YCwNCiAgICAgICAg",
        "ICAgICAgICB0aW1lb3V0OiAxMDAwMA0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOiusOW9leW3suaYvuekuueahOWFrOWRig0KICAgICAgICAgICAgc2hvd25Bbm5vdW5jZW1lbnRzLnB1c2goYW5ub3VuY2VtZW50LmlkKTsNCiAgICAgICAgICAgIEdNX3NldFZhbHVlKCdzaG93bl9hbm5vdW5jZW1lbnRzJywgc2hvd25Bbm5vdW5jZW1lbnRzKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfk6Ig5YWs5ZGK5bey5pi+56S6Jywgew0KICAgICAgICAgICAgICAgIGlkOiBhbm5vdW5jZW1lbnQuaWQsDQogICAgICAgICAgICAgICAgdGl0bGU6IGFubm91bmNlbWVudC50aXRsZQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpeacjeWKoeerr+aYr+WQpuWFgeiuuOiEmuacrOi/kOihjA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5YWB6K646L+Q6KGMDQogICAgICAgICAqLw0KICAgICAgICBpc1NjcmlwdEFsbG93ZWQoKSB7DQogICAgICAgICAgICBpZiAoIUNPTkZJRy5TRVJWRVIuZW5hYmxlZCkgew0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOyAvLyDlpoLmnpzmnI3liqHnq6/lip/og73ooqvnpoHnlKjvvIzliJnlhYHorrjov5DooYwNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5aaC5p6c5LuO5pyq6L+e5o6l6L+H5pyN5Yqh56uv77yM5YWB6K646L+Q6KGM77yI6YG/5YWN572R57uc6Zeu6aKY5a+86Ie06ISa5pys5peg5rOV5L2/55So77yJDQogICAgICAgICAgICBpZiAodGhpcy5sYXN0U2VydmVyQ2hlY2sgPT09IG51bGwpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5aaC5p6c5pyA6L+R5qOA5p+l6L+H5LiU6KKr56aB55So77yM5YiZ5LiN5YWB6K646L+Q6KGMDQogICAgICAgICAgICBpZiAoIXRoaXMuc2VydmVyRW5hYmxlZCkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVTaW5jZUxhc3RDaGVjayA9IERhdGUubm93KCkgLSB0aGlzLmxhc3RTZXJ2ZXJDaGVjazsNCiAgICAgICAgICAgICAgICAvLyDlpoLmnpzotoXov4c15YiG6ZKf5rKh5pyJ5qOA5p+l77yM5YWB6K646L+Q6KGM77yI6YG/5YWN572R57uc6Zeu6aKY77yJDQogICAgICAgICAgICAgICAgaWYgKHRpbWVTaW5jZUxhc3RDaGVjayA+IDUgKiA2MCAqIDEwMDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KaoO+4jyDmnI3liqHnq6/mo4Dmn6XotoXml7bvvIzlhYHorrjohJrmnKzov5DooYwnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmAmuefpVVJ5pu05paw54q25oCBDQogICAgICAg",
        "ICAqLw0KICAgICAgICBub3RpZnlVSVVwZGF0ZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5VSU1hbmFnZXIgJiYgdHlwZW9mIHdpbmRvdy5VSU1hbmFnZXIudXBkYXRlU2VydmVyU3RhdHVzID09PSAnZnVuY3Rpb24nKSB7DQogICAgICAgICAgICAgICAgICAgIHdpbmRvdy5VSU1hbmFnZXIudXBkYXRlU2VydmVyU3RhdHVzKCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mAmuefpVVJ5pu05paw5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6ZSA5q+B5pyN5Yqh56uv566h55CG5ZmoDQogICAgICAgICAqLw0KICAgICAgICBkZXN0cm95KCkgew0KICAgICAgICAgICAgdGhpcy5zdG9wVGltZXJzKCk7DQogICAgICAgICAgICB0aGlzLmlzQ29ubmVjdGVkID0gZmFsc2U7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+MkCDmnI3liqHnq6/nrqHnkIblmajlt7LplIDmr4EnKTsNCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOmFjee9ruWvvOWHuueuoeeQhuWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgQ29uZmlnRXhwb3J0TWFuYWdlciA9IHsNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWvvOWHuuS7hemFjee9ruaVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgZXhwb3J0Q29uZmlnT25seTogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflvIDlp4vlr7zlh7rphY3nva7mlbDmja4nKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gQ29uZmlnTWFuYWdlci5nZXRBbGxDb25maWdXaXRoTWV0YWRhdGEoKTsNCiAgICAgICAgICAgICAgICB0aGlzLmRvd25sb2FkRmlsZShkYXRhLCAnY29uZmlnJyk7DQogICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24oJ+mFjee9ruW3suWvvOWHuicsICdzdWNjZXNzJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5a+85Ye66YWN572u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICBVSU1hbmFnZXIuc2hvd05vdGlmaWNhdGlvbign5a+85Ye66YWN572u5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWvvOWHuuWujOaVtOaVsOaNru+8iOmFjee9rivnlKjmiLfmlbDmja7vvIkNCiAgICAgICAgICovDQogICAgICAgIGV4cG9ydEZ1bGxEYXRhOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAg",
        "IHRyeSB7DQogICAgICAgICAgICAgICAgLy8g56Gu6K6k5a+56K+d5qGGDQogICAgICAgICAgICAgICAgaWYgKCFjb25maXJtKCflr7zlh7rlrozmlbTmlbDmja7lsIbljIXlkKvpu5HlkI3ljZXjgIHkvJror53orrDlv4bnrYnnlKjmiLfmlbDmja7jgIJcbuehruWumuimgee7p+e7reWQl++8nycpKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5byA5aeL5a+85Ye65a6M5pW05pWw5o2uJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IENvbmZpZ01hbmFnZXIuZ2V0RnVsbERhdGFXaXRoTWV0YWRhdGEoKTsNCiAgICAgICAgICAgICAgICB0aGlzLmRvd25sb2FkRmlsZShkYXRhLCAnZnVsbCcpOw0KICAgICAgICAgICAgICAgIFVJTWFuYWdlci5zaG93Tm90aWZpY2F0aW9uKCflrozmlbTmlbDmja7lt7Llr7zlh7onLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WvvOWHuuWujOaVtOaVsOaNruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24oJ+WvvOWHuuWujOaVtOaVsOaNruWksei0pTogJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnlJ/miJDmlofku7blkI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHR5cGUg5a+85Ye657G75Z6LDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBnZW5lcmF0ZUZpbGVOYW1lOiBmdW5jdGlvbih0eXBlKSB7DQogICAgICAgICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpOw0KICAgICAgICAgICAgY29uc3QgdGltZXN0YW1wID0gbm93LmdldEZ1bGxZZWFyKCkgKw0KICAgICAgICAgICAgICAgIFN0cmluZyhub3cuZ2V0TW9udGgoKSArIDEpLnBhZFN0YXJ0KDIsICcwJykgKw0KICAgICAgICAgICAgICAgIFN0cmluZyhub3cuZ2V0RGF0ZSgpKS5wYWRTdGFydCgyLCAnMCcpICsgJy0nICsNCiAgICAgICAgICAgICAgICBTdHJpbmcobm93LmdldEhvdXJzKCkpLnBhZFN0YXJ0KDIsICcwJykgKw0KICAgICAgICAgICAgICAgIFN0cmluZyhub3cuZ2V0TWludXRlcygpKS5wYWRTdGFydCgyLCAnMCcpICsNCiAgICAgICAgICAgICAgICBTdHJpbmcobm93LmdldFNlY29uZHMoKSkucGFkU3RhcnQoMiwgJzAnKTsNCg0KICAgICAgICAgICAgY29uc3QgcHJlZml4ID0gdHlwZSA9PT0gJ2Z1bGwnID8gJ3hocy1hdXRvLXJlcGx5LWZ1bGwnIDogJ3hocy1hdXRvLXJlcGx5LWNvbmZpZyc7DQogICAgICAgICAgICByZXR1cm4gYCR7cHJlZml4fS0ke3RpbWVzdGFtcH0uanNvbmA7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS4i+i9veaWh+S7tg0KICAg",
        "ICAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSDmlbDmja4NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHR5cGUg57G75Z6LDQogICAgICAgICAqLw0KICAgICAgICBkb3dubG9hZEZpbGU6IGZ1bmN0aW9uKGRhdGEsIHR5cGUpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QganNvblN0cmluZyA9IEpTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDIpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGZpbGVOYW1lID0gdGhpcy5nZW5lcmF0ZUZpbGVOYW1lKHR5cGUpOw0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMTog5bCd6K+V5L2/55SoR01fZG93bmxvYWQgKOWmguaenOWPr+eUqCkNCiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIEdNX2Rvd25sb2FkICE9PSAndW5kZWZpbmVkJykgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFtqc29uU3RyaW5nXSwgeyB0eXBlOiAnYXBwbGljYXRpb24vanNvbicgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOw0KICAgICAgICAgICAgICAgICAgICAgICAgR01fZG93bmxvYWQodXJsLCBmaWxlTmFtZSk7DQogICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IFVSTC5yZXZva2VPYmplY3RVUkwodXJsKSwgMTAwMCk7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5L2/55SoR01fZG93bmxvYWTkuIvovb3mlofku7YnLCB7IGZpbGVOYW1lLCBzaXplOiBqc29uU3RyaW5nLmxlbmd0aCB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZ21FcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ0dNX2Rvd25sb2Fk5aSx6LSl77yM5bCd6K+V5YW25LuW5pa55rOVJywgeyBlcnJvcjogZ21FcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMjog5L2/55So5Lyg57uf55qE6ZO+5o6l5LiL6L295pa55byPDQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgYmxvYiA9IG5ldyBCbG9iKFtqc29uU3RyaW5nXSwgeyB0eXBlOiAnYXBwbGljYXRpb24vanNvbicgfSk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7DQoNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsNCiAgICAgICAgICAgICAgICAgICAgbGluay5ocmVmID0gdXJsOw0KICAgICAgICAgICAgICAgICAgICBsaW5rLmRvd25sb2FkID0gZmlsZU5hbWU7DQogICAgICAgICAgICAgICAgICAgIGxpbmsuc3R5bGUuZGlzcGxheSA9ICdub25lJzsNCg0KICAg",
        "ICAgICAgICAgICAgICAgICAvLyDnoa7kv53pk77mjqXooqvmt7vliqDliLBET03kuK0NCiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDop6blj5Hngrnlh7vkuovku7YNCiAgICAgICAgICAgICAgICAgICAgaWYgKGxpbmsuY2xpY2spIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmsuY2xpY2soKTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWFvOWuueaAp+WkhOeQhg0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBuZXcgTW91c2VFdmVudCgnY2xpY2snLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlldzogd2luZG93LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICBsaW5rLmRpc3BhdGNoRXZlbnQoZXZlbnQpOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5bu26L+f5riF55CGDQogICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChsaW5rKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwodXJsKTsNCiAgICAgICAgICAgICAgICAgICAgfSwgMTAwKTsNCg0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5L2/55So6ZO+5o6l5LiL6L295paH5Lu2JywgeyBmaWxlTmFtZSwgc2l6ZToganNvblN0cmluZy5sZW5ndGggfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9IGNhdGNoIChsaW5rRXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+mTvuaOpeS4i+i9veWksei0pe+8jOWwneivleWkjeWItuWIsOWJqui0tOadvycsIHsgZXJyb3I6IGxpbmtFcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTM6IOmZjee6p+WIsOWkjeWItuWIsOWJqui0tOadvw0KICAgICAgICAgICAgICAgIGlmIChuYXZpZ2F0b3IuY2xpcGJvYXJkICYmIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KSB7DQogICAgICAgICAgICAgICAgICAgIG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KGpzb25TdHJpbmcpLnRoZW4oKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoYOaWh+S7tuS4i+i9veWksei0pe+8jOmFjee9ruaVsOaNruW3suWkjeWItuWIsOWJqui0tOadv+OAglxuXG7or7fmiYvliqjliJvlu7rmlofku7YgIiR7ZmlsZU5hbWV9IiDlubbnspjotLTlhoXlrrnjgIJgKTsNCiAgICAgICAgICAg",
        "ICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfphY3nva7mlbDmja7lt7LlpI3liLbliLDliarotLTmnb8nLCB7IGZpbGVOYW1lLCBzaXplOiBqc29uU3RyaW5nLmxlbmd0aCB9KTsNCiAgICAgICAgICAgICAgICAgICAgfSkuY2F0Y2goKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5mYWxsYmFja0NvcHlNZXRob2QoanNvblN0cmluZywgZmlsZU5hbWUpOw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmZhbGxiYWNrQ29weU1ldGhvZChqc29uU3RyaW5nLCBmaWxlTmFtZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcign5paH5Lu25LiL6L295aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmZjee6p+WkjeWItuaWueazlQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udGVudCDlhoXlrrkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGZpbGVOYW1lIOaWh+S7tuWQjQ0KICAgICAgICAgKi8NCiAgICAgICAgZmFsbGJhY2tDb3B5TWV0aG9kOiBmdW5jdGlvbihjb250ZW50LCBmaWxlTmFtZSkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDliJvlu7rkuLTml7bmlofmnKzljLrln58NCiAgICAgICAgICAgICAgICBjb25zdCB0ZXh0QXJlYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7DQogICAgICAgICAgICAgICAgdGV4dEFyZWEudmFsdWUgPSBjb250ZW50Ow0KICAgICAgICAgICAgICAgIHRleHRBcmVhLnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJzsNCiAgICAgICAgICAgICAgICB0ZXh0QXJlYS5zdHlsZS5sZWZ0ID0gJy05OTk5OTlweCc7DQogICAgICAgICAgICAgICAgdGV4dEFyZWEuc3R5bGUudG9wID0gJy05OTk5OTlweCc7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0ZXh0QXJlYSk7DQogICAgICAgICAgICAgICAgdGV4dEFyZWEuZm9jdXMoKTsNCiAgICAgICAgICAgICAgICB0ZXh0QXJlYS5zZWxlY3QoKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHN1Y2Nlc3NmdWwgPSBkb2N1bWVudC5leGVjQ29tbWFuZCgnY29weScpOw0KICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodGV4dEFyZWEpOw0KDQogICAgICAgICAgICAgICAgaWYgKHN1Y2Nlc3NmdWwpIHsNCiAgICAgICAgICAgICAgICAgICAgYWxlcnQoYOaWh+S7tuS4i+i9veWksei0pe+8jOmFjee9ruaVsOaNruW3suWkjeWItuWIsOWJqui0tOadv+OAglxuXG7or7fmiYvliqjliJvlu7rmlofku7YgIiR7ZmlsZU5hbWV9IiDlubbnspjotLTlhoXlrrnjgIJgKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+S9v+eUqOmZjee6",
        "p+aWueazleWkjeWItuWIsOWJqui0tOadvycsIHsgZmlsZU5hbWUgfSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5pyA5ZCO55qE6ZmN57qn5pa55qGI77ya5pi+56S65YaF5a65DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0NvbmZpZ0luTW9kYWwoY29udGVudCwgZmlsZU5hbWUpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfpmY3nuqflpI3liLblpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd0NvbmZpZ0luTW9kYWwoY29udGVudCwgZmlsZU5hbWUpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlnKjmqKHmgIHmoYbkuK3mmL7npLrphY3nva7lhoXlrrkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRlbnQg5YaF5a65DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBmaWxlTmFtZSDmlofku7blkI0NCiAgICAgICAgICovDQogICAgICAgIHNob3dDb25maWdJbk1vZGFsOiBmdW5jdGlvbihjb250ZW50LCBmaWxlTmFtZSkgew0KICAgICAgICAgICAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsNCiAgICAgICAgICAgIG1vZGFsLnN0eWxlLmNzc1RleHQgPSBgDQogICAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkOw0KICAgICAgICAgICAgICAgIHRvcDogMDsNCiAgICAgICAgICAgICAgICBsZWZ0OiAwOw0KICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLDAuOCk7DQogICAgICAgICAgICAgICAgei1pbmRleDogOTk5OTk5Ow0KICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICAgICAgICAgIGA7DQoNCiAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOw0KICAgICAgICAgICAgY29udGFpbmVyLnN0eWxlLmNzc1RleHQgPSBgDQogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7DQogICAgICAgICAgICAgICAgcGFkZGluZzogMjBweDsNCiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7DQogICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA4MCU7DQogICAgICAgICAgICAgICAgbWF4LWhlaWdodDogODAlOw0KICAgICAgICAgICAgICAgIG92ZXJmbG93OiBhdXRvOw0KICAgICAgICAgICAgYDsNCg0KICAgICAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9IGANCiAgICAgICAgICAgICAgICA8aDM+6YWN572u5a+85Ye6IC0gJHtmaWxlTmFtZX08L2gzPg0K",
        "ICAgICAgICAgICAgICAgIDxwPuivt+WkjeWItuS7peS4i+WGheWuueW5tuS/neWtmOS4uiAke2ZpbGVOYW1lfSDmlofku7bvvJo8L3A+DQogICAgICAgICAgICAgICAgPHRleHRhcmVhIHJlYWRvbmx5IHN0eWxlPSJ3aWR0aDogMTAwJTsgaGVpZ2h0OiAzMDBweDsgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTsiPiR7Y29udGVudH08L3RleHRhcmVhPg0KICAgICAgICAgICAgICAgIDxicj48YnI+DQogICAgICAgICAgICAgICAgPGJ1dHRvbiBvbmNsaWNrPSJ0aGlzLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5yZW1vdmUoKSIgc3R5bGU9InBhZGRpbmc6IDhweCAxNnB4OyI+5YWz6ZetPC9idXR0b24+DQogICAgICAgICAgICBgOw0KDQogICAgICAgICAgICBtb2RhbC5hcHBlbmRDaGlsZChjb250YWluZXIpOw0KICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtb2RhbCk7DQoNCiAgICAgICAgICAgIC8vIOiHquWKqOmAieaLqeaWh+acrA0KICAgICAgICAgICAgY29uc3QgdGV4dGFyZWEgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcigndGV4dGFyZWEnKTsNCiAgICAgICAgICAgIHRleHRhcmVhLmZvY3VzKCk7DQogICAgICAgICAgICB0ZXh0YXJlYS5zZWxlY3QoKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+WcqOaooeaAgeahhuS4reaYvuekuumFjee9ruWGheWuuScsIHsgZmlsZU5hbWUgfSk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDplJnor6/mjqjpgIHnrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IEVycm9yTm90aWZpY2F0aW9uTWFuYWdlciA9IHsNCiAgICAgICAgLy8g5o6o6YCB5Y6G5Y+y6K6w5b2VDQogICAgICAgIHB1c2hIaXN0b3J5OiBbXSwNCiAgICAgICAgbWF4SGlzdG9yeVNpemU6IDEwMCwNCg0KICAgICAgICAvLyDplJnor6/ljrvph43nvJPlrZgNCiAgICAgICAgZGVkdXBsaWNhdGlvbkNhY2hlOiBuZXcgTWFwKCksDQoNCiAgICAgICAgLy8g5o6o6YCB6aKR546H6ZmQ5Yi2DQogICAgICAgIHJhdGVMaW1pdENhY2hlOiBbXSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yid5aeL5YyW6ZSZ6K+v5o6o6YCB566h55CG5ZmoDQogICAgICAgICAqLw0KICAgICAgICBpbml0OiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5riF55CG6L+H5pyf55qE5Y676YeN57yT5a2YDQogICAgICAgICAgICAgICAgdGhpcy5jbGVhbnVwRGVkdXBsaWNhdGlvbkNhY2hlKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDorr7nva7lrprmnJ/muIXnkIbku7vliqENCiAgICAgICAgICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYW51cERlZHVwbGljYXRpb25DYWNoZSgpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNsZWFudXBSYXRlTGltaXRDYWNoZSgpOw0K",
        "ICAgICAgICAgICAgICAgIH0sIDYwMDAwKTsgLy8g5q+P5YiG6ZKf5riF55CG5LiA5qyhDQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mUmeivr+aOqOmAgeeuoeeQhuWZqOW3suWIneWni+WMlicpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+mUmeivr+aOqOmAgeeuoeeQhuWZqOWIneWni+WMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWPkemAgemUmeivr+aOqOmAgemAmuefpQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGV2ZWwg6ZSZ6K+v57qn5YirIChlcnJvciwgd2FybiwgaW5mbykNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2Ug6ZSZ6K+v5raI5oGvDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIOmZhOWKoOaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHNlbmROb3RpZmljYXRpb24obGV2ZWwsIG1lc3NhZ2UsIGRhdGEgPSB7fSkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblkK/nlKjmjqjpgIENCiAgICAgICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkVuYWJsZWQnKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mUmeivr+aOqOmAgeWKn+iDveacquWQr+eUqO+8jOi3s+i/h+aOqOmAgScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l6ZSZ6K+v57qn5Yir6L+H5rukDQogICAgICAgICAgICAgICAgaWYgKCF0aGlzLnNob3VsZFB1c2hMZXZlbChsZXZlbCkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfplJnor6/nuqfliKvkuI3lnKjmjqjpgIHojIPlm7TlhoUnLCB7IGxldmVsIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5YWz6ZSu6K+N6L+H5rukDQogICAgICAgICAgICAgICAgaWYgKCF0aGlzLnNob3VsZFB1c2hCeUtleXdvcmRzKG1lc3NhZ2UsIGRhdGEpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6ZSZ6K+v5raI5oGv6KKr5YWz6ZSu6K+N6L+H5rukJywgeyBtZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l6ZSZ6K+v5Y676YeNDQogICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNEdXBsaWNhdGVFcnJvcihsZXZlbCwgbWVzc2FnZSwgZGF0YSkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVn",
        "KCfph43lpI3plJnor6/vvIzot7Pov4fmjqjpgIEnLCB7IGxldmVsLCBtZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5o6o6YCB6aKR546H6ZmQ5Yi2DQogICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNoZWNrUmF0ZUxpbWl0KCkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+aOqOmAgemikeeOh+i2hemZkO+8jOi3s+i/h+aOqOmAgScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5p6E5bu65o6o6YCB5YaF5a65DQogICAgICAgICAgICAgICAgY29uc3QgcHVzaENvbnRlbnQgPSB0aGlzLmJ1aWxkUHVzaENvbnRlbnQobGV2ZWwsIG1lc3NhZ2UsIGRhdGEpOw0KDQogICAgICAgICAgICAgICAgLy8g5rWL6K+V5qih5byP5Y+q6K6w5b2V5pel5b+XDQogICAgICAgICAgICAgICAgaWYgKENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvblRlc3RNb2RlJykpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfp6og5rWL6K+V5qih5byP5o6o6YCBJywgeyBjb250ZW50OiBwdXNoQ29udGVudCB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5Y+R6YCB5o6o6YCB77yI5YWI5bCd6K+VUE9TVO+8jOWksei0peWQjuWwneivlUdFVO+8iQ0KICAgICAgICAgICAgICAgIGxldCBzdWNjZXNzID0gYXdhaXQgdGhpcy5zZW5kUHVzaFJlcXVlc3QocHVzaENvbnRlbnQpOw0KDQogICAgICAgICAgICAgICAgaWYgKCFzdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5SEIFBPU1TmjqjpgIHlpLHotKXvvIzlsJ3or5VHRVTmlrnlvI8nKTsNCiAgICAgICAgICAgICAgICAgICAgc3VjY2VzcyA9IGF3YWl0IHRoaXMuc2VuZFB1c2hSZXF1ZXN0VmlhR2V0KHB1c2hDb250ZW50KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICAvLyDorrDlvZXmjqjpgIHljoblj7INCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNvcmRQdXNoSGlzdG9yeShsZXZlbCwgbWVzc2FnZSwgZGF0YSwgcHVzaENvbnRlbnQpOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOa3u+WKoOWIsOWOu+mHjee8k+WtmA0KICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFRvRGVkdXBsaWNhdGlvbkNhY2hlKGxldmVsLCBtZXNzYWdlLCBkYXRhKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDorrDlvZXliLDpopHnjofpmZDliLbnvJPlrZgNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNvcmRSYXRlTGltaXQoKTsNCg0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOmUmeivr+aOqOmAgeWPkemA",
        "geaIkOWKnycsIHsgbGV2ZWwsIG1lc3NhZ2U6IG1lc3NhZ2Uuc3Vic3RyaW5nKDAsIDUwKSB9KTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+KdjCDplJnor6/mjqjpgIHlj5HpgIHlpLHotKUnLCB7IGxldmVsLCBtZXNzYWdlOiBtZXNzYWdlLnN1YnN0cmluZygwLCA1MCkgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHN1Y2Nlc3M7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflj5HpgIHplJnor6/mjqjpgIHml7blh7rplJknLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlLCBsZXZlbCwgbWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpemUmeivr+e6p+WIq+aYr+WQpuW6lOivpeaOqOmAgQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGV2ZWwg6ZSZ6K+v57qn5YirDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgc2hvdWxkUHVzaExldmVsKGxldmVsKSB7DQogICAgICAgICAgICBjb25zdCBlbmFibGVkTGV2ZWxzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uTGV2ZWxzJywgJ2Vycm9yJykuc3BsaXQoJywnKS5tYXAobCA9PiBsLnRyaW0oKSk7DQogICAgICAgICAgICByZXR1cm4gZW5hYmxlZExldmVscy5pbmNsdWRlcyhsZXZlbCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpeWFs+mUruivjei/h+a7pA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSDplJnor6/mtojmga8NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEg6ZmE5Yqg5pWw5o2uDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgc2hvdWxkUHVzaEJ5S2V5d29yZHMobWVzc2FnZSwgZGF0YSkgew0KICAgICAgICAgICAgY29uc3QgaW5jbHVkZUtleXdvcmRzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uS2V5d29yZHMnLCAnJykuc3BsaXQoJywnKS5tYXAoayA9PiBrLnRyaW0oKSkuZmlsdGVyKGsgPT4gayk7DQogICAgICAgICAgICBjb25zdCBleGNsdWRlS2V5d29yZHMgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25FeGNsdWRlS2V5d29yZHMnLCAnJykuc3BsaXQoJywnKS5tYXAoayA9PiBrLnRyaW0oKSkuZmlsdGVyKGsgPT4gayk7DQoNCiAgICAgICAgICAgIGNvbnN0IGZ1bGxUZXh0ID0gbWVzc2FnZSArICcgJyArIEpTT04uc3RyaW5naWZ5KGRhdGEpOw0KDQogICAgICAgICAgICAvLyDmo4Dmn6XmjpLpmaTlhbPplK7or40NCiAgICAgICAgICAgIGlmIChleGNsdWRlS2V5d29yZHMubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAg",
        "IGZvciAoY29uc3Qga2V5d29yZCBvZiBleGNsdWRlS2V5d29yZHMpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGZ1bGxUZXh0LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoa2V5d29yZC50b0xvd2VyQ2FzZSgpKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6XljIXlkKvlhbPplK7or43vvIjlpoLmnpzphY3nva7kuobvvIkNCiAgICAgICAgICAgIGlmIChpbmNsdWRlS2V5d29yZHMubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAgIGZvciAoY29uc3Qga2V5d29yZCBvZiBpbmNsdWRlS2V5d29yZHMpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGZ1bGxUZXh0LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoa2V5d29yZC50b0xvd2VyQ2FzZSgpKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyDphY3nva7kuobljIXlkKvlhbPplK7or43kvYbpg73kuI3ljLnphY0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIHRydWU7IC8vIOayoeaciemFjee9ruWMheWQq+WFs+mUruivje+8jOmAmui/h+aOkumZpOWFs+mUruivjeajgOafpeWNs+WPrw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XmmK/lkKbkuLrph43lpI3plJnor68NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGxldmVsIOmUmeivr+e6p+WIqw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSDplJnor6/mtojmga8NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEg6ZmE5Yqg5pWw5o2uDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgaXNEdXBsaWNhdGVFcnJvcihsZXZlbCwgbWVzc2FnZSwgZGF0YSkgew0KICAgICAgICAgICAgaWYgKCFDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25EZWR1cGxpY2F0aW9uJykpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGNvbnN0IGVycm9yS2V5ID0gdGhpcy5nZW5lcmF0ZUVycm9yS2V5KGxldmVsLCBtZXNzYWdlLCBkYXRhKTsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBjb25zdCB3aW5kb3dNcyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkRlZHVwbGljYXRpb25XaW5kb3cnLCAxMCkgKiA2MCAqIDEwMDA7DQoNCiAgICAgICAgICAgIGlmICh0aGlzLmRlZHVwbGljYXRpb25DYWNoZS5oYXMoZXJyb3JLZXkpKSB7DQogICAgICAgICAgICAgICAgY29uc3QgbGFzdFRpbWUgPSB0aGlzLmRlZHVwbGljYXRpb25DYWNoZS5nZXQoZXJy",
        "b3JLZXkpOw0KICAgICAgICAgICAgICAgIGlmIChub3cgLSBsYXN0VGltZSA8IHdpbmRvd01zKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOyAvLyDph43lpI3plJnor68NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog55Sf5oiQ6ZSZ6K+v5ZSv5LiA6ZSuDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsZXZlbCDplJnor6/nuqfliKsNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2Ug6ZSZ6K+v5raI5oGvDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIOmZhOWKoOaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2VuZXJhdGVFcnJvcktleShsZXZlbCwgbWVzc2FnZSwgZGF0YSkgew0KICAgICAgICAgICAgLy8g566A5YyW5raI5oGv5YaF5a6577yM5Y676Zmk5pe26Ze05oiz562J5Y+Y5YyW6YOo5YiGDQogICAgICAgICAgICBjb25zdCBzaW1wbGlmaWVkTWVzc2FnZSA9IG1lc3NhZ2UNCiAgICAgICAgICAgICAgICAucmVwbGFjZSgvXGR7NH0tXGR7Mn0tXGR7Mn1UXGR7Mn06XGR7Mn06XGR7Mn0vZywgJ1RJTUVTVEFNUCcpIC8vIElTT+aXtumXtOaIsw0KICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cZHsyfTpcZHsyfTpcZHsyfS9nLCAnVElNRScpIC8vIOaXtumXtA0KICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cZCttcy9nLCAnRFVSQVRJT04nKSAvLyDmjIHnu63ml7bpl7QNCiAgICAgICAgICAgICAgICAucmVwbGFjZSgvYXR0ZW1wdCBcZCsvZywgJ2F0dGVtcHQgTicpIC8vIOWwneivleasoeaVsA0KICAgICAgICAgICAgICAgIC5zdWJzdHJpbmcoMCwgMTAwKTsgLy8g6ZmQ5Yi26ZW/5bqmDQoNCiAgICAgICAgICAgIHJldHVybiBgJHtsZXZlbH06JHtzaW1wbGlmaWVkTWVzc2FnZX1gOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmt7vliqDliLDljrvph43nvJPlrZgNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGxldmVsIOmUmeivr+e6p+WIqw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSDplJnor6/mtojmga8NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEg6ZmE5Yqg5pWw5o2uDQogICAgICAgICAqLw0KICAgICAgICBhZGRUb0RlZHVwbGljYXRpb25DYWNoZShsZXZlbCwgbWVzc2FnZSwgZGF0YSkgew0KICAgICAgICAgICAgY29uc3QgZXJyb3JLZXkgPSB0aGlzLmdlbmVyYXRlRXJyb3JLZXkobGV2ZWwsIG1lc3NhZ2UsIGRhdGEpOw0KICAgICAgICAgICAgdGhpcy5kZWR1cGxpY2F0aW9uQ2FjaGUuc2V0KGVycm9yS2V5LCBEYXRlLm5vdygpKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF55CG6L+H5pyf55qE5Y676YeN57yT5a2YDQogICAgICAgICAqLw0KICAgICAgICBjbGVhbnVwRGVkdXBs",
        "aWNhdGlvbkNhY2hlKCkgew0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGNvbnN0IHdpbmRvd01zID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uRGVkdXBsaWNhdGlvbldpbmRvdycsIDEwKSAqIDYwICogMTAwMDsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCBba2V5LCB0aW1lc3RhbXBdIG9mIHRoaXMuZGVkdXBsaWNhdGlvbkNhY2hlLmVudHJpZXMoKSkgew0KICAgICAgICAgICAgICAgIGlmIChub3cgLSB0aW1lc3RhbXAgPiB3aW5kb3dNcykgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmRlZHVwbGljYXRpb25DYWNoZS5kZWxldGUoa2V5KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpeaOqOmAgemikeeOh+mZkOWItg0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGNoZWNrUmF0ZUxpbWl0KCkgew0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGNvbnN0IGxpbWl0TWludXRlcyA9IDE7IC8vIDHliIbpkp/lhoXnmoTpmZDliLYNCiAgICAgICAgICAgIGNvbnN0IG1heFB1c2hlcyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvblJhdGVMaW1pdCcsIDUpOw0KDQogICAgICAgICAgICAvLyDmuIXnkIbov4fmnJ/orrDlvZUNCiAgICAgICAgICAgIHRoaXMucmF0ZUxpbWl0Q2FjaGUgPSB0aGlzLnJhdGVMaW1pdENhY2hlLmZpbHRlcih0aW1lID0+IG5vdyAtIHRpbWUgPCBsaW1pdE1pbnV0ZXMgKiA2MCAqIDEwMDApOw0KDQogICAgICAgICAgICByZXR1cm4gdGhpcy5yYXRlTGltaXRDYWNoZS5sZW5ndGggPCBtYXhQdXNoZXM7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiusOW9leaOqOmAgeWIsOmikeeOh+mZkOWItue8k+WtmA0KICAgICAgICAgKi8NCiAgICAgICAgcmVjb3JkUmF0ZUxpbWl0KCkgew0KICAgICAgICAgICAgdGhpcy5yYXRlTGltaXRDYWNoZS5wdXNoKERhdGUubm93KCkpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuIXnkIbpopHnjofpmZDliLbnvJPlrZgNCiAgICAgICAgICovDQogICAgICAgIGNsZWFudXBSYXRlTGltaXRDYWNoZSgpIHsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBjb25zdCBsaW1pdE1pbnV0ZXMgPSAxOw0KICAgICAgICAgICAgdGhpcy5yYXRlTGltaXRDYWNoZSA9IHRoaXMucmF0ZUxpbWl0Q2FjaGUuZmlsdGVyKHRpbWUgPT4gbm93IC0gdGltZSA8IGxpbWl0TWludXRlcyAqIDYwICogMTAwMCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaehOW7uuaOqOmAgeWGheWuuQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGV2ZWwg6ZSZ6K+v57qn5YirDQogICAgICAgICAqIEBwYXJhbSB7c3Ry",
        "aW5nfSBtZXNzYWdlIOmUmeivr+a2iOaBrw0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSDpmYTliqDmlbDmja4NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGJ1aWxkUHVzaENvbnRlbnQobGV2ZWwsIG1lc3NhZ2UsIGRhdGEpIHsNCiAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uVGVtcGxhdGUnLA0KICAgICAgICAgICAgICAgICfwn5qoIOWwj+e6ouS5pkFJ6Ieq5Yqo5Zue5aSN5bel5YW36ZSZ6K+v5oql6K2mXG5cbuKPsCDml7bpl7TvvJp7dGltZXN0YW1wfVxu8J+UjSDplJnor6/nsbvlnovvvJp7bGV2ZWx9XG7wn5OdIOmUmeivr+S/oeaBr++8mnttZXNzYWdlfVxu8J+RpCDnlKjmiLfvvJp7dXNlcn1cbvCflJcg6K+m5oOF77yae2RldGFpbHN9Jyk7DQoNCiAgICAgICAgICAgIC8vIOiOt+WPluW9k+WJjeeUqOaIt+S/oeaBrw0KICAgICAgICAgICAgbGV0IGN1cnJlbnRVc2VyID0gJ+acquefpSc7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuWEhTQXV0b1JlcGx5ICYmIHdpbmRvdy5YSFNBdXRvUmVwbHkuY3VycmVudFVzZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgY3VycmVudFVzZXIgPSB3aW5kb3cuWEhTQXV0b1JlcGx5LmN1cnJlbnRVc2VyLnVzZXJOYW1lIHx8IHdpbmRvdy5YSFNBdXRvUmVwbHkuY3VycmVudFVzZXIudXNlcklkIHx8ICfmnKrnn6UnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsNCiAgICAgICAgICAgICAgICAvLyDlv73nlaXojrflj5bnlKjmiLfkv6Hmga/nmoTplJnor68NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5p6E5bu66K+m5oOF5L+h5oGvDQogICAgICAgICAgICBsZXQgZGV0YWlscyA9ICcnOw0KICAgICAgICAgICAgaWYgKGRhdGEgJiYgT2JqZWN0LmtleXMoZGF0YSkubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGZpbHRlcmVkRGF0YSA9IHsgLi4uZGF0YSB9Ow0KICAgICAgICAgICAgICAgIC8vIOenu+mZpOaVj+aEn+S/oeaBrw0KICAgICAgICAgICAgICAgIGRlbGV0ZSBmaWx0ZXJlZERhdGEuYXBpS2V5Ow0KICAgICAgICAgICAgICAgIGRlbGV0ZSBmaWx0ZXJlZERhdGEucGFzc3dvcmQ7DQogICAgICAgICAgICAgICAgZGVsZXRlIGZpbHRlcmVkRGF0YS50b2tlbjsNCg0KICAgICAgICAgICAgICAgIGRldGFpbHMgPSBKU09OLnN0cmluZ2lmeShmaWx0ZXJlZERhdGEsIG51bGwsIDIpLnN1YnN0cmluZygwLCA1MDApOw0KICAgICAgICAgICAgICAgIGlmIChkZXRhaWxzLmxlbmd0aCA+PSA1MDApIHsNCiAgICAgICAgICAgICAgICAgICAgZGV0YWlscyArPSAnLi4uJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOabv+aNouaooeadv+WPmOmHjw0KICAgICAgICAgICAgY29uc3QgY29udGVudCA9IHRlbXBs",
        "YXRlDQogICAgICAgICAgICAgICAgLnJlcGxhY2UoL3t0aW1lc3RhbXB9L2csIG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoJ3poLUNOJykpDQogICAgICAgICAgICAgICAgLnJlcGxhY2UoL3tsZXZlbH0vZywgbGV2ZWwudG9VcHBlckNhc2UoKSkNCiAgICAgICAgICAgICAgICAucmVwbGFjZSgve21lc3NhZ2V9L2csIG1lc3NhZ2Uuc3Vic3RyaW5nKDAsIDIwMCkpDQogICAgICAgICAgICAgICAgLnJlcGxhY2UoL3t1c2VyfS9nLCBjdXJyZW50VXNlcikNCiAgICAgICAgICAgICAgICAucmVwbGFjZSgve2RldGFpbHN9L2csIGRldGFpbHMgfHwgJ+aXoCcpOw0KDQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGNvbnRlbnQsDQogICAgICAgICAgICAgICAgdGl0bGU6IGAke2xldmVsLnRvVXBwZXJDYXNlKCl96ZSZ6K+v5oql6K2mYCwNCiAgICAgICAgICAgICAgICBmcm9tOiAn5bCP57qi5LmmQUnoh6rliqjlm57lpI3lt6XlhbcnDQogICAgICAgICAgICB9Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlj5HpgIHmjqjpgIHor7fmsYINCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHB1c2hDb250ZW50IOaOqOmAgeWGheWuuQ0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHNlbmRQdXNoUmVxdWVzdChwdXNoQ29udGVudCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBhcGlLZXkgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25BcGlLZXknLCAnJyk7DQogICAgICAgICAgICAgICAgaWYgKCFhcGlLZXkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+acqumFjee9ruaOqOmAgUFQSeWvhumSpe+8jOaXoOazleWPkemAgeaOqOmAgScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgY2hhbm5lbHMgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25DaGFubmVscycsICdXWF9NUCcpOw0KDQogICAgICAgICAgICAgICAgLy8g5qC55o2ueHh0dWkuY29tIEFQSeaWh+aho++8jOaUr+aMgUdFVOWSjFBPU1TkuKTnp43mlrnlvI8NCiAgICAgICAgICAgICAgICAvLyDkvJjlhYjkvb/nlKhQT1NU5pa55byP77yM5Y+C5pWw5pS+5ZyoYm9keeS4rQ0KICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IGBodHRwczovL3d3dy54eHR1aS5jb20veHh0dWkvJHthcGlLZXl9YDsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHJlcXVlc3REYXRhID0gew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBwdXNoQ29udGVudC5jb250ZW50LA0KICAgICAgICAgICAgICAgICAgICB0aXRsZTogcHVzaENvbnRlbnQudGl0bGUgfHwgJ+aOqOmAgemAmuefpScsDQogICAgICAgICAgICAgICAgICAgIGZyb206IHB1c2hDb250ZW50LmZyb20gfHwg",
        "J1hIUy1BSS1Ub29sJywNCiAgICAgICAgICAgICAgICAgICAgY2hhbm5lbDogY2hhbm5lbHMNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflj5HpgIHmjqjpgIHor7fmsYInLCB7IHVybCwgZGF0YTogcmVxdWVzdERhdGEgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDkvb/nlKhHTV94bWxodHRwUmVxdWVzdOWPkemAgeivt+axgg0KICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gew0KICAgICAgICAgICAgICAgICAgICBHTV94bWxodHRwUmVxdWVzdCh7DQogICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLA0KICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJw0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IG5ldyBVUkxTZWFyY2hQYXJhbXMocmVxdWVzdERhdGEpLnRvU3RyaW5nKCksDQogICAgICAgICAgICAgICAgICAgICAgICB0aW1lb3V0OiAxMDAwMCwNCiAgICAgICAgICAgICAgICAgICAgICAgIG9ubG9hZDogZnVuY3Rpb24ocmVzcG9uc2UpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aUtuWIsOaOqOmAgeWTjeW6lCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzVGV4dDogcmVzcG9uc2Uuc3RhdHVzVGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVGV4dDogcmVzcG9uc2UucmVzcG9uc2VUZXh0LnN1YnN0cmluZygwLCA1MDApDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJlc3VsdDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gSlNPTi5wYXJzZShyZXNwb25zZS5yZXNwb25zZVRleHQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAocGFyc2VFcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5o6o6YCB5ZON5bqUSlNPTuino+aekOWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
        "ZXJyb3I6IHBhcnNlRXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUZXh0OiByZXNwb25zZS5yZXNwb25zZVRleHQuc3Vic3RyaW5nKDAsIDIwMCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGZhbHNlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeWkmuenjeWPr+iDveeahOaIkOWKn+agh+ivhg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNTdWNjZXNzID0gcmVzdWx0LnN1Y2Nlc3MgPT09IHRydWUgfHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQuY29kZSA9PT0gMCB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5zdGF0dXMgPT09ICdzdWNjZXNzJyB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5tZXNzYWdlID09PSAn5o6o6YCB5oiQ5YqfJyB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChyZXN1bHQuZGF0YSAmJiByZXN1bHQuZGF0YS5zdWNjZXNzID09PSB0cnVlKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzU3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg5o6o6YCB6K+35rGC5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZTogcmVzdWx0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFubmVsczogY2hhbm5lbHMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBwdXNoQ29udGVudC50aXRsZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfinYwg5o6o6YCB6K+35rGC6KKr5ouS57udJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZTogcmVzdWx0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFu",
        "bmVsczogY2hhbm5lbHMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc3NpYmxlSXNzdWVzOiBbDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnQVBJ5a+G6ZKl5peg5pWIJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICfmjqjpgIHmuKDpgZPmnKrphY3nva4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ+aOqOmAgeWGheWuueagvOW8j+mUmeivrycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAn5o6o6YCB6aKR546H6LaF6ZmQJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+KdjCDmjqjpgIHor7fmsYJIVFRQ6ZSZ6K+vJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6IHJlc3BvbnNlLnN0YXR1c1RleHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUZXh0OiByZXNwb25zZS5yZXNwb25zZVRleHQuc3Vic3RyaW5nKDAsIDIwMCksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbm5lbHM6IGNoYW5uZWxzDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZmFsc2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfinYwg5aSE55CG5o6o6YCB5ZON5bqU5pe25Ye66ZSZJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFjazogZXJyb3Iuc3RhY2s/LnN1YnN0cmluZygwLCAyMDApLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VTdGF0dXM6IHJlc3BvbnNlLnN0YXR1cywNCiAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVGV4dDogcmVzcG9uc2UucmVzcG9uc2VUZXh0Py5zdWJzdHJpbmcoMCwgMjAwKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG9uZXJyb3I6IGZ1bmN0aW9uKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfinYwg5o6o6YCB6K+35rGC572R57uc6ZSZ6K+vJywgeyBlcnJvcjogZXJyb3IsIHVybDogdXJsIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWwneivlUdFVOaWueW8j+S9nOS4uuWkh+eUqA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5SEIOWwneivleS9v+eUqEdFVOaWueW8j+mHjeaWsOWPkemAgeaOqOmAgScpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZmFsc2UpOyAvLyDlhYjov5Tlm55mYWxzZe+8jOWQjue7reWPr+S7pea3u+WKoEdFVOmHjeivlemAu+i+kQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG9udGltZW91dDogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KdjCDmjqjpgIHor7fmsYLotoXml7YnLCB7IHVybDogdXJsLCB0aW1lb3V0OiAxMDAwMCB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGZhbHNlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflj5HpgIHmjqjpgIHor7fmsYLml7blh7rplJknLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5L2/55SoR0VU5pa55byP5Y+R6YCB5o6o6YCB6K+35rGC77yI5aSH55So5pa55rOV77yJDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwdXNoQ29udGVudCDmjqjpgIHlhoXlrrkNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzZW5kUHVzaFJlcXVlc3RWaWFHZXQocHVzaENvbnRlbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYXBpS2V5ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uQXBpS2V5JywgJycpOw0KICAgICAgICAgICAgICAgIGlmICghYXBpS2V5KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dl",
        "ci53YXJuKCfmnKrphY3nva7mjqjpgIFBUEnlr4bpkqXvvIzml6Dms5Xlj5HpgIHmjqjpgIEnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGNoYW5uZWxzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uQ2hhbm5lbHMnLCAnV1hfTVAnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaehOW7ukdFVOivt+axglVSTA0KICAgICAgICAgICAgICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBwdXNoQ29udGVudC5jb250ZW50LA0KICAgICAgICAgICAgICAgICAgICB0aXRsZTogcHVzaENvbnRlbnQudGl0bGUgfHwgJ+aOqOmAgemAmuefpScsDQogICAgICAgICAgICAgICAgICAgIGZyb206IHB1c2hDb250ZW50LmZyb20gfHwgJ1hIUy1BSS1Ub29sJywNCiAgICAgICAgICAgICAgICAgICAgY2hhbm5lbDogY2hhbm5lbHMNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IGBodHRwczovL3d3dy54eHR1aS5jb20veHh0dWkvJHthcGlLZXl9PyR7cGFyYW1zLnRvU3RyaW5nKCl9YDsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5Y+R6YCBR0VU5o6o6YCB6K+35rGCJywgeyB1cmw6IHVybC5zdWJzdHJpbmcoMCwgMTAwKSArICcuLi4nIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIEdNX3htbGh0dHBSZXF1ZXN0KHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsDQogICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHVybCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDEwMDAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgb25sb2FkOiBmdW5jdGlvbihyZXNwb25zZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5pS25YiwR0VU5o6o6YCB5ZON5bqUJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVRleHQ6IHJlc3BvbnNlLnJlc3BvbnNlVGV4dC5zdWJzdHJpbmcoMCwgMjAwKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCByZXN1bHQ7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IEpT",
        "T04ucGFyc2UocmVzcG9uc2UucmVzcG9uc2VUZXh0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKHBhcnNlRXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ0dFVOaOqOmAgeWTjeW6lEpTT07op6PmnpDlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBwYXJzZUVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVGV4dDogcmVzcG9uc2UucmVzcG9uc2VUZXh0LnN1YnN0cmluZygwLCAyMDApDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1N1Y2Nlc3MgPSByZXN1bHQuc3VjY2VzcyA9PT0gdHJ1ZSB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5jb2RlID09PSAwIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnN0YXR1cyA9PT0gJ3N1Y2Nlc3MnIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0Lm1lc3NhZ2UgPT09ICfmjqjpgIHmiJDlip8nOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNTdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSBHRVTmjqjpgIHor7fmsYLmiJDlip8nLCB7IHJlc3BvbnNlOiByZXN1bHQgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KdjCBHRVTmjqjpgIHor7fmsYLooqvmi5Lnu50nLCB7IHJlc3BvbnNlOiByZXN1bHQgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+KdjCBHRVTmjqjpgIHor7fmsYJIVFRQ6ZSZ6K+vJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVGV4dDogcmVzcG9uc2UucmVzcG9uc2VUZXh0LnN1YnN0cmluZygwLCAyMDApDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZmFsc2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfinYwg5aSE55CGR0VU5o6o6YCB5ZON5bqU5pe25Ye66ZSZJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG9uZXJyb3I6IGZ1bmN0aW9uKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfinYwgR0VU5o6o6YCB6K+35rGC572R57uc6ZSZ6K+vJywgeyBlcnJvcjogZXJyb3IgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgb250aW1lb3V0OiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4p2MIEdFVOaOqOmAgeivt+axgui2heaXticpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZmFsc2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WPkemAgUdFVOaOqOmAgeivt+axguaXtuWHuumUmScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorrDlvZXmjqjpgIHljoblj7INCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGxldmVsIOmUmeivr+e6p+WIqw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSDplJnor6/mtojmga8NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEg6ZmE5Yqg5pWw5o2uDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwdXNoQ29udGVudCDmjqjpgIHlhoXlrrkNCiAgICAgICAgICovDQogICAgICAgIHJlY29yZFB1c2hIaXN0b3J5KGxldmVsLCBtZXNzYWdlLCBkYXRhLCBwdXNoQ29udGVudCkgew0KICAgICAgICAgICAgY29u",
        "c3QgcmVjb3JkID0gew0KICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKSwNCiAgICAgICAgICAgICAgICBsZXZlbDogbGV2ZWwsDQogICAgICAgICAgICAgICAgbWVzc2FnZTogbWVzc2FnZS5zdWJzdHJpbmcoMCwgMTAwKSwNCiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLA0KICAgICAgICAgICAgICAgIHB1c2hDb250ZW50OiBwdXNoQ29udGVudCwNCiAgICAgICAgICAgICAgICBpZDogVXRpbHMuZ2VuZXJhdGVJZCgpDQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICB0aGlzLnB1c2hIaXN0b3J5LnVuc2hpZnQocmVjb3JkKTsNCg0KICAgICAgICAgICAgLy8g6ZmQ5Yi25Y6G5Y+y6K6w5b2V5pWw6YePDQogICAgICAgICAgICBpZiAodGhpcy5wdXNoSGlzdG9yeS5sZW5ndGggPiB0aGlzLm1heEhpc3RvcnlTaXplKSB7DQogICAgICAgICAgICAgICAgdGhpcy5wdXNoSGlzdG9yeSA9IHRoaXMucHVzaEhpc3Rvcnkuc2xpY2UoMCwgdGhpcy5tYXhIaXN0b3J5U2l6ZSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluaOqOmAgeWOhuWPsg0KICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gY291bnQg6I635Y+W5pWw6YePDQogICAgICAgICAqIEByZXR1cm5zIHtBcnJheX0NCiAgICAgICAgICovDQogICAgICAgIGdldFB1c2hIaXN0b3J5KGNvdW50ID0gMjApIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLnB1c2hIaXN0b3J5LnNsaWNlKDAsIGNvdW50KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF56m65o6o6YCB5Y6G5Y+yDQogICAgICAgICAqLw0KICAgICAgICBjbGVhclB1c2hIaXN0b3J5KCkgew0KICAgICAgICAgICAgdGhpcy5wdXNoSGlzdG9yeSA9IFtdOw0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+aOqOmAgeWOhuWPsuW3sua4heepuicpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmjqjpgIHnu5/orqHkv6Hmga8NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldFN0YXRzKCkgew0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGNvbnN0IGxhc3QyNGggPSB0aGlzLnB1c2hIaXN0b3J5LmZpbHRlcihyZWNvcmQgPT4gbm93IC0gcmVjb3JkLnRpbWVzdGFtcC5nZXRUaW1lKCkgPCAyNCAqIDYwICogNjAgKiAxMDAwKTsNCiAgICAgICAgICAgIGNvbnN0IGxhc3RIb3VyID0gdGhpcy5wdXNoSGlzdG9yeS5maWx0ZXIocmVjb3JkID0+IG5vdyAtIHJlY29yZC50aW1lc3RhbXAuZ2V0VGltZSgpIDwgNjAgKiA2MCAqIDEwMDApOw0KDQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIHRvdGFsUHVzaGVzOiB0aGlzLnB1c2hIaXN0b3J5Lmxlbmd0aCwNCiAgICAgICAgICAgICAgICBwdXNoZXNMYXN0MjRoOiBsYXN0MjRoLmxlbmd0aCwNCiAgICAgICAgICAgICAgICBwdXNo",
        "ZXNMYXN0SG91cjogbGFzdEhvdXIubGVuZ3RoLA0KICAgICAgICAgICAgICAgIGRlZHVwbGljYXRpb25DYWNoZVNpemU6IHRoaXMuZGVkdXBsaWNhdGlvbkNhY2hlLnNpemUsDQogICAgICAgICAgICAgICAgcmF0ZUxpbWl0Q2FjaGVTaXplOiB0aGlzLnJhdGVMaW1pdENhY2hlLmxlbmd0aCwNCiAgICAgICAgICAgICAgICBlbmFibGVkOiBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25FbmFibGVkJywgZmFsc2UpLA0KICAgICAgICAgICAgICAgIHRlc3RNb2RlOiBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25UZXN0TW9kZScsIGZhbHNlKQ0KICAgICAgICAgICAgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5rWL6K+V5o6o6YCB5Yqf6IO9DQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgdGVzdFB1c2goKSB7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn5byA5aeL5rWL6K+V5o6o6YCB5Yqf6IO9Li4uJyk7DQoNCiAgICAgICAgICAgIC8vIOWFiOi/m+ihjOmFjee9ruiviuaWrQ0KICAgICAgICAgICAgY29uc3QgZGlhZ25vc2lzID0gdGhpcy5kaWFnbm9zZUNvbmZpZ3VyYXRpb24oKTsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5OLIOaOqOmAgemFjee9ruiviuaWree7k+aenCcsIGRpYWdub3Npcyk7DQoNCiAgICAgICAgICAgIGlmIChkaWFnbm9zaXMuaXNzdWVzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4pqg77iPIOWPkeeOsOmFjee9rumXrumimCcsIHsgaXNzdWVzOiBkaWFnbm9zaXMuaXNzdWVzIH0pOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb25zdCB0ZXN0RGF0YSA9IHsNCiAgICAgICAgICAgICAgICB0ZXN0VHlwZTogJ21hbnVhbCcsDQogICAgICAgICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksDQogICAgICAgICAgICAgICAgdmVyc2lvbjogQ09ORklHLlZFUlNJT04sDQogICAgICAgICAgICAgICAgZGlhZ25vc2lzOiBkaWFnbm9zaXMNCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnNlbmROb3RpZmljYXRpb24oJ2luZm8nLCAn6L+Z5piv5LiA5p2h5rWL6K+V5o6o6YCB5raI5oGv77yM55So5LqO6aqM6K+B5o6o6YCB5Yqf6IO95piv5ZCm5q2j5bi45bel5L2c44CCJywgdGVzdERhdGEpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDor4rmlq3mjqjpgIHphY3nva4NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGRpYWdub3NlQ29uZmlndXJhdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IGlzc3VlcyA9IFtdOw0KICAgICAgICAgICAgY29uc3Qgd2FybmluZ3MgPSBbXTsNCiAgICAgICAgICAgIGNvbnN0IGluZm8gPSBbXTsNCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAg",
        "ICAgICAvLyDmo4Dmn6Xln7rmnKzphY3nva4NCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uRW5hYmxlZCcsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhcGlLZXkgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25BcGlLZXknLCAnJyk7DQogICAgICAgICAgICAgICAgY29uc3QgY2hhbm5lbHMgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25DaGFubmVscycsICcnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBsZXZlbHMgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25MZXZlbHMnLCAnJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdGVzdE1vZGUgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25UZXN0TW9kZScsIGZhbHNlKTsNCg0KICAgICAgICAgICAgICAgIGluZm8ucHVzaChg5Yqf6IO954q25oCBOiAke2VuYWJsZWQgPyAn5bey5ZCv55SoJyA6ICflt7LnpoHnlKgnfWApOw0KICAgICAgICAgICAgICAgIGluZm8ucHVzaChg5rWL6K+V5qih5byPOiAke3Rlc3RNb2RlID8gJ+aYrycgOiAn5ZCmJ31gKTsNCg0KICAgICAgICAgICAgICAgIGlmICghZW5hYmxlZCkgew0KICAgICAgICAgICAgICAgICAgICB3YXJuaW5ncy5wdXNoKCfmjqjpgIHlip/og73mnKrlkK/nlKgnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoIWFwaUtleSB8fCBhcGlLZXkudHJpbSgpLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICBpc3N1ZXMucHVzaCgnQVBJ5a+G6ZKl5pyq6YWN572u5oiW5Li656m6Jyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgaW5mby5wdXNoKGBBUEnlr4bpkqU6ICR7YXBpS2V5LnN1YnN0cmluZygwLCA4KX0uLi5gKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoIWNoYW5uZWxzIHx8IGNoYW5uZWxzLnRyaW0oKS5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgaXNzdWVzLnB1c2goJ+aOqOmAgea4oOmBk+acqumFjee9ricpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGluZm8ucHVzaChg5o6o6YCB5rig6YGTOiAke2NoYW5uZWxzfWApOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICghbGV2ZWxzIHx8IGxldmVscy50cmltKCkubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIGlzc3Vlcy5wdXNoKCfplJnor6/nuqfliKvmnKrphY3nva4nKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBpbmZvLnB1c2goYOmUmeivr+e6p+WIqzogJHtsZXZlbHN9YCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l6aKR546H6ZmQ5Yi2DQogICAgICAgICAgICAgICAgY29uc3Qg",
        "cmF0ZUxpbWl0ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uUmF0ZUxpbWl0JywgNSk7DQogICAgICAgICAgICAgICAgaWYgKHJhdGVMaW1pdCA8IDEgfHwgcmF0ZUxpbWl0ID4gMjApIHsNCiAgICAgICAgICAgICAgICAgICAgaXNzdWVzLnB1c2goYOaOqOmAgemikeeOh+mZkOWItumFjee9ruW8guW4uDogJHtyYXRlTGltaXR9YCk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgaW5mby5wdXNoKGDpopHnjofpmZDliLY6ICR7cmF0ZUxpbWl0feasoS/liIbpkp9gKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6Xljrvph43phY3nva4NCiAgICAgICAgICAgICAgICBjb25zdCBkZWR1cGxpY2F0aW9uID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uRGVkdXBsaWNhdGlvbicsIHRydWUpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlZHVwbGljYXRpb25XaW5kb3cgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25EZWR1cGxpY2F0aW9uV2luZG93JywgMTApOw0KICAgICAgICAgICAgICAgIGluZm8ucHVzaChg6ZSZ6K+v5Y676YeNOiAke2RlZHVwbGljYXRpb24gPyAn5ZCv55SoJyA6ICfnpoHnlKgnfWApOw0KICAgICAgICAgICAgICAgIGlmIChkZWR1cGxpY2F0aW9uKSB7DQogICAgICAgICAgICAgICAgICAgIGluZm8ucHVzaChg5Y676YeN56qX5Y+jOiAke2RlZHVwbGljYXRpb25XaW5kb3d95YiG6ZKfYCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5qih5p2/DQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGUgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25UZW1wbGF0ZScsICcnKTsNCiAgICAgICAgICAgICAgICBpZiAoIXRlbXBsYXRlIHx8IHRlbXBsYXRlLnRyaW0oKS5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgd2FybmluZ3MucHVzaCgn5o6o6YCB5qih5p2/5Li656m677yM5bCG5L2/55So6buY6K6k5qih5p2/Jyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgaW5mby5wdXNoKGDmqKHmnb/plb/luqY6ICR7dGVtcGxhdGUubGVuZ3RofeWtl+espmApOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWFs+mUruivjei/h+a7pA0KICAgICAgICAgICAgICAgIGNvbnN0IGluY2x1ZGVLZXl3b3JkcyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbktleXdvcmRzJywgJycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGV4Y2x1ZGVLZXl3b3JkcyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkV4Y2x1ZGVLZXl3b3JkcycsICcnKTsNCiAgICAgICAgICAgICAgICBpZiAoaW5jbHVkZUtleXdvcmRzKSB7DQogICAgICAgICAgICAgICAgICAgIGluZm8ucHVzaChg5YyF5ZCr5YWz6ZSu6K+NOiAk",
        "e2luY2x1ZGVLZXl3b3Jkc31gKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgaWYgKGV4Y2x1ZGVLZXl3b3Jkcykgew0KICAgICAgICAgICAgICAgICAgICBpbmZvLnB1c2goYOaOkumZpOWFs+mUruivjTogJHtleGNsdWRlS2V5d29yZHN9YCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBpc3N1ZXMubGVuZ3RoID09PSAwID8gJ2hlYWx0aHknIDogJ2lzc3VlcycsDQogICAgICAgICAgICAgICAgICAgIGlzc3VlczogaXNzdWVzLA0KICAgICAgICAgICAgICAgICAgICB3YXJuaW5nczogd2FybmluZ3MsDQogICAgICAgICAgICAgICAgICAgIGluZm86IGluZm8sDQogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICdlcnJvcicsDQogICAgICAgICAgICAgICAgICAgIGlzc3VlczogW2DphY3nva7or4rmlq3lpLHotKU6ICR7ZXJyb3IubWVzc2FnZX1gXSwNCiAgICAgICAgICAgICAgICAgICAgd2FybmluZ3M6IFtdLA0KICAgICAgICAgICAgICAgICAgICBpbmZvOiBbXSwNCiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkNCiAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g6YWN572u5a+85YWl566h55CG5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBDb25maWdJbXBvcnRNYW5hZ2VyID0gew0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5paH5Lu26YCJ5oupDQogICAgICAgICAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50IOaWh+S7tumAieaLqeS6i+S7tg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlRmlsZVNlbGVjdDogZnVuY3Rpb24oZXZlbnQpIHsNCiAgICAgICAgICAgIGNvbnN0IGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXNbMF07DQogICAgICAgICAgICBpZiAoIWZpbGUpIHJldHVybjsNCg0KICAgICAgICAgICAgLy8g6YeN572u5paH5Lu26L6T5YWl5qGGDQogICAgICAgICAgICBldmVudC50YXJnZXQudmFsdWUgPSAnJzsNCg0KICAgICAgICAgICAgLy8g6aqM6K+B5paH5Lu257G75Z6LDQogICAgICAgICAgICBpZiAoIWZpbGUubmFtZS50b0xvd2VyQ2FzZSgpLmVuZHNXaXRoKCcuanNvbicpKSB7DQogICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24oJ+ivt+mAieaLqUpTT07moLzlvI/nmoTphY3nva7mlofku7YnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoN",
        "CiAgICAgICAgICAgIC8vIOmqjOivgeaWh+S7tuWkp+Wwj++8iOmZkOWItjEwTULvvIkNCiAgICAgICAgICAgIGlmIChmaWxlLnNpemUgPiAxMCAqIDEwMjQgKiAxMDI0KSB7DQogICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24oJ+aWh+S7tuWkp+Wwj+S4jeiDvei2hei/hzEwTUInLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMucmVhZEFuZEltcG9ydEZpbGUoZmlsZSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOivu+WPluW5tuWvvOWFpeaWh+S7tg0KICAgICAgICAgKiBAcGFyYW0ge0ZpbGV9IGZpbGUg5paH5Lu25a+56LGhDQogICAgICAgICAqLw0KICAgICAgICByZWFkQW5kSW1wb3J0RmlsZTogZnVuY3Rpb24oZmlsZSkgew0KICAgICAgICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsNCg0KICAgICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7DQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29uZmlnRGF0YSA9IEpTT04ucGFyc2UoZS50YXJnZXQucmVzdWx0KTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzSW1wb3J0KGNvbmZpZ0RhdGEpOw0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5paH5Lu26Kej5p6Q5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24oJ+aWh+S7tuagvOW8j+mUmeivr++8jOivt+ajgOafpUpTT07moLzlvI8nLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICByZWFkZXIub25lcnJvciA9ICgpID0+IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aWh+S7tuivu+WPluWksei0pScpOw0KICAgICAgICAgICAgICAgIFVJTWFuYWdlci5zaG93Tm90aWZpY2F0aW9uKCfmlofku7bor7vlj5blpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGZpbGUpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIblr7zlhaUNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZ0RhdGEg6YWN572u5pWw5o2uDQogICAgICAgICAqLw0KICAgICAgICBwcm9jZXNzSW1wb3J0OiBmdW5jdGlvbihjb25maWdEYXRhKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOmqjOivgemFjee9ruaVsOaNrg0KICAgICAgICAgICAgICAgIGNvbnN0IHZhbGlkYXRpb24gPSBDb25maWdNYW5hZ2VyLnZhbGlkYXRlQ29uZmlnRGF0YShjb25maWdEYXRhKTsNCg0KICAgICAgICAgICAgICAgIGlmICghdmFsaWRhdGlvbi52YWxpZCkgew0KICAgICAg",
        "ICAgICAgICAgICAgICBjb25zdCBlcnJvck1zZyA9ICfphY3nva7pqozor4HlpLHotKU6XG4nICsgdmFsaWRhdGlvbi5lcnJvcnMuam9pbignXG4nKTsNCiAgICAgICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24oZXJyb3JNc2csICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pi+56S66K2m5ZGK5L+h5oGv77yI5aaC5p6c5pyJ77yJDQogICAgICAgICAgICAgICAgaWYgKHZhbGlkYXRpb24ud2FybmluZ3MubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB3YXJuaW5nTXNnID0gJ+WvvOWFpeitpuWRijpcbicgKyB2YWxpZGF0aW9uLndhcm5pbmdzLmpvaW4oJ1xuJyk7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2Fybih3YXJuaW5nTXNnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnoa7orqTlr7zlhaUNCiAgICAgICAgICAgICAgICBjb25zdCBoYXNVc2VyRGF0YSA9IGNvbmZpZ0RhdGEudXNlckRhdGEgJiYgT2JqZWN0LmtleXMoY29uZmlnRGF0YS51c2VyRGF0YSkubGVuZ3RoID4gMDsNCiAgICAgICAgICAgICAgICBsZXQgY29uZmlybU1zZyA9IGDnoa7lrpropoHlr7zlhaXphY3nva7lkJfvvJ9cblxu5bCG5a+85YWlICR7T2JqZWN0LmtleXMoY29uZmlnRGF0YS5jb25maWcgfHwge30pLmxlbmd0aH0g6aG56YWN572uYDsNCg0KICAgICAgICAgICAgICAgIGlmIChoYXNVc2VyRGF0YSkgew0KICAgICAgICAgICAgICAgICAgICBjb25maXJtTXNnICs9ICdcblxu4pqg77iPIOatpOaWh+S7tuWMheWQq+eUqOaIt+aVsOaNru+8iOm7keWQjeWNleOAgeS8muivneiusOW/huetie+8ie+8jOWvvOWFpeWQjuWwhuimhueblueOsOacieaVsOaNruOAgic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKCFjb25maXJtKGNvbmZpcm1Nc2cpKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlupTnlKjphY3nva4NCiAgICAgICAgICAgICAgICBjb25zdCBvcHRpb25zID0gew0KICAgICAgICAgICAgICAgICAgICBpbmNsdWRlVXNlckRhdGE6IGhhc1VzZXJEYXRhICYmIGNvbmZpcm0oJ+aYr+WQpuWQjOaXtuWvvOWFpeeUqOaIt+aVsOaNru+8n1xu77yI5YyF5ous6buR5ZCN5Y2V44CB5Lya6K+d6K6w5b+G562J77yJJykNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gQ29uZmlnTWFuYWdlci5hcHBseUltcG9ydGVkQ29uZmlnKGNvbmZpZ0RhdGEsIG9wdGlvbnMpOw0KDQogICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5zdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgICAgIGxldCBzdWNjZXNzTXNnID0gYOmFjee9ruWvvOWFpeaIkOWKn++8gVxu5bey5bqU55SoICR7cmVzdWx0LmFwcGxpZWR9IOmhuemF",
        "jee9rmA7DQogICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuc2tpcHBlZCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NNc2cgKz0gYFxu6Lez6L+HICR7cmVzdWx0LnNraXBwZWR9IOmhueacquefpemFjee9rmA7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBVSU1hbmFnZXIuc2hvd05vdGlmaWNhdGlvbihzdWNjZXNzTXNnLCAnc3VjY2VzcycpOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWIt+aWsFVJDQogICAgICAgICAgICAgICAgICAgIFVJTWFuYWdlci5sb2FkQ29uZmlnKCk7DQogICAgICAgICAgICAgICAgICAgIFVJTWFuYWdlci51cGRhdGVVSSgpOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOWvvOWFpeS6hueUqOaIt+aVsOaNru+8jOWIt+aWsOebuOWFs1VJ57uE5Lu2DQogICAgICAgICAgICAgICAgICAgIGlmIChvcHRpb25zLmluY2x1ZGVVc2VyRGF0YSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Yi35paw5Zue6K6/5Yqf6IO955u45YWzVUkNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgVUlNYW5hZ2VyLnVwZGF0ZUZvbGxvd1VwU3RhdHMgPT09ICdmdW5jdGlvbicpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBVSU1hbmFnZXIudXBkYXRlRm9sbG93VXBTdGF0cygpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBVSU1hbmFnZXIucmVuZGVyRm9sbG93VXBCbGFja2xpc3QgPT09ICdmdW5jdGlvbicpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBVSU1hbmFnZXIucmVuZGVyRm9sbG93VXBCbGFja2xpc3QoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgVUlNYW5hZ2VyLnJlbmRlckZvbGxvd1VwTGlzdCA9PT0gJ2Z1bmN0aW9uJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVJTWFuYWdlci5yZW5kZXJGb2xsb3dVcExpc3QoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+eUqOaIt+aVsOaNruWvvOWFpeWQjlVJ5Yi35paw5a6M5oiQJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6YWN572u5a+85YWl5oiQ5YqfJywgcmVzdWx0KTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlcnJvck1zZyA9ICfphY3nva7lr7zlhaXlpLHotKU6XG4nICsgcmVzdWx0LmVycm9ycy5qb2luKCdcbicpOw0KICAgICAgICAgICAgICAgICAgICBVSU1hbmFnZXIuc2hvd05vdGlmaWNhdGlvbihlcnJvck1zZywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJv",
        "cign5a+85YWl5aSE55CG5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICBVSU1hbmFnZXIuc2hvd05vdGlmaWNhdGlvbign5a+85YWl5aSE55CG5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyBET03nqLPlrprmgKfnrqHnkIblmaggLSDop6PlhrNWdWUuanMgRE9N5pu05paw56ue5oCB5p2h5Lu2DQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBET01TdGFiaWxpdHlNYW5hZ2VyID0gew0KICAgICAgICAvLyDnqLPlrprmgKfmo4DmtYvphY3nva4NCiAgICAgICAgbWF4V2FpdFRpbWU6IDMwMDAsICAgICAgICAvLyDmnIDlpKfnrYnlvoXml7bpl7QNCiAgICAgICAgY2hlY2tJbnRlcnZhbDogNTAsICAgICAgICAvLyDmo4Dmn6Xpl7TpmpQNCiAgICAgICAgc3RhYmlsaXR5VGhyZXNob2xkOiAyMDAsICAvLyDnqLPlrprmgKfpmIjlgLzvvIhtc++8iQ0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnrYnlvoVET03nqLPlrpogLSDmoLjlv4Pmlrnms5UNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSB0YXJnZXRFbGVtZW50IOebruagh+WFg+e0oO+8iOWPr+mAie+8iQ0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyDpgInpobkNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyB3YWl0Rm9yRE9NU3RhYmlsaXR5KHRhcmdldEVsZW1lbnQgPSBudWxsLCBvcHRpb25zID0ge30pIHsNCiAgICAgICAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7DQogICAgICAgICAgICBjb25zdCBtYXhXYWl0ID0gb3B0aW9ucy5tYXhXYWl0VGltZSB8fCB0aGlzLm1heFdhaXRUaW1lOw0KICAgICAgICAgICAgY29uc3QgY2hlY2tJbnRlcnZhbCA9IG9wdGlvbnMuY2hlY2tJbnRlcnZhbCB8fCB0aGlzLmNoZWNrSW50ZXJ2YWw7DQogICAgICAgICAgICBjb25zdCBzdGFiaWxpdHlUaHJlc2hvbGQgPSBvcHRpb25zLnN0YWJpbGl0eVRocmVzaG9sZCB8fCB0aGlzLnN0YWJpbGl0eVRocmVzaG9sZDsNCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflvIDlp4vnrYnlvoVET03nqLPlrponLCB7DQogICAgICAgICAgICAgICAgaGFzVGFyZ2V0RWxlbWVudDogISF0YXJnZXRFbGVtZW50LA0KICAgICAgICAgICAgICAgIG1heFdhaXQsDQogICAgICAgICAgICAgICAgY2hlY2tJbnRlcnZhbCwNCiAgICAgICAgICAgICAgICBzdGFiaWxpdHlUaHJlc2hvbGQNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBsZXQgbGFzdENoYW5nZVRpbWUgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgbGV0IGlzU3RhYmxlID0gZmFsc2U7DQogICAgICAgICAgICBsZXQgY2hlY2tDb3VudCA9IDA7DQoNCiAgICAgICAgICAg",
        "IC8vIOWIm+W7uk11dGF0aW9uT2JzZXJ2ZXLmnaXnm5HlkKxET03lj5jljJYNCiAgICAgICAgICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoKG11dGF0aW9ucykgPT4gew0KICAgICAgICAgICAgICAgIC8vIOi/h+a7pOaOieS4jemHjeimgeeahOWPmOWMlg0KICAgICAgICAgICAgICAgIGNvbnN0IHNpZ25pZmljYW50TXV0YXRpb25zID0gbXV0YXRpb25zLmZpbHRlcihtdXRhdGlvbiA9Pg0KICAgICAgICAgICAgICAgICAgICB0aGlzLmlzU2lnbmlmaWNhbnRNdXRhdGlvbihtdXRhdGlvbiwgdGFyZ2V0RWxlbWVudCkNCiAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgaWYgKHNpZ25pZmljYW50TXV0YXRpb25zLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgbGFzdENoYW5nZVRpbWUgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+ajgOa1i+WIsOmHjeimgURPTeWPmOWMlicsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG11dGF0aW9uQ291bnQ6IHNpZ25pZmljYW50TXV0YXRpb25zLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrQ291bnQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOW8gOWni+inguWvnw0KICAgICAgICAgICAgY29uc3Qgb2JzZXJ2ZVRhcmdldCA9IHRhcmdldEVsZW1lbnQgfHwgZG9jdW1lbnQuYm9keTsNCiAgICAgICAgICAgIG9ic2VydmVyLm9ic2VydmUob2JzZXJ2ZVRhcmdldCwgew0KICAgICAgICAgICAgICAgIGNoaWxkTGlzdDogdHJ1ZSwNCiAgICAgICAgICAgICAgICBzdWJ0cmVlOiB0cnVlLA0KICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHRydWUsDQogICAgICAgICAgICAgICAgYXR0cmlidXRlRmlsdGVyOiBbJ2NsYXNzJywgJ3N0eWxlJywgJ2RhdGEta2V5J10sDQogICAgICAgICAgICAgICAgY2hhcmFjdGVyRGF0YTogZmFsc2UNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOetieW+heeos+WumuaApw0KICAgICAgICAgICAgICAgIHdoaWxlIChEYXRlLm5vdygpIC0gc3RhcnRUaW1lIDwgbWF4V2FpdCkgew0KICAgICAgICAgICAgICAgICAgICBjaGVja0NvdW50Kys7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5bey57uP56iz5a6aDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVTaW5jZUxhc3RDaGFuZ2UgPSBEYXRlLm5vdygpIC0gbGFzdENoYW5nZVRpbWU7DQogICAgICAgICAgICAgICAgICAgIGlmICh0aW1lU2luY2VMYXN0Q2hhbmdlID49IHN0YWJpbGl0eVRocmVzaG9sZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6aKd5aSW6aqM6K+B77ya5qOA5p+l55uu5qCH5YWD57Sg54q25oCBDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0RWxlbWVudCkgew0K",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRTdGFibGUgPSBhd2FpdCB0aGlzLnZlcmlmeUVsZW1lbnRTdGFiaWxpdHkodGFyZ2V0RWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnRTdGFibGUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNTdGFibGUgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0Q2hhbmdlVGltZSA9IERhdGUubm93KCk7IC8vIOmHjee9ruetieW+hQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNTdGFibGUgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g562J5b6F5LiL5LiA5qyh5qOA5p+lDQogICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KGNoZWNrSW50ZXJ2YWwpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsV2FpdFRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lOw0KDQogICAgICAgICAgICAgICAgaWYgKGlzU3RhYmxlKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCdET03lt7LnqLPlrponLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB3YWl0VGltZTogYCR7dG90YWxXYWl0VGltZX1tc2AsDQogICAgICAgICAgICAgICAgICAgICAgICBjaGVja0NvdW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgaGFzVGFyZ2V0RWxlbWVudDogISF0YXJnZXRFbGVtZW50DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdET03nqLPlrprmgKfnrYnlvoXotoXml7YnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB3YWl0VGltZTogYCR7dG90YWxXYWl0VGltZX1tc2AsDQogICAgICAgICAgICAgICAgICAgICAgICBtYXhXYWl0LA0KICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tDb3VudA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gaXNTdGFibGU7DQoNCiAgICAgICAgICAgIH0gZmluYWxseSB7DQogICAgICAgICAgICAgICAgb2JzZXJ2ZXIuZGlzY29ubmVjdCgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliKTmlq3mmK/lkKbkuLrph43opoHnmoRET03lj5jljJYNCiAgICAgICAgICogQHBhcmFtIHtNdXRhdGlvblJlY29yZH0gbXV0YXRpb24g",
        "5Y+Y5YyW6K6w5b2VDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gdGFyZ2V0RWxlbWVudCDnm67moIflhYPntKANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBpc1NpZ25pZmljYW50TXV0YXRpb24obXV0YXRpb24sIHRhcmdldEVsZW1lbnQpIHsNCiAgICAgICAgICAgIC8vIOW/veeVpeS4jemHjeimgeeahOWxnuaAp+WPmOWMlg0KICAgICAgICAgICAgaWYgKG11dGF0aW9uLnR5cGUgPT09ICdhdHRyaWJ1dGVzJykgew0KICAgICAgICAgICAgICAgIGNvbnN0IGlnbm9yZWRBdHRyaWJ1dGVzID0gWyd0aXRsZScsICdhcmlhLWxhYmVsJywgJ2RhdGEtdG9vbHRpcCddOw0KICAgICAgICAgICAgICAgIGlmIChpZ25vcmVkQXR0cmlidXRlcy5pbmNsdWRlcyhtdXRhdGlvbi5hdHRyaWJ1dGVOYW1lKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDlpoLmnpzmnInnm67moIflhYPntKDvvIzlj6rlhbPms6jnm7jlhbPnmoTlj5jljJYNCiAgICAgICAgICAgIGlmICh0YXJnZXRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0ID0gbXV0YXRpb24udGFyZ2V0Ow0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5Y+Y5YyW5piv5ZCm5b2x5ZON55uu5qCH5YWD57Sg5oiW5YW256WW5YWIL+WQjuS7ow0KICAgICAgICAgICAgICAgIGlmICh0YXJnZXQgPT09IHRhcmdldEVsZW1lbnQgfHwNCiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0RWxlbWVudC5jb250YWlucyh0YXJnZXQpIHx8DQogICAgICAgICAgICAgICAgICAgIHRhcmdldC5jb250YWlucyh0YXJnZXRFbGVtZW50KSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbmmK/kvJror53liJfooajnmoTph43opoHlj5jljJYNCiAgICAgICAgICAgICAgICBpZiAodGFyZ2V0LmNsYXNzTGlzdCAmJiAoDQogICAgICAgICAgICAgICAgICAgIHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3N4LWNvbnRhY3QtaXRlbScpIHx8DQogICAgICAgICAgICAgICAgICAgIHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3Z1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcnKSB8fA0KICAgICAgICAgICAgICAgICAgICB0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdkLWJhZGdlLWRvdCcpDQogICAgICAgICAgICAgICAgKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOayoeacieebruagh+WFg+e0oOaXtu+8jOajgOafpeaYr+WQpuaYr+mHjeimgeeahOWFqOWxgOWPmOWMlg0KICAgICAgICAgICAgY29uc3QgdGFyZ2V0ID0gbXV0YXRpb24u",
        "dGFyZ2V0Ow0KICAgICAgICAgICAgaWYgKHRhcmdldC5jbGFzc0xpc3QgJiYgKA0KICAgICAgICAgICAgICAgIHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3N4LWNvbnRhY3QtaXRlbScpIHx8DQogICAgICAgICAgICAgICAgdGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygndnVlLXJlY3ljbGUtc2Nyb2xsZXInKSB8fA0KICAgICAgICAgICAgICAgIHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2NoYXQtbGlzdC1ib3gnKQ0KICAgICAgICAgICAgKSkgew0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmqjOivgeWFg+e0oOeos+WumuaApw0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQg6KaB6aqM6K+B55qE5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgdmVyaWZ5RWxlbWVudFN0YWJpbGl0eShlbGVtZW50KSB7DQogICAgICAgICAgICBpZiAoIWVsZW1lbnQgfHwgIWVsZW1lbnQuaXNDb25uZWN0ZWQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g6K6w5b2V5Yid5aeL54q25oCBDQogICAgICAgICAgICAgICAgY29uc3QgaW5pdGlhbFJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGluaXRpYWxDbGFzcyA9IGVsZW1lbnQuY2xhc3NOYW1lOw0KICAgICAgICAgICAgICAgIGNvbnN0IGluaXRpYWxTdHlsZSA9IGVsZW1lbnQuc3R5bGUuY3NzVGV4dDsNCg0KICAgICAgICAgICAgICAgIC8vIOetieW+heS4gOWwj+auteaXtumXtA0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDEwMCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XnirbmgIHmmK/lkKblj5HnlJ/lj5jljJYNCiAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50UmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7DQogICAgICAgICAgICAgICAgY29uc3QgY3VycmVudENsYXNzID0gZWxlbWVudC5jbGFzc05hbWU7DQogICAgICAgICAgICAgICAgY29uc3QgY3VycmVudFN0eWxlID0gZWxlbWVudC5zdHlsZS5jc3NUZXh0Ow0KDQogICAgICAgICAgICAgICAgY29uc3QgaXNTdGFibGUgPSAoDQogICAgICAgICAgICAgICAgICAgIE1hdGguYWJzKGluaXRpYWxSZWN0LnRvcCAtIGN1cnJlbnRSZWN0LnRvcCkgPCAxICYmDQogICAgICAgICAgICAgICAgICAgIE1hdGguYWJzKGluaXRpYWxSZWN0LmxlZnQgLSBjdXJyZW50UmVjdC5sZWZ0KSA8IDEgJiYNCiAgICAgICAgICAgICAgICAgICAgaW5pdGlhbENsYXNzID09PSBjdXJyZW50Q2xhc3MgJiYNCiAgICAgICAgICAgICAgICAgICAgaW5pdGlhbFN0eWxlID09",
        "PSBjdXJyZW50U3R5bGUNCiAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflhYPntKDnqLPlrprmgKfpqozor4EnLCB7DQogICAgICAgICAgICAgICAgICAgIGlzU3RhYmxlLA0KICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbkNoYW5nZWQ6IE1hdGguYWJzKGluaXRpYWxSZWN0LnRvcCAtIGN1cnJlbnRSZWN0LnRvcCkgPj0gMSwNCiAgICAgICAgICAgICAgICAgICAgY2xhc3NDaGFuZ2VkOiBpbml0aWFsQ2xhc3MgIT09IGN1cnJlbnRDbGFzcywNCiAgICAgICAgICAgICAgICAgICAgc3R5bGVDaGFuZ2VkOiBpbml0aWFsU3R5bGUgIT09IGN1cnJlbnRTdHlsZQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGlzU3RhYmxlOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCflhYPntKDnqLPlrprmgKfpqozor4HlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog562J5b6F5YWD57Sg5Ye6546w5bm256iz5a6aDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvciDpgInmi6nlmagNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBwYXJlbnQg54i25YWD57SgDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIOmAiemhuQ0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxFbGVtZW50fG51bGw+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgd2FpdEZvckVsZW1lbnRTdGFiaWxpdHkoc2VsZWN0b3IsIHBhcmVudCA9IGRvY3VtZW50LCBvcHRpb25zID0ge30pIHsNCiAgICAgICAgICAgIGNvbnN0IG1heFdhaXQgPSBvcHRpb25zLm1heFdhaXRUaW1lIHx8IHRoaXMubWF4V2FpdFRpbWU7DQogICAgICAgICAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+etieW+heWFg+e0oOWHuueOsOW5tueos+WumicsIHsgc2VsZWN0b3IgfSk7DQoNCiAgICAgICAgICAgIHdoaWxlIChEYXRlLm5vdygpIC0gc3RhcnRUaW1lIDwgbWF4V2FpdCkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yLCBwYXJlbnQpOw0KICAgICAgICAgICAgICAgIGlmIChlbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWFg+e0oOWtmOWcqO+8jOetieW+heWFtueos+Wumg0KICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1N0YWJsZSA9IGF3YWl0IHRoaXMud2FpdEZvckRPTVN0YWJpbGl0eShlbGVtZW50LCB7DQogICAgICAgICAgICAgICAgICAgICAgICBtYXhXYWl0VGltZTogTWF0aC5taW4oMTAwMCwgbWF4V2FpdCAtIChEYXRlLm5vdygpIC0gc3RhcnRUaW1lKSkNCiAgICAgICAgICAgICAg",
        "ICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzU3RhYmxlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WFg+e0oOW3suWHuueOsOW5tueos+WumicsIHsgc2VsZWN0b3IgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudDsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KHRoaXMuY2hlY2tJbnRlcnZhbCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci53YXJuKCfnrYnlvoXlhYPntKDnqLPlrprotoXml7YnLCB7IHNlbGVjdG9yLCBtYXhXYWl0IH0pOw0KICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDlhYPntKDnrqHnkIblmaggLSDnroDljJbniYjvvIzkuJPms6jkuo7lhYPntKDmn6Xmib7lkozmv4DmtLsNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IEVsZW1lbnRNYW5hZ2VyID0gew0KICAgICAgICAvLyDnvJPlrZjlrrnlmajlvJXnlKgNCiAgICAgICAgY29udGFjdExpc3RDb250YWluZXI6IG51bGwsDQogICAgICAgIGxhc3RDaGVjazogMCwNCiAgICAgICAgY2hlY2tJbnRlcnZhbDogMTAwLA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliJ3lp4vljJblhYPntKDnrqHnkIblmagNCiAgICAgICAgICovDQogICAgICAgIGluaXQ6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgdGhpcy5jb250YWN0TGlzdENvbnRhaW5lciA9IHRoaXMuZmluZENvbnRhY3RMaXN0Q29udGFpbmVyKCk7DQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WFg+e0oOeuoeeQhuWZqOWIneWni+WMlicsIHsNCiAgICAgICAgICAgICAgICBoYXNDb250YWluZXI6ICEhdGhpcy5jb250YWN0TGlzdENvbnRhaW5lciwNCiAgICAgICAgICAgICAgICBjb250YWluZXJDbGFzczogdGhpcy5jb250YWN0TGlzdENvbnRhaW5lcj8uY2xhc3NOYW1lDQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5p+l5om+5Lya6K+d5YiX6KGo5a655ZmoDQogICAgICAgICAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBmaW5kQ29udGFjdExpc3RDb250YWluZXI6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3Qgc2VsZWN0b3JzID0gWw0KICAgICAgICAgICAgICAgICcuY2hhdC1saXN0LWJveCcsDQogICAgICAgICAgICAgICAgJy52dWUtcmVjeWNsZS1zY3JvbGxlcicsDQogICAgICAgICAgICAgICAgJ1tkYXRhLXYtNWIyZGRkMmVdIC52dWUtcmVjeWNsZS1zY3JvbGxlcicsDQogICAgICAgICAgICAgICAgJy5jb250YWN0LWxpc3QnDQogICAgICAgICAgICBdOw0KDQogICAgICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdG9yIG9m",
        "IHNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpOw0KICAgICAgICAgICAgICAgIGlmIChjb250YWluZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmib7liLDkvJror53liJfooajlrrnlmagnLCB7IHNlbGVjdG9yIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29udGFpbmVyOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+acquaJvuWIsOS8muivneWIl+ihqOWuueWZqCcpOw0KICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiviuaWreWFg+e0oOeKtuaAgQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQg6KaB6K+K5pat55qE5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBkaWFnbm9zZUVsZW1lbnRTdGF0ZTogZnVuY3Rpb24oZWxlbWVudCkgew0KICAgICAgICAgICAgY29uc3QgZGlhZ25vc2lzID0gew0KICAgICAgICAgICAgICAgIGlzQ29ubmVjdGVkOiBmYWxzZSwNCiAgICAgICAgICAgICAgICBoYXNPZmZzZXRQYXJlbnQ6IGZhbHNlLA0KICAgICAgICAgICAgICAgIGNzc1Zpc2libGU6IGZhbHNlLA0KICAgICAgICAgICAgICAgIGluVmlld3BvcnQ6IGZhbHNlLA0KICAgICAgICAgICAgICAgIGhhc1ZhbGlkUmVjdDogZmFsc2UsDQogICAgICAgICAgICAgICAgaXNJbnRlcmFjdGFibGU6IGZhbHNlLA0KICAgICAgICAgICAgICAgIGRldGFpbHM6IHt9DQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICBpZiAoIWVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICBkaWFnbm9zaXMuZGV0YWlscy5lcnJvciA9ICflhYPntKDkuLrnqbonOw0KICAgICAgICAgICAgICAgIHJldHVybiBkaWFnbm9zaXM7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5Z+656GA6L+e5o6l54q25oCBDQogICAgICAgICAgICAgICAgZGlhZ25vc2lzLmlzQ29ubmVjdGVkID0gZWxlbWVudC5pc0Nvbm5lY3RlZDsNCg0KICAgICAgICAgICAgICAgIC8vIG9mZnNldFBhcmVudOajgOafpQ0KICAgICAgICAgICAgICAgIGRpYWdub3Npcy5oYXNPZmZzZXRQYXJlbnQgPSAhIWVsZW1lbnQub2Zmc2V0UGFyZW50Ow0KDQogICAgICAgICAgICAgICAgLy8gQ1NT5Y+v6KeB5oCn5qOA5p+lDQogICAgICAgICAgICAgICAgY29uc3Qgc3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KTsNCiAgICAgICAgICAgICAgICBkaWFnbm9zaXMuY3NzVmlzaWJsZSA9ICEoDQogICAgICAgICAgICAgICAgICAgIHN0eWxlLmRpc3BsYXkgPT09ICdub25lJyB8fA0KICAgICAgICAgICAgICAgICAgICBzdHlsZS52aXNpYmlsaXR5ID09PSAnaGlkZGVuJyB8fA0KICAgICAgICAgICAg",
        "ICAgICAgICBwYXJzZUZsb2F0KHN0eWxlLm9wYWNpdHkpID09PSAwDQogICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgIGRpYWdub3Npcy5kZXRhaWxzLmNzcyA9IHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogc3R5bGUuZGlzcGxheSwNCiAgICAgICAgICAgICAgICAgICAgdmlzaWJpbGl0eTogc3R5bGUudmlzaWJpbGl0eSwNCiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogc3R5bGUub3BhY2l0eSwNCiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHN0eWxlLnBvc2l0aW9uLA0KICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHN0eWxlLnRyYW5zZm9ybQ0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAvLyDkvY3nva7lkozlsLrlr7jmo4Dmn6UNCiAgICAgICAgICAgICAgICBjb25zdCByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICBkaWFnbm9zaXMuaGFzVmFsaWRSZWN0ID0gcmVjdC53aWR0aCA+IDAgJiYgcmVjdC5oZWlnaHQgPiAwOw0KICAgICAgICAgICAgICAgIGRpYWdub3Npcy5kZXRhaWxzLnJlY3QgPSB7DQogICAgICAgICAgICAgICAgICAgIHRvcDogcmVjdC50b3AsDQogICAgICAgICAgICAgICAgICAgIGxlZnQ6IHJlY3QubGVmdCwNCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHJlY3Qud2lkdGgsDQogICAgICAgICAgICAgICAgICAgIGhlaWdodDogcmVjdC5oZWlnaHQsDQogICAgICAgICAgICAgICAgICAgIGJvdHRvbTogcmVjdC5ib3R0b20sDQogICAgICAgICAgICAgICAgICAgIHJpZ2h0OiByZWN0LnJpZ2h0DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIC8vIOinhuWPo+ajgOafpe+8iOaUvuWuvei+ueeVjO+8iQ0KICAgICAgICAgICAgICAgIGRpYWdub3Npcy5pblZpZXdwb3J0ID0gKA0KICAgICAgICAgICAgICAgICAgICByZWN0LnRvcCA+PSAtMTAwICYmDQogICAgICAgICAgICAgICAgICAgIHJlY3QuYm90dG9tIDw9IHdpbmRvdy5pbm5lckhlaWdodCArIDEwMCAmJg0KICAgICAgICAgICAgICAgICAgICByZWN0LmxlZnQgPj0gLTEwMCAmJg0KICAgICAgICAgICAgICAgICAgICByZWN0LnJpZ2h0IDw9IHdpbmRvdy5pbm5lcldpZHRoICsgMTAwDQogICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgIC8vIOS6pOS6kuaAp+ajgOafpQ0KICAgICAgICAgICAgICAgIGRpYWdub3Npcy5pc0ludGVyYWN0YWJsZSA9ICgNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmlzQ29ubmVjdGVkICYmDQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5jc3NWaXNpYmxlICYmDQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5oYXNWYWxpZFJlY3QgJiYNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmluVmlld3BvcnQNCiAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgZGlhZ25vc2lzLmRldGFpbHMudmlld3BvcnQgPSB7",
        "DQogICAgICAgICAgICAgICAgICAgIHdpZHRoOiB3aW5kb3cuaW5uZXJXaWR0aCwNCiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHQNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIGRpYWdub3Npcy5kZXRhaWxzLmVycm9yID0gZXJyb3IubWVzc2FnZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIGRpYWdub3NpczsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l5YWD57Sg5piv5ZCm5Y+v6KeB5ZKM5Y+v5Lqk5LqS77yI5aKe5by654mI77yJDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDopoHmo4Dmn6XnmoTlhYPntKANCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMg6YCJ6aG5DQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgaXNFbGVtZW50VmlzaWJsZTogZnVuY3Rpb24oZWxlbWVudCwgb3B0aW9ucyA9IHt9KSB7DQogICAgICAgICAgICBjb25zdCBzdHJpY3QgPSBvcHRpb25zLnN0cmljdCAhPT0gZmFsc2U7IC8vIOm7mOiupOS4peagvOaooeW8jw0KICAgICAgICAgICAgY29uc3QgbG9nRGV0YWlscyA9IG9wdGlvbnMubG9nRGV0YWlscyB8fCBmYWxzZTsNCg0KICAgICAgICAgICAgaWYgKCFlbGVtZW50IHx8ICFlbGVtZW50LmlzQ29ubmVjdGVkKSB7DQogICAgICAgICAgICAgICAgaWYgKGxvZ0RldGFpbHMpIExvZ2dlci5kZWJ1Zygn5YWD57Sg5LiN5a2Y5Zyo5oiW5pyq6L+e5o6l5YiwRE9NJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOeJueauiuajgOafpe+8muiZmuaLn+a7muWKqERPTeWbnuaUtueKtuaAgQ0KICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1WaWV3ID0gZWxlbWVudC5jbG9zZXN0KCcudnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0tdmlldycpOw0KICAgICAgICAgICAgICAgIGlmIChpdGVtVmlldykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm0gPSBpdGVtVmlldy5zdHlsZS50cmFuc2Zvcm07DQogICAgICAgICAgICAgICAgICAgIGlmICh0cmFuc2Zvcm0gJiYgdHJhbnNmb3JtLmluY2x1ZGVzKCd0cmFuc2xhdGVZKC05OTk5cHgpJykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChsb2dEZXRhaWxzKSBMb2dnZXIuZGVidWcoJ+WFg+e0oOWcqOiZmuaLn+a7muWKqERPTeWbnuaUtueKtuaAgSAodHJhbnNsYXRlWSgtOTk5OXB4KSknKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8g5piO56Gu5qCH6K6w5Li65LiN5Y+v6KeBDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBkaWFnbm9zaXMgPSB0aGlzLmRpYWdub3Nl",
        "RWxlbWVudFN0YXRlKGVsZW1lbnQpOw0KDQogICAgICAgICAgICAgICAgaWYgKGxvZ0RldGFpbHMpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflhYPntKDnirbmgIHor4rmlq0nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBpc0Nvbm5lY3RlZDogZGlhZ25vc2lzLmlzQ29ubmVjdGVkLA0KICAgICAgICAgICAgICAgICAgICAgICAgaGFzT2Zmc2V0UGFyZW50OiBkaWFnbm9zaXMuaGFzT2Zmc2V0UGFyZW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgY3NzVmlzaWJsZTogZGlhZ25vc2lzLmNzc1Zpc2libGUsDQogICAgICAgICAgICAgICAgICAgICAgICBpblZpZXdwb3J0OiBkaWFnbm9zaXMuaW5WaWV3cG9ydCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc1ZhbGlkUmVjdDogZGlhZ25vc2lzLmhhc1ZhbGlkUmVjdCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGlzSW50ZXJhY3RhYmxlOiBkaWFnbm9zaXMuaXNJbnRlcmFjdGFibGUsDQogICAgICAgICAgICAgICAgICAgICAgICBkZXRhaWxzOiBkaWFnbm9zaXMuZGV0YWlscywNCiAgICAgICAgICAgICAgICAgICAgICAgIHZpcnR1YWxTY3JvbGxSZWN5Y2xlZDogaXRlbVZpZXcgJiYgaXRlbVZpZXcuc3R5bGUudHJhbnNmb3JtPy5pbmNsdWRlcygndHJhbnNsYXRlWSgtOTk5OXB4KScpDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOS4peagvOaooeW8j++8muaJgOacieadoeS7tumDveW/hemhu+a7oei2sw0KICAgICAgICAgICAgICAgIGlmIChzdHJpY3QpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRpYWdub3Npcy5pc0ludGVyYWN0YWJsZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlrr3mnb7mqKHlvI/vvJrmlL7lrr3mn5DkupvmnaHku7YNCiAgICAgICAgICAgICAgICBjb25zdCByZWxheGVkVmlzaWJsZSA9ICgNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmlzQ29ubmVjdGVkICYmDQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5jc3NWaXNpYmxlICYmDQogICAgICAgICAgICAgICAgICAgIChkaWFnbm9zaXMuaGFzT2Zmc2V0UGFyZW50IHx8IGRpYWdub3Npcy5oYXNWYWxpZFJlY3QpICYmIC8vIOaUvuWuvW9mZnNldFBhcmVudOimgeaxgg0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuaW5WaWV3cG9ydA0KICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICBpZiAobG9nRGV0YWlscyAmJiAhcmVsYXhlZFZpc2libGUpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflrr3mnb7mqKHlvI/mo4Dmn6XlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBpc0Nvbm5lY3RlZDogZGlhZ25vc2lzLmlzQ29ubmVjdGVkLA0KICAgICAgICAgICAgICAgICAgICAgICAgY3NzVmlzaWJsZTogZGlhZ25vc2lzLmNzc1Zpc2libGUsDQogICAgICAgICAgICAgICAgICAgICAg",
        "ICBoYXNPZmZzZXRQYXJlbnRPclZhbGlkUmVjdDogZGlhZ25vc2lzLmhhc09mZnNldFBhcmVudCB8fCBkaWFnbm9zaXMuaGFzVmFsaWRSZWN0LA0KICAgICAgICAgICAgICAgICAgICAgICAgaW5WaWV3cG9ydDogZGlhZ25vc2lzLmluVmlld3BvcnQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHJlbGF4ZWRWaXNpYmxlOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5qOA5p+l5YWD57Sg5Y+v6KeB5oCn5pe25Ye66ZSZJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOafpeaJvuWFg+e0oOeahOeItue6p+iZmuaLn+a7muWKqOmhueinhuWbviAtIOWinuW8uueJiA0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQNCiAgICAgICAgICogQHJldHVybnMge0VsZW1lbnR8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIGZpbmRQYXJlbnRJdGVtVmlldzogZnVuY3Rpb24oZWxlbWVudCkgew0KICAgICAgICAgICAgaWYgKCFlbGVtZW50KSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGxldCBjdXJyZW50ID0gZWxlbWVudDsNCiAgICAgICAgICAgIGxldCBhdHRlbXB0cyA9IDA7DQogICAgICAgICAgICBjb25zdCBtYXhBdHRlbXB0cyA9IDEwOyAvLyDpmLLmraLml6DpmZDlvqrnjq8NCg0KICAgICAgICAgICAgd2hpbGUgKGN1cnJlbnQgJiYgY3VycmVudCAhPT0gZG9jdW1lbnQuYm9keSAmJiBhdHRlbXB0cyA8IG1heEF0dGVtcHRzKSB7DQogICAgICAgICAgICAgICAgYXR0ZW1wdHMrKzsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeW9k+WJjeWFg+e0oOaYr+WQpuaYr3Z1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcNCiAgICAgICAgICAgICAgICBpZiAoY3VycmVudC5jbGFzc0xpc3QgJiYgY3VycmVudC5jbGFzc0xpc3QuY29udGFpbnMoJ3Z1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcnKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aJvuWIsHZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBhdHRlbXB0cywNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0RhdGFJbmRleDogdHlwZW9mIGN1cnJlbnQuZGF0YXNldC5pbmRleCAhPT0gJ3VuZGVmaW5lZCcsDQogICAgICAgICAgICAgICAgICAgICAgICBkYXRhSW5kZXg6IGN1cnJlbnQuZGF0YXNldC5pbmRleCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogY3VycmVudC5zdHlsZS50cmFuc2Zvcm0NCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVy",
        "biBjdXJyZW50Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuaYr+S8muivnemhueWuueWZqA0KICAgICAgICAgICAgICAgIGlmIChjdXJyZW50LmNsYXNzTGlzdCAmJiAoDQogICAgICAgICAgICAgICAgICAgIGN1cnJlbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzeC1jb250YWN0LWl0ZW0nKSB8fA0KICAgICAgICAgICAgICAgICAgICBjdXJyZW50LmNsYXNzTGlzdC5jb250YWlucygnY29udGFjdC1pdGVtJykgfHwNCiAgICAgICAgICAgICAgICAgICAgY3VycmVudC5oYXNBdHRyaWJ1dGUoJ2RhdGEta2V5JykNCiAgICAgICAgICAgICAgICApKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOS7juS8muivnemhueWQkeS4iuafpeaJvnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXRlbVZpZXcgPSBjdXJyZW50LmNsb3Nlc3QoJy52dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3Jyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChpdGVtVmlldykgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpgJrov4fkvJror53pobnmib7liLB2dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dGVtcHRzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc0RhdGFJbmRleDogdHlwZW9mIGl0ZW1WaWV3LmRhdGFzZXQuaW5kZXggIT09ICd1bmRlZmluZWQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFJbmRleDogaXRlbVZpZXcuZGF0YXNldC5pbmRleA0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbVZpZXc7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjdXJyZW50ID0gY3VycmVudC5wYXJlbnRFbGVtZW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIud2Fybign5pyq5om+5YiwdnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0tdmlldycsIHsgYXR0ZW1wdHMsIG1heEF0dGVtcHRzIH0pOw0KICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluWFg+e0oOWcqOiZmuaLn+a7muWKqOS4reeahOe0ouW8lSAtIOWkmuetlueVpeiOt+WPlg0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQNCiAgICAgICAgICogQHJldHVybnMge251bWJlcnxudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0RWxlbWVudEluZGV4OiBmdW5jdGlvbihlbGVtZW50KSB7DQogICAgICAgICAgICBpZiAoIWVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g562W55WlMe+8muebtOaOpeS7jmRhdGEtaW5kZXjojrflj5YNCiAg",
        "ICAgICAgICAgIGNvbnN0IGl0ZW1WaWV3ID0gdGhpcy5maW5kUGFyZW50SXRlbVZpZXcoZWxlbWVudCk7DQogICAgICAgICAgICBpZiAoaXRlbVZpZXcgJiYgdHlwZW9mIGl0ZW1WaWV3LmRhdGFzZXQuaW5kZXggIT09ICd1bmRlZmluZWQnKSB7DQogICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSBwYXJzZUludChpdGVtVmlldy5kYXRhc2V0LmluZGV4LCAxMCk7DQogICAgICAgICAgICAgICAgaWYgKCFpc05hTihpbmRleCkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpgJrov4dkYXRhLWluZGV46I635Y+W57Si5byVJywgeyBpbmRleCB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGluZGV4Ow0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g562W55WlMu+8mumAmui/h+S8muivnemhueeahGRhdGEta2V55o6o566XDQogICAgICAgICAgICBjb25zdCBjb250YWN0SXRlbSA9IGVsZW1lbnQuY2xvc2VzdCgnLnN4LWNvbnRhY3QtaXRlbScpIHx8IGVsZW1lbnQuY2xvc2VzdCgnW2RhdGEta2V5XScpOw0KICAgICAgICAgICAgaWYgKGNvbnRhY3RJdGVtKSB7DQogICAgICAgICAgICAgICAgY29uc3QgZGF0YUtleSA9IGNvbnRhY3RJdGVtLmRhdGFzZXQua2V5Ow0KICAgICAgICAgICAgICAgIGlmIChkYXRhS2V5KSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWwneivleWcqOaJgOacieS8muivnemhueS4reaJvuWIsOWMuemFjeeahOWFg+e0oOW5tuiuoeeul+e0ouW8lQ0KICAgICAgICAgICAgICAgICAgICBjb25zdCBhbGxDb250YWN0SXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc3gtY29udGFjdC1pdGVtW2RhdGEta2V5XScpOw0KICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFsbENvbnRhY3RJdGVtcy5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFsbENvbnRhY3RJdGVtc1tpXS5kYXRhc2V0LmtleSA9PT0gZGF0YUtleSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6YCa6L+HZGF0YS1rZXnmjqjnrpfntKLlvJUnLCB7IGluZGV4OiBpLCBkYXRhS2V5IH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDnrZbnlaUz77ya6YCa6L+HRE9N5L2N572u5o6o566X77yI5pyA5ZCO55qE5aSH55So5pa55qGI77yJDQogICAgICAgICAgICBpZiAoaXRlbVZpZXcpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBhbGxJdGVtVmlld3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0tdmlldycpOw0KICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsSXRlbVZpZXdzLmxlbmd0aDsg",
        "aSsrKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChhbGxJdGVtVmlld3NbaV0gPT09IGl0ZW1WaWV3KSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mAmui/h0RPTeS9jee9ruaOqOeul+e0ouW8lScsIHsgaW5kZXg6IGkgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+aJgOaciee0ouW8leiOt+WPluetlueVpemDveWksei0pScpOw0KICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgIH0sDQoNCg0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpgJrov4fmu5rliqjmn6Xmib7lubbmv4DmtLvmjIflrprmmLXnp7DnmoTnlKjmiLfkvJror50NCiAgICAgICAgICog5Z+65LqO55So5oi35o+Q5L6b55qE5rua5Yqo5r+A5rS7562W55Wl77yM5pu/5o2i5Y6f5pyJ55qE5aSN5p2C5r+A5rS75py65Yi2DQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDnm67moIflhYPntKANCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMg6YCJ6aG5DQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgZmluZEFuZEFjdGl2YXRlRWxlbWVudChlbGVtZW50LCBvcHRpb25zID0ge30pIHsNCiAgICAgICAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7DQoNCiAgICAgICAgICAgIGlmICghZWxlbWVudCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdmaW5kQW5kQWN0aXZhdGVFbGVtZW50OiDnm67moIflhYPntKDkuLrnqbonKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOmqjOivgeWFg+e0oOexu+Wei++8muehruS/neaYr+acieaViOeahOS8muivnemhueWFg+e0oA0KICAgICAgICAgICAgaWYgKCFlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnc3gtY29udGFjdC1pdGVtJykpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2FybignZmluZEFuZEFjdGl2YXRlRWxlbWVudDog5Lyg5YWl55qE5LiN5piv5pyJ5pWI55qE5Lya6K+d6aG55YWD57SgJywgew0KICAgICAgICAgICAgICAgICAgICBlbGVtZW50Q2xhc3M6IGVsZW1lbnQuY2xhc3NOYW1lLA0KICAgICAgICAgICAgICAgICAgICBlbGVtZW50VGFnTmFtZTogZWxlbWVudC50YWdOYW1lLA0KICAgICAgICAgICAgICAgICAgICBlbGVtZW50RGF0YUtleTogZWxlbWVudC5kYXRhc2V0Py5rZXkNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOaPkOWPlueUqOaIt+aYteensOeUqOS6jua7muWKqOafpeaJvg0KICAgICAgICAgICAgY29uc3QgdGFyZ2V0Tmlja25hbWUgPSB0aGlzLmV4dHJhY3ROaWNr",
        "bmFtZUZyb21FbGVtZW50KGVsZW1lbnQpOw0KICAgICAgICAgICAgaWYgKCF0YXJnZXROaWNrbmFtZSkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfml6Dms5Xmj5Dlj5bnlKjmiLfmmLXnp7DvvIzkvb/nlKjln7rnoYDmv4DmtLvmlrnlvI8nKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5iYXNpY1Njcm9sbEFjdGl2YXRpb24oZWxlbWVudCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKGBb5byA5aeLXSDlh4blpIfpgJrov4fmu5rliqjmv4DmtLvnlKjmiLc6ICIke3RhcmdldE5pY2tuYW1lfSJgKTsNCg0KICAgICAgICAgICAgLy8gLS0tIOatpemqpCAxOiDojrflj5blvZPliY3mtLvliqjnmoTmu5rliqjlrrnlmaggLS0tDQogICAgICAgICAgICBjb25zdCBzY3JvbGxlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5kLWNvbGxhcHNlLWNvbnRlbnQtd3JhcHBlcjpub3QoW3N0eWxlKj0ibWF4LWhlaWdodDogMHB4Il0pIC52dWUtcmVjeWNsZS1zY3JvbGxlci5zY3JvbGxlcicpOw0KICAgICAgICAgICAgaWYgKCFzY3JvbGxlcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign4p2MIOmUmeivr++8muaJvuS4jeWIsOa0u+WKqOeahOa7muWKqOWuueWZqOOAguivt+ehruS/nSLlhajpg6jkvJror50i5YiX6KGo5bey57uP5bGV5byA44CCJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyAtLS0g6L6F5Yqp5Ye95pWwOiDmqKHmi5/nnJ/lrp7nlKjmiLfngrnlh7vvvIjov5nmmK/mv4DmtLvnmoTlhbPplK7vvIkgLS0tDQogICAgICAgICAgICBjb25zdCBzaW11bGF0ZUNsaWNrID0gKGNsaWNrRWxlbWVudCkgPT4gew0KICAgICAgICAgICAgICAgIGlmICghY2xpY2tFbGVtZW50KSByZXR1cm47DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oYFvmv4DmtLtdIOWHhuWkh+WQkSAiJHt0YXJnZXROaWNrbmFtZX0iIOWPkemAgeaooeaLn+eCueWHu+S6i+S7ti4uLmApOw0KDQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5L2/55So5LiA57O75YiX5LqL5Lu25p2l56Gu5L+d6IO96KKr5ZCE56eN5YmN56uv5qGG5p625o2V6I63DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGV2ZW50VHlwZXMgPSBbDQogICAgICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICdwb2ludGVyZG93bicsIGNvbnN0cnVjdG9yOiBQb2ludGVyRXZlbnQgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHsgdHlwZTogJ21vdXNlZG93bicsIGNvbnN0cnVjdG9yOiBNb3VzZUV2ZW50IH0sDQogICAgICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICdwb2ludGVydXAnLCBjb25zdHJ1Y3RvcjogUG9pbnRlckV2ZW50IH0sDQogICAgICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICdtb3VzZXVwJywgY29uc3RydWN0b3I6IE1vdXNlRXZlbnQgfSwNCiAgICAgICAgICAgICAgICAgICAg",
        "ICAgIHsgdHlwZTogJ2NsaWNrJywgY29uc3RydWN0b3I6IE1vdXNlRXZlbnQgfQ0KICAgICAgICAgICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAgICAgICAgIGV2ZW50VHlwZXMuZm9yRWFjaCgoeyB0eXBlLCBjb25zdHJ1Y3RvciB9KSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IGNvbnN0cnVjdG9yKHR5cGUsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnViYmxlczogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrRWxlbWVudC5kaXNwYXRjaEV2ZW50KGV2ZW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDkuovku7YgJHt0eXBlfSDliJvlu7rlpLHotKXvvIzot7Pov4dgLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbyhg4pyFIOaIkOWKnyEg5bey5r+A5rS755So5oi3ICIke3RhcmdldE5pY2tuYW1lfSIg55qE5Lya6K+d44CCYCk7DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmqKHmi5/ngrnlh7vlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIC8vIC0tLSDmraXpqqQgMjog5a6a5LmJ5p+l5om+5bm25r+A5rS755qE5Ye95pWwIC0tLQ0KICAgICAgICAgICAgY29uc3QgZmluZEFuZEFjdGl2YXRlID0gYXN5bmMgKCkgPT4gew0KICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1zID0gc2Nyb2xsZXIucXVlcnlTZWxlY3RvckFsbCgnLnN4LWNvbnRhY3QtaXRlbScpOw0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBpdGVtcykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBuaWNrbmFtZUVsZW1lbnQgPSBpdGVtLnF1ZXJ5U2VsZWN0b3IoJy5uaWNrLW5hbWUnKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG5pY2tuYW1lRWxlbWVudCAmJiBuaWNrbmFtZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpID09PSB0YXJnZXROaWNrbmFtZS50cmltKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKGBb5om+5YiwIV0g55So5oi3ICIke3RhcmdldE5pY2tuYW1lfSIg5bey5Zyo5b2T5YmN5bGP5bmV5YaF44CCYCk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOa7muWKqOWIsOWFg+e0oOS9v+WFtuWujOWFqOWPr+inge+8jOW5tuWxheS4reaY",
        "vuekug0KICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5zY3JvbGxJbnRvVmlldyh7IGJlaGF2aW9yOiAnc21vb3RoJywgYmxvY2s6ICdjZW50ZXInIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDnrYnlvoXmu5rliqjliqjnlLvlrozmiJDvvIzov5nmmK/noa7kv53ngrnlh7vmiJDlip/nmoTph43opoHkuIDmraUNCiAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDUwMCk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOaJp+ihjOa/gOa0u+aTjeS9nA0KICAgICAgICAgICAgICAgICAgICAgICAgc2ltdWxhdGVDbGljayhpdGVtKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW07IC8vIOi/lOWbnuaJvuWIsOeahOWFg+e0oO+8jOihqOekuuaIkOWKnw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOyAvLyDmnKrlnKjlvZPliY3lsY/luZXmib7liLANCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIC8vIC0tLSDmraXpqqQgMzog5pm66IO95rua5Yqo5p+l5om+562W55WlIC0tLQ0KICAgICAgICAgICAgLy8g5YWI5Zyo5b2T5YmN5bGP5bmV5p+l5om+5LiA5qyhDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoIuatpemqpCAxOiDmo4Dmn6XlvZPliY3lsY/luZUuLi4iKTsNCiAgICAgICAgICAgIGlmIChhd2FpdCBmaW5kQW5kQWN0aXZhdGUoKSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsVGltZSA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+a7muWKqOa/gOa0u+aIkOWKnycsIHsgdG90YWxUaW1lOiBgJHt0b3RhbFRpbWV9bXNgLCB0YXJnZXROaWNrbmFtZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsgLy8g5Zyo6aaW5bGP5bCx5om+5Yiw5LqGDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOiusOW9leW9k+WJjea7muWKqOS9jee9ru+8jOeUqOS6juWQjue7reaBouWkjQ0KICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxTY3JvbGxUb3AgPSBzY3JvbGxlci5zY3JvbGxUb3A7DQogICAgICAgICAgICBMb2dnZXIuZGVidWcoYOiusOW9leWOn+Wni+a7muWKqOS9jee9rjogJHtvcmlnaW5hbFNjcm9sbFRvcH1weGApOw0KDQogICAgICAgICAgICAvLyDnrZbnlaUxOiDlhYjlm57liLDpobbpg6jvvIzku47lpLTlvIDlp4vmn6Xmib7vvIjop6PlhrPnlKjmiLflnKjkuIrkuIDpobXnmoTpl67popjvvIkNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygi5q2l6aqkIDI6IOWbnuWIsOmhtumDqOmHjeaWsOW8gOWni+afpeaJvi4uLiIpOw0KICAgICAgICAgICAgc2Nyb2xsZXIuc2Nyb2xsVG9wID0gMDsNCiAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDMwMCk7IC8vIOetieW+hea7muWKqOWujOaIkA0KDQogICAgICAgICAgICAvLyDku47pobbpg6jlvIDlp4vmn6Xmib4NCiAgICAgICAgICAg",
        "IGlmIChhd2FpdCBmaW5kQW5kQWN0aXZhdGUoKSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsVGltZSA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+S7jumhtumDqOafpeaJvua/gOa0u+aIkOWKnycsIHsgdG90YWxUaW1lOiBgJHt0b3RhbFRpbWV9bXNgLCB0YXJnZXROaWNrbmFtZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g562W55WlMjog5LuO6aG26YOo5byA5aeL5ZCR5LiL5rua5Yqo5p+l5om+DQogICAgICAgICAgICBMb2dnZXIuZGVidWcoIuatpemqpCAzOiDku47pobbpg6jlvIDlp4vmu5rliqjmn6Xmib4uLi4iKTsNCiAgICAgICAgICAgIGxldCBsYXN0U2Nyb2xsVG9wID0gLTE7DQogICAgICAgICAgICBjb25zdCBTQ1JPTExfREVMQVlfTVMgPSAyNTA7IC8vIOa7muWKqOWQjuetieW+hURPTea4suafk+eahOaXtumXtA0KICAgICAgICAgICAgY29uc3QgTUFYX1NDUk9MTF9BVFRFTVBUUyA9IDUwOyAvLyDmnIDlpKfmu5rliqjmrKHmlbDvvIzpgb/lhY3ml6DpmZDmu5rliqgNCiAgICAgICAgICAgIGxldCBzY3JvbGxBdHRlbXB0cyA9IDA7DQoNCiAgICAgICAgICAgIC8vIOWPquimgea7muWKqOadoei/mOiDvee7p+e7rea7muWKqOS4lOacqui2hei/h+acgOWkp+WwneivleasoeaVsA0KICAgICAgICAgICAgd2hpbGUgKHNjcm9sbGVyLnNjcm9sbFRvcCAhPT0gbGFzdFNjcm9sbFRvcCAmJiBzY3JvbGxBdHRlbXB0cyA8IE1BWF9TQ1JPTExfQVRURU1QVFMpIHsNCiAgICAgICAgICAgICAgICBsYXN0U2Nyb2xsVG9wID0gc2Nyb2xsZXIuc2Nyb2xsVG9wOw0KICAgICAgICAgICAgICAgIHNjcm9sbEF0dGVtcHRzKys7DQoNCiAgICAgICAgICAgICAgICAvLyDlkJHkuIvmu5rliqjkuIDkuKrlsY/luZXnmoTpq5jluqYNCiAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgKz0gc2Nyb2xsZXIuY2xpZW50SGVpZ2h0Ow0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1ZyhgLi4u5ZCR5LiL5rua5Yqo5LiA5bGPICgke3Njcm9sbEF0dGVtcHRzfS8ke01BWF9TQ1JPTExfQVRURU1QVFN9KSAo5b2T5YmN5L2N572uOiAke01hdGgucm91bmQoc2Nyb2xsZXIuc2Nyb2xsVG9wKX1weClgKTsNCg0KICAgICAgICAgICAgICAgIC8vIOetieW+heaWsOWGheWuuea4suafkw0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KFNDUk9MTF9ERUxBWV9NUyk7DQoNCiAgICAgICAgICAgICAgICAvLyDlnKjmlrDmuLLmn5PnmoTlsY/luZXlhoXlrrnkuK3mn6Xmib7lubbmv4DmtLsNCiAgICAgICAgICAgICAgICBpZiAoYXdhaXQgZmluZEFuZEFjdGl2YXRlKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oIua7muWKqOafpeaJvua/gOa0u+aIkOWKn++8jOW3suWBnOatoua7muWKqOOAgiIpOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0b3RhbFRpbWUgPSBEYXRlLm5v",
        "dygpIC0gc3RhcnRUaW1lOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5rua5Yqo5r+A5rS75oiQ5YqfJywgeyB0b3RhbFRpbWU6IGAke3RvdGFsVGltZX1tc2AsIHRhcmdldE5pY2tuYW1lLCBzY3JvbGxBdHRlbXB0cyB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7IC8vIOaJvuWIsOWQjueri+WIu+mAgOWHuuW+queOrw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuW3suWIsOi+vuW6lemDqA0KICAgICAgICAgICAgICAgIGlmIChzY3JvbGxlci5zY3JvbGxUb3AgKyBzY3JvbGxlci5jbGllbnRIZWlnaHQgPj0gc2Nyb2xsZXIuc2Nyb2xsSGVpZ2h0IC0gMTApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCIuLi7lt7Lmu5rliqjliLDlupXpg6jjgIIiKTsNCiAgICAgICAgICAgICAgICAgICAgLy8g5Yiw6L6+5bqV6YOo5ZCO5pyA5ZCO5qOA5p+l5LiA5qyh77yM5Lul6Ziy55uu5qCH5Zyo5YiX6KGo5pyA5pyr5bC+DQogICAgICAgICAgICAgICAgICAgIGlmICghKGF3YWl0IGZpbmRBbmRBY3RpdmF0ZSgpKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKGDmnKrmib7liLDnlKjmiLc6ICIke3RhcmdldE5pY2tuYW1lfSLvvIzlsJ3or5XmgaLlpI3ljp/lp4vmu5rliqjkvY3nva5gKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmgaLlpI3liLDljp/lp4vmu5rliqjkvY3nva4NCiAgICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgPSBvcmlnaW5hbFNjcm9sbFRvcDsNCiAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgyMDApOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsVGltZSA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7DQogICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W6lemDqOafpeaJvua/gOa0u+aIkOWKnycsIHsgdG90YWxUaW1lOiBgJHt0b3RhbFRpbWV9bXNgLCB0YXJnZXROaWNrbmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBicmVhazsgLy8g6YCA5Ye65b6q546vDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDlpoLmnpzovr7liLDmnIDlpKfmu5rliqjmrKHmlbDpmZDliLYNCiAgICAgICAgICAgIGlmIChzY3JvbGxBdHRlbXB0cyA+PSBNQVhfU0NST0xMX0FUVEVNUFRTKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oYOi+vuWIsOacgOWkp+a7muWKqOasoeaVsOmZkOWItiAoJHtNQVhfU0NST0xMX0FUVEVNUFRTfSnvvIzlgZzmraLmn6Xmib5gKTsNCiAgICAgICAgICAgICAgICAvLyDmgaLlpI3liLDljp/lp4vmu5rliqjkvY3nva4NCiAgICAgICAgICAgICAgICBz",
        "Y3JvbGxlci5zY3JvbGxUb3AgPSBvcmlnaW5hbFNjcm9sbFRvcDsNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgyMDApOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb25zdCB0b3RhbFRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lOw0KICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmu5rliqjmv4DmtLvlpLHotKXvvJrmnKrmib7liLDnm67moIfnlKjmiLcnLCB7DQogICAgICAgICAgICAgICAgdG90YWxUaW1lOiBgJHt0b3RhbFRpbWV9bXNgLA0KICAgICAgICAgICAgICAgIHRhcmdldE5pY2tuYW1lLA0KICAgICAgICAgICAgICAgIHNjcm9sbEF0dGVtcHRzLA0KICAgICAgICAgICAgICAgIG9yaWdpbmFsU2Nyb2xsVG9wLA0KICAgICAgICAgICAgICAgIGZpbmFsU2Nyb2xsVG9wOiBzY3JvbGxlci5zY3JvbGxUb3AsDQogICAgICAgICAgICAgICAgc3VnZ2VzdGlvbjogJ+ivt+ajgOafpeeUqOaIt+aYteensOaYr+WQpuWujOWFqOWMuemFje+8jOaIlueUqOaIt+aYr+WQpuW3suemu+e6vycNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyDlpoLmnpzlvqrnjq/nu5PmnZ/ov5jmsqHmib7liLDvvIzliJnooajnpLrlpLHotKUNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5LuO5YWD57Sg5Lit5o+Q5Y+W55So5oi35pi156ewDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDnm67moIflhYPntKANCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ3xudWxsfSDnlKjmiLfmmLXnp7ANCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3ROaWNrbmFtZUZyb21FbGVtZW50KGVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5bCd6K+V5aSa56eN6YCJ5oup5Zmo5p+l5om+5pi156ewIC0g5qC55o2u5a6e6ZmFRE9N57uT5p6E5LyY5YyWDQogICAgICAgICAgICAgICAgY29uc3Qgbmlja25hbWVTZWxlY3RvcnMgPSBbDQogICAgICAgICAgICAgICAgICAgIC8vIOacgOS8mOWFiO+8muebtOaOpeafpeaJvuaYteensOWFg+e0oO+8iOS4juekuuS+i+S7o+eggeS4gOiHtO+8iQ0KICAgICAgICAgICAgICAgICAgICAnLm5pY2stbmFtZScsDQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5aSH55So6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgICAgICcudXNlci1uYW1lJywNCiAgICAgICAgICAgICAgICAgICAgJy5jb250YWN0LW5hbWUnLA0KICAgICAgICAgICAgICAgICAgICAnW2NsYXNzKj0ibmljayJdJywNCiAgICAgICAgICAgICAgICAgICAgJ1tjbGFzcyo9Im5hbWUiXScsDQogICAgICAgICAgICAgICAgICAgICcuY29udGFjdC1pbmZvIC5uaWNrbmFtZScsDQogICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2VsZWN0b3Igb2Ygbmlja25hbWVTZWxlY3RvcnMpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgbmlja25hbWVFbGVtZW50ID0gZWxlbWVudC5x",
        "dWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG5pY2tuYW1lRWxlbWVudCAmJiBuaWNrbmFtZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuaWNrbmFtZSA9IG5pY2tuYW1lRWxlbWVudC50ZXh0Q29udGVudC50cmltKCk7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aIkOWKn+aPkOWPlueUqOaIt+aYteensCcsIHsgbmlja25hbWUsIHNlbGVjdG9yIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5pY2tuYW1lOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6LCD6K+V5L+h5oGv77ya6K6w5b2V5YWD57Sg57uT5p6E5Lul5L6/5o6S5p+l6Zeu6aKYDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmmLXnp7Dmj5Dlj5blpLHotKXvvIzlhYPntKDnu5PmnoTkv6Hmga8nLCB7DQogICAgICAgICAgICAgICAgICAgIGVsZW1lbnRDbGFzczogZWxlbWVudC5jbGFzc05hbWUsDQogICAgICAgICAgICAgICAgICAgIGVsZW1lbnREYXRhS2V5OiBlbGVtZW50LmRhdGFzZXQ/LmtleSwNCiAgICAgICAgICAgICAgICAgICAgaW5uZXJIVE1MOiBlbGVtZW50LmlubmVySFRNTC5zdWJzdHJpbmcoMCwgMjAwKSArICcuLi4nLCAvLyDmiKrlj5bliY0yMDDlrZfnrKYNCiAgICAgICAgICAgICAgICAgICAgYXZhaWxhYmxlQ2xhc3NlczogQXJyYXkuZnJvbShlbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyonKSkubWFwKGVsID0+IGVsLmNsYXNzTmFtZSkuZmlsdGVyKGMgPT4gYykuc2xpY2UoMCwgMTApDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDlpoLmnpzmib7kuI3liLDmmLXnp7DlhYPntKDvvIzlsJ3or5Xku45kYXRh5bGe5oCn6I635Y+WDQogICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuZGF0YXNldCAmJiBlbGVtZW50LmRhdGFzZXQudXNlck5hbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfku45kYXRh5bGe5oCn5o+Q5Y+W55So5oi35pi156ewJywgeyBuaWNrbmFtZTogZWxlbWVudC5kYXRhc2V0LnVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudC5kYXRhc2V0LnVzZXJOYW1lOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfml6Dms5Xku47lhYPntKDkuK3mj5Dlj5bnlKjmiLfmmLXnp7AnKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmj5Dlj5bnlKjmiLfmmLXnp7DlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAg",
        "ICAgKiDln7rnoYDmu5rliqjmv4DmtLvmlrnlvI/vvIjlvZPml6Dms5Xmj5Dlj5bmmLXnp7Dml7bnmoTlpIfnlKjmlrnmoYjvvIkNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOebruagh+WFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGJhc2ljU2Nyb2xsQWN0aXZhdGlvbihlbGVtZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5L2/55So5Z+656GA5rua5Yqo5r+A5rS75pa55byPJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblnKjomZrmi5/mu5rliqjnmoRET03lm57mlLbnirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBpdGVtVmlldyA9IGVsZW1lbnQuY2xvc2VzdCgnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcnKTsNCiAgICAgICAgICAgICAgICBpZiAoaXRlbVZpZXcpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdHJhbnNmb3JtID0gaXRlbVZpZXcuc3R5bGUudHJhbnNmb3JtOw0KICAgICAgICAgICAgICAgICAgICBpZiAodHJhbnNmb3JtICYmIHRyYW5zZm9ybS5pbmNsdWRlcygndHJhbnNsYXRlWSgtOTk5OXB4KScpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5qOA5rWL5Yiw5YWD57Sg5ZyoRE9N5Zue5pS254q25oCB77yM6ZyA6KaB54m55q6K5aSE55CGJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlsJ3or5XpgJrov4fmu5rliqjlrrnlmajmv4DmtLsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjcm9sbGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyLnNjcm9sbGVyJyk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmu5rliqjliLDpobbpg6jph43mlrDlvIDlp4sNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgPSAwOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDMwMCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnm7TmjqXmu5rliqjliLDlhYPntKDkvY3nva4NCiAgICAgICAgICAgICAgICBlbGVtZW50LnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ2NlbnRlcicgfSk7DQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoNTAwKTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuWPr+ingQ0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzRWxlbWVudFZpc2libGUoZWxlbWVudCkpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5omn6KGM54K55Ye75r+A5rS7DQogICAg",
        "ICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBldmVudFR5cGVzID0gWw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdHlwZTogJ3BvaW50ZXJkb3duJywgY29uc3RydWN0b3I6IFBvaW50ZXJFdmVudCB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdHlwZTogJ21vdXNlZG93bicsIGNvbnN0cnVjdG9yOiBNb3VzZUV2ZW50IH0sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyB0eXBlOiAncG9pbnRlcnVwJywgY29uc3RydWN0b3I6IFBvaW50ZXJFdmVudCB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdHlwZTogJ21vdXNldXAnLCBjb25zdHJ1Y3RvcjogTW91c2VFdmVudCB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdHlwZTogJ2NsaWNrJywgY29uc3RydWN0b3I6IE1vdXNlRXZlbnQgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRUeXBlcy5mb3JFYWNoKCh7IHR5cGUsIGNvbnN0cnVjdG9yIH0pID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBldmVudCA9IG5ldyBjb25zdHJ1Y3Rvcih0eXBlLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWJibGVzOiB0cnVlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2VsYWJsZTogdHJ1ZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KGV2ZW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYOWfuuehgOa/gOa0u+S6i+S7tiAke3R5cGV9IOWIm+W7uuWksei0pe+8jOi3s+i/h2AsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfln7rnoYDmu5rliqjmv4DmtLvmiJDlip8nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfln7rnoYDmu5rliqjmv4DmtLvngrnlh7vlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+WfuuehgOa7muWKqOa/gOa0u+Wksei0pe+8muWFg+e0oOS4",
        "jeWPr+ingScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRDbGFzczogZWxlbWVudC5jbGFzc05hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50RGF0YUtleTogZWxlbWVudC5kYXRhc2V0Py5rZXksDQogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50UmVjdDogZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGlzQ29ubmVjdGVkOiBlbGVtZW50LmlzQ29ubmVjdGVkLA0KICAgICAgICAgICAgICAgICAgICAgICAgdmlydHVhbFNjcm9sbFN0YXRlOiAoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1WaWV3ID0gZWxlbWVudC5jbG9zZXN0KCcudnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0tdmlldycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtVmlldyA/IGl0ZW1WaWV3LnN0eWxlLnRyYW5zZm9ybSA6ICdub3QgaW4gdmlydHVhbCBzY3JvbGwnDQogICAgICAgICAgICAgICAgICAgICAgICB9KSgpDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WfuuehgOa7muWKqOa/gOa0u+WHuumUmScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmj5Dlj5blhYPntKDnibnlvoHnlKjkuo7ljLnphY0NCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOebruagh+WFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0RWxlbWVudFNpZ25hdHVyZTogZnVuY3Rpb24oZWxlbWVudCkgew0KICAgICAgICAgICAgaWYgKCFlbGVtZW50KSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gew0KICAgICAgICAgICAgICAgICAgICBkYXRhS2V5OiBlbGVtZW50LmRhdGFzZXQ/LmtleSwNCiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBlbGVtZW50LmNsYXNzTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgdGFnTmFtZTogZWxlbWVudC50YWdOYW1lLA0KICAgICAgICAgICAgICAgICAgICB0ZXh0Q29udGVudDogJycsDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiAnJywNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZVByZXZpZXc6ICcnLA0KICAgICAgICAgICAgICAgICAgICBoYXNVbnJlYWRCYWRnZTogZmFsc2UsDQogICAgICAgICAgICAgICAgICAgIGhhc0xlYWRzVGFnOiBmYWxzZSAgLy8g55WZ5a6i6LWE",
        "5qCH562+54q25oCBDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIC8vIOaPkOWPlueUqOaIt+WQjQ0KICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJOYW1lRWxlbWVudCA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5zeC1jb250YWN0LWl0ZW0tbmFtZSwgLmNvbnRhY3QtbmFtZSwgLnVzZXItbmFtZScsIGVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmICh1c2VyTmFtZUVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgc2lnbmF0dXJlLnVzZXJOYW1lID0gdXNlck5hbWVFbGVtZW50LnRleHRDb250ZW50Py50cmltKCkgfHwgJyc7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5o+Q5Y+W5raI5oGv6aKE6KeIDQogICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZUVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcuc3gtY29udGFjdC1pdGVtLW1lc3NhZ2UsIC5sYXN0LW1lc3NhZ2UsIC5tZXNzYWdlLXByZXZpZXcnLCBlbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZUVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgc2lnbmF0dXJlLm1lc3NhZ2VQcmV2aWV3ID0gbWVzc2FnZUVsZW1lbnQudGV4dENvbnRlbnQ/LnRyaW0oKSB8fCAnJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmnKror7vmoIfor4YNCiAgICAgICAgICAgICAgICBjb25zdCB1bnJlYWRCYWRnZSA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5kLWJhZGdlLWRvdCcsIGVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIHNpZ25hdHVyZS5oYXNVbnJlYWRCYWRnZSA9ICEhdW5yZWFkQmFkZ2U7DQoNCiAgICAgICAgICAgICAgICAvLyDmj5Dlj5blrozmlbTmlofmnKzlhoXlrrnkvZzkuLrlpIfnlKgNCiAgICAgICAgICAgICAgICBzaWduYXR1cmUudGV4dENvbnRlbnQgPSBlbGVtZW50LnRleHRDb250ZW50Py50cmltKCkgfHwgJyc7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4DmtYvnlZnlrqLotYTmoIfnrb7nirbmgIENCiAgICAgICAgICAgICAgICBzaWduYXR1cmUuaGFzTGVhZHNUYWcgPSBMZWFkc1N0YXR1c01hbmFnZXIuZGV0ZWN0TGVhZHNTdGF0dXMoZWxlbWVudCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aPkOWPluWFg+e0oOeJueW+gScsIHsNCiAgICAgICAgICAgICAgICAgICAgZGF0YUtleTogc2lnbmF0dXJlLmRhdGFLZXksDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiBzaWduYXR1cmUudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VQcmV2aWV3OiBzaWduYXR1cmUubWVzc2FnZVByZXZpZXc/LnN1YnN0cmluZygwLCA1MCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgaGFzVW5yZWFkQmFkZ2U6IHNpZ25hdHVyZS5oYXNVbnJlYWRCYWRnZSwNCiAgICAgICAgICAgICAgICAgICAgaGFzTGVhZHNUYWc6IHNpZ25hdHVyZS5oYXNMZWFkc1RhZw0KICAgICAgICAgICAgICAgIH0pOw0K",
        "DQogICAgICAgICAgICAgICAgcmV0dXJuIHNpZ25hdHVyZTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aPkOWPluWFg+e0oOeJueW+geWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWfuuS6jueJueW+geafpeaJvuWFg+e0oA0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gc2lnbmF0dXJlIOWFg+e0oOeJueW+gQ0KICAgICAgICAgKiBAcmV0dXJucyB7RWxlbWVudHxudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZmluZEVsZW1lbnRCeVNpZ25hdHVyZTogZnVuY3Rpb24oc2lnbmF0dXJlKSB7DQogICAgICAgICAgICBpZiAoIXNpZ25hdHVyZSkgew0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb25zdCBhbGxDb250YWN0SXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc3gtY29udGFjdC1pdGVtJyk7DQogICAgICAgICAgICBsZXQgYmVzdE1hdGNoID0gbnVsbDsNCiAgICAgICAgICAgIGxldCBiZXN0U2NvcmUgPSAwOw0KDQogICAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgYWxsQ29udGFjdEl0ZW1zKSB7DQogICAgICAgICAgICAgICAgaWYgKCFpdGVtLmlzQ29ubmVjdGVkKSBjb250aW51ZTsNCg0KICAgICAgICAgICAgICAgIGxldCBzY29yZSA9IDA7DQogICAgICAgICAgICAgICAgY29uc3QgaXRlbVNpZ25hdHVyZSA9IHRoaXMuZXh0cmFjdEVsZW1lbnRTaWduYXR1cmUoaXRlbSk7DQogICAgICAgICAgICAgICAgaWYgKCFpdGVtU2lnbmF0dXJlKSBjb250aW51ZTsNCg0KICAgICAgICAgICAgICAgIC8vIOeyvuehruWMuemFjWRhdGEta2V577yI5pyA6auY5LyY5YWI57qn77yJDQogICAgICAgICAgICAgICAgaWYgKHNpZ25hdHVyZS5kYXRhS2V5ICYmIGl0ZW1TaWduYXR1cmUuZGF0YUtleSA9PT0gc2lnbmF0dXJlLmRhdGFLZXkpIHsNCiAgICAgICAgICAgICAgICAgICAgc2NvcmUgKz0gMTAwOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOeUqOaIt+WQjeWMuemFje+8iOmrmOS8mOWFiOe6p++8iQ0KICAgICAgICAgICAgICAgIGlmIChzaWduYXR1cmUudXNlck5hbWUgJiYgaXRlbVNpZ25hdHVyZS51c2VyTmFtZSA9PT0gc2lnbmF0dXJlLnVzZXJOYW1lKSB7DQogICAgICAgICAgICAgICAgICAgIHNjb3JlICs9IDUwOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOa2iOaBr+mihOiniOWMuemFje+8iOS4reS8mOWFiOe6p++8iQ0KICAgICAgICAgICAgICAgIGlmIChzaWduYXR1cmUubWVzc2FnZVByZXZpZXcgJiYgaXRlbVNpZ25hdHVyZS5tZXNzYWdlUHJldmlldyA9PT0gc2lnbmF0dXJlLm1lc3NhZ2VQcmV2aWV3KSB7DQogICAgICAgICAgICAgICAg",
        "ICAgIHNjb3JlICs9IDMwOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOacquivu+eKtuaAgeWMuemFje+8iOS9juS8mOWFiOe6p++8iQ0KICAgICAgICAgICAgICAgIGlmIChzaWduYXR1cmUuaGFzVW5yZWFkQmFkZ2UgPT09IGl0ZW1TaWduYXR1cmUuaGFzVW5yZWFkQmFkZ2UpIHsNCiAgICAgICAgICAgICAgICAgICAgc2NvcmUgKz0gMTA7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5paH5pys5YaF5a6555u45Ly85bqm77yI5aSH55So77yJDQogICAgICAgICAgICAgICAgaWYgKHNpZ25hdHVyZS50ZXh0Q29udGVudCAmJiBpdGVtU2lnbmF0dXJlLnRleHRDb250ZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHNpbWlsYXJpdHkgPSB0aGlzLmNhbGN1bGF0ZVRleHRTaW1pbGFyaXR5KHNpZ25hdHVyZS50ZXh0Q29udGVudCwgaXRlbVNpZ25hdHVyZS50ZXh0Q29udGVudCk7DQogICAgICAgICAgICAgICAgICAgIHNjb3JlICs9IHNpbWlsYXJpdHkgKiAyMDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoc2NvcmUgPiBiZXN0U2NvcmUpIHsNCiAgICAgICAgICAgICAgICAgICAgYmVzdFNjb3JlID0gc2NvcmU7DQogICAgICAgICAgICAgICAgICAgIGJlc3RNYXRjaCA9IGl0ZW07DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoYmVzdE1hdGNoICYmIGJlc3RTY29yZSA+PSA1MCkgeyAvLyDorr7nva7mnIDkvY7ljLnphY3pmIjlgLwNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WfuuS6jueJueW+geaJvuWIsOWMuemFjeWFg+e0oCcsIHsNCiAgICAgICAgICAgICAgICAgICAgc2NvcmU6IGJlc3RTY29yZSwNCiAgICAgICAgICAgICAgICAgICAgZGF0YUtleTogYmVzdE1hdGNoLmRhdGFzZXQ/LmtleQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBiZXN0TWF0Y2g7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci53YXJuKCfln7rkuo7nibnlvoHmnKrmib7liLDljLnphY3lhYPntKAnLCB7IGJlc3RTY29yZSB9KTsNCiAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorqHnrpfmlofmnKznm7jkvLzluqYNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQxIOaWh+acrDENCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQyIOaWh+acrDINCiAgICAgICAgICogQHJldHVybnMge251bWJlcn0g55u45Ly85bqmICgwLTEpDQogICAgICAgICAqLw0KICAgICAgICBjYWxjdWxhdGVUZXh0U2ltaWxhcml0eTogZnVuY3Rpb24odGV4dDEsIHRleHQyKSB7DQogICAgICAgICAgICBpZiAoIXRleHQxIHx8ICF0ZXh0MikgcmV0dXJuIDA7DQogICAgICAgICAgICBpZiAodGV4dDEgPT09IHRleHQyKSByZXR1cm4gMTsNCg0KICAgICAgICAgICAgY29uc3QgbGVuMSA9IHRl",
        "eHQxLmxlbmd0aDsNCiAgICAgICAgICAgIGNvbnN0IGxlbjIgPSB0ZXh0Mi5sZW5ndGg7DQogICAgICAgICAgICBjb25zdCBtYXhMZW4gPSBNYXRoLm1heChsZW4xLCBsZW4yKTsNCg0KICAgICAgICAgICAgaWYgKG1heExlbiA9PT0gMCkgcmV0dXJuIDE7DQoNCiAgICAgICAgICAgIC8vIOeugOWNleeahOe8lui+kei3neemu+eul+azlQ0KICAgICAgICAgICAgY29uc3QgbWF0cml4ID0gQXJyYXkobGVuMSArIDEpLmZpbGwoKS5tYXAoKCkgPT4gQXJyYXkobGVuMiArIDEpLmZpbGwoMCkpOw0KDQogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8PSBsZW4xOyBpKyspIG1hdHJpeFtpXVswXSA9IGk7DQogICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8PSBsZW4yOyBqKyspIG1hdHJpeFswXVtqXSA9IGo7DQoNCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IGxlbjE7IGkrKykgew0KICAgICAgICAgICAgICAgIGZvciAobGV0IGogPSAxOyBqIDw9IGxlbjI7IGorKykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBjb3N0ID0gdGV4dDFbaSAtIDFdID09PSB0ZXh0MltqIC0gMV0gPyAwIDogMTsNCiAgICAgICAgICAgICAgICAgICAgbWF0cml4W2ldW2pdID0gTWF0aC5taW4oDQogICAgICAgICAgICAgICAgICAgICAgICBtYXRyaXhbaSAtIDFdW2pdICsgMSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG1hdHJpeFtpXVtqIC0gMV0gKyAxLA0KICAgICAgICAgICAgICAgICAgICAgICAgbWF0cml4W2kgLSAxXVtqIC0gMV0gKyBjb3N0DQogICAgICAgICAgICAgICAgICAgICk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb25zdCBkaXN0YW5jZSA9IG1hdHJpeFtsZW4xXVtsZW4yXTsNCiAgICAgICAgICAgIHJldHVybiAxIC0gKGRpc3RhbmNlIC8gbWF4TGVuKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6YeN5paw5p+l5om+5YWD57Sg77yI5aKe5by654mI77yJLSDlpITnkIZET03mm7TmlrDlkI7nmoTlhYPntKDlvJXnlKjlpLHmlYgNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBvcmlnaW5hbEVsZW1lbnQg5Y6f5aeL5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICByZWZpbmRFbGVtZW50OiBmdW5jdGlvbihvcmlnaW5hbEVsZW1lbnQpIHsNCiAgICAgICAgICAgIGlmICghb3JpZ2luYWxFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ3JlZmluZEVsZW1lbnQ6IOWOn+Wni+WFg+e0oOS4uuepuicpOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyAxLiDmo4Dmn6Xljp/lp4vlhYPntKDmmK/lkKbku43nhLbmnInmlYgNCiAgICAgICAgICAgIGlmIChvcmlnaW5hbEVsZW1lbnQuaXNDb25uZWN0ZWQpIHsNCiAgICAgICAgICAgICAgICAvLyDmlL7lrr3mo4Dmn6XmnaHku7bvvIzkuI3k",
        "u4Xku4Xkvp3otZZvZmZzZXRQYXJlbnQNCiAgICAgICAgICAgICAgICBjb25zdCBzdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKG9yaWdpbmFsRWxlbWVudCk7DQogICAgICAgICAgICAgICAgaWYgKHN0eWxlLmRpc3BsYXkgIT09ICdub25lJyAmJiBzdHlsZS52aXNpYmlsaXR5ICE9PSAnaGlkZGVuJykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WOn+Wni+WFg+e0oOS7jeeEtuacieaViCcpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxFbGVtZW50Ow0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfljp/lp4vlhYPntKDlt7LlpLHmlYjvvIzlvIDlp4vph43mlrDmn6Xmib4nKTsNCg0KICAgICAgICAgICAgLy8gMi4g5o+Q5Y+W5Y6f5aeL5YWD57Sg55qE54m55b6BDQogICAgICAgICAgICBjb25zdCBzaWduYXR1cmUgPSB0aGlzLmV4dHJhY3RFbGVtZW50U2lnbmF0dXJlKG9yaWdpbmFsRWxlbWVudCk7DQogICAgICAgICAgICBpZiAoIXNpZ25hdHVyZSkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfml6Dms5Xmj5Dlj5bljp/lp4vlhYPntKDnibnlvoEnKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8gMy4g5Z+65LqO54m55b6B5p+l5om+5Yy56YWN5YWD57SgDQogICAgICAgICAgICBjb25zdCBtYXRjaGVkRWxlbWVudCA9IHRoaXMuZmluZEVsZW1lbnRCeVNpZ25hdHVyZShzaWduYXR1cmUpOw0KICAgICAgICAgICAgaWYgKG1hdGNoZWRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+aIkOWKn+WfuuS6jueJueW+gemHjeaWsOaJvuWIsOWFg+e0oCcsIHsNCiAgICAgICAgICAgICAgICAgICAgb3JpZ2luYWxEYXRhS2V5OiBzaWduYXR1cmUuZGF0YUtleSwNCiAgICAgICAgICAgICAgICAgICAgbWF0Y2hlZERhdGFLZXk6IG1hdGNoZWRFbGVtZW50LmRhdGFzZXQ/LmtleSwNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHNpZ25hdHVyZS51c2VyTmFtZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBtYXRjaGVkRWxlbWVudDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8gNC4g6ZmN57qn562W55Wl77ya566A5Y2V5p+l5om+DQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eJueW+geWMuemFjeWksei0pe+8jOWwneivlemZjee6p+etlueVpScpOw0KICAgICAgICAgICAgY29uc3QgZmFsbGJhY2tTdHJhdGVnaWVzID0gWw0KICAgICAgICAgICAgICAgIC8vIOetlueVpTHvvJrpgJrov4dkYXRhLWtleeafpeaJvu+8iOWmguaenOWtmOWcqO+8iQ0KICAgICAgICAgICAgICAgICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHNpZ25hdHVyZS5kYXRhS2V5KSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gVXRpbHMucXVlcnlTZWxlY3Rvcihg",
        "W2RhdGEta2V5PSIke3NpZ25hdHVyZS5kYXRhS2V5fSJdYCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfSwNCg0KICAgICAgICAgICAgICAgIC8vIOetlueVpTLvvJrmn6Xmib7nrKzkuIDkuKrmnInmnKror7vmtojmga/nmoTkvJror53pobkNCiAgICAgICAgICAgICAgICAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGlmIChzaWduYXR1cmUuaGFzVW5yZWFkQmFkZ2UpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBVdGlscy5xdWVyeVNlbGVjdG9yKCcuc3gtY29udGFjdC1pdGVtIC5kLWJhZGdlLWRvdCcpPy5jbG9zZXN0KCcuc3gtY29udGFjdC1pdGVtJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfSwNCg0KICAgICAgICAgICAgICAgIC8vIOetlueVpTPvvJrmn6Xmib7nrKzkuIDkuKrlj6/op4HnmoTkvJror53pobkNCiAgICAgICAgICAgICAgICAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGFsbEl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnN4LWNvbnRhY3QtaXRlbScpOw0KICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgYWxsSXRlbXMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLmlzQ29ubmVjdGVkICYmIHRoaXMuaXNFbGVtZW50VmlzaWJsZShpdGVtKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmFsbGJhY2tTdHJhdGVnaWVzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGZhbGxiYWNrU3RyYXRlZ2llc1tpXSgpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudCAmJiBlbGVtZW50LmlzQ29ubmVjdGVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mZjee6p+etlueVpeaIkOWKnycsIHsgc3RyYXRlZ3k6IGkgKyAxIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQ7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mZjee6p+etlueVpeWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0cmF0ZWd5OiBpICsgMSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAg",
        "ICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmiYDmnInlhYPntKDph43mlrDmn6Xmib7nrZbnlaXpg73lpLHotKUnKTsNCiAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlj6/pnaDnmoTlhYPntKDngrnlh7vmlrnms5UNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOimgeeCueWHu+eahOWFg+e0oA0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyDpgInpobkNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyByZWxpYWJsZUNsaWNrKGVsZW1lbnQsIG9wdGlvbnMgPSB7fSkgew0KICAgICAgICAgICAgaWYgKCFlbGVtZW50IHx8ICFlbGVtZW50LmlzQ29ubmVjdGVkKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ3JlbGlhYmxlQ2xpY2s6IOWFg+e0oOaXoOaViCcpOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgbWF4QXR0ZW1wdHMgPSBvcHRpb25zLm1heEF0dGVtcHRzIHx8IDM7DQogICAgICAgICAgICBjb25zdCB3YWl0QmV0d2VlbkF0dGVtcHRzID0gb3B0aW9ucy53YWl0QmV0d2VlbkF0dGVtcHRzIHx8IDIwMDsNCiAgICAgICAgICAgIGNvbnN0IGZvcmNlQ2xpY2sgPSBvcHRpb25zLmZvcmNlQ2xpY2sgfHwgZmFsc2U7DQoNCiAgICAgICAgICAgIGZvciAobGV0IGF0dGVtcHQgPSAxOyBhdHRlbXB0IDw9IG1heEF0dGVtcHRzOyBhdHRlbXB0KyspIHsNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYOWwneivleeCueWHu+WFg+e0oCAoJHthdHRlbXB0fS8ke21heEF0dGVtcHRzfSlgLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBmb3JjZUNsaWNrLA0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudENsYXNzOiBlbGVtZW50LmNsYXNzTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0FjdGl2ZUNsYXNzOiBlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJykNCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5LiN5piv5by65Yi254K55Ye75qih5byP77yM5qOA5p+l5YWD57Sg5Y+v6KeB5oCnDQogICAgICAgICAgICAgICAgICAgIGlmICghZm9yY2VDbGljaykgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNWaXNpYmxlID0gdGhpcy5pc0VsZW1lbnRWaXNpYmxlKGVsZW1lbnQsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJpY3Q6IGZhbHNlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZ0RldGFpbHM6IGF0dGVtcHQgPT09IG1heEF0dGVtcHRzDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAg",
        "aWYgKCFpc1Zpc2libGUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYOWFg+e0oOS4jeWPr+inge+8jOi3s+i/h+eCueWHuyAoJHthdHRlbXB0fS8ke21heEF0dGVtcHRzfSlgLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRDbGFzczogZWxlbWVudC5jbGFzc05hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnREYXRhS2V5OiBlbGVtZW50LmRhdGFzZXQ/LmtleQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhdHRlbXB0IDwgbWF4QXR0ZW1wdHMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkod2FpdEJldHdlZW5BdHRlbXB0cyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+W8uuWItueCueWHu+aooeW8j++8jOi3s+i/h+WPr+ingeaAp+ajgOafpScpOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5bCd6K+V5aSa56eN54K55Ye75pa55rOVDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsaWNrTWV0aG9kcyA9IFsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOaWueazlTHvvJrmoIflh4bngrnlh7sNCiAgICAgICAgICAgICAgICAgICAgICAgICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmNsaWNrKCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmlrnms5Uy77ya5qih5ouf6byg5qCH5LqL5Lu2DQogICAgICAgICAgICAgICAgICAgICAgICAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFV0aWxzLnNpbXVsYXRlQ2xpY2soZWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmlrnms5Uz77ya6Kem5Y+R5LqL5Lu2DQogICAgICAgICAgICAgICAgICAgICAgICAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBuZXcgTW91c2VFdmVudCgnY2xpY2snLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1YmJsZXM6IHRydWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbmNlbGFibGU6IHRydWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXc6IHdpbmRvdw0KICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbGVtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgbWV0aG9kIG9mIGNsaWNrTWV0aG9kcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBtZXRob2QoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5YWD57Sg54K55Ye75oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0ZW1wdCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogY2xpY2tNZXRob2RzLmluZGV4T2YobWV0aG9kKSArIDENCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfngrnlh7vmlrnms5XlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogY2xpY2tNZXRob2RzLmluZGV4T2YobWV0aG9kKSArIDEsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBpZiAoYXR0ZW1wdCA8IG1heEF0dGVtcHRzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSh3YWl0QmV0d2VlbkF0dGVtcHRzKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oYOeCueWHu+WwneivleWHuumUmSAoJHthdHRlbXB0fS8ke21heEF0dGVtcHRzfSlgLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICBpZiAoYXR0ZW1wdCA8IG1heEF0dGVtcHRzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSh3YWl0QmV0d2VlbkF0dGVtcHRzKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmiYDmnInngrnlh7vlsJ3or5Xpg73lpLHotKUnKTsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsN",
        "CiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5omA5pyJ5Y+v6KeB55qE5Lya6K+d6aG5DQogICAgICAgICAqIEByZXR1cm5zIHtBcnJheTxFbGVtZW50Pn0NCiAgICAgICAgICovDQogICAgICAgIGdldFZpc2libGVDb250YWN0SXRlbXM6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3QgYWxsSXRlbXMgPSBVdGlscy5xdWVyeVNlbGVjdG9yQWxsKCcuc3gtY29udGFjdC1pdGVtJyk7DQogICAgICAgICAgICBjb25zdCB2aXNpYmxlSXRlbXMgPSBbXTsNCg0KICAgICAgICAgICAgYWxsSXRlbXMuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc0VsZW1lbnRWaXNpYmxlKGl0ZW0pKSB7DQogICAgICAgICAgICAgICAgICAgIHZpc2libGVJdGVtcy5wdXNoKGl0ZW0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+iZmuaLn+a7muWKqOWPr+ingemhuee7n+iuoScsIHsNCiAgICAgICAgICAgICAgICB0b3RhbDogYWxsSXRlbXMubGVuZ3RoLA0KICAgICAgICAgICAgICAgIHZpc2libGU6IHZpc2libGVJdGVtcy5sZW5ndGgsDQogICAgICAgICAgICAgICAgaGlkZGVuOiBhbGxJdGVtcy5sZW5ndGggLSB2aXNpYmxlSXRlbXMubGVuZ3RoDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgcmV0dXJuIHZpc2libGVJdGVtczsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yi35paw5a655Zmo77yI566A5YyW54mI77yJDQogICAgICAgICAqLw0KICAgICAgICByZWZyZXNoOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMuY29udGFjdExpc3RDb250YWluZXIgfHwgdGhpcy5maW5kQ29udGFjdExpc3RDb250YWluZXIoKTsNCiAgICAgICAgICAgIGlmIChjb250YWluZXIpIHsNCiAgICAgICAgICAgICAgICAvLyDop6blj5Hmu5rliqjkuovku7YNCiAgICAgICAgICAgICAgICBjb25zdCBzY3JvbGxFdmVudCA9IG5ldyBFdmVudCgnc2Nyb2xsJywgeyBidWJibGVzOiB0cnVlIH0pOw0KICAgICAgICAgICAgICAgIGNvbnRhaW5lci5kaXNwYXRjaEV2ZW50KHNjcm9sbEV2ZW50KTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5a655Zmo5bey5Yi35pawJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDpobXpnaLlhYPntKDnrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IFBhZ2VFbGVtZW50TWFuYWdlciA9IHsNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmqjOivgemhtemdouWFg+e0oOaYr+WQpuWtmOWcqA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3Ig6YCJ5oup5ZmoDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIOWFg+e0",
        "oOWQjeensA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIHZhbGlkYXRlRWxlbWVudDogZnVuY3Rpb24oc2VsZWN0b3IsIG5hbWUpIHsNCiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsNCiAgICAgICAgICAgIGNvbnN0IGV4aXN0cyA9ICEhZWxlbWVudDsNCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDlhYPntKDpqozor4E6ICR7bmFtZX1gLCB7DQogICAgICAgICAgICAgICAgc2VsZWN0b3IsDQogICAgICAgICAgICAgICAgZXhpc3RzLA0KICAgICAgICAgICAgICAgIGVsZW1lbnQ6IGV4aXN0cyA/IGVsZW1lbnQudGFnTmFtZSA6IG51bGwNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICByZXR1cm4gZXhpc3RzOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5blpJrph43pgInmi6nlmajvvIjlpIfpgInmlrnmoYjvvIkNCiAgICAgICAgICogQHBhcmFtIHtBcnJheX0gc2VsZWN0b3JzIOmAieaLqeWZqOaVsOe7hA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSDlhYPntKDlkI3np7ANCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBwYXJlbnQg54i25YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBnZXRFbGVtZW50V2l0aEZhbGxiYWNrOiBmdW5jdGlvbihzZWxlY3RvcnMsIG5hbWUsIHBhcmVudCA9IGRvY3VtZW50KSB7DQogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlbGVjdG9ycy5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yc1tpXSwgcGFyZW50KTsNCiAgICAgICAgICAgICAgICBpZiAoZWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYOaJvuWIsOWFg+e0oDogJHtuYW1lfWAsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBzZWxlY3RvcnNbaV0sDQogICAgICAgICAgICAgICAgICAgICAgICBmYWxsYmFja0luZGV4OiBpLA0KICAgICAgICAgICAgICAgICAgICAgICAgdGFnTmFtZTogZWxlbWVudC50YWdOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBlbGVtZW50LmNsYXNzTmFtZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQ7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIud2Fybihg5pyq5om+5Yiw5YWD57SgOiAke25hbWV9YCwgeyBzZWxlY3RvcnMgfSk7DQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pm66IO96YCJ5oup5Zmo5qOA5rWLIC0g5paw5aKe5Yqf6IO9DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3Rvcktl",
        "eSDpgInmi6nlmajplK7lkI0NCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBwYXJlbnQg54i25YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBnZXRFbGVtZW50V2l0aFNtYXJ0RmFsbGJhY2s6IGZ1bmN0aW9uKHNlbGVjdG9yS2V5LCBwYXJlbnQgPSBkb2N1bWVudCkgew0KICAgICAgICAgICAgLy8g6aaW5YWI5bCd6K+V5Li76YCJ5oup5ZmoDQogICAgICAgICAgICBjb25zdCBwcmltYXJ5U2VsZWN0b3IgPSBDT05GSUcuU0VMRUNUT1JTW3NlbGVjdG9yS2V5XTsNCiAgICAgICAgICAgIGlmIChwcmltYXJ5U2VsZWN0b3IpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcihwcmltYXJ5U2VsZWN0b3IsIHBhcmVudCk7DQogICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDkuLvpgInmi6nlmajmiJDlip86ICR7c2VsZWN0b3JLZXl9YCwgeyBzZWxlY3RvcjogcHJpbWFyeVNlbGVjdG9yIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOWwneivleWkh+mAiemAieaLqeWZqA0KICAgICAgICAgICAgY29uc3QgZmFsbGJhY2tTZWxlY3RvcnMgPSBDT05GSUcuU0VMRUNUT1JTLmZhbGxiYWNrU2VsZWN0b3JzW3NlbGVjdG9yS2V5XTsNCiAgICAgICAgICAgIGlmIChmYWxsYmFja1NlbGVjdG9ycyAmJiBBcnJheS5pc0FycmF5KGZhbGxiYWNrU2VsZWN0b3JzKSkgew0KICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEVsZW1lbnRXaXRoRmFsbGJhY2soZmFsbGJhY2tTZWxlY3RvcnMsIHNlbGVjdG9yS2V5LCBwYXJlbnQpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuZXJyb3IoYOaJgOaciemAieaLqeWZqOmDveWksei0pTogJHtzZWxlY3RvcktleX1gKTsNCiAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XpobXpnaLlhbPplK7lhYPntKAgLSDlop7lvLrniYgNCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g5qOA5p+l57uT5p6cDQogICAgICAgICAqLw0KICAgICAgICBjaGVja1BhZ2VFbGVtZW50czogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn5byA5aeL6aG16Z2i5YWD57Sg5qOA5p+lLi4uJyk7DQoNCiAgICAgICAgICAgIGNvbnN0IHJlc3VsdHMgPSB7DQogICAgICAgICAgICAgICAgLy8g5Z+656GA5YWD57Sg5qOA5p+lDQogICAgICAgICAgICAgICAgY29udGFjdExpc3Q6IHRoaXMudmFsaWRhdGVFbGVtZW50KENPTkZJRy5TRUxFQ1RPUlMuY29udGFjdExpc3QsICfkvJrlkZjliJfooagnKSwNCiAgICAgICAgICAgICAgICBjb250YWN0SXRlbTogdGhpcy52YWxpZGF0ZUVsZW1lbnQoQ09ORklHLlNFTEVDVE9S",
        "Uy5jb250YWN0SXRlbSwgJ+S8muivnemhuScpLA0KDQogICAgICAgICAgICAgICAgLy8g5paw55qE6IGK5aSp56qX5Y+j5YWD57Sg5qOA5p+lDQogICAgICAgICAgICAgICAgY2hhdFdpbmRvdzogdGhpcy52YWxpZGF0ZUVsZW1lbnQoQ09ORklHLlNFTEVDVE9SUy5jaGF0V2luZG93LCAn6IGK5aSp56qX5Y+jJyksDQogICAgICAgICAgICAgICAgY2hhdENvbnRhaW5lcjogdGhpcy52YWxpZGF0ZUVsZW1lbnQoQ09ORklHLlNFTEVDVE9SUy5jaGF0Q29udGFpbmVyLCAn6IGK5aSp5a655ZmoJyksDQogICAgICAgICAgICAgICAgbWVzc2FnZUxpc3Q6IHRoaXMudmFsaWRhdGVFbGVtZW50KENPTkZJRy5TRUxFQ1RPUlMubWVzc2FnZUxpc3QsICfmtojmga/liJfooagnKSwNCg0KICAgICAgICAgICAgICAgIC8vIOi+k+WFpeWSjOWPkemAgeWFg+e0oOajgOafpQ0KICAgICAgICAgICAgICAgIGlucHV0Qm94OiAhIXRoaXMuZ2V0TWVzc2FnZUlucHV0Qm94KCksDQogICAgICAgICAgICAgICAgc2VuZEJ1dHRvbjogISF0aGlzLmdldFNlbmRCdXR0b24oKSwNCg0KICAgICAgICAgICAgICAgIC8vIOmhtemdoue7k+aehOWIhuaekA0KICAgICAgICAgICAgICAgIHBhZ2VTdHJ1Y3R1cmU6IHRoaXMuYW5hbHl6ZVBhZ2VTdHJ1Y3R1cmUoKSwNCg0KICAgICAgICAgICAgICAgIC8vIOWFvOWuueaAp+ajgOafpQ0KICAgICAgICAgICAgICAgIGNvbXBhdGliaWxpdHk6IHRoaXMuY2hlY2tDb21wYXRpYmlsaXR5KCksDQoNCiAgICAgICAgICAgICAgICBhbGxWYWxpZDogZmFsc2UNCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuaJgOacieWFs+mUruWFg+e0oOmDveWtmOWcqA0KICAgICAgICAgICAgcmVzdWx0cy5hbGxWYWxpZCA9IHJlc3VsdHMuY29udGFjdExpc3QgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdHMuY29udGFjdEl0ZW0gJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdHMuY2hhdFdpbmRvdyAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0cy5pbnB1dEJveCAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0cy5zZW5kQnV0dG9uOw0KDQogICAgICAgICAgICBMb2dnZXIuaW5mbygn6aG16Z2i5YWD57Sg5qOA5p+l5a6M5oiQJywgew0KICAgICAgICAgICAgICAgIC4uLnJlc3VsdHMsDQogICAgICAgICAgICAgICAgcGFnZVN0cnVjdHVyZTogdW5kZWZpbmVkLCAvLyDpgb/lhY3ml6Xlv5fov4fplb8NCiAgICAgICAgICAgICAgICBjb21wYXRpYmlsaXR5OiB1bmRlZmluZWQNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICByZXR1cm4gcmVzdWx0czsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5YiG5p6Q6aG16Z2i57uT5p6EIC0g5paw5aKe5Yqf6IO9DQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOmhtemdoue7k+aehOS/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgYW5hbHl6",
        "ZVBhZ2VTdHJ1Y3R1cmU6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3Qgc3RydWN0dXJlID0gew0KICAgICAgICAgICAgICAgIGhhc1ZpcnR1YWxTY3JvbGw6IGZhbHNlLA0KICAgICAgICAgICAgICAgIGhhc1RyYWRpdGlvbmFsQ2hhdDogZmFsc2UsDQogICAgICAgICAgICAgICAgY2hhdFdpbmRvd1R5cGU6ICd1bmtub3duJywNCiAgICAgICAgICAgICAgICBtZXNzYWdlU3RydWN0dXJlOiAndW5rbm93bicsDQogICAgICAgICAgICAgICAgZGV0ZWN0ZWRTZWxlY3RvcnM6IHt9DQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAvLyDmo4DmtYvomZrmi5/mu5rliqgNCiAgICAgICAgICAgIGNvbnN0IHZpcnR1YWxTY3JvbGxFbGVtZW50cyA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3JBbGwoJy52dWUtcmVjeWNsZS1zY3JvbGxlcicpOw0KICAgICAgICAgICAgc3RydWN0dXJlLmhhc1ZpcnR1YWxTY3JvbGwgPSB2aXJ0dWFsU2Nyb2xsRWxlbWVudHMubGVuZ3RoID4gMDsNCg0KICAgICAgICAgICAgLy8g5qOA5rWL5Lyg57uf6IGK5aSp57uT5p6EDQogICAgICAgICAgICBjb25zdCB0cmFkaXRpb25hbENoYXRFbGVtZW50cyA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3JBbGwoJy5jaGF0LXdpbmRvdywgLm1lc3NhZ2UtbGlzdCcpOw0KICAgICAgICAgICAgc3RydWN0dXJlLmhhc1RyYWRpdGlvbmFsQ2hhdCA9IHRyYWRpdGlvbmFsQ2hhdEVsZW1lbnRzLmxlbmd0aCA+IDA7DQoNCiAgICAgICAgICAgIC8vIOehruWumuiBiuWkqeeql+WPo+exu+Weiw0KICAgICAgICAgICAgaWYgKFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJyNwcm8tbXNnLWJveCcpKSB7DQogICAgICAgICAgICAgICAgc3RydWN0dXJlLmNoYXRXaW5kb3dUeXBlID0gJ3Byby1tc2ctYm94JzsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAoVXRpbHMucXVlcnlTZWxlY3RvcignLmNoYXQtd2luZG93JykpIHsNCiAgICAgICAgICAgICAgICBzdHJ1Y3R1cmUuY2hhdFdpbmRvd1R5cGUgPSAnY2hhdC13aW5kb3cnOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4DmtYvmtojmga/nu5PmnoQNCiAgICAgICAgICAgIGlmIChVdGlscy5xdWVyeVNlbGVjdG9yKCcuaW0tbXNnLWl0ZW0nKSkgew0KICAgICAgICAgICAgICAgIHN0cnVjdHVyZS5tZXNzYWdlU3RydWN0dXJlID0gJ2ltLW1zZy1pdGVtJzsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAoVXRpbHMucXVlcnlTZWxlY3RvcignLm1lc3NhZ2UtaXRlbScpKSB7DQogICAgICAgICAgICAgICAgc3RydWN0dXJlLm1lc3NhZ2VTdHJ1Y3R1cmUgPSAnbWVzc2FnZS1pdGVtJzsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g6K6w5b2V5qOA5rWL5Yiw55qE6YCJ5oup5ZmoDQogICAgICAgICAgICBPYmplY3Qua2V5cyhDT05GSUcuU0VMRUNUT1JTKS5mb3JFYWNoKGtleSA9PiB7DQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBDT05GSUcuU0VMRUNUT1JTW2tleV0gPT09ICdzdHJpbmcnKSB7DQogICAgICAgICAgICAgICAg",
        "ICAgIGNvbnN0IGVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKENPTkZJRy5TRUxFQ1RPUlNba2V5XSk7DQogICAgICAgICAgICAgICAgICAgIHN0cnVjdHVyZS5kZXRlY3RlZFNlbGVjdG9yc1trZXldID0gISFlbGVtZW50Ow0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mhtemdoue7k+aehOWIhuaekOWujOaIkCcsIHN0cnVjdHVyZSk7DQogICAgICAgICAgICByZXR1cm4gc3RydWN0dXJlOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XlhbzlrrnmgKcgLSDmlrDlop7lip/og70NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g5YW85a655oCn5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICBjaGVja0NvbXBhdGliaWxpdHk6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3QgY29tcGF0aWJpbGl0eSA9IHsNCiAgICAgICAgICAgICAgICBicm93c2VyU3VwcG9ydDogdHJ1ZSwNCiAgICAgICAgICAgICAgICB0YW1wZXJtb25rZXlTdXBwb3J0OiB0cnVlLA0KICAgICAgICAgICAgICAgIHBhZ2VWZXJzaW9uOiAndW5rbm93bicsDQogICAgICAgICAgICAgICAgcmVjb21tZW5kYXRpb25zOiBbXQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgLy8g5qOA5p+l5rWP6KeI5Zmo5pSv5oyBDQogICAgICAgICAgICBpZiAoIXdpbmRvdy5NdXRhdGlvbk9ic2VydmVyKSB7DQogICAgICAgICAgICAgICAgY29tcGF0aWJpbGl0eS5icm93c2VyU3VwcG9ydCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIGNvbXBhdGliaWxpdHkucmVjb21tZW5kYXRpb25zLnB1c2goJ+a1j+iniOWZqOS4jeaUr+aMgU11dGF0aW9uT2JzZXJ2ZXLvvIzor7fljYfnuqfmtY/op4jlmagnKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5p+lVGFtcGVybW9ua2V55pSv5oyBDQogICAgICAgICAgICBpZiAodHlwZW9mIEdNX3htbGh0dHBSZXF1ZXN0ID09PSAndW5kZWZpbmVkJykgew0KICAgICAgICAgICAgICAgIGNvbXBhdGliaWxpdHkudGFtcGVybW9ua2V5U3VwcG9ydCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIGNvbXBhdGliaWxpdHkucmVjb21tZW5kYXRpb25zLnB1c2goJ0dNX3htbGh0dHBSZXF1ZXN05LiN5Y+v55So77yM6K+35qOA5p+lVGFtcGVybW9ua2V56K6+572uJyk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOajgOa1i+mhtemdoueJiOacrA0KICAgICAgICAgICAgaWYgKFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJyNwcm8tbXNnLWJveCcpKSB7DQogICAgICAgICAgICAgICAgY29tcGF0aWJpbGl0eS5wYWdlVmVyc2lvbiA9ICduZXctdmlydHVhbC1zY3JvbGwnOw0KICAgICAgICAgICAgfSBlbHNlIGlmIChVdGlscy5xdWVyeVNlbGVjdG9yKCcuY2hhdC13aW5kb3cnKSkgew0KICAgICAgICAgICAgICAgIGNvbXBhdGliaWxpdHkucGFnZVZlcnNpb24gPSAnbGVnYWN5JzsNCiAgICAgICAgICAg",
        "ICAgICBjb21wYXRpYmlsaXR5LnJlY29tbWVuZGF0aW9ucy5wdXNoKCfmo4DmtYvliLDml6fniYjpobXpnaLnu5PmnoTvvIzlu7rorq7liLfmlrDpobXpnaInKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIGNvbXBhdGliaWxpdHk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluS8muWRmOWIl+ihqOWuueWZqA0KICAgICAgICAgKiBAcmV0dXJucyB7RWxlbWVudHxudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0Q29udGFjdExpc3RDb250YWluZXI6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3Qgc2VsZWN0b3JzID0gWw0KICAgICAgICAgICAgICAgIENPTkZJRy5TRUxFQ1RPUlMuY29udGFjdExpc3QsDQogICAgICAgICAgICAgICAgJy5jaGF0LWxpc3QtYm94JywNCiAgICAgICAgICAgICAgICAnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyJywNCiAgICAgICAgICAgICAgICAnW2RhdGEtdi01YjJkZGQyZV0nDQogICAgICAgICAgICBdOw0KDQogICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRFbGVtZW50V2l0aEZhbGxiYWNrKHNlbGVjdG9ycywgJ+S8muWRmOWIl+ihqOWuueWZqCcpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmiYDmnInkvJror53pobkNCiAgICAgICAgICogQHJldHVybnMge05vZGVMaXN0fQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0QWxsQ29udGFjdEl0ZW1zOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IHNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICBDT05GSUcuU0VMRUNUT1JTLmNvbnRhY3RJdGVtLA0KICAgICAgICAgICAgICAgICcuc3gtY29udGFjdC1pdGVtJywNCiAgICAgICAgICAgICAgICAnW2RhdGEta2V5Kj0iQWN0aXZlLSJdJywNCiAgICAgICAgICAgICAgICAnW2RhdGEta2V5Kj0iVG90YWwtIl0nDQogICAgICAgICAgICBdOw0KDQogICAgICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdG9yIG9mIHNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRzID0gVXRpbHMucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7DQogICAgICAgICAgICAgICAgaWYgKGVsZW1lbnRzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmib7liLDkvJror53pobknLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvciwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50OiBlbGVtZW50cy5sZW5ndGgNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBlbGVtZW50czsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci53YXJuKCfmnKrmib7liLDku7vkvZXkvJror53pobknKTsNCiAgICAgICAgICAgIHJldHVybiBbXTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5pyJ5paw5raI5oGv55qE",
        "5Lya6K+d6aG5IC0g5aKe5by654mI77yM6L+H5ruk6Jma5ouf5rua5Yqo5Lit55qE5LiN5Y+v6KeB5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtBcnJheX0NCiAgICAgICAgICovDQogICAgICAgIGdldENvbnRhY3RzV2l0aE5ld01lc3NhZ2VzOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIC8vIOS8mOWFiOS9v+eUqOWFg+e0oOeuoeeQhuWZqOiOt+WPluWPr+ingeWFg+e0oA0KICAgICAgICAgICAgY29uc3QgYWxsQ29udGFjdHMgPSBFbGVtZW50TWFuYWdlci5nZXRWaXNpYmxlQ29udGFjdEl0ZW1zKCk7DQoNCiAgICAgICAgICAgIC8vIOWmguaenOWFg+e0oOeuoeeQhuWZqOayoeacieaJvuWIsOWFg+e0oO+8jOWbnumAgOWIsOS8oOe7n+aWueazlQ0KICAgICAgICAgICAgaWYgKGFsbENvbnRhY3RzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5YWD57Sg566h55CG5Zmo5pyq5om+5Yiw5Y+v6KeB5YWD57Sg77yM5L2/55So5Lyg57uf5pa55rOVJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZmFsbGJhY2tDb250YWN0cyA9IHRoaXMuZ2V0QWxsQ29udGFjdEl0ZW1zKCk7DQogICAgICAgICAgICAgICAgYWxsQ29udGFjdHMucHVzaCguLi5mYWxsYmFja0NvbnRhY3RzKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgY29udGFjdHNXaXRoTWVzc2FnZXMgPSBbXTsNCiAgICAgICAgICAgIGxldCB2aXNpYmxlQ291bnQgPSAwOw0KICAgICAgICAgICAgbGV0IGhpZGRlbkNvdW50ID0gMDsNCg0KICAgICAgICAgICAgYWxsQ29udGFjdHMuZm9yRWFjaChjb250YWN0ID0+IHsNCiAgICAgICAgICAgICAgICAvLyDlho3mrKHpqozor4HlhYPntKDlj6/op4HmgKfvvIjlj4zph43kv53pmanvvIkNCiAgICAgICAgICAgICAgICBpZiAoIUVsZW1lbnRNYW5hZ2VyLmlzRWxlbWVudFZpc2libGUoY29udGFjdCkpIHsNCiAgICAgICAgICAgICAgICAgICAgaGlkZGVuQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfot7Pov4fkuI3lj6/op4HnmoTkvJror53pobknLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdGhpcy5leHRyYWN0VXNlck5hbWUoY29udGFjdCkgfHwgJ+acquefpeeUqOaItycNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB2aXNpYmxlQ291bnQrKzsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuacieaWsOa2iOaBr+e6oueCuQ0KICAgICAgICAgICAgICAgIGNvbnN0IGJhZGdlID0gVXRpbHMucXVlcnlTZWxlY3RvcihDT05GSUcuU0VMRUNUT1JTLm5ld01lc3NhZ2VCYWRnZSwgY29udGFjdCk7DQogICAgICAgICAgICAgICAgaWYgKGJhZGdlKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOmqjOivgee6oueCueaYr+WQpuecn+ato+WPr+ingQ0KICAgICAgICAgICAgICAgICAgICBjb25z",
        "dCBiYWRnZVN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoYmFkZ2UpOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBpc0JhZGdlVmlzaWJsZSA9IGJhZGdlU3R5bGUudmlzaWJpbGl0eSAhPT0gJ2hpZGRlbicgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFkZ2VTdHlsZS5kaXNwbGF5ICE9PSAnbm9uZScgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFkZ2VTdHlsZS5vcGFjaXR5ICE9PSAnMCc7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzQmFkZ2VWaXNpYmxlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VyTmFtZSA9IHRoaXMuZXh0cmFjdFVzZXJOYW1lKGNvbnRhY3QpOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbGFzdE1lc3NhZ2UgPSB0aGlzLmV4dHJhY3RMYXN0TWVzc2FnZShjb250YWN0KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGFjdHNXaXRoTWVzc2FnZXMucHVzaCh7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogY29udGFjdCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0TWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWRnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1Zpc2libGU6IHRydWUNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WPkeeOsOWPr+ingeeahOaWsOa2iOaBrycsIHsgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+e6oueCueS4jeWPr+inge+8jOi3s+i/hycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdGhpcy5leHRyYWN0VXNlck5hbWUoY29udGFjdCkgfHwgJ+acquefpeeUqOaItycNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5paw5raI5oGv5qOA5rWL5a6M5oiQJywgew0KICAgICAgICAgICAgICAgIHRvdGFsQ2hlY2tlZDogYWxsQ29udGFjdHMubGVuZ3RoLA0KICAgICAgICAgICAgICAgIHZpc2libGU6IHZpc2libGVDb3VudCwNCiAgICAgICAgICAgICAgICBoaWRkZW46IGhpZGRlbkNvdW50LA0KICAgICAgICAgICAgICAgIHdpdGhOZXdNZXNzYWdlczogY29udGFjdHNXaXRoTWVzc2FnZXMubGVuZ3RoDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgcmV0dXJuIGNvbnRhY3RzV2l0aE1lc3NhZ2VzOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmj5Dlj5bnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFt",
        "IHtFbGVtZW50fSBjb250YWN0RWxlbWVudCDkvJror53lhYPntKANCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RVc2VyTmFtZTogZnVuY3Rpb24oY29udGFjdEVsZW1lbnQpIHsNCiAgICAgICAgICAgIC8vIOabtOaWsOmAieaLqeWZqOS7peWMuemFjeacgOaWsERPTee7k+aehA0KICAgICAgICAgICAgY29uc3Qgc2VsZWN0b3JzID0gWw0KICAgICAgICAgICAgICAgICcuc3gtY29udGFjdC1pdGVtIC5uaWNrLW5hbWUnLCAgLy8g5pyA5L2z6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgJy5uaWNrLW5hbWUnLCAgICAgICAgICAgICAgICAgICAvLyDnm7TmjqXmmLXnp7DpgInmi6nlmagNCiAgICAgICAgICAgICAgICBDT05GSUcuU0VMRUNUT1JTLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICcuZC10ZXh0Lm5pY2stbmFtZScsDQogICAgICAgICAgICAgICAgJy5pdGVtLW1haW4tdG9wIC5kLXRleHQnLA0KICAgICAgICAgICAgICAgICcuaXRlbS1tYWluLXRvcCAubmljay1uYW1lJw0KICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiBzZWxlY3RvcnMpIHsNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBuYW1lRWxlbWVudCA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IsIGNvbnRhY3RFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWVFbGVtZW50ICYmIG5hbWVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmFtZSA9IG5hbWVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn55So5oi35ZCN5o+Q5Y+W5oiQ5YqfJywgeyBzZWxlY3RvciwgbmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuYW1lOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfnlKjmiLflkI3pgInmi6nlmajlpLHotKUnLCB7IHNlbGVjdG9yLCBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn55So5oi35ZCN5o+Q5Y+W5aSx6LSl77yM6L+U5Zue6buY6K6k5YC8Jyk7DQogICAgICAgICAgICByZXR1cm4gJ+acquefpeeUqOaItyc7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaPkOWPluacgOWQjuS4gOadoea2iOaBrw0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRhY3RFbGVtZW50IOS8muivneWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfQ0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdExhc3RNZXNzYWdlOiBmdW5jdGlvbihjb250YWN0RWxlbWVudCkgew0K",
        "ICAgICAgICAgICAgY29uc3Qgc2VsZWN0b3JzID0gWw0KICAgICAgICAgICAgICAgIENPTkZJRy5TRUxFQ1RPUlMubGFzdE1lc3NhZ2UsDQogICAgICAgICAgICAgICAgJy5jb250ZW50JywNCiAgICAgICAgICAgICAgICAnLml0ZW0tbWFpbi1jZW50ZXIgLmNvbnRlbnQnLA0KICAgICAgICAgICAgICAgICcuZC10ZXh0LmNvbnRlbnQnDQogICAgICAgICAgICBdOw0KDQogICAgICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdG9yIG9mIHNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2VFbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcihzZWxlY3RvciwgY29udGFjdEVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmIChtZXNzYWdlRWxlbWVudCAmJiBtZXNzYWdlRWxlbWVudC50ZXh0Q29udGVudC50cmltKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IG1lc3NhZ2VFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfkvJror53liJfooajmtojmga/mj5Dlj5YnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvciwNCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2Uuc3Vic3RyaW5nKDAsIDUwKSArIChtZXNzYWdlLmxlbmd0aCA+IDUwID8gJy4uLicgOiAnJyksDQogICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlTGVuZ3RoOiBtZXNzYWdlLmxlbmd0aA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1lc3NhZ2U7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S8muivneWIl+ihqOa2iOaBr+aPkOWPluWksei0pScpOw0KICAgICAgICAgICAgcmV0dXJuICcnOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmtojmga/ovpPlhaXmoYYgLSDlop7lvLrniYgNCiAgICAgICAgICogQHJldHVybnMge0VsZW1lbnR8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIGdldE1lc3NhZ2VJbnB1dEJveDogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+W8gOWni+afpeaJvua2iOaBr+i+k+WFpeahhi4uLicpOw0KDQogICAgICAgICAgICAvLyDkvb/nlKjmmbrog73lpIfpgInpgInmi6nlmagNCiAgICAgICAgICAgIGNvbnN0IGlucHV0Qm94ID0gdGhpcy5nZXRFbGVtZW50V2l0aFNtYXJ0RmFsbGJhY2soJ2lucHV0Qm94Jyk7DQoNCiAgICAgICAgICAgIGlmIChpbnB1dEJveCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5om+5Yiw6L6T5YWl5qGGJywgew0KICAgICAgICAgICAgICAgICAgICB0YWdOYW1lOiBpbnB1dEJveC50YWdOYW1lLA0KICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnB1dEJveC50eXBlLA0KICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogaW5wdXRCb3gucGxhY2Vob2xkZXIs",
        "DQogICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogaW5wdXRCb3guY2xhc3NOYW1lDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDpqozor4HovpPlhaXmoYbmmK/lkKblj6/nlKgNCiAgICAgICAgICAgICAgICBpZiAoaW5wdXRCb3guZGlzYWJsZWQgfHwgaW5wdXRCb3gucmVhZE9ubHkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i+k+WFpeahhuiiq+emgeeUqOaIluWPquivuycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gaW5wdXRCb3g7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pyq5om+5Yiw5Y+v55So55qE5raI5oGv6L6T5YWl5qGGJyk7DQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5Y+R6YCB5oyJ6ZKuIC0g5aKe5by654mIDQogICAgICAgICAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBnZXRTZW5kQnV0dG9uOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5byA5aeL5p+l5om+5Y+R6YCB5oyJ6ZKuLi4uJyk7DQoNCiAgICAgICAgICAgIC8vIOS9v+eUqOaZuuiDveWkh+mAiemAieaLqeWZqA0KICAgICAgICAgICAgbGV0IHNlbmRCdXR0b24gPSB0aGlzLmdldEVsZW1lbnRXaXRoU21hcnRGYWxsYmFjaygnc2VuZEJ1dHRvbicpOw0KDQogICAgICAgICAgICAvLyDlpoLmnpzkuLvpgInmi6nlmajlpLHotKXvvIzlsJ3or5XpgJrov4fmlofmnKzlhoXlrrnmn6Xmib4NCiAgICAgICAgICAgIGlmICghc2VuZEJ1dHRvbikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5bCd6K+V6YCa6L+H5paH5pys5YaF5a655p+l5om+5Y+R6YCB5oyJ6ZKuLi4uJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYnV0dG9ucyA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbicpOw0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgYnV0dG9uIG9mIGJ1dHRvbnMpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGV4dCA9IGJ1dHRvbi50ZXh0Q29udGVudC50cmltKCk7DQogICAgICAgICAgICAgICAgICAgIGlmICh0ZXh0ID09PSAn5Y+R6YCBJyB8fCB0ZXh0ID09PSAnU2VuZCcgfHwgdGV4dC5pbmNsdWRlcygn5Y+R6YCBJykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRCdXR0b24gPSBidXR0b247DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mAmui/h+aWh+acrOaJvuWIsOWPkemAgeaMiemSricsIHsgdGV4dCB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDlpoLmnpzov5jmmK/msqHmib7liLDv",
        "vIzlsJ3or5Xmn6Xmib7ovpPlhaXmoYbpmYTov5HnmoTmjInpkq4NCiAgICAgICAgICAgIGlmICghc2VuZEJ1dHRvbikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5bCd6K+V5p+l5om+6L6T5YWl5qGG6ZmE6L+R55qE5oyJ6ZKuLi4uJyk7DQogICAgICAgICAgICAgICAgY29uc3QgaW5wdXRCb3ggPSB0aGlzLmdldE1lc3NhZ2VJbnB1dEJveCgpOw0KICAgICAgICAgICAgICAgIGlmIChpbnB1dEJveCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBwYXJlbnQgPSBpbnB1dEJveC5jbG9zZXN0KCcuaW5wdXQtY29udGFpbmVyLCAubWVzc2FnZS1pbnB1dCwgLmNoYXQtaW5wdXQsIGZvcm0nKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHBhcmVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgc2VuZEJ1dHRvbiA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvblt0eXBlPSJzdWJtaXQiXSwgYnV0dG9uOmxhc3QtY2hpbGQnLCBwYXJlbnQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlbmRCdXR0b24pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WcqOi+k+WFpeahhumZhOi/keaJvuWIsOaMiemSricpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoc2VuZEJ1dHRvbikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5om+5Yiw5Y+R6YCB5oyJ6ZKuJywgew0KICAgICAgICAgICAgICAgICAgICB0YWdOYW1lOiBzZW5kQnV0dG9uLnRhZ05hbWUsDQogICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogc2VuZEJ1dHRvbi5jbGFzc05hbWUsDQogICAgICAgICAgICAgICAgICAgIHRleHQ6IHNlbmRCdXR0b24udGV4dENvbnRlbnQudHJpbSgpLA0KICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogc2VuZEJ1dHRvbi5kaXNhYmxlZA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHNlbmRCdXR0b247DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pyq5om+5Yiw5Y+R6YCB5oyJ6ZKuJyk7DQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5b2T5YmN5a+56K+d55qE55So5oi35L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IOeUqOaIt+S/oeaBr+WvueixoSB7dXNlcklkLCB1c2VyTmFtZX0NCiAgICAgICAgICovDQogICAgICAgIGdldEN1cnJlbnRDaGF0VXNlcjogYXN5bmMgZnVuY3Rpb24oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5byA5aeL6I635Y+W5b2T5YmN5a+56K+d55So5oi35L+h5oGvLi4uJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Ux77ya5bCd6K+V5LuO5b2T",
        "5YmN5rS76LeD55qE6IGU57O75Lq66aG55Lit6I635Y+WDQogICAgICAgICAgICAgICAgY29uc3QgYWN0aXZlQ29udGFjdCA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5zeC1jb250YWN0LWl0ZW0uYWN0aXZlJyk7DQogICAgICAgICAgICAgICAgaWYgKGFjdGl2ZUNvbnRhY3QpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmib7liLDmtLvot4PogZTns7vkurrpobknKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDmj5Dlj5bnlKjmiLflkI0NCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlck5hbWUgPSB0aGlzLmV4dHJhY3RVc2VyTmFtZShhY3RpdmVDb250YWN0KTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDmj5Dlj5bnlKjmiLdJRA0KICAgICAgICAgICAgICAgICAgICBsZXQgdXNlcklkID0gJyc7DQogICAgICAgICAgICAgICAgICAgIGlmIChhY3RpdmVDb250YWN0LmRhdGFzZXQgJiYgYWN0aXZlQ29udGFjdC5kYXRhc2V0LmtleSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkID0gYWN0aXZlQ29udGFjdC5kYXRhc2V0LmtleTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhY3RpdmVDb250YWN0LmdldEF0dHJpYnV0ZSgnZGF0YS1pZCcpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQgPSBhY3RpdmVDb250YWN0LmdldEF0dHJpYnV0ZSgnZGF0YS1pZCcpOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKHVzZXJOYW1lKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXVzZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZCA9ICduYW1lOicgKyB1c2VyTmFtZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfku47mtLvot4PogZTns7vkurrpobnojrflj5bnlKjmiLfkv6Hmga/miJDlip8nLCB7IHVzZXJJZCwgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geyB1c2VySWQsIHVzZXJOYW1lIH07DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Uy77ya5bCd6K+V5LuOVVJM6I635Y+W55So5oi3SUQNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWF0Y2ggPSB1cmwubWF0Y2goL1wvbWVzc2FnZVwvdXNlclwvKFteLz9dKykvKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoICYmIG1hdGNoWzFdKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySWQgPSBtYXRjaFsxXTsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5LuOVVJM6I635Y+W55So5oi3SUTmiJDlip8nLCB7IHVzZXJJZCB9KTsNCg0KICAgICAgICAg",
        "ICAgICAgICAgICAgICAgLy8g5bCd6K+V5LuO5rS76LeD6IGU57O75Lq66I635Y+W55So5oi35ZCNDQogICAgICAgICAgICAgICAgICAgICAgICBsZXQgdXNlck5hbWUgPSAn5pyq55+l55So5oi3JzsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhY3RpdmVDb250YWN0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUgPSB0aGlzLmV4dHJhY3RVc2VyTmFtZShhY3RpdmVDb250YWN0KSB8fCB1c2VyTmFtZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgdXNlcklkLCB1c2VyTmFtZSB9Ow0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S7jlVSTOaPkOWPlueUqOaIt0lE5aSx6LSlJywgeyBlcnJvcjogZS5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTPvvJrlsJ3or5Xku47lr7nor53nqpflj6PmoIfpopjojrflj5bvvIjlpJrnp43pgInmi6nlmajvvIkNCiAgICAgICAgICAgICAgICBjb25zdCB0aXRsZVNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICAgICAgJy5jaGF0LWhlYWRlciAudGl0bGUnLA0KICAgICAgICAgICAgICAgICAgICAnLmNoYXQtdGl0bGUnLA0KICAgICAgICAgICAgICAgICAgICAnLmNvbnZlcnNhdGlvbi10aXRsZScsDQogICAgICAgICAgICAgICAgICAgICcuaGVhZGVyLXRpdGxlJywNCiAgICAgICAgICAgICAgICAgICAgJ1tjbGFzcyo9InRpdGxlIl0nLA0KICAgICAgICAgICAgICAgICAgICAnLnN4LWNoYXQtaGVhZGVyIC50aXRsZScNCiAgICAgICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiB0aXRsZVNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0aXRsZUVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRpdGxlRWxlbWVudCAmJiB0aXRsZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VyTmFtZSA9IHRpdGxlRWxlbWVudC50ZXh0Q29udGVudC50cmltKCk7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySWQgPSAnbmFtZTonICsgdXNlck5hbWU7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5LuO5a+56K+d5qCH6aKY6I635Y+W55So5oi35L+h5oGv5oiQ5YqfJywgeyB1c2VySWQsIHVzZXJOYW1lLCBzZWxlY3RvciB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHVzZXJJZCwgdXNlck5hbWUgfTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTTvvJrku47mnIDov5HnmoTmtojmga/kuK3m",
        "jqjmlq3nlKjmiLfkv6Hmga8NCiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlSXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaW0tbXNnLWl0ZW0nKTsNCiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZUl0ZW1zLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5om+5Yiw5pyA5paw55qE55So5oi35raI5oGv77yI6Z2eQUnlm57lpI3vvIkNCiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IG1lc3NhZ2VJdGVtcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbXNnSXRlbSA9IG1lc3NhZ2VJdGVtc1tpXTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzVXNlck1lc3NhZ2UgPSBtc2dJdGVtLmNsYXNzTGlzdC5jb250YWlucygnbGVmdCcpIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1zZ0l0ZW0ucXVlcnlTZWxlY3RvcignLmxlZnQnKSB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhbXNnSXRlbS5jbGFzc0xpc3QuY29udGFpbnMoJ3JpZ2h0Jyk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1VzZXJNZXNzYWdlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5bCd6K+V5LuO5raI5oGv5Lit5o+Q5Y+W55So5oi35L+h5oGvDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlck5hbWVFbGVtZW50ID0gbXNnSXRlbS5xdWVyeVNlbGVjdG9yKCdbY2xhc3MqPSJuYW1lIl0sIFtjbGFzcyo9InVzZXIiXScpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh1c2VyTmFtZUVsZW1lbnQgJiYgdXNlck5hbWVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VyTmFtZSA9IHVzZXJOYW1lRWxlbWVudC50ZXh0Q29udGVudC50cmltKCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9ICduYW1lOicgKyB1c2VyTmFtZTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S7jua2iOaBr+aOqOaWreeUqOaIt+S/oeaBr+aIkOWKnycsIHsgdXNlcklkLCB1c2VyTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgdXNlcklkLCB1c2VyTmFtZSB9Ow0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmiYDmnInmlrnms5Xpg73ml6Dms5Xojrflj5blvZPliY3lr7nor53nlKjmiLfkv6Hmga8nKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAg",
        "ICAgTG9nZ2VyLmVycm9yKCfojrflj5blvZPliY3lr7nor53nlKjmiLfkv6Hmga/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g5raI5oGv55uR5ZCs5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBNZXNzYWdlTGlzdGVuZXIgPSB7DQogICAgICAgIG9ic2VydmVyOiBudWxsLA0KICAgICAgICBpc0xpc3RlbmluZzogZmFsc2UsDQogICAgICAgIGxhc3RDaGVja1RpbWU6IDAsDQogICAgICAgIGxhc3RNdXRhdGlvblRpbWU6IDAsICAvLyDmlrDlop7vvJrnlKjkuo7pmLLmipYNCiAgICAgICAgYmFzZUNoZWNrSW50ZXJ2YWw6IDIwMDAsDQogICAgICAgIGN1cnJlbnRDaGVja0ludGVydmFsOiAyMDAwLA0KICAgICAgICBtaW5DaGVja0ludGVydmFsOiAyMDAwLA0KICAgICAgICBtYXhDaGVja0ludGVydmFsOiA4MDAwLA0KICAgICAgICBjaGVja0ludGVydmFsVGltZXI6IG51bGwsDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOW8gOWni+ebkeWQrOa2iOaBr+WPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgc3RhcnQ6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuaXNMaXN0ZW5pbmcpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5raI5oGv55uR5ZCs5Zmo5bey5Zyo6L+Q6KGMJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOehruS/neWFg+e0oOeuoeeQhuWZqOW3suWIneWni+WMlg0KICAgICAgICAgICAgICAgIGlmICghRWxlbWVudE1hbmFnZXIuY29udGFjdExpc3RDb250YWluZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgRWxlbWVudE1hbmFnZXIuaW5pdCgpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHRoaXMuc2V0dXBNdXRhdGlvbk9ic2VydmVyKCk7DQogICAgICAgICAgICAgICAgdGhpcy5zZXR1cFBlcmlvZGljQ2hlY2soKTsNCiAgICAgICAgICAgICAgICB0aGlzLmlzTGlzdGVuaW5nID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5raI5oGv55uR5ZCs5Zmo5bey5ZCv5Yqo77yIRE9N56iz5a6a5oCn5LyY5YyW5bey5ZCv55So77yJJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5ZCv5Yqo5raI5oGv55uR5ZCs5Zmo5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5YGc5q2i55uR5ZCs5raI5oGv5Y+Y5YyWDQogICAgICAgICAqLw0KICAgICAgICBzdG9wOiBmdW5jdGlvbigpIHsNCiAgICAgICAg",
        "ICAgIGlmICghdGhpcy5pc0xpc3RlbmluZykgew0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKHRoaXMub2JzZXJ2ZXIpIHsNCiAgICAgICAgICAgICAgICB0aGlzLm9ic2VydmVyLmRpc2Nvbm5lY3QoKTsNCiAgICAgICAgICAgICAgICB0aGlzLm9ic2VydmVyID0gbnVsbDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKHRoaXMuY2hlY2tJbnRlcnZhbFRpbWVyKSB7DQogICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuY2hlY2tJbnRlcnZhbFRpbWVyKTsNCiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrSW50ZXJ2YWxUaW1lciA9IG51bGw7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMuaXNMaXN0ZW5pbmcgPSBmYWxzZTsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmtojmga/nm5HlkKzlmajlt7LlgZzmraInKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K6+572uRE9N5Y+Y5YyW55uR5ZCs5ZmoDQogICAgICAgICAqLw0KICAgICAgICBzZXR1cE11dGF0aW9uT2JzZXJ2ZXI6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3QgdGFyZ2V0RWxlbWVudCA9IFBhZ2VFbGVtZW50TWFuYWdlci5nZXRDb250YWN0TGlzdENvbnRhaW5lcigpOw0KICAgICAgICAgICAgaWYgKCF0YXJnZXRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfmnKrmib7liLDkvJrlkZjliJfooajlrrnlmajvvIzml6Dms5Xorr7nva7nm5HlkKzlmagnKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdGhpcy5vYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKChtdXRhdGlvbnMpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZU11dGF0aW9ucyhtdXRhdGlvbnMpOw0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOebkeWQrOmFjee9rg0KICAgICAgICAgICAgY29uc3QgY29uZmlnID0gew0KICAgICAgICAgICAgICAgIGNoaWxkTGlzdDogdHJ1ZSwgICAgICAgIC8vIOebkeWQrOWtkOiKgueCueWPmOWMlg0KICAgICAgICAgICAgICAgIHN1YnRyZWU6IHRydWUsICAgICAgICAgIC8vIOebkeWQrOaJgOacieWQjuS7o+iKgueCuQ0KICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHRydWUsICAgICAgIC8vIOebkeWQrOWxnuaAp+WPmOWMlg0KICAgICAgICAgICAgICAgIGF0dHJpYnV0ZUZpbHRlcjogWydjbGFzcycsICdzdHlsZSddLCAvLyDlj6rnm5HlkKznibnlrprlsZ7mgKcNCiAgICAgICAgICAgICAgICBjaGFyYWN0ZXJEYXRhOiBmYWxzZSAgICAvLyDkuI3nm5HlkKzmlofmnKzlhoXlrrnlj5jljJYNCiAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXIub2JzZXJ2ZSh0YXJnZXRFbGVtZW50LCBjb25maWcpOw0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCdNdXRhdGlvbk9ic2VydmVy5bey6K6+572uJywgeyB0YXJnZXQ6IHRhcmdl",
        "dEVsZW1lbnQudGFnTmFtZSB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CGRE9N5Y+Y5YyWIC0g5LyY5YyW54mI77yM5re75Yqg6Ziy5oqW5ZKM56iz5a6a5oCn562J5b6FDQogICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IG11dGF0aW9ucyDlj5jljJbliJfooagNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZU11dGF0aW9uczogYXN5bmMgZnVuY3Rpb24obXV0YXRpb25zKSB7DQogICAgICAgICAgICAvLyDpmLLmipbvvJrpgb/lhY3nn63ml7bpl7TlhoXph43lpI3op6blj5ENCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBpZiAodGhpcy5sYXN0TXV0YXRpb25UaW1lICYmIG5vdyAtIHRoaXMubGFzdE11dGF0aW9uVGltZSA8IDUwMCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1ZygnRE9N5Y+Y5YyW6Ziy5oqW77yM6Lez6L+H5aSE55CGJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5sYXN0TXV0YXRpb25UaW1lID0gbm93Ow0KDQogICAgICAgICAgICBsZXQgaGFzTmV3TWVzc2FnZSA9IGZhbHNlOw0KICAgICAgICAgICAgbGV0IGNoYW5nZWRFbGVtZW50cyA9IFtdOw0KDQogICAgICAgICAgICBtdXRhdGlvbnMuZm9yRWFjaChtdXRhdGlvbiA9PiB7DQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5paw5aKe55qE6IqC54K5DQogICAgICAgICAgICAgICAgaWYgKG11dGF0aW9uLnR5cGUgPT09ICdjaGlsZExpc3QnKSB7DQogICAgICAgICAgICAgICAgICAgIG11dGF0aW9uLmFkZGVkTm9kZXMuZm9yRWFjaChub2RlID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlLm5vZGVUeXBlID09PSBOb2RlLkVMRU1FTlRfTk9ERSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrRm9yTmV3TWVzc2FnZUluZGljYXRvcnMobm9kZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzTmV3TWVzc2FnZSA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOajgOa1i+WIsOeahOaYr+W+veeroOWFg+e0oO+8jOi9rOaNouS4uuWvueW6lOeahOS8muivnemhueWFg+e0oA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb250YWN0RWxlbWVudCA9IHRoaXMuZ2V0Q29udGFjdEVsZW1lbnRGcm9tSW5kaWNhdG9yKG5vZGUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29udGFjdEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZWRFbGVtZW50cy5wdXNoKGNvbnRhY3RFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAg",
        "ICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5bGe5oCn5Y+Y5YyW77yI5aaC57qi54K55pi+56S6L+makOiXj++8iQ0KICAgICAgICAgICAgICAgIGlmIChtdXRhdGlvbi50eXBlID09PSAnYXR0cmlidXRlcycpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuY2hlY2tGb3JOZXdNZXNzYWdlSW5kaWNhdG9ycyhtdXRhdGlvbi50YXJnZXQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBoYXNOZXdNZXNzYWdlID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOajgOa1i+WIsOeahOaYr+W+veeroOWFg+e0oO+8jOi9rOaNouS4uuWvueW6lOeahOS8muivnemhueWFg+e0oA0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29udGFjdEVsZW1lbnQgPSB0aGlzLmdldENvbnRhY3RFbGVtZW50RnJvbUluZGljYXRvcihtdXRhdGlvbi50YXJnZXQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRhY3RFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbmdlZEVsZW1lbnRzLnB1c2goY29udGFjdEVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIGlmIChoYXNOZXdNZXNzYWdlKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmo4DmtYvliLDmlrDmtojmga/lj5jljJbvvIznrYnlvoVET03nqLPlrponLCB7DQogICAgICAgICAgICAgICAgICAgIG11dGF0aW9uQ291bnQ6IG11dGF0aW9ucy5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIGNoYW5nZWRFbGVtZW50czogY2hhbmdlZEVsZW1lbnRzLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g562J5b6FRE9N56iz5a6a5ZCO5YaN5aSE55CGDQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNTdGFibGUgPSBhd2FpdCBET01TdGFiaWxpdHlNYW5hZ2VyLndhaXRGb3JET01TdGFiaWxpdHkobnVsbCwgew0KICAgICAgICAgICAgICAgICAgICAgICAgbWF4V2FpdFRpbWU6IDE1MDAsDQogICAgICAgICAgICAgICAgICAgICAgICBzdGFiaWxpdHlUaHJlc2hvbGQ6IDMwMA0KICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoaXNTdGFibGUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1ZygnRE9N5bey56iz5a6a77yM5byA5aeL5aSE55CG5paw5raI5oGvJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uTmV3TWVzc2FnZURldGVjdGVkKGNoYW5nZWRFbGVtZW50cyk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2FybignRE9N56iz5a6a5oCn562J5b6F6LaF5pe277yM5LuN54S25aSE55CG5paw5raI5oGvJyk7",
        "DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uTmV3TWVzc2FnZURldGVjdGVkKGNoYW5nZWRFbGVtZW50cyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ0RPTeeos+WumuaAp+etieW+heWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMub25OZXdNZXNzYWdlRGV0ZWN0ZWQoY2hhbmdlZEVsZW1lbnRzKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpeWFg+e0oOaYr+WQpuWMheWQq+aWsOa2iOaBr+aMh+ekuuWZqA0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQg6KaB5qOA5p+l55qE5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgY2hlY2tGb3JOZXdNZXNzYWdlSW5kaWNhdG9yczogZnVuY3Rpb24oZWxlbWVudCkgew0KICAgICAgICAgICAgLy8g5aaC5p6c5YWD57Sg5pys6Lqr5piv57qi54K577yM5p+l5om+5YW25omA5bGe55qE5Lya6K+d6aG5DQogICAgICAgICAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QgJiYgZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2QtYmFkZ2UtZG90JykpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWN0SXRlbSA9IGVsZW1lbnQuY2xvc2VzdCgnLnN4LWNvbnRhY3QtaXRlbScpOw0KICAgICAgICAgICAgICAgIHJldHVybiAhIWNvbnRhY3RJdGVtOyAvLyDlj6rmnInlvZPnuqLngrnlsZ7kuo7kvJror53pobnml7bmiY3ov5Tlm550cnVlDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOWGheaYr+WQpuWMheWQq+e6oueCuQ0KICAgICAgICAgICAgY29uc3QgYmFkZ2UgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcuZC1iYWRnZS1kb3QnLCBlbGVtZW50KTsNCiAgICAgICAgICAgIGlmIChiYWRnZSkgew0KICAgICAgICAgICAgICAgIC8vIOajgOafpee6oueCueaYr+WQpuWPr+ingQ0KICAgICAgICAgICAgICAgIGNvbnN0IHN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoYmFkZ2UpOw0KICAgICAgICAgICAgICAgIHJldHVybiBzdHlsZS52aXNpYmlsaXR5ICE9PSAnaGlkZGVuJyAmJiBzdHlsZS5kaXNwbGF5ICE9PSAnbm9uZSc7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuaYr+S8muivnemhueS4lOWMheWQq+aWsOa2iOaBr+agh+ivhg0KICAgICAgICAgICAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0ICYmIGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzeC1jb250YWN0LWl0ZW0nKSkgew0KICAgICAgICAgICAgICAgIHJldHVybiBVdGlscy5xdWVyeVNlbGVjdG9yKCcuZC1iYWRnZS1kb3QnLCBlbGVtZW50KSAhPT0gbnVsbDsNCiAgICAgICAgICAgIH0NCg0K",
        "ICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDku47mjIfnpLrlmajlhYPntKDojrflj5blr7nlupTnmoTkvJror53pobnlhYPntKANCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOaMh+ekuuWZqOWFg+e0oO+8iOWPr+iDveaYr+W+veeroOaIluS8muivnemhue+8iQ0KICAgICAgICAgKiBAcmV0dXJucyB7RWxlbWVudHxudWxsfSDlr7nlupTnmoTkvJror53pobnlhYPntKANCiAgICAgICAgICovDQogICAgICAgIGdldENvbnRhY3RFbGVtZW50RnJvbUluZGljYXRvcjogZnVuY3Rpb24oZWxlbWVudCkgew0KICAgICAgICAgICAgLy8g5aaC5p6c5YWD57Sg5pys6Lqr5bCx5piv5Lya6K+d6aG577yM55u05o6l6L+U5ZueDQogICAgICAgICAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QgJiYgZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ3N4LWNvbnRhY3QtaXRlbScpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGVsZW1lbnQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOWmguaenOaYr+W+veeroOWFg+e0oO+8jOafpeaJvuWFtuaJgOWxnueahOS8muivnemhuQ0KICAgICAgICAgICAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0ICYmIGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdkLWJhZGdlLWRvdCcpKSB7DQogICAgICAgICAgICAgICAgY29uc3QgY29udGFjdEl0ZW0gPSBlbGVtZW50LmNsb3Nlc3QoJy5zeC1jb250YWN0LWl0ZW0nKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gY29udGFjdEl0ZW07DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOWGheaYr+WQpuWMheWQq+S8muivnemhuQ0KICAgICAgICAgICAgY29uc3QgY29udGFjdEl0ZW0gPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zeC1jb250YWN0LWl0ZW0nKTsNCiAgICAgICAgICAgIGlmIChjb250YWN0SXRlbSkgew0KICAgICAgICAgICAgICAgIHJldHVybiBjb250YWN0SXRlbTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5p+l5YWD57Sg5piv5ZCm5Zyo5Lya6K+d6aG55YaF6YOoDQogICAgICAgICAgICBjb25zdCBwYXJlbnRDb250YWN0SXRlbSA9IGVsZW1lbnQuY2xvc2VzdCgnLnN4LWNvbnRhY3QtaXRlbScpOw0KICAgICAgICAgICAgaWYgKHBhcmVudENvbnRhY3RJdGVtKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHBhcmVudENvbnRhY3RJdGVtOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K6+572u5a6a5pyf5qOA5p+l77yI5Yqo5oCB6Ze06ZqU77yJDQogICAgICAgICAqLw0KICAgICAgICBzZXR1cFBlcmlvZGljQ2hlY2s6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgdGhpcy5zY2hlZHVsZU5leHRDaGVjaygpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDosIPluqbk",
        "uIvkuIDmrKHmo4Dmn6UNCiAgICAgICAgICovDQogICAgICAgIHNjaGVkdWxlTmV4dENoZWNrOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrSW50ZXJ2YWxUaW1lcikgew0KICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLmNoZWNrSW50ZXJ2YWxUaW1lcik7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMuY2hlY2tJbnRlcnZhbFRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNMaXN0ZW5pbmcgJiYgQ29uZmlnTWFuYWdlci5nZXQoJ2VuYWJsZWQnKSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnBlcmZvcm1QZXJpb2RpY0NoZWNrKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2NoZWR1bGVOZXh0Q2hlY2soKTsgLy8g6YCS5b2S6LCD5bqm5LiL5LiA5qyh5qOA5p+lDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSwgdGhpcy5jdXJyZW50Q2hlY2tJbnRlcnZhbCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWKqOaAgeiwg+aVtOajgOafpemXtOmalA0KICAgICAgICAgKi8NCiAgICAgICAgYWRqdXN0Q2hlY2tJbnRlcnZhbDogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBjb25zdCBxdWV1ZVVzYWdlID0gTWVzc2FnZVByb2Nlc3Nvci5nZXRRdWV1ZVVzYWdlKCk7DQogICAgICAgICAgICBsZXQgbmV3SW50ZXJ2YWwgPSB0aGlzLmJhc2VDaGVja0ludGVydmFsOw0KDQogICAgICAgICAgICBpZiAocXVldWVVc2FnZSA+PSA4MCkgew0KICAgICAgICAgICAgICAgIC8vIOmYn+WIl+S9v+eUqOeOh+mrmO+8jOWHj+WwkeajgOafpemikeeOhw0KICAgICAgICAgICAgICAgIG5ld0ludGVydmFsID0gdGhpcy5tYXhDaGVja0ludGVydmFsOw0KICAgICAgICAgICAgfSBlbHNlIGlmIChxdWV1ZVVzYWdlID49IDUwKSB7DQogICAgICAgICAgICAgICAgLy8g6Zif5YiX5L2/55So546H5Lit562J77yM6YCC5bqm5YeP5bCR5qOA5p+l6aKR546HDQogICAgICAgICAgICAgICAgbmV3SW50ZXJ2YWwgPSBNYXRoLmZsb29yKHRoaXMuYmFzZUNoZWNrSW50ZXJ2YWwgKiAyKTsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAocXVldWVVc2FnZSA8IDIwKSB7DQogICAgICAgICAgICAgICAgLy8g6Zif5YiX5L2/55So546H5L2O77yM5L+d5oyB5q2j5bi46aKR546HDQogICAgICAgICAgICAgICAgbmV3SW50ZXJ2YWwgPSB0aGlzLmJhc2VDaGVja0ludGVydmFsOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAvLyDpmJ/liJfkvb/nlKjnjofpgILkuK3vvIzovbvlvq7lop7liqDpl7TpmpQNCiAgICAgICAgICAgICAgICBuZXdJbnRlcnZhbCA9IE1hdGguZmxvb3IodGhpcy5iYXNlQ2hlY2tJbnRlcnZhbCAqIDEuNSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOehruS/nemXtOmalOWcqOWQiOeQhuiMg+WbtOWGhQ0KICAgICAgICAgICAgbmV3SW50ZXJ2YWwgPSBNYXRoLm1h",
        "eCh0aGlzLm1pbkNoZWNrSW50ZXJ2YWwsIE1hdGgubWluKHRoaXMubWF4Q2hlY2tJbnRlcnZhbCwgbmV3SW50ZXJ2YWwpKTsNCg0KICAgICAgICAgICAgaWYgKG5ld0ludGVydmFsICE9PSB0aGlzLmN1cnJlbnRDaGVja0ludGVydmFsKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfosIPmlbTmo4Dmn6Xpl7TpmpQnLCB7DQogICAgICAgICAgICAgICAgICAgIG9sZEludGVydmFsOiB0aGlzLmN1cnJlbnRDaGVja0ludGVydmFsLA0KICAgICAgICAgICAgICAgICAgICBuZXdJbnRlcnZhbDogbmV3SW50ZXJ2YWwsDQogICAgICAgICAgICAgICAgICAgIHF1ZXVlVXNhZ2U6IGAke3F1ZXVlVXNhZ2UudG9GaXhlZCgxKX0lYA0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudENoZWNrSW50ZXJ2YWwgPSBuZXdJbnRlcnZhbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5omn6KGM5a6a5pyf5qOA5p+lDQogICAgICAgICAqLw0KICAgICAgICBwZXJmb3JtUGVyaW9kaWNDaGVjazogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgaWYgKG5vdyAtIHRoaXMubGFzdENoZWNrVGltZSA8IHRoaXMuY3VycmVudENoZWNrSW50ZXJ2YWwpIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMubGFzdENoZWNrVGltZSA9IG5vdzsNCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDliqjmgIHosIPmlbTmo4Dmn6Xpl7TpmpQNCiAgICAgICAgICAgICAgICB0aGlzLmFkanVzdENoZWNrSW50ZXJ2YWwoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWumuacn+a4heeQhui/h+acn+eahOWkhOeQhuS4reiusOW9lQ0KICAgICAgICAgICAgICAgIE1lc3NhZ2VEZWR1cGxpY2F0b3IuY2xlYW51cEV4cGlyZWRQcm9jZXNzaW5nKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDlrprmnJ/muIXnkIbov4fmnJ/nmoTnlZnlrqLotYTnirbmgIHnvJPlrZgNCiAgICAgICAgICAgICAgICBMZWFkc1N0YXR1c01hbmFnZXIuY2xlYXJFeHBpcmVkQ2FjaGUoKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhY3RzV2l0aE1lc3NhZ2VzID0gUGFnZUVsZW1lbnRNYW5hZ2VyLmdldENvbnRhY3RzV2l0aE5ld01lc3NhZ2VzKCk7DQogICAgICAgICAgICAgICAgaWYgKGNvbnRhY3RzV2l0aE1lc3NhZ2VzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflrprmnJ/mo4Dmn6Xlj5HnjrDmlrDmtojmga8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb3VudDogY29udGFjdHNXaXRoTWVzc2FnZXMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tJbnRlcnZhbDogdGhpcy5jdXJyZW50Q2hlY2tJbnRlcnZhbCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXVlVXNhZ2U6",
        "IGAke01lc3NhZ2VQcm9jZXNzb3IuZ2V0UXVldWVVc2FnZSgpLnRvRml4ZWQoMSl9JWANCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMub25OZXdNZXNzYWdlRGV0ZWN0ZWQoY29udGFjdHNXaXRoTWVzc2FnZXMubWFwKGMgPT4gYy5lbGVtZW50KSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflrprmnJ/mo4Dmn6Xml6DmlrDmtojmga8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBjaGVja0ludGVydmFsOiB0aGlzLmN1cnJlbnRDaGVja0ludGVydmFsLA0KICAgICAgICAgICAgICAgICAgICAgICAgcXVldWVVc2FnZTogYCR7TWVzc2FnZVByb2Nlc3Nvci5nZXRRdWV1ZVVzYWdlKCkudG9GaXhlZCgxKX0lYA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5a6a5pyf5qOA5p+l5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5paw5raI5oGv5qOA5rWL5Zue6LCDDQogICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IGVsZW1lbnRzIOWPmOWMlueahOWFg+e0oOWIl+ihqA0KICAgICAgICAgKi8NCiAgICAgICAgb25OZXdNZXNzYWdlRGV0ZWN0ZWQ6IGZ1bmN0aW9uKGVsZW1lbnRzKSB7DQogICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCdlbmFibGVkJykpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+iHquWKqOWbnuWkjeW3suemgeeUqO+8jOi3s+i/h+WkhOeQhicpOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g6YCa55+l5Li75bqU55So5aSE55CG5paw5raI5oGvDQogICAgICAgICAgICBpZiAod2luZG93LlhIU0F1dG9SZXBseSAmJiB3aW5kb3cuWEhTQXV0b1JlcGx5LmhhbmRsZU5ld01lc3NhZ2VzKSB7DQogICAgICAgICAgICAgICAgd2luZG93LlhIU0F1dG9SZXBseS5oYW5kbGVOZXdNZXNzYWdlcyhlbGVtZW50cyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDlr7nor53ov73ouKrlmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IENvbnZlcnNhdGlvblRyYWNrZXIgPSB7DQogICAgICAgIGNvbnZlcnNhdGlvbkRhdGE6IG5ldyBNYXAoKSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw5a+56K+d5pWw5o2uDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VDb250ZW50IOa2iOaBr+WGheWuuQ0KICAgICAgICAgKiBAcGFy",
        "YW0ge09iamVjdH0gb3B0aW9ucyDpop3lpJbpgInpobkNCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g55So5oi35a+56K+d5pWw5o2uDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVDb252ZXJzYXRpb246IGZ1bmN0aW9uKHVzZXJOYW1lLCBtZXNzYWdlQ29udGVudCwgb3B0aW9ucyA9IHt9KSB7DQogICAgICAgICAgICBpZiAoIXRoaXMuY29udmVyc2F0aW9uRGF0YS5oYXModXNlck5hbWUpKSB7DQogICAgICAgICAgICAgICAgdGhpcy5jb252ZXJzYXRpb25EYXRhLnNldCh1c2VyTmFtZSwgew0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlQ291bnQ6IDAsDQogICAgICAgICAgICAgICAgICAgIGhhc1JlY2VpdmVkQWNxdWlzaXRpb25Ub29sOiBmYWxzZSwNCiAgICAgICAgICAgICAgICAgICAgYWN0aXZlV2VsY29tZVNlbnQ6IGZhbHNlLA0KICAgICAgICAgICAgICAgICAgICBpbnRlcmVzdEtleXdvcmRzOiBbXSwNCiAgICAgICAgICAgICAgICAgICAgbGFzdE1lc3NhZ2VUaW1lOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksDQogICAgICAgICAgICAgICAgICAgIGZpcnN0TWVzc2FnZVRpbWU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb25zdCB1c2VyRGF0YSA9IHRoaXMuY29udmVyc2F0aW9uRGF0YS5nZXQodXNlck5hbWUpOw0KDQogICAgICAgICAgICAvLyDlpoLmnpzkuI3mmK/nibnmrormtojmga/vvIjlpoLkuLvliqjov5vnur/or53mnK/vvInvvIzliJnlop7liqDmtojmga/orqHmlbANCiAgICAgICAgICAgIGlmICghbWVzc2FnZUNvbnRlbnQuaW5jbHVkZXMoJ1vkuLvliqjov5vnur/or53mnK9dJykpIHsNCiAgICAgICAgICAgICAgICB1c2VyRGF0YS5tZXNzYWdlQ291bnQrKzsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHVzZXJEYXRhLmxhc3RNZXNzYWdlVGltZSA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTsNCg0KICAgICAgICAgICAgLy8g5bqU55So6aKd5aSW6YCJ6aG5DQogICAgICAgICAgICBpZiAob3B0aW9ucy5hY3RpdmVXZWxjb21lU2VudCAhPT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICAgICAgdXNlckRhdGEuYWN0aXZlV2VsY29tZVNlbnQgPSBvcHRpb25zLmFjdGl2ZVdlbGNvbWVTZW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4DmtYvlhbTotqPlhbPplK7or43vvIjot7Pov4fnibnmrormtojmga/vvIkNCiAgICAgICAgICAgIGlmICghbWVzc2FnZUNvbnRlbnQuaW5jbHVkZXMoJ1vkuLvliqjov5vnur/or53mnK9dJykpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBrZXl3b3Jkc0NvbmZpZyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdhY3F1aXNpdGlvbktleXdvcmRzJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuYWNxdWlzaXRpb25LZXl3b3Jkcyk7DQogICAgICAgICAgICAgICAgY29uc3QgaW50ZXJlc3RLZXl3b3JkcyA9IGtleXdvcmRzQ29uZmlnLnNwbGl0KCcs",
        "JykubWFwKGsgPT4gay50cmltKCkpLmZpbHRlcihrID0+IGspOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRldGVjdGVkS2V5d29yZHMgPSBpbnRlcmVzdEtleXdvcmRzLmZpbHRlcihrZXl3b3JkID0+IG1lc3NhZ2VDb250ZW50LmluY2x1ZGVzKGtleXdvcmQpKTsNCg0KICAgICAgICAgICAgICAgIGlmIChkZXRlY3RlZEtleXdvcmRzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlckRhdGEuaW50ZXJlc3RLZXl3b3JkcyA9IFsuLi5uZXcgU2V0KFsuLi51c2VyRGF0YS5pbnRlcmVzdEtleXdvcmRzLCAuLi5kZXRlY3RlZEtleXdvcmRzXSldOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflr7nor53mlbDmja7lt7Lmm7TmlrAnLCB7DQogICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgbWVzc2FnZUNvdW50OiB1c2VyRGF0YS5tZXNzYWdlQ291bnQsDQogICAgICAgICAgICAgICAgaGFzUmVjZWl2ZWRBY3F1aXNpdGlvblRvb2w6IHVzZXJEYXRhLmhhc1JlY2VpdmVkQWNxdWlzaXRpb25Ub29sLA0KICAgICAgICAgICAgICAgIGFjdGl2ZVdlbGNvbWVTZW50OiB1c2VyRGF0YS5hY3RpdmVXZWxjb21lU2VudCwNCiAgICAgICAgICAgICAgICBkZXRlY3RlZEtleXdvcmRzOiB1c2VyRGF0YS5pbnRlcmVzdEtleXdvcmRzDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgcmV0dXJuIHVzZXJEYXRhOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmoIforrDlt7Llj5HpgIHojrflrqLlt6XlhbcNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKi8NCiAgICAgICAgbWFya0FjcXVpc2l0aW9uVG9vbFNlbnQ6IGZ1bmN0aW9uKHVzZXJOYW1lKSB7DQogICAgICAgICAgICBpZiAodGhpcy5jb252ZXJzYXRpb25EYXRhLmhhcyh1c2VyTmFtZSkpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmNvbnZlcnNhdGlvbkRhdGEuZ2V0KHVzZXJOYW1lKS5oYXNSZWNlaXZlZEFjcXVpc2l0aW9uVG9vbCA9IHRydWU7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W3suagh+iusOiOt+WuouW3peWFt+WPkemAgeeKtuaAgScsIHsgdXNlck5hbWUgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmHjee9rueUqOaIt+iOt+WuouW3peWFt+eKtuaAge+8iOeUqOS6juWFgeiuuOmHjeWkjeWPkemAge+8iQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCNDQogICAgICAgICAqLw0KICAgICAgICByZXNldEFjcXVpc2l0aW9uU3RhdHVzOiBmdW5jdGlvbih1c2VyTmFtZSkgew0KICAgICAgICAgICAgaWYgKHRoaXMuY29udmVyc2F0aW9uRGF0YS5oYXModXNlck5hbWUpKSB7DQogICAgICAgICAgICAgICAgdGhpcy5jb252ZXJzYXRpb25EYXRhLmdldCh1c2VyTmFtZSkuaGFzUmVjZWl2",
        "ZWRBY3F1aXNpdGlvblRvb2wgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5bey6YeN572u55So5oi36I635a6i5bel5YW354q25oCBJywgeyB1c2VyTmFtZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5a+56K+d5pWw5o2uDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHJldHVybnMge09iamVjdHxudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0Q29udmVyc2F0aW9uRGF0YTogZnVuY3Rpb24odXNlck5hbWUpIHsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbnZlcnNhdGlvbkRhdGEuZ2V0KHVzZXJOYW1lKSB8fCBudWxsOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmiYDmnInlr7nor53nu5/orqENCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldFN0YXRpc3RpY3M6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgY29uc3Qgc3RhdHMgPSB7DQogICAgICAgICAgICAgICAgdG90YWxVc2VyczogdGhpcy5jb252ZXJzYXRpb25EYXRhLnNpemUsDQogICAgICAgICAgICAgICAgdXNlcnNXaXRoQWNxdWlzaXRpb25Ub29sOiAwLA0KICAgICAgICAgICAgICAgIHRvdGFsTWVzc2FnZXM6IDAsDQogICAgICAgICAgICAgICAgYXZlcmFnZU1lc3NhZ2VzUGVyVXNlcjogMA0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCB1c2VyRGF0YSBvZiB0aGlzLmNvbnZlcnNhdGlvbkRhdGEudmFsdWVzKCkpIHsNCiAgICAgICAgICAgICAgICBpZiAodXNlckRhdGEuaGFzUmVjZWl2ZWRBY3F1aXNpdGlvblRvb2wpIHsNCiAgICAgICAgICAgICAgICAgICAgc3RhdHMudXNlcnNXaXRoQWNxdWlzaXRpb25Ub29sKys7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHN0YXRzLnRvdGFsTWVzc2FnZXMgKz0gdXNlckRhdGEubWVzc2FnZUNvdW50Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoc3RhdHMudG90YWxVc2VycyA+IDApIHsNCiAgICAgICAgICAgICAgICBzdGF0cy5hdmVyYWdlTWVzc2FnZXNQZXJVc2VyID0gTWF0aC5yb3VuZChzdGF0cy50b3RhbE1lc3NhZ2VzIC8gc3RhdHMudG90YWxVc2VycyAqIDEwMCkgLyAxMDA7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBzdGF0czsNCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOiBmuWFiei/m+e6v+WkhOeQhuWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgU3BvdGxpZ2h0TGVhZFByb2Nlc3NvciA9IHsNCiAgICAgICAgcHJvY2Vzc2VkTGVhZHM6IG5ldyBTZXQoKSwNCiAgICAgICAgbWF4Q2FjaGVTaXplOiA1MDAsDQogICAgICAgIGNhY2hlRXhwaXJl",
        "VGltZTogMjQgKiA2MCAqIDYwICogMTAwMCwgLy8gMjTlsI/ml7YNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5rWL5piv5ZCm5Li66IGa5YWJ6L+b57q/5raI5oGvDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gbWVzc2FnZUVsZW1lbnQg5raI5oGv5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgaXNTcG90bGlnaHRMZWFkKG1lc3NhZ2VFbGVtZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNlbnRlckNvbnRhaW5lciA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5pdGVtLW1haW4tY2VudGVyJywgbWVzc2FnZUVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmICghY2VudGVyQ29udGFpbmVyKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBkYW5nZXJUZXh0ID0gVXRpbHMucXVlcnlTZWxlY3RvcignLmQtdGV4dC4tLWNvbG9yLWRhbmdlcicsIGNlbnRlckNvbnRhaW5lcik7DQogICAgICAgICAgICAgICAgY29uc3QgY29udGVudFNwYW4gPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcsIGNlbnRlckNvbnRhaW5lcik7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWRhbmdlclRleHQgfHwgIWNvbnRlbnRTcGFuKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50VGV4dCA9IGNvbnRlbnRTcGFuLnRleHRDb250ZW50LnRyaW0oKTsNCiAgICAgICAgICAgICAgICBjb25zdCBpc1Nwb3RsaWdodCA9IC/lr7nmlrnpgJrov4fjgIwuKz/jgI3ov5vlhaXnp4Hkv6EvLnRlc3QoY29udGVudFRleHQpOw0KDQogICAgICAgICAgICAgICAgaWYgKGlzU3BvdGxpZ2h0KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5qOA5rWL5Yiw6IGa5YWJ6L+b57q/5raI5oGvJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogY29udGVudFRleHQuc3Vic3RyaW5nKDAsIDUwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiBpc1Nwb3RsaWdodDsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfogZrlhYnov5vnur/mo4DmtYvlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6aqM6K+B6K++56iL5ZCN56ew5piv5ZCm5pyJ5pWIDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb3Vyc2VOYW1lIOivvueoi+WQjeensA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5pyJ",
        "5pWIDQogICAgICAgICAqLw0KICAgICAgICB2YWxpZGF0ZUNvdXJzZU5hbWUoY291cnNlTmFtZSkgew0KICAgICAgICAgICAgaWYgKCFjb3Vyc2VOYW1lIHx8IHR5cGVvZiBjb3Vyc2VOYW1lICE9PSAnc3RyaW5nJykgew0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgdHJpbW1lZE5hbWUgPSBjb3Vyc2VOYW1lLnRyaW0oKTsNCg0KICAgICAgICAgICAgLy8g5qOA5p+l6ZW/5bqm77yI5aSq55+t5oiW5aSq6ZW/6YO95Y+v6IO95piv5peg5pWI55qE77yJDQogICAgICAgICAgICBpZiAodHJpbW1lZE5hbWUubGVuZ3RoIDwgMiB8fCB0cmltbWVkTmFtZS5sZW5ndGggPiAxMDApIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+ivvueoi+WQjeensOmVv+W6puS4jeWQiOeQhicsIHsgbGVuZ3RoOiB0cmltbWVkTmFtZS5sZW5ndGgsIG5hbWU6IHRyaW1tZWROYW1lIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5YyF5ZCr5piO5pi+55qE5peg5pWI5a2X56ym5oiW5qih5byPDQogICAgICAgICAgICBjb25zdCBpbnZhbGlkUGF0dGVybnMgPSBbDQogICAgICAgICAgICAgICAgL15bXHNcLV9cLl0rJC8sICAvLyDlj6rljIXlkKvnqbrmoLzjgIHmqKrnur/jgIHkuIvliJLnur/jgIHngrnlj7cNCiAgICAgICAgICAgICAgICAvXlswLTldKyQvLCAgICAgIC8vIOe6r+aVsOWtlw0KICAgICAgICAgICAgICAgIC9bPD57fVtcXV0vLCAgICAgLy8gSFRNTOagh+etvuaIlueJueauiuespuWPtw0KICAgICAgICAgICAgICAgIC9eXD8rJC8sICAgICAgICAgLy8g57qv6Zeu5Y+3DQogICAgICAgICAgICAgICAgL15cLiskLywgICAgICAgICAvLyDnuq/ngrnlj7cNCiAgICAgICAgICAgICAgICAvXuacquefpXx1bmtub3dufG51bGx8dW5kZWZpbmVkJC9pICAvLyDmmI7mmL7nmoTljaDkvY3nrKYNCiAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgIGZvciAoY29uc3QgcGF0dGVybiBvZiBpbnZhbGlkUGF0dGVybnMpIHsNCiAgICAgICAgICAgICAgICBpZiAocGF0dGVybi50ZXN0KHRyaW1tZWROYW1lKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+ivvueoi+WQjeensOWMheWQq+aXoOaViOaooeW8jycsIHsgcGF0dGVybjogcGF0dGVybi50b1N0cmluZygpLCBuYW1lOiB0cmltbWVkTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaPkOWPluiBmuWFiei/m+e6v+WGheWuuQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IG1lc3NhZ2VFbGVtZW50IOa2iOaBr+WFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fG51bGx9IOaPkOWPluea",
        "hOWGheWuueS/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdFNwb3RsaWdodExlYWRDb250ZW50KG1lc3NhZ2VFbGVtZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNlbnRlckNvbnRhaW5lciA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5pdGVtLW1haW4tY2VudGVyJywgbWVzc2FnZUVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmICghY2VudGVyQ29udGFpbmVyKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnRTcGFuID0gVXRpbHMucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnLCBjZW50ZXJDb250YWluZXIpOw0KICAgICAgICAgICAgICAgIGlmICghY29udGVudFNwYW4pIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgY29udGVudFRleHQgPSBjb250ZW50U3Bhbi50ZXh0Q29udGVudC50cmltKCk7DQogICAgICAgICAgICAgICAgY29uc3QgbWF0Y2ggPSBjb250ZW50VGV4dC5tYXRjaCgv5a+55pa56YCa6L+H44CMKC4rPynjgI3ov5vlhaXnp4Hkv6EvKTsNCg0KICAgICAgICAgICAgICAgIGlmIChtYXRjaCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBleHRyYWN0ZWRDb3Vyc2VOYW1lID0gbWF0Y2hbMV07DQogICAgICAgICAgICAgICAgICAgIGxldCBmaW5hbENvdXJzZU5hbWUgPSBleHRyYWN0ZWRDb3Vyc2VOYW1lOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOmqjOivgeaPkOWPlueahOivvueoi+WQjeensA0KICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMudmFsaWRhdGVDb3Vyc2VOYW1lKGV4dHJhY3RlZENvdXJzZU5hbWUpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDkvb/nlKjpu5jorqTor77nqIvlkI3np7ANCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlZmF1bHRDb3Vyc2VOYW1lID0gQ29uZmlnTWFuYWdlci5nZXQoJ3Nwb3RsaWdodERlZmF1bHRDb3Vyc2VOYW1lJywgJ+aIkeS7rOeahOivvueoiycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZmluYWxDb3Vyc2VOYW1lID0gZGVmYXVsdENvdXJzZU5hbWU7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfor77nqIvlkI3np7Dor4bliKvlpLHotKXvvIzkvb/nlKjpu5jorqTlkI3np7AnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXh0cmFjdGVkOiBleHRyYWN0ZWRDb3Vyc2VOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IGRlZmF1bHRDb3Vyc2VOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bGxUZXh0OiBjb250ZW50VGV4dA0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIu",
        "ZGVidWcoJ+ivvueoi+WQjeensOivhuWIq+aIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3Vyc2VOYW1lOiBmaW5hbENvdXJzZU5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVsbFRleHQ6IGNvbnRlbnRUZXh0DQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb3Vyc2VOYW1lOiBmaW5hbENvdXJzZU5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICBvcmlnaW5hbENvdXJzZU5hbWU6IGV4dHJhY3RlZENvdXJzZU5hbWUsICAvLyDkv53nlZnljp/lp4vmj5Dlj5bnmoTlkI3np7ANCiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bGxUZXh0OiBjb250ZW50VGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IENPTkZJRy5NRVNTQUdFX1RZUEVTLlNQT1RMSUdIVF9MRUFELA0KICAgICAgICAgICAgICAgICAgICAgICAgaXNEZWZhdWx0TmFtZTogIXRoaXMudmFsaWRhdGVDb3Vyc2VOYW1lKGV4dHJhY3RlZENvdXJzZU5hbWUpICAvLyDmoIforrDmmK/lkKbkvb/nlKjkuobpu5jorqTlkI3np7ANCiAgICAgICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfogZrlhYnov5vnur/lhoXlrrnmj5Dlj5blpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnlJ/miJDogZrlhYnov5vnur/llK/kuIDmoIfor4YNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY291cnNlTmFtZSDor77nqIvlkI3np7ANCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIGdlbmVyYXRlTGVhZElkKHVzZXJOYW1lLCBjb3Vyc2VOYW1lKSB7DQogICAgICAgICAgICByZXR1cm4gYHNwb3RsaWdodF8ke3VzZXJOYW1lfV8ke2NvdXJzZU5hbWV9YC5yZXBsYWNlKC9bXmEtekEtWjAtOV9cdTRlMDAtXHU5ZmE1XS9nLCAnXycpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XogZrlhYnov5vnur/mmK/lkKblt7LlpITnkIYNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY291cnNlTmFtZSDor77nqIvlkI3np7ANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBpc0xlYWRQcm9jZXNzZWQodXNlck5hbWUsIGNvdXJzZU5hbWUpIHsNCiAgICAgICAg",
        "ICAgIGNvbnN0IGxlYWRJZCA9IHRoaXMuZ2VuZXJhdGVMZWFkSWQodXNlck5hbWUsIGNvdXJzZU5hbWUpOw0KICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc2VkTGVhZHMuaGFzKGxlYWRJZCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOagh+iusOiBmuWFiei/m+e6v+S4uuW3suWkhOeQhg0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCNDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb3Vyc2VOYW1lIOivvueoi+WQjeensA0KICAgICAgICAgKi8NCiAgICAgICAgbWFya0xlYWRBc1Byb2Nlc3NlZCh1c2VyTmFtZSwgY291cnNlTmFtZSkgew0KICAgICAgICAgICAgY29uc3QgbGVhZElkID0gdGhpcy5nZW5lcmF0ZUxlYWRJZCh1c2VyTmFtZSwgY291cnNlTmFtZSk7DQogICAgICAgICAgICB0aGlzLnByb2Nlc3NlZExlYWRzLmFkZChsZWFkSWQpOw0KDQogICAgICAgICAgICBMb2dnZXIuaW5mbygn6IGa5YWJ6L+b57q/5bey5qCH6K6w5Li65aSE55CGJywgew0KICAgICAgICAgICAgICAgIGxlYWRJZCwNCiAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICBjb3Vyc2VOYW1lLA0KICAgICAgICAgICAgICAgIHRvdGFsUHJvY2Vzc2VkOiB0aGlzLnByb2Nlc3NlZExlYWRzLnNpemUNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAvLyDmuIXnkIbov4fmnJ/nvJPlrZgNCiAgICAgICAgICAgIHRoaXMuY2xlYW51cEV4cGlyZWRDYWNoZSgpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnlJ/miJDogZrlhYnov5vnur/lm57lpI3lhoXlrrkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY291cnNlTmFtZSDor77nqIvlkI3np7ANCiAgICAgICAgICogQHBhcmFtIHtib29sZWFufSBpc0RlZmF1bHROYW1lIOaYr+WQpuS9v+eUqOS6hum7mOiupOivvueoi+WQjeensA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2VuZXJhdGVSZXBseSh1c2VyTmFtZSwgY291cnNlTmFtZSwgaXNEZWZhdWx0TmFtZSA9IGZhbHNlKSB7DQogICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGlnaHRMZWFkVGVtcGxhdGUnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5zcG90bGlnaHRMZWFkVGVtcGxhdGUpOw0KDQogICAgICAgICAgICAvLyDnoa7kv53or77nqIvlkI3np7DmnInmlYjvvIzlpoLmnpzml6DmlYjliJnkvb/nlKjpu5jorqTlgLwNCiAgICAgICAgICAgIGxldCBmaW5hbENvdXJzZU5hbWUgPSBjb3Vyc2VOYW1lOw0KICAgICAgICAgICAgaWYgKCFjb3Vyc2VOYW1lIHx8ICF0aGlzLnZhbGlkYXRlQ291cnNlTmFtZShjb3Vyc2VOYW1lKSkgew0KICAgICAgICAgICAgICAgIGZpbmFsQ291cnNlTmFtZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGln",
        "aHREZWZhdWx0Q291cnNlTmFtZScsICfmiJHku6znmoTor77nqIsnKTsNCiAgICAgICAgICAgICAgICBpc0RlZmF1bHROYW1lID0gdHJ1ZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgcmVwbHkgPSB0ZW1wbGF0ZQ0KICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9ce+eUqOaIt+aYteensFx9L2csIHVzZXJOYW1lIHx8ICfmnIvlj4snKQ0KICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9ce+ivvueoi+WQjeensFx9L2csIGZpbmFsQ291cnNlTmFtZSkNCiAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFxuL2csICdcbicpOyAvLyDlpITnkIbmjaLooYznrKYNCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfnlJ/miJDogZrlhYnov5vnur/lm57lpI0nLCB7DQogICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgb3JpZ2luYWxDb3Vyc2VOYW1lOiBjb3Vyc2VOYW1lLA0KICAgICAgICAgICAgICAgIGZpbmFsQ291cnNlTmFtZSwNCiAgICAgICAgICAgICAgICBpc0RlZmF1bHROYW1lLA0KICAgICAgICAgICAgICAgIHJlcGx5TGVuZ3RoOiByZXBseS5sZW5ndGgNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICByZXR1cm4gcmVwbHk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuiBmuWFiei/m+e6v+a2iOaBrw0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IG1lc3NhZ2VFbGVtZW50IOa2iOaBr+WFg+e0oA0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gdXNlckluZm8g55So5oi35L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKbmiJDlip/lpITnkIYNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHByb2Nlc3NTcG90bGlnaHRMZWFkKG1lc3NhZ2VFbGVtZW50LCB1c2VySW5mbykgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGlnaHRMZWFkRW5hYmxlZCcsIGZhbHNlKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+iBmuWFiei/m+e6v+WKn+iDveacquWQr+eUqCcpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgbGVhZENvbnRlbnQgPSB0aGlzLmV4dHJhY3RTcG90bGlnaHRMZWFkQ29udGVudChtZXNzYWdlRWxlbWVudCk7DQogICAgICAgICAgICAgICAgaWYgKCFsZWFkQ29udGVudCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+iBmuWFiei/m+e6v+WGheWuueaPkOWPluWksei0pScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgeyBjb3Vyc2VOYW1lLCBpc0RlZmF1bHROYW1lIH0gPSBsZWFkQ29udGVudDsNCiAgICAgICAgICAgICAgICBjb25zdCB1c2VyTmFtZSA9IHVzZXJJbmZvLnVzZXJOYW1lOw0K",
        "DQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5bey5aSE55CG6L+HDQogICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNMZWFkUHJvY2Vzc2VkKHVzZXJOYW1lLCBjb3Vyc2VOYW1lKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6IGa5YWJ6L+b57q/5bey5aSE55CG6L+H77yM6Lez6L+HJywgeyB1c2VyTmFtZSwgY291cnNlTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOagh+iusOS4uuW3suWkhOeQhg0KICAgICAgICAgICAgICAgIHRoaXMubWFya0xlYWRBc1Byb2Nlc3NlZCh1c2VyTmFtZSwgY291cnNlTmFtZSk7DQoNCiAgICAgICAgICAgICAgICAvLyDnlJ/miJDlm57lpI3lhoXlrrkNCiAgICAgICAgICAgICAgICBjb25zdCByZXBseVRleHQgPSB0aGlzLmdlbmVyYXRlUmVwbHkodXNlck5hbWUsIGNvdXJzZU5hbWUsIGlzRGVmYXVsdE5hbWUpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W8gOWni+WPkemAgeiBmuWFiei/m+e6v+WbnuWkjScsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIGNvdXJzZU5hbWUsDQogICAgICAgICAgICAgICAgICAgIHJlcGx5TGVuZ3RoOiByZXBseVRleHQubGVuZ3RoDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDlj5HpgIHlm57lpI0NCiAgICAgICAgICAgICAgICBjb25zdCBzZW50ID0gYXdhaXQgTWVzc2FnZVByb2Nlc3Nvci5zZW5kUmVwbHkocmVwbHlUZXh0KTsNCg0KICAgICAgICAgICAgICAgIGlmIChzZW50KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg6IGa5YWJ6L+b57q/5Zue5aSN5Y+R6YCB5oiQ5YqfJywgeyB1c2VyTmFtZSwgY291cnNlTmFtZSB9KTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+KdjCDogZrlhYnov5vnur/lm57lpI3lj5HpgIHlpLHotKUnLCB7IHVzZXJOYW1lLCBjb3Vyc2VOYW1lIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiBzZW50Ow0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5aSE55CG6IGa5YWJ6L+b57q/5pe25Y+R55Sf6ZSZ6K+vJywgew0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvPy51c2VyTmFtZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF55CG6L+H5pyf57yT5a2YDQogICAgICAgICAqLw0KICAgICAgICBjbGVhbnVwRXhwaXJlZENhY2hlKCkgew0KICAgICAgICAgICAg",
        "aWYgKHRoaXMucHJvY2Vzc2VkTGVhZHMuc2l6ZSA+IHRoaXMubWF4Q2FjaGVTaXplKSB7DQogICAgICAgICAgICAgICAgLy8g566A5Y2V55qETFJV562W55Wl77ya5riF55CG5LiA5Y2K57yT5a2YDQogICAgICAgICAgICAgICAgY29uc3QgdG9EZWxldGUgPSBBcnJheS5mcm9tKHRoaXMucHJvY2Vzc2VkTGVhZHMpLnNsaWNlKDAsIE1hdGguZmxvb3IodGhpcy5tYXhDYWNoZVNpemUgLyAyKSk7DQogICAgICAgICAgICAgICAgdG9EZWxldGUuZm9yRWFjaChsZWFkSWQgPT4gdGhpcy5wcm9jZXNzZWRMZWFkcy5kZWxldGUobGVhZElkKSk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a4heeQhuiBmuWFiei/m+e6v+e8k+WtmCcsIHsNCiAgICAgICAgICAgICAgICAgICAgZGVsZXRlZDogdG9EZWxldGUubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICByZW1haW5pbmc6IHRoaXMucHJvY2Vzc2VkTGVhZHMuc2l6ZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5blpITnkIbnu5/orqHkv6Hmga8NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldFN0YXRzKCkgew0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICBwcm9jZXNzZWRDb3VudDogdGhpcy5wcm9jZXNzZWRMZWFkcy5zaXplLA0KICAgICAgICAgICAgICAgIG1heENhY2hlU2l6ZTogdGhpcy5tYXhDYWNoZVNpemUsDQogICAgICAgICAgICAgICAgZW5hYmxlZDogQ29uZmlnTWFuYWdlci5nZXQoJ3Nwb3RsaWdodExlYWRFbmFibGVkJywgZmFsc2UpDQogICAgICAgICAgICB9Ow0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g5raI5oGv5Y676YeN566h55CG5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBNZXNzYWdlRGVkdXBsaWNhdG9yID0gew0KICAgICAgICBwcm9jZXNzZWRNZXNzYWdlczogbmV3IE1hcCgpLA0KICAgICAgICBjb250ZW50QmFzZWRDYWNoZTogbmV3IE1hcCgpLCAvLyDmlrDlop7vvJrln7rkuo7lhoXlrrnnmoTnvJPlrZgNCiAgICAgICAgcHJvY2Vzc2luZ01lc3NhZ2VzOiBuZXcgTWFwKCksIC8vIOaWsOWinu+8muato+WcqOWkhOeQhuS4reeahOa2iOaBrw0KICAgICAgICBtYXhDYWNoZVNpemU6IDEwMDAsDQogICAgICAgIGNhY2hlRXhwaXJlVGltZTogMjQgKiA2MCAqIDYwICogMTAwMCwgLy8gMjTlsI/ml7YNCiAgICAgICAgcHJvY2Vzc2luZ1RpbWVvdXQ6IDUgKiA2MCAqIDEwMDAsIC8vIDXliIbpkp/lpITnkIbotoXml7YNCg0KICAgICAgICAvKioNCiAgICAgICAgICog55Sf5oiQ5raI5oGv5YaF5a655ZOI5biMDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb250ZW50IOa2iOaBr+WGheWuuQ0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfQ0K",
        "ICAgICAgICAgKi8NCiAgICAgICAgZ2VuZXJhdGVDb250ZW50SGFzaDogZnVuY3Rpb24oY29udGVudCkgew0KICAgICAgICAgICAgLy8g5a6J5YWo5qOA5p+l77ya56Gu5L+dY29udGVudOaYr+Wtl+espuS4sg0KICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ICE9PSAnc3RyaW5nJykgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdnZW5lcmF0ZUNvbnRlbnRIYXNo5pS25Yiw5peg5pWI5YaF5a65JywgeyBjb250ZW50LCB0eXBlOiB0eXBlb2YgY29udGVudCB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gJzAnOyAvLyDov5Tlm57pu5jorqTlk4jluIzlgLwNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgbGV0IGhhc2ggPSAwOw0KICAgICAgICAgICAgaWYgKGNvbnRlbnQubGVuZ3RoID09PSAwKSByZXR1cm4gaGFzaC50b1N0cmluZygpOw0KICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb250ZW50Lmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICAgICAgY29uc3QgY2hhciA9IGNvbnRlbnQuY2hhckNvZGVBdChpKTsNCiAgICAgICAgICAgICAgICBoYXNoID0gKChoYXNoIDw8IDUpIC0gaGFzaCkgKyBjaGFyOw0KICAgICAgICAgICAgICAgIGhhc2ggPSBoYXNoICYgaGFzaDsgLy8g6L2s5o2i5Li6MzLkvY3mlbTmlbANCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHJldHVybiBNYXRoLmFicyhoYXNoKS50b1N0cmluZygzNik7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOeUn+aIkOa2iOaBr+WUr+S4gOagh+ivhiAtIOaUuei/m+eJiO+8jOWHj+WwkeWvueaXtumXtOaIs+eahOS+nei1lg0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCNDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlQ29udGVudCDmtojmga/lhoXlrrkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRpbWVzdGFtcCDml7bpl7TmiLPvvIjlj6/pgInvvIkNCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIGdlbmVyYXRlTWVzc2FnZUlkOiBmdW5jdGlvbih1c2VyTmFtZSwgbWVzc2FnZUNvbnRlbnQsIHRpbWVzdGFtcCA9ICcnKSB7DQogICAgICAgICAgICAvLyDkvJjlhYjkvb/nlKjlhoXlrrnlk4jluIzvvIzml7bpl7TmiLPkvZzkuLrovoXliqkNCiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnRIYXNoID0gdGhpcy5nZW5lcmF0ZUNvbnRlbnRIYXNoKG1lc3NhZ2VDb250ZW50KTsNCiAgICAgICAgICAgIGNvbnN0IHVzZXJIYXNoID0gdGhpcy5nZW5lcmF0ZUNvbnRlbnRIYXNoKHVzZXJOYW1lKTsNCg0KICAgICAgICAgICAgLy8g5aaC5p6c5pyJ5pyJ5pWI55qE5pe26Ze05oiz77yM5L2/55So5a6D77yb5ZCm5YiZ5Y+q5L2/55So5YaF5a655ZOI5biMDQogICAgICAgICAgICBpZiAodGltZXN0YW1wICYmIHRpbWVzdGFtcCAhPT0gJ3VuZGVmaW5lZCcgJiYgIXRpbWVzdGFtcC5pbmNsdWRlcygnbmV3IERhdGUnKSkg",
        "ew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBgJHt1c2VySGFzaH06JHtjb250ZW50SGFzaH06JHt0aW1lc3RhbXB9YDsNCiAgICAgICAgICAgICAgICByZXR1cm4gYnRvYShlbmNvZGVVUklDb21wb25lbnQoY29udGVudCkpLnJlcGxhY2UoL1srLz1dL2csICcnKTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgLy8g5LuF5Z+65LqO55So5oi35ZKM5YaF5a6555qE5qCH6K+G56ymDQogICAgICAgICAgICAgICAgY29uc3QgY29udGVudCA9IGAke3VzZXJIYXNofToke2NvbnRlbnRIYXNofWA7DQogICAgICAgICAgICAgICAgcmV0dXJuIGJ0b2EoZW5jb2RlVVJJQ29tcG9uZW50KGNvbnRlbnQpKS5yZXBsYWNlKC9bKy89XS9nLCAnJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpea2iOaBr+aYr+WQpuW3suWkhOeQhiAtIOWinuW8uueJiO+8jOaUr+aMgeWGheWuuee6p+WIq+WOu+mHjQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZUlkIOa2iOaBr0lEDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI3vvIjlj6/pgInvvIkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VDb250ZW50IOa2iOaBr+WGheWuue+8iOWPr+mAie+8iQ0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGlzUHJvY2Vzc2VkOiBmdW5jdGlvbihtZXNzYWdlSWQsIHVzZXJOYW1lID0gJycsIG1lc3NhZ2VDb250ZW50ID0gJycpIHsNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5byA5aeL5Y676YeN5qOA5p+lJywgew0KICAgICAgICAgICAgICAgIG1lc3NhZ2VJZDogbWVzc2FnZUlkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICBtZXNzYWdlQ29udGVudDogbWVzc2FnZUNvbnRlbnQuc3Vic3RyaW5nKDAsIDIwKSArIChtZXNzYWdlQ29udGVudC5sZW5ndGggPiAyMCA/ICcuLi4nIDogJycpLA0KICAgICAgICAgICAgICAgIGNhY2hlU2l6ZTogdGhpcy5wcm9jZXNzZWRNZXNzYWdlcy5zaXplLA0KICAgICAgICAgICAgICAgIGNvbnRlbnRDYWNoZVNpemU6IHRoaXMuY29udGVudEJhc2VkQ2FjaGUuc2l6ZSwNCiAgICAgICAgICAgICAgICBwcm9jZXNzaW5nU2l6ZTogdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuc2l6ZQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOmmluWFiOajgOafpeaYr+WQpuato+WcqOWkhOeQhuS4rQ0KICAgICAgICAgICAgY29uc3QgcHJvY2Vzc2luZ1JlY29yZCA9IHRoaXMucHJvY2Vzc2luZ01lc3NhZ2VzLmdldChtZXNzYWdlSWQpOw0KICAgICAgICAgICAgaWYgKHByb2Nlc3NpbmdSZWNvcmQpIHsNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlpITnkIbmmK/lkKbotoXml7YNCiAgICAgICAgICAgICAgICBpZiAoRGF0ZS5ub3coKSAtIHBy",
        "b2Nlc3NpbmdSZWNvcmQudGltZXN0YW1wID4gdGhpcy5wcm9jZXNzaW5nVGltZW91dCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NpbmdNZXNzYWdlcy5kZWxldGUobWVzc2FnZUlkKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+WkhOeQhui2heaXtu+8jOa4heeQhuWkhOeQhuS4reeKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZDogbWVzc2FnZUlkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVvdXRNaW51dGVzOiB0aGlzLnByb2Nlc3NpbmdUaW1lb3V0IC8gKDYwICogMTAwMCkNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfmqsg5raI5oGv5q2j5Zyo5aSE55CG5Lit77yM6Lez6L+HJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUlkOiBtZXNzYWdlSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRlZEF0OiBuZXcgRGF0ZShwcm9jZXNzaW5nUmVjb3JkLnRpbWVzdGFtcCkudG9Mb2NhbGVUaW1lU3RyaW5nKCkNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOyAvLyDmraPlnKjlpITnkIbkuK3vvIzop4bkuLrlt7LlpITnkIYNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOeEtuWQjuajgOafpeeyvuehrueahG1lc3NhZ2VJZA0KICAgICAgICAgICAgY29uc3QgcmVjb3JkID0gdGhpcy5wcm9jZXNzZWRNZXNzYWdlcy5nZXQobWVzc2FnZUlkKTsNCiAgICAgICAgICAgIGlmIChyZWNvcmQpIHsNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbov4fmnJ8NCiAgICAgICAgICAgICAgICBpZiAoRGF0ZS5ub3coKSAtIHJlY29yZC50aW1lc3RhbXAgPiB0aGlzLmNhY2hlRXhwaXJlVGltZSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NlZE1lc3NhZ2VzLmRlbGV0ZShtZXNzYWdlSWQpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a2iOaBr+iusOW9leW3sui/h+acn++8jOWIoOmZpCcsIHsgbWVzc2FnZUlkOiBtZXNzYWdlSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nIH0pOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5raI5oGv5bey5aSE55CG77yI57K+56Gu5Yy56YWN77yJJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUlkOiBtZXNzYWdlSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc2VkQXQ6IG5ldyBEYXRlKHJlY29yZC50aW1lc3RhbXApLnRvTG9jYWxlVGltZVN0cmluZygpDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAg",
        "ICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOWmguaenOaPkOS+m+S6hueUqOaIt+WQjeWSjOa2iOaBr+WGheWuue+8jOi/m+ihjOWGheWuuee6p+WIq+eahOWOu+mHjeajgOafpQ0KICAgICAgICAgICAgaWYgKHVzZXJOYW1lICYmIG1lc3NhZ2VDb250ZW50KSB7DQogICAgICAgICAgICAgICAgY29uc3QgY29udGVudEtleSA9IGAke3VzZXJOYW1lfToke3RoaXMuZ2VuZXJhdGVDb250ZW50SGFzaChtZXNzYWdlQ29udGVudCl9YDsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50UmVjb3JkID0gdGhpcy5jb250ZW50QmFzZWRDYWNoZS5nZXQoY29udGVudEtleSk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WGheWuuee6p+WIq+WOu+mHjeajgOafpScsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudEtleSwNCiAgICAgICAgICAgICAgICAgICAgaGFzUmVjb3JkOiAhIWNvbnRlbnRSZWNvcmQNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIGlmIChjb250ZW50UmVjb3JkKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpui/h+acnw0KICAgICAgICAgICAgICAgICAgICBpZiAoRGF0ZS5ub3coKSAtIGNvbnRlbnRSZWNvcmQudGltZXN0YW1wID4gdGhpcy5jYWNoZUV4cGlyZVRpbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29udGVudEJhc2VkQ2FjaGUuZGVsZXRlKGNvbnRlbnRLZXkpOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflhoXlrrnorrDlvZXlt7Lov4fmnJ/vvIzliKDpmaQnLCB7IGNvbnRlbnRLZXkgfSk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a2iOaBr+W3suWkhOeQhu+8iOWGheWuueWMuemFje+8iScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50S2V5LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yaWdpbmFsTWVzc2FnZUlkOiBjb250ZW50UmVjb3JkLm1lc3NhZ2VJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudE1lc3NhZ2VJZDogbWVzc2FnZUlkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzZWRBdDogbmV3IERhdGUoY29udGVudFJlY29yZC50aW1lc3RhbXApLnRvTG9jYWxlVGltZVN0cmluZygpDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a2iOaBr+acquWkhOeQhu+8jOWPr+S7pee7p+e7rScsIHsNCiAgICAgICAgICAgICAgICBtZXNzYWdl",
        "SWQ6IG1lc3NhZ2VJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgdXNlck5hbWUNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmoIforrDmtojmga/kuLrlt7LlpITnkIYgLSDlop7lvLrniYjvvIzlkIzml7bmm7TmlrDlhoXlrrnnvJPlrZgNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VJZCDmtojmga9JRA0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gbWV0YWRhdGEg5YWD5pWw5o2uDQogICAgICAgICAqLw0KICAgICAgICBtYXJrQXNQcm9jZXNzZWQ6IGZ1bmN0aW9uKG1lc3NhZ2VJZCwgbWV0YWRhdGEgPSB7fSkgew0KICAgICAgICAgICAgLy8g6aaW5YWI5riF55CG5aSE55CG5Lit54q25oCBDQogICAgICAgICAgICB0aGlzLmNsZWFyUHJvY2Vzc2luZyhtZXNzYWdlSWQpOw0KDQogICAgICAgICAgICAvLyDmuIXnkIbov4fmnJ/orrDlvZUNCiAgICAgICAgICAgIHRoaXMuY2xlYW51cEV4cGlyZWRSZWNvcmRzKCk7DQoNCiAgICAgICAgICAgIC8vIOmZkOWItue8k+WtmOWkp+Wwjw0KICAgICAgICAgICAgaWYgKHRoaXMucHJvY2Vzc2VkTWVzc2FnZXMuc2l6ZSA+PSB0aGlzLm1heENhY2hlU2l6ZSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IG9sZGVzdEtleSA9IHRoaXMucHJvY2Vzc2VkTWVzc2FnZXMua2V5cygpLm5leHQoKS52YWx1ZTsNCiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NlZE1lc3NhZ2VzLmRlbGV0ZShvbGRlc3RLZXkpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICAvLyDmoIforrDmtojmga9JROS4uuW3suWkhOeQhg0KICAgICAgICAgICAgdGhpcy5wcm9jZXNzZWRNZXNzYWdlcy5zZXQobWVzc2FnZUlkLCB7DQogICAgICAgICAgICAgICAgdGltZXN0YW1wOiBub3csDQogICAgICAgICAgICAgICAgbWV0YWRhdGENCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAvLyDlpoLmnpzmnInnlKjmiLflkI3lkozmtojmga/lhoXlrrnvvIzkuZ/mt7vliqDliLDlhoXlrrnnvJPlrZgNCiAgICAgICAgICAgIGlmIChtZXRhZGF0YS51c2VyTmFtZSAmJiBtZXRhZGF0YS5tZXNzYWdlQ29udGVudCkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnRLZXkgPSBgJHttZXRhZGF0YS51c2VyTmFtZX06JHt0aGlzLmdlbmVyYXRlQ29udGVudEhhc2gobWV0YWRhdGEubWVzc2FnZUNvbnRlbnQpfWA7DQoNCiAgICAgICAgICAgICAgICAvLyDpmZDliLblhoXlrrnnvJPlrZjlpKflsI8NCiAgICAgICAgICAgICAgICBpZiAodGhpcy5jb250ZW50QmFzZWRDYWNoZS5zaXplID49IHRoaXMubWF4Q2FjaGVTaXplKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG9sZGVzdENvbnRlbnRLZXkgPSB0aGlzLmNvbnRlbnRCYXNlZENhY2hlLmtleXMoKS5uZXh0KCkudmFsdWU7DQogICAgICAg",
        "ICAgICAgICAgICAgIHRoaXMuY29udGVudEJhc2VkQ2FjaGUuZGVsZXRlKG9sZGVzdENvbnRlbnRLZXkpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHRoaXMuY29udGVudEJhc2VkQ2FjaGUuc2V0KGNvbnRlbnRLZXksIHsNCiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBub3csDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZDogbWVzc2FnZUlkLA0KICAgICAgICAgICAgICAgICAgICBtZXRhZGF0YQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmtojmga/lt7LmoIforrDkuLrlt7LlpITnkIbvvIjlkKvlhoXlrrnnvJPlrZjvvIknLCB7DQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VJZCwNCiAgICAgICAgICAgICAgICAgICAgY29udGVudEtleSwNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IG1ldGFkYXRhLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBjb250ZW50TGVuZ3RoOiBtZXRhZGF0YS5tZXNzYWdlQ29udGVudD8ubGVuZ3RoIHx8IDANCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmtojmga/lt7LmoIforrDkuLrlt7LlpITnkIYnLCB7IG1lc3NhZ2VJZCwgbWV0YWRhdGEgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOagh+iusOa2iOaBr+S4uuWkhOeQhuS4reeKtuaAgQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZUlkIOa2iOaBr0lEDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBtZXRhZGF0YSDlhYPmlbDmja4NCiAgICAgICAgICovDQogICAgICAgIG1hcmtBc1Byb2Nlc3Npbmc6IGZ1bmN0aW9uKG1lc3NhZ2VJZCwgbWV0YWRhdGEgPSB7fSkgew0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgLy8g5riF55CG6L+H5pyf55qE5aSE55CG5Lit6K6w5b2VDQogICAgICAgICAgICB0aGlzLmNsZWFudXBFeHBpcmVkUHJvY2Vzc2luZygpOw0KDQogICAgICAgICAgICB0aGlzLnByb2Nlc3NpbmdNZXNzYWdlcy5zZXQobWVzc2FnZUlkLCB7DQogICAgICAgICAgICAgICAgdGltZXN0YW1wOiBub3csDQogICAgICAgICAgICAgICAgbWV0YWRhdGENCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a2iOaBr+W3suagh+iusOS4uuWkhOeQhuS4rScsIHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlSWQ6IG1lc3NhZ2VJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgdXNlck5hbWU6IG1ldGFkYXRhLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgIHByb2Nlc3NpbmdDb3VudDogdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuc2l6ZQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heeQhuWkhOeQhuS4",
        "reeKtuaAgQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZUlkIOa2iOaBr0lEDQogICAgICAgICAqLw0KICAgICAgICBjbGVhclByb2Nlc3Npbmc6IGZ1bmN0aW9uKG1lc3NhZ2VJZCkgew0KICAgICAgICAgICAgY29uc3QgcmVtb3ZlZCA9IHRoaXMucHJvY2Vzc2luZ01lc3NhZ2VzLmRlbGV0ZShtZXNzYWdlSWQpOw0KICAgICAgICAgICAgaWYgKHJlbW92ZWQpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a4heeQhuWkhOeQhuS4reeKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUlkOiBtZXNzYWdlSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdQcm9jZXNzaW5nOiB0aGlzLnByb2Nlc3NpbmdNZXNzYWdlcy5zaXplDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heeQhui/h+acn+eahOWkhOeQhuS4reiusOW9lQ0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYW51cEV4cGlyZWRQcm9jZXNzaW5nOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBjb25zdCBleHBpcmVkS2V5cyA9IFtdOw0KDQogICAgICAgICAgICB0aGlzLnByb2Nlc3NpbmdNZXNzYWdlcy5mb3JFYWNoKChyZWNvcmQsIGtleSkgPT4gew0KICAgICAgICAgICAgICAgIGlmIChub3cgLSByZWNvcmQudGltZXN0YW1wID4gdGhpcy5wcm9jZXNzaW5nVGltZW91dCkgew0KICAgICAgICAgICAgICAgICAgICBleHBpcmVkS2V5cy5wdXNoKGtleSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIGV4cGlyZWRLZXlzLmZvckVhY2goa2V5ID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NpbmdNZXNzYWdlcy5kZWxldGUoa2V5KTsNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBpZiAoZXhwaXJlZEtleXMubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmuIXnkIbov4fmnJ/nmoTlpITnkIbkuK3orrDlvZUnLCB7DQogICAgICAgICAgICAgICAgICAgIGV4cGlyZWRDb3VudDogZXhwaXJlZEtleXMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICB0aW1lb3V0TWludXRlczogdGhpcy5wcm9jZXNzaW5nVGltZW91dCAvICg2MCAqIDEwMDApDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWOn+WtkOaAp+ajgOafpeW5tuagh+iusOS4uuWkhOeQhuS4rSAtIOmYsuatouernuS6ieadoeS7tg0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZUlkIOa2iOaBr0lEDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VDb250ZW50IOa2iOaB",
        "r+WGheWuuQ0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gbWV0YWRhdGEg5YWD5pWw5o2uDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSB0cnVl6KGo56S65Y+v5Lul5aSE55CG77yMZmFsc2XooajnpLrlt7LooqvlpITnkIbmiJbmraPlnKjlpITnkIbkuK0NCiAgICAgICAgICovDQogICAgICAgIGNoZWNrQW5kTWFya0FzUHJvY2Vzc2luZzogZnVuY3Rpb24obWVzc2FnZUlkLCB1c2VyTmFtZSA9ICcnLCBtZXNzYWdlQ29udGVudCA9ICcnLCBtZXRhZGF0YSA9IHt9KSB7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+UjSDljp/lrZDmgKfmo4Dmn6XlubbmoIforrAnLCB7DQogICAgICAgICAgICAgICAgbWVzc2FnZUlkOiBtZXNzYWdlSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgIG1lc3NhZ2VDb250ZW50OiBtZXNzYWdlQ29udGVudC5zdWJzdHJpbmcoMCwgMjApICsgKG1lc3NhZ2VDb250ZW50Lmxlbmd0aCA+IDIwID8gJy4uLicgOiAnJyksDQogICAgICAgICAgICAgICAgY2FjaGVTaXplOiB0aGlzLnByb2Nlc3NlZE1lc3NhZ2VzLnNpemUsDQogICAgICAgICAgICAgICAgY29udGVudENhY2hlU2l6ZTogdGhpcy5jb250ZW50QmFzZWRDYWNoZS5zaXplLA0KICAgICAgICAgICAgICAgIHByb2Nlc3NpbmdTaXplOiB0aGlzLnByb2Nlc3NpbmdNZXNzYWdlcy5zaXplDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g5Y6f5a2Q5oCn5pON5L2c77ya5YWI5qOA5p+l77yM5aaC5p6c5pyq5aSE55CG5YiZ56uL5Y2z5qCH6K6wDQogICAgICAgICAgICBpZiAodGhpcy5pc1Byb2Nlc3NlZChtZXNzYWdlSWQsIHVzZXJOYW1lLCBtZXNzYWdlQ29udGVudCkpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pqg77iPIOa2iOaBr+W3suWkhOeQhuaIluato+WcqOWkhOeQhuS4re+8jOi3s+i/hycsIHsNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUlkOiBtZXNzYWdlSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8g5LiN6IO95aSE55CGDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOeri+WNs+agh+iusOS4uuWkhOeQhuS4rQ0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIHRoaXMucHJvY2Vzc2luZ01lc3NhZ2VzLnNldChtZXNzYWdlSWQsIHsNCiAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG5vdywNCiAgICAgICAgICAgICAgICBtZXRhZGF0YQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg5raI5oGv5Y6f5a2Q5oCn5qCH6K6w5Li65aSE55CG5LitJywgew0KICAgICAgICAgICAgICAgIG1lc3NhZ2VJZDogbWVzc2FnZUlkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAg",
        "ICAgICAgICAgICAgICB1c2VyTmFtZTogbWV0YWRhdGEudXNlck5hbWUsDQogICAgICAgICAgICAgICAgcHJvY2Vzc2luZ0NvdW50OiB0aGlzLnByb2Nlc3NpbmdNZXNzYWdlcy5zaXplDQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgcmV0dXJuIHRydWU7IC8vIOWPr+S7peWkhOeQhg0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuIXnkIbov4fmnJ/orrDlvZUgLSDlop7lvLrniYjvvIzlkIzml7bmuIXnkIblhoXlrrnnvJPlrZgNCiAgICAgICAgICovDQogICAgICAgIGNsZWFudXBFeHBpcmVkUmVjb3JkczogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgY29uc3QgZXhwaXJlZEtleXMgPSBbXTsNCiAgICAgICAgICAgIGNvbnN0IGV4cGlyZWRDb250ZW50S2V5cyA9IFtdOw0KDQogICAgICAgICAgICAvLyDmuIXnkIbkuLvmtojmga/nvJPlrZgNCiAgICAgICAgICAgIHRoaXMucHJvY2Vzc2VkTWVzc2FnZXMuZm9yRWFjaCgocmVjb3JkLCBrZXkpID0+IHsNCiAgICAgICAgICAgICAgICBpZiAobm93IC0gcmVjb3JkLnRpbWVzdGFtcCA+IHRoaXMuY2FjaGVFeHBpcmVUaW1lKSB7DQogICAgICAgICAgICAgICAgICAgIGV4cGlyZWRLZXlzLnB1c2goa2V5KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgZXhwaXJlZEtleXMuZm9yRWFjaChrZXkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc2VkTWVzc2FnZXMuZGVsZXRlKGtleSk7DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g5riF55CG5YaF5a6557yT5a2YDQogICAgICAgICAgICB0aGlzLmNvbnRlbnRCYXNlZENhY2hlLmZvckVhY2goKHJlY29yZCwga2V5KSA9PiB7DQogICAgICAgICAgICAgICAgaWYgKG5vdyAtIHJlY29yZC50aW1lc3RhbXAgPiB0aGlzLmNhY2hlRXhwaXJlVGltZSkgew0KICAgICAgICAgICAgICAgICAgICBleHBpcmVkQ29udGVudEtleXMucHVzaChrZXkpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBleHBpcmVkQ29udGVudEtleXMuZm9yRWFjaChrZXkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMuY29udGVudEJhc2VkQ2FjaGUuZGVsZXRlKGtleSk7DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgaWYgKGV4cGlyZWRLZXlzLmxlbmd0aCA+IDAgfHwgZXhwaXJlZENvbnRlbnRLZXlzLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a4heeQhui/h+acn+a2iOaBr+iusOW9lScsIHsNCiAgICAgICAgICAgICAgICAgICAgZXhwaXJlZE1lc3NhZ2VzOiBleHBpcmVkS2V5cy5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIGV4cGlyZWRDb250ZW50OiBleHBpcmVkQ29udGVudEtleXMubGVuZ3RoDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAg",
        "ICAgLyoqDQogICAgICAgICAqIOiOt+WPluWkhOeQhue7n+iuoSAtIOWinuW8uueJiO+8jOWMheWQq+WGheWuuee8k+WtmOe7n+iuoQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0U3RhdHM6IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICB0b3RhbFByb2Nlc3NlZDogdGhpcy5wcm9jZXNzZWRNZXNzYWdlcy5zaXplLA0KICAgICAgICAgICAgICAgIGNhY2hlU2l6ZTogdGhpcy5wcm9jZXNzZWRNZXNzYWdlcy5zaXplLA0KICAgICAgICAgICAgICAgIGNvbnRlbnRDYWNoZVNpemU6IHRoaXMuY29udGVudEJhc2VkQ2FjaGUuc2l6ZSwNCiAgICAgICAgICAgICAgICBwcm9jZXNzaW5nU2l6ZTogdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuc2l6ZSwNCiAgICAgICAgICAgICAgICBtYXhDYWNoZVNpemU6IHRoaXMubWF4Q2FjaGVTaXplLA0KICAgICAgICAgICAgICAgIGNhY2hlVXNhZ2U6IGAkeyh0aGlzLnByb2Nlc3NlZE1lc3NhZ2VzLnNpemUgLyB0aGlzLm1heENhY2hlU2l6ZSAqIDEwMCkudG9GaXhlZCgxKX0lYCwNCiAgICAgICAgICAgICAgICBjb250ZW50Q2FjaGVVc2FnZTogYCR7KHRoaXMuY29udGVudEJhc2VkQ2FjaGUuc2l6ZSAvIHRoaXMubWF4Q2FjaGVTaXplICogMTAwKS50b0ZpeGVkKDEpfSVgLA0KICAgICAgICAgICAgICAgIHByb2Nlc3NpbmdDb3VudDogdGhpcy5wcm9jZXNzaW5nTWVzc2FnZXMuc2l6ZQ0KICAgICAgICAgICAgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF56m65omA5pyJ6K6w5b2VIC0g5aKe5by654mI77yM5ZCM5pe25riF56m65YaF5a6557yT5a2YDQogICAgICAgICAqLw0KICAgICAgICBjbGVhcjogZnVuY3Rpb24oKSB7DQogICAgICAgICAgICBjb25zdCBtZXNzYWdlQ291bnQgPSB0aGlzLnByb2Nlc3NlZE1lc3NhZ2VzLnNpemU7DQogICAgICAgICAgICBjb25zdCBjb250ZW50Q291bnQgPSB0aGlzLmNvbnRlbnRCYXNlZENhY2hlLnNpemU7DQogICAgICAgICAgICBjb25zdCBwcm9jZXNzaW5nQ291bnQgPSB0aGlzLnByb2Nlc3NpbmdNZXNzYWdlcy5zaXplOw0KDQogICAgICAgICAgICB0aGlzLnByb2Nlc3NlZE1lc3NhZ2VzLmNsZWFyKCk7DQogICAgICAgICAgICB0aGlzLmNvbnRlbnRCYXNlZENhY2hlLmNsZWFyKCk7DQogICAgICAgICAgICB0aGlzLnByb2Nlc3NpbmdNZXNzYWdlcy5jbGVhcigpOw0KDQogICAgICAgICAgICBMb2dnZXIuaW5mbygn5raI5oGv5Y676YeN6K6w5b2V5bey5riF56m6Jywgew0KICAgICAgICAgICAgICAgIGNsZWFyZWRNZXNzYWdlczogbWVzc2FnZUNvdW50LA0KICAgICAgICAgICAgICAgIGNsZWFyZWRDb250ZW50OiBjb250ZW50Q291bnQsDQogICAgICAgICAgICAgICAgY2xlYXJlZFByb2Nlc3Npbmc6IHByb2Nlc3NpbmdDb3VudA0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09",
        "PT09PT09PT09PT09PT09PT0NCiAgICAvLyDpu5HlkI3ljZXnrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IEJsYWNrbGlzdE1hbmFnZXIgPSB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiDliJ3lp4vljJbpu5HlkI3ljZXnrqHnkIblmagNCiAgICAgICAgICovDQogICAgICAgIGluaXQoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOehruS/nem7keWQjeWNlemFjee9rumhueWtmOWcqA0KICAgICAgICAgICAgICAgIGlmICghQ29uZmlnTWFuYWdlci5nZXQoJ2JsYWNrbGlzdCcpKSB7DQogICAgICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdibGFja2xpc3QnLCBbXSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKENvbmZpZ01hbmFnZXIuZ2V0KCdibGFja2xpc3RFbmFibGVkJykgPT09IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2JsYWNrbGlzdEVuYWJsZWQnLCB0cnVlKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoQ29uZmlnTWFuYWdlci5nZXQoJ2F1dG9EZXRlY3RCbG9ja2VkJykgPT09IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2F1dG9EZXRlY3RCbG9ja2VkJywgdHJ1ZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfmqsg6buR5ZCN5Y2V566h55CG5Zmo5Yid5aeL5YyW5a6M5oiQJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6buR5ZCN5Y2V566h55CG5Zmo5Yid5aeL5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5re75Yqg55So5oi35Yiw6buR5ZCN5Y2VDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VySWQg55So5oi3SUQNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gcmVhc29uIOa3u+WKoOWOn+WboA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc291cmNlIOadpea6kOaPj+i/sA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5re75Yqg5oiQ5YqfDQogICAgICAgICAqLw0KICAgICAgICBhZGQodXNlcklkLCB1c2VyTmFtZSwgcmVhc29uID0gJ21hbnVhbCcsIHNvdXJjZSA9ICfmiYvliqjmt7vliqAnKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghdXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmt7vliqDpu5HlkI3ljZXlpLHotKXvvJrnlKjmiLdJROS4uuepuicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAg",
        "ICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6I635Y+W5b2T5YmN6buR5ZCN5Y2VDQogICAgICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0ID0gdGhpcy5nZXRBbGwoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuW3suWtmOWcqA0KICAgICAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nSW5kZXggPSBibGFja2xpc3QuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS51c2VySWQgPT09IHVzZXJJZCk7DQogICAgICAgICAgICAgICAgaWYgKGV4aXN0aW5nSW5kZXggPj0gMCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eUqOaIt+W3suWcqOm7keWQjeWNleS4rScsIHsgdXNlcklkLCB1c2VyTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7IC8vIOW3suWtmOWcqOinhuS4uua3u+WKoOaIkOWKnw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOa3u+WKoOaWsOadoeebrg0KICAgICAgICAgICAgICAgIGNvbnN0IG5ld0VudHJ5ID0gew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyTmFtZSB8fCAn5pyq55+l55So5oi3JywNCiAgICAgICAgICAgICAgICAgICAgYWRkZWRBdDogRGF0ZS5ub3coKSwNCiAgICAgICAgICAgICAgICAgICAgcmVhc29uLA0KICAgICAgICAgICAgICAgICAgICBzb3VyY2UNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgYmxhY2tsaXN0LnB1c2gobmV3RW50cnkpOw0KDQogICAgICAgICAgICAgICAgLy8g5L+d5a2Y5pu05paw5ZCO55qE6buR5ZCN5Y2VDQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2JsYWNrbGlzdCcsIGJsYWNrbGlzdCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+aqyDnlKjmiLflt7Lmt7vliqDliLDpu5HlkI3ljZUnLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIHJlYXNvbiwNCiAgICAgICAgICAgICAgICAgICAgdG90YWw6IGJsYWNrbGlzdC5sZW5ndGgNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmt7vliqDpu5HlkI3ljZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5LuO6buR5ZCN5Y2V56e76Zmk55So5oi3DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VySWQg55So5oi3SUQNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuenu+mZpOaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgcmVtb3ZlKHVzZXJJZCkgew0KICAg",
        "ICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJZCkgcmV0dXJuIGZhbHNlOw0KDQogICAgICAgICAgICAgICAgLy8g6I635Y+W5b2T5YmN6buR5ZCN5Y2VDQogICAgICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0ID0gdGhpcy5nZXRBbGwoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOi/h+a7pOaOieimgeenu+mZpOeahOeUqOaItw0KICAgICAgICAgICAgICAgIGNvbnN0IG5ld0JsYWNrbGlzdCA9IGJsYWNrbGlzdC5maWx0ZXIoaXRlbSA9PiBpdGVtLnVzZXJJZCAhPT0gdXNlcklkKTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuacieWPmOWMlg0KICAgICAgICAgICAgICAgIGlmIChuZXdCbGFja2xpc3QubGVuZ3RoID09PSBibGFja2xpc3QubGVuZ3RoKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn55So5oi35LiN5Zyo6buR5ZCN5Y2V5LitJywgeyB1c2VySWQgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkv53lrZjmm7TmlrDlkI7nmoTpu5HlkI3ljZUNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnYmxhY2tsaXN0JywgbmV3QmxhY2tsaXN0KTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg55So5oi35bey5LuO6buR5ZCN5Y2V56e76ZmkJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZzogbmV3QmxhY2tsaXN0Lmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+enu+mZpOm7keWQjeWNleWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XnlKjmiLfmmK/lkKblnKjpu5HlkI3ljZXkuK0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCDnlKjmiLdJRA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5Zyo6buR5ZCN5Y2V5LitDQogICAgICAgICAqLw0KICAgICAgICBpc0JsYWNrbGlzdGVkKHVzZXJJZCkgew0KICAgICAgICAgICAgaWYgKCF1c2VySWQgfHwgIUNvbmZpZ01hbmFnZXIuZ2V0KCdibGFja2xpc3RFbmFibGVkJywgdHJ1ZSkpIHJldHVybiBmYWxzZTsNCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBibGFja2xpc3QgPSB0aGlzLmdldEFsbCgpOw0KICAgICAgICAgICAgICAgIHJldHVybiBibGFja2xpc3Quc29tZShpdGVtID0+IGl0ZW0udXNlcklkID09PSB1c2VySWQpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dn",
        "ZXIuZXJyb3IoJ+ajgOafpem7keWQjeWNleWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyDlh7rplJnml7bpu5jorqTkuI3mi6bmiKoNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5omA5pyJ6buR5ZCN5Y2V55So5oi3DQogICAgICAgICAqIEByZXR1cm5zIHtBcnJheX0g6buR5ZCN5Y2V5YiX6KGoDQogICAgICAgICAqLw0KICAgICAgICBnZXRBbGwoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHJldHVybiBDb25maWdNYW5hZ2VyLmdldCgnYmxhY2tsaXN0JywgW10pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+iOt+WPlum7keWQjeWNleWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuIXnqbrpu5HlkI3ljZUNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpua4heepuuaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYXIoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvdW50ID0gdGhpcy5nZXRBbGwoKS5sZW5ndGg7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2JsYWNrbGlzdCcsIFtdKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+Xke+4jyDpu5HlkI3ljZXlt7LmuIXnqbonLCB7IGNsZWFyZWRDb3VudDogY291bnQgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5riF56m66buR5ZCN5Y2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWvvOWFpem7keWQjeWNleaVsOaNrg0KICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBkYXRhIOm7keWQjeWNleaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5a+85YWl5oiQ5YqfDQogICAgICAgICAqLw0KICAgICAgICBpbXBvcnQoZGF0YSkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoZGF0YSkpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfmlbDmja7moLzlvI/ml6DmlYgnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDpqozor4HmlbDmja7moLzlvI8NCiAgICAgICAgICAgICAgICBjb25zdCB2YWxpZERhdGEgPSBkYXRhLmZpbHRlcihpdGVtID0+DQogICAgICAgICAgICAg",
        "ICAgICAgIGl0ZW0gJiYgdHlwZW9mIGl0ZW0gPT09ICdvYmplY3QnICYmIGl0ZW0udXNlcklkDQogICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdibGFja2xpc3QnLCB2YWxpZERhdGEpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5OlIOm7keWQjeWNleaVsOaNruWvvOWFpeaIkOWKnycsIHsgY291bnQ6IHZhbGlkRGF0YS5sZW5ndGggfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5a+85YWl6buR5ZCN5Y2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWvvOWHuum7keWQjeWNleaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9IOm7keWQjeWNleaVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgZXhwb3J0KCkgew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0QWxsKCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPlum7keWQjeWNlee7n+iuoeS/oeaBrw0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDnu5/orqHkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIGdldFN0YXRzKCkgew0KICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0ID0gdGhpcy5nZXRBbGwoKTsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBjb25zdCBvbmVEYXkgPSAyNCAqIDYwICogNjAgKiAxMDAwOw0KDQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIHRvdGFsOiBibGFja2xpc3QubGVuZ3RoLA0KICAgICAgICAgICAgICAgIG1hbnVhbDogYmxhY2tsaXN0LmZpbHRlcihpdGVtID0+IGl0ZW0ucmVhc29uID09PSAnbWFudWFsJykubGVuZ3RoLA0KICAgICAgICAgICAgICAgIGF1dG9CbG9ja2VkOiBibGFja2xpc3QuZmlsdGVyKGl0ZW0gPT4gaXRlbS5yZWFzb24gPT09ICdhdXRvX2Jsb2NrZWQnKS5sZW5ndGgsDQogICAgICAgICAgICAgICAgcmVjZW50bHlBZGRlZDogYmxhY2tsaXN0LmZpbHRlcihpdGVtID0+IG5vdyAtIGl0ZW0uYWRkZWRBdCA8IG9uZURheSkubGVuZ3RoDQogICAgICAgICAgICB9Ow0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g6KKr5ouJ6buR5qOA5rWL5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBCbG9ja2VkVXNlckRldGVjdG9yID0gew0KICAgICAgICBvYnNlcnZlcjogbnVsbCwNCiAgICAgICAgcHJvY2Vzc2VkVG9hc3RzOiBuZXcgU2V0KCksIC8vIOmYsuatoumHjeWkjeWkhOeQhuWQjOS4gOS4quaPkOekug0KICAgICAgICBs",
        "YXN0UHJvY2Vzc1RpbWU6IDAsIC8vIOmYsuaKluacuuWItg0KICAgICAgICBkZWJvdW5jZURlbGF5OiAxMDAwLCAvLyAx56eS6Ziy5oqWDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIneWni+WMluajgOa1i+WZqA0KICAgICAgICAgKi8NCiAgICAgICAgaW5pdCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMub2JzZXJ2ZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5vYnNlcnZlci5kaXNjb25uZWN0KCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5Yib5bu6TXV0YXRpb25PYnNlcnZlcg0KICAgICAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcih0aGlzLmhhbmRsZU11dGF0aW9ucy5iaW5kKHRoaXMpKTsNCg0KICAgICAgICAgICAgICAgIC8vIOW8gOWni+ebkeWQrA0KICAgICAgICAgICAgICAgIHRoaXMub2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudC5ib2R5LCB7DQogICAgICAgICAgICAgICAgICAgIGNoaWxkTGlzdDogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgc3VidHJlZTogdHJ1ZQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CfkYHvuI8g6KKr5ouJ6buR5qOA5rWL5Zmo5bey5Yid5aeL5YyWJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6KKr5ouJ6buR5qOA5rWL5Zmo5Yid5aeL5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CGRE9N5Y+Y5YyWDQogICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IG11dGF0aW9ucyDlj5jljJborrDlvZUNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZU11dGF0aW9ucyhtdXRhdGlvbnMpIHsNCiAgICAgICAgICAgIGlmICghQ29uZmlnTWFuYWdlci5nZXQoJ2F1dG9EZXRlY3RCbG9ja2VkJywgdHJ1ZSkpIHJldHVybjsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCBtdXRhdGlvbiBvZiBtdXRhdGlvbnMpIHsNCiAgICAgICAgICAgICAgICBpZiAobXV0YXRpb24udHlwZSA9PT0gJ2NoaWxkTGlzdCcpIHsNCiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBub2RlIG9mIG11dGF0aW9uLmFkZGVkTm9kZXMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlLm5vZGVUeXBlID09PSBOb2RlLkVMRU1FTlRfTk9ERSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tCbG9ja2VkTm90aWNlKG5vZGUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XmmK/lkKbmmK/ooqvmi4npu5Hmj5DnpLoNCiAgICAgICAg",
        "ICogQHBhcmFtIHtFbGVtZW50fSBub2RlIERPTeiKgueCuQ0KICAgICAgICAgKi8NCiAgICAgICAgY2hlY2tCbG9ja2VkTm90aWNlKG5vZGUpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5qOA5p+l6Ieq6Lqr5piv5ZCm5piv5o+Q56S65YWD57SgDQogICAgICAgICAgICAgICAgaWYgKG5vZGUuY2xhc3NMaXN0ICYmIG5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKCdkLXRvYXN0LW5vdGljZScpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+UjSDlj5HnjrB0b2FzdOaPkOekuuWFg+e0oCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogbm9kZS5jbGFzc05hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBub2RlLnRleHRDb250ZW50DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NUb2FzdE5vdGljZShub2RlKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlrZDlhYPntKDkuK3nmoTmj5DnpLoNCiAgICAgICAgICAgICAgICBjb25zdCBub3RpY2VzID0gbm9kZS5xdWVyeVNlbGVjdG9yQWxsKCcuZC10b2FzdC1ub3RpY2UnKTsNCiAgICAgICAgICAgICAgICBpZiAobm90aWNlcy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+UjSDlj5HnjrDlrZDlhYPntKDkuK3nmoR0b2FzdOaPkOekuicsIHsgY291bnQ6IG5vdGljZXMubGVuZ3RoIH0pOw0KICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IG5vdGljZSBvZiBub3RpY2VzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NUb2FzdE5vdGljZShub3RpY2UpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5omp5bGV5qOA5rWL77ya5qOA5p+l5YW25LuW5Y+v6IO955qE6ZSZ6K+v5o+Q56S65YWD57SgDQogICAgICAgICAgICAgICAgY29uc3QgZXJyb3JTZWxlY3RvcnMgPSBbDQogICAgICAgICAgICAgICAgICAgICcuZC10b2FzdC1ub3RpY2UnLA0KICAgICAgICAgICAgICAgICAgICAnLnRvYXN0LW5vdGljZScsDQogICAgICAgICAgICAgICAgICAgICcuZXJyb3Itbm90aWNlJywNCiAgICAgICAgICAgICAgICAgICAgJy5tZXNzYWdlLWVycm9yJywNCiAgICAgICAgICAgICAgICAgICAgJ1tjbGFzcyo9InRvYXN0Il0nLA0KICAgICAgICAgICAgICAgICAgICAnW2NsYXNzKj0ibm90aWNlIl0nLA0KICAgICAgICAgICAgICAgICAgICAnW2NsYXNzKj0iZXJyb3IiXScNCiAgICAgICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiBlcnJvclNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlcnJvckVsZW1lbnRzID0gbm9kZS5xdWVyeVNlbGVjdG9yQWxsID8gbm9kZS5xdWVyeVNlbGVjdG9yQWxsKHNl",
        "bGVjdG9yKSA6IFtdOw0KICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGVycm9yRWxlbWVudCBvZiBlcnJvckVsZW1lbnRzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gZXJyb3JFbGVtZW50LnRleHRDb250ZW50IHx8ICcnOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRlbnQuaW5jbHVkZXMoJ+eUqOaIt+iiq+Wxj+iUvScpIHx8IGNvbnRlbnQuaW5jbHVkZXMoJ+iiq+Wxj+iUvScpIHx8IGNvbnRlbnQuaW5jbHVkZXMoJ+Wxj+iUvScpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfwn5SNIOmAmui/h+aJqeWxlemAieaLqeWZqOWPkeeOsOWxj+iUveaPkOekuicsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3IsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGNvbnRlbnQudHJpbSgpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzVG9hc3ROb3RpY2UoZXJyb3JFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmo4Dmn6Xooqvmi4npu5Hmj5DnpLrlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmj5DnpLrlhYPntKANCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBub3RpY2Ug5o+Q56S65YWD57SgDQogICAgICAgICAqLw0KICAgICAgICBwcm9jZXNzVG9hc3ROb3RpY2Uobm90aWNlKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBub3RpY2UudGV4dENvbnRlbnQgfHwgJyc7DQogICAgICAgICAgICAgICAgY29uc3QgY29udGVudEhhc2ggPSB0aGlzLmdlbmVyYXRlQ29udGVudEhhc2goY29udGVudCk7DQoNCiAgICAgICAgICAgICAgICAvLyDpmLLmipbmnLrliLbvvJrlpoLmnpzot53nprvkuIrmrKHlpITnkIbml7bpl7TlpKrnn63vvIzot7Pov4cNCiAgICAgICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgIGlmIChub3cgLSB0aGlzLmxhc3RQcm9jZXNzVGltZSA8IHRoaXMuZGVib3VuY2VEZWxheSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/CflI0g6Ziy5oqW6Lez6L+H6YeN5aSN5aSE55CGJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGltZVNpbmNlTGFzdFByb2Nlc3M6IG5vdyAtIHRoaXMubGFzdFByb2Nlc3NUaW1lDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0K",
        "DQogICAgICAgICAgICAgICAgLy8g5Y676YeN5py65Yi277ya5aaC5p6c5bey57uP5aSE55CG6L+H55u45ZCM5YaF5a6555qE5o+Q56S677yM6Lez6L+HDQogICAgICAgICAgICAgICAgaWYgKHRoaXMucHJvY2Vzc2VkVG9hc3RzLmhhcyhjb250ZW50SGFzaCkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfwn5SNIOWOu+mHjei3s+i/h+W3suWkhOeQhueahOaPkOekuicsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRIYXNoLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogY29udGVudC50cmltKCkNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/CflI0g5aSE55CG5o+Q56S65YWD57SgJywgew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBjb250ZW50LnRyaW0oKSwNCiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBub3RpY2UuY2xhc3NOYW1lLA0KICAgICAgICAgICAgICAgICAgICBjb250ZW50SGFzaA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5aSa56eN5Y+v6IO955qE5bGP6JS95o+Q56S65paH5pysDQogICAgICAgICAgICAgICAgY29uc3QgYmxvY2tlZEtleXdvcmRzID0gWw0KICAgICAgICAgICAgICAgICAgICAn55So5oi36KKr5bGP6JS9JywNCiAgICAgICAgICAgICAgICAgICAgJ+iiq+Wxj+iUvScsDQogICAgICAgICAgICAgICAgICAgICflsY/olL0nLA0KICAgICAgICAgICAgICAgICAgICAnYmxvY2tlZCcsDQogICAgICAgICAgICAgICAgICAgICfml6Dms5Xlj5HpgIEnLA0KICAgICAgICAgICAgICAgICAgICAn5Y+R6YCB5aSx6LSlJw0KICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICBjb25zdCBpc0Jsb2NrZWQgPSBibG9ja2VkS2V5d29yZHMuc29tZShrZXl3b3JkID0+IGNvbnRlbnQuaW5jbHVkZXMoa2V5d29yZCkpOw0KDQogICAgICAgICAgICAgICAgaWYgKGlzQmxvY2tlZCkgew0KICAgICAgICAgICAgICAgICAgICAvLyDmoIforrDkuLrlt7LlpITnkIYNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzZWRUb2FzdHMuYWRkKGNvbnRlbnRIYXNoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5sYXN0UHJvY2Vzc1RpbWUgPSBub3c7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5riF55CG6L+H5pyf55qE5aSE55CG6K6w5b2V77yI5L+d55WZ5pyA6L+RMTDliIbpkp/nmoTorrDlvZXvvIkNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhbnVwUHJvY2Vzc2VkVG9hc3RzKCk7DQoNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KaoO+4jyDmo4DmtYvliLDnlKjmiLfooqvlsY/olL3mj5DnpLonLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBjb250ZW50LnRyaW0oKSwNCiAgICAgICAgICAgICAg",
        "ICAgICAgICAgIG1hdGNoZWRLZXl3b3JkOiBibG9ja2VkS2V5d29yZHMuZmluZChrID0+IGNvbnRlbnQuaW5jbHVkZXMoaykpLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudEhhc2gNCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5bu26L+f5aSE55CG77yM56Gu5L+dRE9N56iz5a6aDQogICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVCbG9ja2VkVXNlcigpOw0KICAgICAgICAgICAgICAgICAgICB9LCA1MDApOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflpITnkIbmj5DnpLrlhYPntKDlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnlJ/miJDlhoXlrrnlk4jluIznlKjkuo7ljrvph40NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnRlbnQg5YaF5a65DQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IOWTiOW4jOWAvA0KICAgICAgICAgKi8NCiAgICAgICAgZ2VuZXJhdGVDb250ZW50SGFzaChjb250ZW50KSB7DQogICAgICAgICAgICAvLyDnroDljZXnmoTlk4jluIzlh73mlbANCiAgICAgICAgICAgIGxldCBoYXNoID0gMDsNCiAgICAgICAgICAgIGNvbnN0IGNsZWFuQ29udGVudCA9IGNvbnRlbnQudHJpbSgpOw0KICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjbGVhbkNvbnRlbnQubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgICBjb25zdCBjaGFyID0gY2xlYW5Db250ZW50LmNoYXJDb2RlQXQoaSk7DQogICAgICAgICAgICAgICAgaGFzaCA9ICgoaGFzaCA8PCA1KSAtIGhhc2gpICsgY2hhcjsNCiAgICAgICAgICAgICAgICBoYXNoID0gaGFzaCAmIGhhc2g7IC8vIOi9rOaNouS4ujMy5L2N5pW05pWwDQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gaGFzaC50b1N0cmluZygpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuIXnkIbov4fmnJ/nmoTlpITnkIborrDlvZUNCiAgICAgICAgICovDQogICAgICAgIGNsZWFudXBQcm9jZXNzZWRUb2FzdHMoKSB7DQogICAgICAgICAgICAvLyDlpoLmnpzorrDlvZXlpKrlpJrvvIzmuIXnkIbkuIDkupvml6forrDlvZUNCiAgICAgICAgICAgIGlmICh0aGlzLnByb2Nlc3NlZFRvYXN0cy5zaXplID4gNTApIHsNCiAgICAgICAgICAgICAgICBjb25zdCB0b0RlbGV0ZSA9IEFycmF5LmZyb20odGhpcy5wcm9jZXNzZWRUb2FzdHMpLnNsaWNlKDAsIDI1KTsNCiAgICAgICAgICAgICAgICB0b0RlbGV0ZS5mb3JFYWNoKGhhc2ggPT4gdGhpcy5wcm9jZXNzZWRUb2FzdHMuZGVsZXRlKGhhc2gpKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/Cfp7kg5riF55CG6L+H",
        "5pyf55qE5o+Q56S65aSE55CG6K6w5b2VJywgew0KICAgICAgICAgICAgICAgICAgICBkZWxldGVkOiB0b0RlbGV0ZS5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZzogdGhpcy5wcm9jZXNzZWRUb2FzdHMuc2l6ZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbooqvmi4npu5HnlKjmiLcNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGhhbmRsZUJsb2NrZWRVc2VyKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDojrflj5blvZPliY3lr7nor53nlKjmiLfkv6Hmga8NCiAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50VXNlciA9IGF3YWl0IFBhZ2VFbGVtZW50TWFuYWdlci5nZXRDdXJyZW50Q2hhdFVzZXIoKTsNCiAgICAgICAgICAgICAgICBpZiAoIWN1cnJlbnRVc2VyIHx8ICFjdXJyZW50VXNlci51c2VySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+aXoOazleiOt+WPluW9k+WJjeWvueivneeUqOaIt+S/oeaBrycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l55So5oi35piv5ZCm5bey5Zyo6buR5ZCN5Y2V5LitDQogICAgICAgICAgICAgICAgaWYgKEJsYWNrbGlzdE1hbmFnZXIuaXNCbGFja2xpc3RlZChjdXJyZW50VXNlci51c2VySWQpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfimqDvuI8g55So5oi35bey5Zyo6buR5ZCN5Y2V5Lit77yM6Lez6L+H5re75YqgJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiBjdXJyZW50VXNlci51c2VySWQsDQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogY3VycmVudFVzZXIudXNlck5hbWUNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmt7vliqDliLDpu5HlkI3ljZUNCiAgICAgICAgICAgICAgICBjb25zdCBhZGRlZCA9IEJsYWNrbGlzdE1hbmFnZXIuYWRkKA0KICAgICAgICAgICAgICAgICAgICBjdXJyZW50VXNlci51c2VySWQsDQogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRVc2VyLnVzZXJOYW1lIHx8ICfmnKrnn6XnlKjmiLcnLA0KICAgICAgICAgICAgICAgICAgICAnYXV0b19ibG9ja2VkJywNCiAgICAgICAgICAgICAgICAgICAgJ+ezu+e7n+ajgOa1i+WIsOeUqOaIt+iiq+Wxj+iUvScNCiAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgaWYgKGFkZGVkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5qrIOW3suiHquWKqOWwhuiiq+aLiem7keeUqOaIt+a3u+WKoOWIsOm7keWQjeWNlScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogY3VycmVudFVzZXIudXNlcklkLA0K",
        "ICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IGN1cnJlbnRVc2VyLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmt7vliqDnlKjmiLfliLDpu5HlkI3ljZXlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IGN1cnJlbnRVc2VyLnVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiBjdXJyZW50VXNlci51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5aSE55CG6KKr5ouJ6buR55So5oi35pe25Ye66ZSZJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5rWL6K+V6KKr5ouJ6buR5qOA5rWL5Yqf6IO9DQogICAgICAgICAqLw0KICAgICAgICB0ZXN0QmxvY2tlZERldGVjdGlvbigpIHsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn6eqIOW8gOWni+a1i+ivleiiq+aLiem7keajgOa1i+WKn+iDvS4uLicpOw0KDQogICAgICAgICAgICAvLyDliJvlu7rmqKHmi5/nmoTooqvlsY/olL3mj5DnpLoNCiAgICAgICAgICAgIGNvbnN0IHRlc3RUb2FzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOw0KICAgICAgICAgICAgdGVzdFRvYXN0LmNsYXNzTmFtZSA9ICdkLXRvYXN0LW5vdGljZSc7DQogICAgICAgICAgICB0ZXN0VG9hc3QuaW5uZXJIVE1MID0gYA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtdG9hc3QtbWFpbiI+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkLXRvYXN0LWljb24gZC10b2FzdC1pY29uLWRhbmdlciI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiIHZpZXdCb3g9IjAgMCAxOCAxOCIgZmlsbD0ibm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNOS4wMDQ5MiAxNy4zM0MxMy42MDgyIDE3LjMzIDE3LjMzOTkgMTMuNTk4MyAxNy4zMzk5IDguOTk1MDJDMTcuMzM5OSA0LjM5MTcyIDEzLjYwODIgMC42NjAwMTcgOS4wMDQ5MiAwLjY2MDAxN0M0LjQwMTYzIDAuNjYwMDE3IDAuNjY5OTIyIDQuMzkxNzIgMC42Njk5MjIgOC45OTUwMkMwLjY2OTkyMiAxMy41OTgzIDQuNDAxNjMgMTcuMzMgOS4wMDQ5MiAxNy4zM1oiIGZpbGw9IiNGQjMzNjciPjwvcGF0aD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGNsaXAtcnVsZT0iZXZlbm9kZCIgZD0iTTguMDUyMzQgMTIuNzU1MUM4LjA1MjM0IDEzLjMwODkgOC41MDEyNiAxMy43NTc4IDkuMDU1MDQgMTMuNzU3",
        "OEM5LjYwODgyIDEzLjc1NzggMTAuMDU3OCAxMy4zMDg5IDEwLjA1NzggMTIuNzU1MUMxMC4wNTc4IDEyLjIwMTMgOS42MDg4MiAxMS43NTI0IDkuMDU1MDQgMTEuNzUyNEM4LjUwMTI2IDExLjc1MjQgOC4wNTIzNCAxMi4yMDEzIDguMDUyMzQgMTIuNzU1MVpNOS44OTA3NSA1LjA2Nzc1QzkuODkwNzUgNC42MDYyNiA5LjUxNjY1IDQuMjMyMTYgOS4wNTUxNiA0LjIzMjE2QzguNTkzNjggNC4yMzIxNiA4LjIxOTU3IDQuNjA2MjYgOC4yMTk1NyA1LjA2Nzc1TDguMjE5NTcgMTAuMDgxM0M4LjIxOTU3IDEwLjU0MjggOC41OTM2OCAxMC45MTY5IDkuMDU1MTYgMTAuOTE2OUM5LjUxNjY1IDEwLjkxNjkgOS44OTA3NSAxMC41NDI4IDkuODkwNzUgMTAuMDgxM0w5Ljg5MDc1IDUuMDY3NzVaIiBmaWxsPSJ3aGl0ZSI+PC9wYXRoPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+DQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC10b2FzdC1jb250ZW50Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkLXRvYXN0LWRlc2NyaXB0aW9uIj7nlKjmiLfooqvlsY/olL08L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgYDsNCg0KICAgICAgICAgICAgLy8g5re75Yqg5Yiw6aG16Z2i5bm26Kem5Y+R5qOA5rWLDQogICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRlc3RUb2FzdCk7DQoNCiAgICAgICAgICAgIC8vIOaooeaLn+ajgOa1i+i/h+eoiw0KICAgICAgICAgICAgdGhpcy5wcm9jZXNzVG9hc3ROb3RpY2UodGVzdFRvYXN0KTsNCg0KICAgICAgICAgICAgLy8g5riF55CG5rWL6K+V5YWD57SgDQogICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICBpZiAodGVzdFRvYXN0LnBhcmVudE5vZGUpIHsNCiAgICAgICAgICAgICAgICAgICAgdGVzdFRvYXN0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGVzdFRvYXN0KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfp6og6KKr5ouJ6buR5qOA5rWL5rWL6K+V5a6M5oiQJyk7DQogICAgICAgICAgICB9LCAyMDAwKTsNCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOa2iOaBr+WkhOeQhuWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgTWVzc2FnZVByb2Nlc3NvciA9IHsNCiAgICAgICAgaXNQcm9jZXNzaW5nOiBmYWxzZSwNCiAgICAgICAgcHJvY2Vzc2luZ1F1ZXVlOiBuZXcgTWFwKCksIC8vIOaUueS4uk1hcOe7k+aehO+8jOaMieiBlOezu+S6uuWIhue7hA0KICAgICAgICBtYXhRdWV1ZVNpemU6IDUwLCAvLyDlop7liqDpmJ/liJflrrnph48NCiAgICAgICAgcXVldWVXYXJuaW5nVGhyZXNob2xkOiA0MCwgLy8g",
        "6Zif5YiX6K2m5ZGK6ZiI5YC8DQogICAgICAgIGxhc3RRdWV1ZUNoZWNrOiAwLA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmlrDmtojmga8NCiAgICAgICAgICogQHBhcmFtIHtBcnJheX0gZWxlbWVudHMg5YyF5ZCr5paw5raI5oGv55qE5YWD57Sg5YiX6KGoDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBwcm9jZXNzTmV3TWVzc2FnZXMoZWxlbWVudHMpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLmlzUHJvY2Vzc2luZykgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5raI5oGv5aSE55CG5Zmo5b+Z56KM5Lit77yM5re75Yqg5Yiw6Zif5YiXJywgew0KICAgICAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVTaXplOiB0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zaXplLA0KICAgICAgICAgICAgICAgICAgICBuZXdFbGVtZW50c0NvdW50OiBlbGVtZW50cy5sZW5ndGgNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLmFkZFRvUXVldWUoZWxlbWVudHMpOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdGhpcy5pc1Byb2Nlc3NpbmcgPSB0cnVlOw0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W8gOWni+WkhOeQhuaWsOa2iOaBrycsIHsNCiAgICAgICAgICAgICAgICBjb3VudDogZWxlbWVudHMubGVuZ3RoLA0KICAgICAgICAgICAgICAgIHF1ZXVlU2l6ZTogdGhpcy5wcm9jZXNzaW5nUXVldWUuc2l6ZQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGVsZW1lbnRzKSB7DQogICAgICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMucHJvY2Vzc1NpbmdsZU1lc3NhZ2UoZWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KENvbmZpZ01hbmFnZXIuZ2V0KCdyZXBseURlbGF5JywgMzAwMCkpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWkhOeQhumYn+WIl+S4reeahOa2iOaBrw0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMucHJvY2Vzc1F1ZXVlKCk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5aSE55CG5raI5oGv5pe25Y+R55Sf6ZSZ6K+vJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0gZmluYWxseSB7DQogICAgICAgICAgICAgICAgdGhpcy5pc1Byb2Nlc3NpbmcgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a2iOaBr+WkhOeQhuWujOaIkO+8jOmYn+WIl+eKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgcXVldWVTaXplOiB0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zaXplDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWNleadoea2iOaBryAtIOWi",
        "nuW8uueJiO+8jOmbhuaIkOaZuuiDvemHjeivleacuuWItg0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRhY3RFbGVtZW50IOS8muivneWFg+e0oA0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgcHJvY2Vzc1NpbmdsZU1lc3NhZ2UoY29udGFjdEVsZW1lbnQpIHsNCiAgICAgICAgICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7DQogICAgICAgICAgICBsZXQgdXNlck5hbWUgPSAn5pyq55+l55So5oi3JzsNCiAgICAgICAgICAgIGxldCBtZXNzYWdlSWQgPSBudWxsOyAvLyDnlKjkuo7plJnor6/lpITnkIbml7bmuIXnkIbnirbmgIENCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDpqozor4HlhYPntKDnsbvlnovvvJrnoa7kv53mmK/mnInmlYjnmoTkvJror53pobnlhYPntKANCiAgICAgICAgICAgICAgICBpZiAoIWNvbnRhY3RFbGVtZW50IHx8ICFjb250YWN0RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ3N4LWNvbnRhY3QtaXRlbScpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdwcm9jZXNzU2luZ2xlTWVzc2FnZTog5Lyg5YWl55qE5LiN5piv5pyJ5pWI55qE5Lya6K+d6aG55YWD57SgJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudENsYXNzOiBjb250YWN0RWxlbWVudD8uY2xhc3NOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudFRhZ05hbWU6IGNvbnRhY3RFbGVtZW50Py50YWdOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudERhdGFLZXk6IGNvbnRhY3RFbGVtZW50Py5kYXRhc2V0Py5rZXkNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgLy8gMS4g562J5b6FRE9N56iz5a6a5bm25r+A5rS75YWD57SgDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflvIDlp4tET03nqLPlrprmgKfmo4Dmn6XlkozlhYPntKDmv4DmtLvmtYHnqIsnKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRBY3RpdmF0ZWQgPSBhd2FpdCBFbGVtZW50TWFuYWdlci5maW5kQW5kQWN0aXZhdGVFbGVtZW50KGNvbnRhY3RFbGVtZW50LCB7DQogICAgICAgICAgICAgICAgICAgIHdhaXRGb3JTdGFiaWxpdHk6IHRydWUsDQogICAgICAgICAgICAgICAgICAgIG1heFJldHJpZXM6IDMNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIGlmICghZWxlbWVudEFjdGl2YXRlZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aXoOazlea/gOa0u+S8muivneWFg+e0oO+8jOi3s+i/h+WkhOeQhicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8gMi4g6YeN5paw5p+l5om+5pyA5paw55qE5YWD57Sg5bm25o+Q5Y+W55So5oi35L+h5oGvDQogICAgICAgICAgICAgICAgbGV0IGN1cnJlbnRF",
        "bGVtZW50ID0gRWxlbWVudE1hbmFnZXIucmVmaW5kRWxlbWVudChjb250YWN0RWxlbWVudCk7DQogICAgICAgICAgICAgICAgaWYgKCFjdXJyZW50RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aXoOazlemHjeaWsOaJvuWIsOS8muivneWFg+e0oO+8jOi3s+i/h+WkhOeQhicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g56e76Zmk54i257qn5Lya6K+d6aG55qOA5p+lIC0g55u05o6l5L2/55So5om+5Yiw55qE5YWD57Sg6L+b6KGM5aSE55CGDQoNCiAgICAgICAgICAgICAgICBjb25zdCB1c2VySW5mbyA9IHRoaXMuZXh0cmFjdFVzZXJJbmZvKGN1cnJlbnRFbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJbmZvKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfml6Dms5Xmj5Dlj5bnlKjmiLfkv6Hmga/vvIzot7Pov4flpITnkIYnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50RGF0YUtleTogY3VycmVudEVsZW1lbnQuZGF0YXNldD8ua2V5LA0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudENsYXNzOiBjdXJyZW50RWxlbWVudC5jbGFzc05hbWUNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB1c2VyTmFtZSA9IHVzZXJJbmZvLnVzZXJOYW1lOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflvIDlp4vlpITnkIbnlKjmiLfmtojmga8nLCB7IHVzZXJOYW1lIH0pOw0KDQogICAgICAgICAgICAgICAgLy8gMy4g5bu26L+f5raI5oGvSUTnlJ/miJAgLSDnrYnlvoXmj5Dlj5bliLDlrp7pmYXnlKjmiLfmtojmga/lkI7lho3nlJ/miJANCiAgICAgICAgICAgICAgICAvLyDpgb/lhY3ln7rkuo7kvJror53liJfooajnmoRsYXN0TWVzc2FnZe+8iOWPr+iDveaYr0FJ5Zue5aSN77yJ55Sf5oiQ6ZSZ6K+v55qE5Yid5aeLSUQNCiAgICAgICAgICAgICAgICBsZXQgbWVzc2FnZUlkID0gbnVsbDsNCg0KICAgICAgICAgICAgICAgIC8vIDQuIOajgOafpeWFg+e0oOaYr+WQpuW3sue7j+aYr+a/gOa0u+eKtuaAge+8iOaciWFjdGl2Zeexu++8iQ0KICAgICAgICAgICAgICAgIGlmIChjdXJyZW50RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfkvJror53pobnlt7LlpITkuo7mv4DmtLvnirbmgIHvvIzot7Pov4fngrnlh7vnm7TmjqXov5vlhaXlr7nor50nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnREYXRhS2V5OiBjdXJyZW50RWxlbWVudC5kYXRhc2V0Py5rZXkNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIC8vIOebtOaOpei/m+WFpeWvueivneWkhOeQ",
        "hua1geeoiw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOS9v+eUqOWPr+mdoOeahOeCueWHu+aWueazle+8iOS9v+eUqOmHjeaWsOaJvuWIsOeahOWFg+e0oO+8iQ0KICAgICAgICAgICAgICAgICAgICBjb25zdCBjbGlja2VkID0gYXdhaXQgRWxlbWVudE1hbmFnZXIucmVsaWFibGVDbGljayhjdXJyZW50RWxlbWVudCwgew0KICAgICAgICAgICAgICAgICAgICAgICAgbWF4QXR0ZW1wdHM6IDUsDQogICAgICAgICAgICAgICAgICAgICAgICB3YWl0QmV0d2VlbkF0dGVtcHRzOiA0MDAsDQogICAgICAgICAgICAgICAgICAgICAgICBmb3JjZUNsaWNrOiB0cnVlIC8vIOW8uuWItueCueWHu+aooeW8jw0KICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoIWNsaWNrZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign54K55Ye75Lya6K+d6aG55pyA57uI5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnREYXRhS2V5OiBjdXJyZW50RWxlbWVudC5kYXRhc2V0Py5rZXksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudFZpc2libGU6IEVsZW1lbnRNYW5hZ2VyLmlzRWxlbWVudFZpc2libGUoY3VycmVudEVsZW1lbnQsIHsgc3RyaWN0OiBmYWxzZSB9KSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNBY3RpdmVDbGFzczogY3VycmVudEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyA1LiDnrYnlvoXlr7nor53nqpflj6PliqDovb0NCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgxNTAwKTsNCg0KICAgICAgICAgICAgICAgIC8vIDYuIOaPkOWPluacgOaWsOa2iOaBr+WGheWuue+8iOebtOaOpeiwg+eUqO+8jOWFgeiuuOi/lOWbnm51bGzvvIkNCiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlQ29udGVudCA9IGF3YWl0IHRoaXMuZXh0cmFjdExhdGVzdE1lc3NhZ2UoKTsNCg0KICAgICAgICAgICAgICAgIGlmICghbWVzc2FnZUNvbnRlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+aXoOazleaPkOWPluacgOaWsOa2iOaBr+WGheWuue+8jOajgOafpeeJueauiuWcuuaZrycsIHsgdXNlck5hbWUgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g6I635Y+W5Lya6K+d5YiX6KGo5Lit55qE5raI5oGv6aKE6KeI77yI55So5LqO5YO15bC45pyq6K+75qOA5rWL77yJDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGxhc3RNZXNzYWdlUHJldmlldyA9IHVzZXJJbmZvLmxhc3RNZXNzYWdlIHx8ICcnOw0KDQogICAgICAgICAg",
        "ICAgICAgICAgIC8vIDEuIOmmluWFiOajgOafpeiBmuWFiei/m+e6vw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBjaGF0Q29udGFpbmVyID0gUGFnZUVsZW1lbnRNYW5hZ2VyLmdldEVsZW1lbnRXaXRoU21hcnRGYWxsYmFjaygnY2hhdENvbnRhaW5lcicpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoY2hhdENvbnRhaW5lcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZVZpZXdzID0gVXRpbHMucXVlcnlTZWxlY3RvckFsbCgnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcnLCBjaGF0Q29udGFpbmVyKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCB2aWV3IG9mIG1lc3NhZ2VWaWV3cykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2VJdGVtID0gVXRpbHMucXVlcnlTZWxlY3RvcignLmltLW1zZy1pdGVtJywgdmlldyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2VJdGVtICYmIFNwb3RsaWdodExlYWRQcm9jZXNzb3IuaXNTcG90bGlnaHRMZWFkKG1lc3NhZ2VJdGVtKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+MnyDmo4DmtYvliLDogZrlhYnov5vnur/mtojmga/vvIzlkK/liqjlpITnkIbmtYHnqIsnLCB7IHVzZXJOYW1lIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNwb3RsaWdodFByb2Nlc3NlZCA9IGF3YWl0IFNwb3RsaWdodExlYWRQcm9jZXNzb3IucHJvY2Vzc1Nwb3RsaWdodExlYWQoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlSXRlbSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJbmZvDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNwb3RsaWdodFByb2Nlc3NlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDogZrlhYnov5vnur/mtojmga/lpITnkIblrozmiJAnLCB7IHVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIC8vIDIuIOWmguaenOayoeacieiBmuWFiei/m+e6v++8jOajgOafpeaYr+WQpuWQr+eUqOS4u+WKqOi/m+e6v+ivneacrw0KICAgICAgICAgICAgICAgICAgICBpZiAoQ29uZmlnTWFuYWdlci5nZXQoJ3Nwb3RsaWdodEFjdGl2ZVdlbGNvbWVFbmFibGVkJywgZmFsc2UpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBM",
        "b2dnZXIuaW5mbygn8J+OryDlkK/nlKjkuLvliqjov5vnur/or53mnK/vvIzlj5HpgIHmrKLov47mtojmga8nLCB7IHVzZXJOYW1lIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblt7Llj5HpgIHov4fkuLvliqjmrKLov47or53mnK/vvIjpmLLph43lpI3vvIkNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJEYXRhID0gQ29udmVyc2F0aW9uVHJhY2tlci5nZXRDb252ZXJzYXRpb25EYXRhKHVzZXJJbmZvLnVzZXJOYW1lKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhc0FjdGl2ZVdlbGNvbWVTZW50ID0gdXNlckRhdGEgJiYgdXNlckRhdGEuYWN0aXZlV2VsY29tZVNlbnQ7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChoYXNBY3RpdmVXZWxjb21lU2VudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflt7Llj5HpgIHov4fkuLvliqjov5vnur/or53mnK/vvIzmo4Dmn6Xlg7XlsLjmnKror7vnirbmgIEnLCB7IHVzZXJOYW1lIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gMy4g5YO15bC45pyq6K+75qOA5rWL5ZKM5aSE55CGDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgem9tYmllRGV0ZWN0aW9uID0gWm9tYmllVW5yZWFkTWFuYWdlci5kZXRlY3Rab21iaWVVbnJlYWQoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlQ29udGVudCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdE1lc3NhZ2VQcmV2aWV3LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNBY3RpdmVXZWxjb21lU2VudA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoem9tYmllRGV0ZWN0aW9uLmlzWm9tYmllKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn6efIOajgOa1i+WIsOWDteWwuOacquivu+eKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhc29uOiB6b21iaWVEZXRlY3Rpb24ucmVhc29uLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmluZ2VycHJpbnQ6IHpvbWJpZURldGVjdGlvbi5maW5nZXJwcmludD8uc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeWGt+WNtOeKtuaAgQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb29sZG93blN0YXR1cyA9IFpvbWJpZVVucmVhZE1hbmFnZXIuY2hlY2tDb29sZG93bigNCiAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgem9tYmllRGV0ZWN0aW9uLmZpbmdlcnByaW50DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvb2xkb3duU3RhdHVzLmluQ29vbGRvd24pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn6efIOWDteWwuOacquivu+WkhOS6juWGt+WNtOacn++8jOi3s+i/h+WkhOeQhicsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdNaW51dGVzOiBjb29sZG93blN0YXR1cy5yZW1haW5pbmdNaW51dGVzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYXNvbjogY29vbGRvd25TdGF0dXMucmVhc29uDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn6efIOWDteWwuOacquivu+WGt+WNtOacn+W3sui/h+aIlueKtuaAgeW3suWPmOWMlu+8jOiusOW9leacrOasoeWkhOeQhicsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFzb246IGNvb2xkb3duU3RhdHVzLnJlYXNvbg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOiusOW9leacrOasoeWDteWwuOacquivu+WkhOeQhg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgWm9tYmllVW5yZWFkTWFuYWdlci5yZWNvcmRab21iaWVQcm9jZXNzKA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHpvbWJpZURldGVjdGlvbi5maW5nZXJwcmludA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+nnyDkuI3nrKblkIjlg7XlsLjmnKror7vmnaHku7YnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgIHJlYXNvbjogem9tYmllRGV0ZWN0aW9uLnJlYXNvbg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5aSN55So6IGa5YWJ6L+b57q/55qE6K+d5pyv5qih5p2/DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGlnaHRMZWFkVGVtcGxhdGUnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5zcG90bGlnaHRMZWFkVGVtcGxhdGUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVmYXVsdENvdXJzZU5hbWUgPSBDb25maWdNYW5hZ2VyLmdldCgnc3BvdGxpZ2h0QWN0aXZlV2VsY29tZUNvdXJzZU5hbWUnLCAn5oiR5Lus55qE6K++56iLJyk7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB3ZWxjb21lTWVzc2FnZSA9IHRlbXBsYXRlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1x755So5oi35pi156ewXH0vZywgdXNlckluZm8udXNlck5hbWUgfHwgJ+aci+WPiycpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1x76K++56iL5ZCN56ewXH0vZywgZGVmYXVsdENvdXJzZU5hbWUpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcbi9nLCAnXG4nKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VudCA9IGF3YWl0IE1lc3NhZ2VQcm9jZXNzb3Iuc2VuZFJlcGx5KHdlbGNvbWVNZXNzYWdlKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOS4u+WKqOi/m+e6v+ivneacr+WPkemAgeaIkOWKnycsIHsgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qCH6K6w5bey5Y+R6YCB5Li75Yqo5qyi6L+O6K+d5pyvDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29udmVyc2F0aW9uVHJhY2tlci51cGRhdGVDb252ZXJzYXRpb24odXNlckluZm8udXNlck5hbWUsICdb5Li75Yqo6L+b57q/6K+d5pyvXScsIHsgYWN0aXZlV2VsY29tZVNlbnQ6IHRydWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign4p2MIOS4u+WKqOi/m+e6v+ivneacr+WPkemAgeWksei0pScsIHsgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAvLyAzLiDml6LmsqHmnInogZrlhYnov5vnur/vvIzkuZ/msqHmnInlkK/nlKjk",
        "uLvliqjor53mnK/vvIzmiqXplJnpgIDlh7oNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+acquaJvuWIsOWPr+WkhOeQhueahOa2iOaBr++8jOS4lOacquWQr+eUqOS4u+WKqOi/m+e6v+ivneacrycsIHsgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyA0LiDln7rkuo7lrp7pmYXnlKjmiLfmtojmga/nlJ/miJDllK/kuIDmtojmga9JRA0KICAgICAgICAgICAgICAgIG1lc3NhZ2VJZCA9IE1lc3NhZ2VEZWR1cGxpY2F0b3IuZ2VuZXJhdGVNZXNzYWdlSWQoDQogICAgICAgICAgICAgICAgICAgIHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlQ29udGVudCwgLy8g5L2/55So5a6e6ZmF5o+Q5Y+W55qE55So5oi35raI5oGv5YaF5a65DQogICAgICAgICAgICAgICAgICAgIHVzZXJJbmZvLnRpbWVzdGFtcA0KICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5oiQ5Yqf5o+Q5Y+W5pyA5paw55So5oi35raI5oGvJywgew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBtZXNzYWdlQ29udGVudCwNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+TnSDnlJ/miJDmtojmga9JRCcsIHsNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUlkOiBtZXNzYWdlSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VDb250ZW50OiBtZXNzYWdlQ29udGVudC5zdWJzdHJpbmcoMCwgNTApICsgKG1lc3NhZ2VDb250ZW50Lmxlbmd0aCA+IDUwID8gJy4uLicgOiAnJyksDQogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogdXNlckluZm8udGltZXN0YW1wDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyA1LiDoh6rliqjorrDlvZXmlrDnlKjmiLfliLDov73nsonns7vnu5/vvIjlpoLmnpzlkK/nlKjvvIkNCiAgICAgICAgICAgICAgICBpZiAoQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwRW5hYmxlZCcsIGZhbHNlKSAmJiBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBBdXRvUmVjb3JkJywgdHJ1ZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5hdXRvUmVjb3JkVXNlckZvckZvbGxvd1VwKHVzZXJJbmZvLCBtZXNzYWdlQ29udGVudCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8gNi4g6buR5ZCN5Y2V5qOA5p+lDQogICAgICAgICAgICAgICAgaWYgKENvbmZpZ01hbmFnZXIuZ2V0KCdibGFja2xpc3RFbmFibGVkJywgdHJ1ZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gdXNlckluZm8udXNl",
        "cklkOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBpc0JsYWNrbGlzdGVkID0gQmxhY2tsaXN0TWFuYWdlci5pc0JsYWNrbGlzdGVkKHVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgIGlmIChpc0JsYWNrbGlzdGVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+aqyDnlKjmiLflnKjpu5HlkI3ljZXkuK3vvIzot7Pov4foh6rliqjlm57lpI0nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsgLy8g55u05o6l6L+U5Zue77yM5LiN6L+b6KGM5ZCO57ut5aSE55CGDQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+KchSDnlKjmiLfkuI3lnKjpu5HlkI3ljZXkuK3vvIznu6fnu63lpITnkIYnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIDcuIOWOn+WtkOaAp+ajgOafpeW5tuagh+iusCAtIOWfuuS6juWunumZhea2iOaBr+WGheWuuQ0KICAgICAgICAgICAgICAgIGNvbnN0IGNhblByb2Nlc3MgPSBNZXNzYWdlRGVkdXBsaWNhdG9yLmNoZWNrQW5kTWFya0FzUHJvY2Vzc2luZygNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUlkLA0KICAgICAgICAgICAgICAgICAgICB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUNvbnRlbnQsDQogICAgICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VDb250ZW50OiBtZXNzYWdlQ29udGVudCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogdXNlckluZm8udGltZXN0YW1wLA0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWNhblByb2Nlc3MpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KaoO+4jyDljp/lrZDmgKfmo4Dmn6XlpLHotKXvvIzot7Pov4flpITnkIYnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlSWQ6IG1lc3NhZ2VJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFt",
        "ZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlQ29udGVudDogbWVzc2FnZUNvbnRlbnQuc3Vic3RyaW5nKDAsIDUwKSArIChtZXNzYWdlQ29udGVudC5sZW5ndGggPiA1MCA/ICcuLi4nIDogJycpDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8gOC4zLiDogZrlhYnov5vnur/mtojmga/nibnmrorlpITnkIYNCiAgICAgICAgICAgICAgICBpZiAobWVzc2FnZUNvbnRlbnQgJiYgbWVzc2FnZUNvbnRlbnQuaW5jbHVkZXMoJ1vogZrlhYnov5vnur9dJykpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CfjJ8g5qOA5rWL5Yiw6IGa5YWJ6L+b57q/5raI5oGv77yM5ZCv5Yqo5LiT6Zeo5aSE55CG5rWB56iLJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZVByZXZpZXc6IG1lc3NhZ2VDb250ZW50LnN1YnN0cmluZygwLCAxMDApICsgJy4uLicNCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5p+l5om+5YyF5ZCr6IGa5YWJ6L+b57q/5raI5oGv55qE5YWD57SgDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2VWaWV3cyA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3JBbGwoJy52dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3JywNCiAgICAgICAgICAgICAgICAgICAgICAgIFBhZ2VFbGVtZW50TWFuYWdlci5nZXRFbGVtZW50V2l0aFNtYXJ0RmFsbGJhY2soJ2NoYXRDb250YWluZXInKSk7DQoNCiAgICAgICAgICAgICAgICAgICAgbGV0IHNwb3RsaWdodEVsZW1lbnQgPSBudWxsOw0KICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHZpZXcgb2YgbWVzc2FnZVZpZXdzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlSXRlbSA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy5pbS1tc2ctaXRlbScsIHZpZXcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2VJdGVtICYmIFNwb3RsaWdodExlYWRQcm9jZXNzb3IuaXNTcG90bGlnaHRMZWFkKG1lc3NhZ2VJdGVtKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwb3RsaWdodEVsZW1lbnQgPSBtZXNzYWdlSXRlbTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIGlmIChzcG90bGlnaHRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzcG90bGlnaHRQcm9jZXNzZWQgPSBhd2FpdCBTcG90bGlnaHRMZWFkUHJvY2Vzc29yLnByb2Nlc3NTcG90bGlnaHRMZWFkKA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwb3RsaWdo",
        "dEVsZW1lbnQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlckluZm8NCiAgICAgICAgICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzcG90bGlnaHRQcm9jZXNzZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOiBmuWFiei/m+e6v+a2iOaBr+WkhOeQhuWujOaIkCcsIHsgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsgLy8g6IGa5YWJ6L+b57q/5aSE55CG5a6M5oiQ77yM5LiN6ZyA6KaB57un57ut5pmu6YCa5raI5oGv5rWB56iLDQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfimqDvuI8g6IGa5YWJ6L+b57q/5raI5oGv5aSE55CG5aSx6LSl77yM57un57ut5pmu6YCa5raI5oGv5rWB56iLJywgeyB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4pqg77iPIOacquaJvuWIsOiBmuWFiei/m+e6v+a2iOaBr+WFg+e0oO+8jOe7p+e7reaZrumAmua2iOaBr+a1geeoiycsIHsgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8gOC41LiDmo4DmtYvnlZnlrqLotYTnirbmgIHlkozojrflj5Zjb252ZXJzYXRpb25JZO+8iOW8uuWItuWunuaXtuajgOa1i++8iQ0KICAgICAgICAgICAgICAgIGxldCBsZWFkc1N0YXR1cyA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIGxldCBjb252ZXJzYXRpb25JZCA9IG51bGw7DQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQgPSBjdXJyZW50RWxlbWVudC5kYXRhc2V0Py5rZXk7DQogICAgICAgICAgICAgICAgICAgIGlmIChjb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5by65Yi25a6e5pe25qOA5rWL55WZ5a6i6LWE54q25oCB77yI5q+P5qyh5raI5oGv5aSE55CG6YO96YeN5paw5qOA5rWL77yJDQogICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5byA5aeL5by65Yi25a6e5pe255WZ5a6i6LWE5qOA5rWLJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgIGxlYWRzU3RhdHVzID0gYXdhaXQgTGVhZHNTdGF0dXNNYW5hZ2VyLmdldExlYWRzU3RhdHVzKGNvbnZlcnNhdGlvbklkLCBjdXJyZW50RWxlbWVudCwgdHJ1ZSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCflrp7ml7ZBUEnmo4DmtYvlpLHotKXvvIzkvb/nlKjlkIzmraVET03mo4DmtYsnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlYWRzU3RhdHVzID0gTGVhZHNTdGF0dXNNYW5hZ2VyLmdldExlYWRzU3RhdHVzU3luYyhjb252ZXJzYXRpb25JZCwgY3VycmVudEVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+UhCDlrp7ml7bnlZnlrqLotYTnirbmgIHmo4DmtYvlrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVhZHNTdGF0dXM6IGxlYWRzU3RhdHVzID8gJ+W3sueVmeWuoui1hCcgOiAn5pyq55WZ5a6i6LWEJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICDmo4DmtYvmlrnlvI86ICflvLrliLblrp7ml7bmo4DmtYsnDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign55WZ5a6i6LWE54q25oCB5qOA5rWL5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyA5LiDnlJ/miJBBSeWbnuWkje+8iOWMheWQq+eVmeWuoui1hOeKtuaAgeWSjOS8muivneS4iuS4i+aWh++8iQ0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRleHQgPSB7DQogICAgICAgICAgICAgICAgICAgIGxlYWRzU3RhdHVzLA0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZA0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICBjb25zdCBhaVJlcGx5ID0gYXdhaXQgQVBJUmV0cnlNYW5hZ2VyLmNhbGxXaXRoUmV0cnkoDQogICAgICAgICAgICAgICAgICAgIEFJUmVwbHlHZW5lcmF0b3IuZ2VuZXJhdGVSZXBseSwNCiAgICAgICAgICAgICAgICAgICAgW21lc3NhZ2VDb250ZW50LCB1c2VySW5mby51c2VyTmFtZSwgY29udGV4dF0NCiAgICAgICAgICAgICAgICApOw0KDQogICAgICAgICAgICAgICAgaWYgKCFhaVJlcGx5KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcignQUnlm57lpI3nlJ/miJDlpLHotKUnLCB7IHVzZXJOYW1l",
        "IH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCdBSeWbnuWkjeeUn+aIkOaIkOWKnycsIHsgdXNlck5hbWUsIHJlcGx5TGVuZ3RoOiBhaVJlcGx5Lmxlbmd0aCB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIDguIOWPkemAgeWbnuWkjQ0KICAgICAgICAgICAgICAgIGNvbnN0IHNlbnQgPSBhd2FpdCBTbWFydFJldHJ5TWFuYWdlci5leGVjdXRlV2l0aFJldHJ5KA0KICAgICAgICAgICAgICAgICAgICAoKSA9PiB0aGlzLnNlbmRSZXBseShhaVJlcGx5KSwNCiAgICAgICAgICAgICAgICAgICAgbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgYOWPkemAgeWbnuWkjS0ke3VzZXJOYW1lfWAsDQogICAgICAgICAgICAgICAgICAgIHsgbWF4UmV0cmllczogMiB9DQogICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgIGlmICghc2VudCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WPkemAgeWbnuWkjeWksei0pScsIHsgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Zue5aSN5Y+R6YCB5oiQ5YqfJywgeyB1c2VyTmFtZSB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIDkuIOajgOafpeaYr+WQpumcgOimgeWPkemAgeiOt+WuouW3peWFtw0KICAgICAgICAgICAgICAgIGlmIChDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25FbmFibGVkJywgZmFsc2UpKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJEYXRhID0gQ29udmVyc2F0aW9uVHJhY2tlci51cGRhdGVDb252ZXJzYXRpb24odXNlckluZm8udXNlck5hbWUsIG1lc3NhZ2VDb250ZW50KTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAoQWNxdWlzaXRpb25PcHBvcnR1bml0eURldGVjdG9yLnNob3VsZFNlbmRBY3F1aXNpdGlvblRvb2wodXNlckluZm8udXNlck5hbWUsIG1lc3NhZ2VDb250ZW50LCB1c2VyRGF0YSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmo4DmtYvliLDojrflrqLlt6Xlhbflj5HpgIHml7bmnLonLCB7IHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g562J5b6F5LiA5q615pe26Ze05YaN5Y+R6YCB6I635a6i5bel5YW377yI6YG/5YWN6L+H5LqO56qB5YWA77yJDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhY3F1aXNpdGlvbkRlbGF5ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uRGVsYXknLCAyMDAwKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KGFjcXVpc2l0aW9uRGVsYXkpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0b29sVHlwZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdhY3F1aXNpdGlvblRvb2xUeXBlJywgJ+eVmei1hOWN",
        "oScpOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9vbE5hbWUgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25Ub29sTmFtZScsICcnKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYWNxdWlzaXRpb25TZW50ID0gYXdhaXQgQ3VzdG9tZXJBY3F1aXNpdGlvblNlbmRlci5zZW5kQWNxdWlzaXRpb25Ub29sKHRvb2xUeXBlLCB0b29sTmFtZSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhY3F1aXNpdGlvblNlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb252ZXJzYXRpb25UcmFja2VyLm1hcmtBY3F1aXNpdGlvblRvb2xTZW50KHVzZXJJbmZvLnVzZXJOYW1lKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6I635a6i5bel5YW35Y+R6YCB5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvb2xUeXBlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b29sTmFtZTogdG9vbE5hbWUgfHwgJ+m7mOiupOW3peWFtycNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfojrflrqLlt6Xlhbflj5HpgIHlpLHotKUnLCB7IHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWNs+S9v+iOt+WuouWKn+iDveacquWQr+eUqO+8jOS5n+imgeabtOaWsOWvueivnei/vei4quaVsOaNrg0KICAgICAgICAgICAgICAgICAgICBDb252ZXJzYXRpb25UcmFja2VyLnVwZGF0ZUNvbnZlcnNhdGlvbih1c2VySW5mby51c2VyTmFtZSwgbWVzc2FnZUNvbnRlbnQpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIDguIOagh+iusOS4uuW3suWkhOeQhg0KICAgICAgICAgICAgICAgIGNvbnN0IG1ldGFkYXRhID0gew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VDb250ZW50OiBtZXNzYWdlQ29udGVudCwNCiAgICAgICAgICAgICAgICAgICAgYWlSZXBseSwNCiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc2VkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSwNCiAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc2luZ1RpbWU6IERhdGUubm93KCkgLSBzdGFydFRpbWUsDQogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogdXNlckluZm8udGltZXN0YW1wDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIE1lc3NhZ2VEZWR1cGxpY2F0b3IubWFy",
        "a0FzUHJvY2Vzc2VkKG1lc3NhZ2VJZCwgbWV0YWRhdGEpOw0KDQogICAgICAgICAgICAgICAgY29uc3QgcHJvY2Vzc2luZ1RpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmtojmga/lpITnkIblrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBwcm9jZXNzaW5nVGltZTogYCR7cHJvY2Vzc2luZ1RpbWV9bXNgLA0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlSWQ6IG1lc3NhZ2VJZC5zdWJzdHJpbmcoMCwgOCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZVByZXZpZXc6IG1lc3NhZ2VDb250ZW50LnN1YnN0cmluZygwLCA1MCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgcmVwbHlQcmV2aWV3OiBhaVJlcGx5LnN1YnN0cmluZygwLCA1MCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIGNvbnN0IHByb2Nlc3NpbmdUaW1lID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WkhOeQhua2iOaBr+aXtuWPkeeUn+mUmeivrycsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICBwcm9jZXNzaW5nVGltZTogYCR7cHJvY2Vzc2luZ1RpbWV9bXNgLA0KICAgICAgICAgICAgICAgICAgICBzdGFjazogZXJyb3Iuc3RhY2s/LnN1YnN0cmluZygwLCAyMDApICsgJy4uLicNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOa4heeQhuWkhOeQhuS4reeKtuaAgQ0KICAgICAgICAgICAgICAgIGlmIChtZXNzYWdlSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTWVzc2FnZURlZHVwbGljYXRvci5jbGVhclByb2Nlc3NpbmcobWVzc2FnZUlkKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflt7LmuIXnkIblpLHotKXmtojmga/nmoTlpITnkIbkuK3nirbmgIEnLCB7IG1lc3NhZ2VJZCwgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5piv5YWD57Sg55u45YWz6ZSZ6K+v77yM5bCd6K+V5Yi35pawDQogICAgICAgICAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ+WFg+e0oCcpIHx8IGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ+WPr+ingScpIHx8IGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ+a/gOa0uycpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5qOA5rWL5Yiw5YWD57Sg55u45YWz6ZSZ6K+v77yM5Yi35paw5a655ZmoJyk7DQogICAgICAgICAgICAgICAgICAgIEVsZW1lbnRNYW5hZ2VyLnJlZnJlc2goKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoN",
        "CiAgICAgICAgLyoqDQogICAgICAgICAqIOaPkOWPlueUqOaIt+S/oeaBryAtIOWinuW8uueJiO+8jOaUr+aMgeWkmuenjeWFg+e0oOexu+Wei+WSjOmZjee6p+etlueVpQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRhY3RFbGVtZW50IOS8muivneWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0VXNlckluZm8oY29udGFjdEVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflvIDlp4vmj5Dlj5bnlKjmiLfkv6Hmga8nLCB7DQogICAgICAgICAgICAgICAgICAgIGVsZW1lbnRUYWc6IGNvbnRhY3RFbGVtZW50LnRhZ05hbWUsDQogICAgICAgICAgICAgICAgICAgIGVsZW1lbnRDbGFzczogY29udGFjdEVsZW1lbnQuY2xhc3NOYW1lLA0KICAgICAgICAgICAgICAgICAgICBkYXRhS2V5OiBjb250YWN0RWxlbWVudC5kYXRhc2V0Py5rZXkNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOS9v+eUqOWinuW8uueahOeUqOaIt+WQjeaPkOWPlg0KICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJOYW1lID0gdGhpcy5leHRyYWN0VXNlck5hbWVFbmhhbmNlZChjb250YWN0RWxlbWVudCk7DQogICAgICAgICAgICAgICAgY29uc3QgbGFzdE1lc3NhZ2UgPSB0aGlzLmV4dHJhY3RMYXN0TWVzc2FnZUVuaGFuY2VkKGNvbnRhY3RFbGVtZW50KTsNCg0KICAgICAgICAgICAgICAgIC8vIOaUuei/m+eahOaXtumXtOaIs+aPkOWPlumAu+i+kQ0KICAgICAgICAgICAgICAgIGxldCB0aW1lc3RhbXAgPSAnJzsNCiAgICAgICAgICAgICAgICBjb25zdCB0aW1lRWxlbWVudCA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJy50aW1lJywgY29udGFjdEVsZW1lbnQpOw0KDQogICAgICAgICAgICAgICAgaWYgKHRpbWVFbGVtZW50ICYmIHRpbWVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0aW1lVGV4dCA9IHRpbWVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKTsNCiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wID0gdGhpcy5ub3JtYWxpemVUaW1lc3RhbXAodGltZVRleHQpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaJvuS4jeWIsOaXtumXtOWFg+e0oO+8jOS9v+eUqOa2iOaBr+WGheWuueS9nOS4uueos+Wumuagh+ivhuespg0KICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXAgPSBgY29udGVudF8ke3RoaXMuZ2VuZXJhdGVTdGFibGVUaW1lc3RhbXAodXNlck5hbWUsIGxhc3RNZXNzYWdlKX1gOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICghdXNlck5hbWUgfHwgdXNlck5hbWUgPT09ICfmnKrnn6XnlKjmiLcnKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfnlKjmiLflkI3mj5Dlj5blpLHotKXmiJbkuLrpu5jorqTlgLwn",
        "LCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnREYXRhS2V5OiBjb250YWN0RWxlbWVudC5kYXRhc2V0Py5rZXksDQogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50VGV4dDogY29udGFjdEVsZW1lbnQudGV4dENvbnRlbnQ/LnN1YnN0cmluZygwLCAxMDApDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aPkOWPlueUqOaIt+S/oeaBr+aIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VMZW5ndGg6IGxhc3RNZXNzYWdlPy5sZW5ndGggfHwgMCwNCiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wLA0KICAgICAgICAgICAgICAgICAgICBoYXNUaW1lRWxlbWVudDogISF0aW1lRWxlbWVudA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5o+Q5Y+W55So5oi3SUQNCiAgICAgICAgICAgICAgICBsZXQgdXNlcklkID0gJyc7DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Ux77ya5LuOZGF0YXNldC5rZXnojrflj5YNCiAgICAgICAgICAgICAgICBpZiAoY29udGFjdEVsZW1lbnQuZGF0YXNldCAmJiBjb250YWN0RWxlbWVudC5kYXRhc2V0LmtleSkgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQgPSBjb250YWN0RWxlbWVudC5kYXRhc2V0LmtleTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5Uy77ya5LuOZGF0YS1pZOWxnuaAp+iOt+WPlg0KICAgICAgICAgICAgICAgIGlmICghdXNlcklkICYmIGNvbnRhY3RFbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1pZCcpKSB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJJZCA9IGNvbnRhY3RFbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1pZCcpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTPvvJrku45kYXRhLXVzZXItaWTlsZ7mgKfojrflj5YNCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJZCAmJiBjb250YWN0RWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdXNlci1pZCcpKSB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJJZCA9IGNvbnRhY3RFbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS11c2VyLWlkJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5LuN54S25rKh5pyJdXNlcklk77yM5L2/55SodXNlck5hbWXkvZzkuLrmoIfor4YNCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQgPSAnbmFtZTonICsgdXNlck5hbWU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5o+Q5Y+WY29udmVyc2F0aW9uSWQNCiAgICAgICAgICAgICAgICBjb25z",
        "dCBjb252ZXJzYXRpb25JZCA9IGNvbnRhY3RFbGVtZW50LmRhdGFzZXQ/LmtleTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5o+Q5Y+W55So5oi3SUTmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkID8gY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nIDogJ04vQScsDQogICAgICAgICAgICAgICAgICAgIHNvdXJjZTogdXNlcklkLnN0YXJ0c1dpdGgoJ25hbWU6JykgPyAndXNlck5hbWUnIDogJ2RhdGFBdHRyaWJ1dGUnDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZCwgLy8g5re75YqgY29udmVyc2F0aW9uSWTlrZfmrrUNCiAgICAgICAgICAgICAgICAgICAgbGFzdE1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcCwNCiAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogY29udGFjdEVsZW1lbnQNCiAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aPkOWPlueUqOaIt+S/oeaBr+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWinuW8uueahOeUqOaIt+WQjeaPkOWPluaWueazlQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRhY3RFbGVtZW50IOS8muivneWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfQ0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdFVzZXJOYW1lRW5oYW5jZWQoY29udGFjdEVsZW1lbnQpIHsNCiAgICAgICAgICAgIC8vIOabtOaWsOeahOmAieaLqeWZqOWIl+ihqCAtIOWfuuS6juacgOaWsERPTee7k+aehOWIhuaekA0KICAgICAgICAgICAgY29uc3Qgc2VsZWN0b3JzID0gWw0KICAgICAgICAgICAgICAgIC8vIOacgOaWsOWwj+e6ouS5pkRPTee7k+aehOmAieaLqeWZqO+8iDIwMjTlubTmm7TmlrDvvIkNCiAgICAgICAgICAgICAgICAnLnN4LWNvbnRhY3QtaXRlbSAubmljay1uYW1lJywgIC8vIOacgOS9s+mAieaLqeWZqO+8muiBlOezu+S6uumhueS4reeahOaYteensA0KICAgICAgICAgICAgICAgICcubmljay1uYW1lJywgICAgICAgICAgICAgICAgICAgLy8g55u05o6l5pi156ew6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgJy5kLXRleHQubmljay1uYW1lJywgICAgICAgICAgIC8vIOW4pmQtdGV4dOexu+eahOaYteensA0KICAgICAgICAgICAgICAgICcuaXRlbS1tYWluLXRvcCAubmljay1uYW1lJywgICAvLyDkuLvopoHljLrln5/kuK3n",
        "moTmmLXnp7ANCg0KICAgICAgICAgICAgICAgIC8vIOagh+WHhumAieaLqeWZqO+8iOS/neaMgeWFvOWuueaAp++8iQ0KICAgICAgICAgICAgICAgIENPTkZJRy5TRUxFQ1RPUlMudXNlck5hbWUsDQogICAgICAgICAgICAgICAgJy5pdGVtLW1haW4tdG9wIC5kLXRleHQnLA0KDQogICAgICAgICAgICAgICAgLy8g5bCP57qi5Lmm54m55a6a6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgJy5zeC1jb250YWN0LWl0ZW0tbmFtZScsDQogICAgICAgICAgICAgICAgJy5jb250YWN0LW5hbWUnLA0KICAgICAgICAgICAgICAgICcudXNlci1uYW1lJywNCiAgICAgICAgICAgICAgICAnLm5hbWUnLA0KICAgICAgICAgICAgICAgICcudGl0bGUnLA0KDQogICAgICAgICAgICAgICAgLy8g6YCa55So6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgJ1tjbGFzcyo9Im5hbWUiXScsDQogICAgICAgICAgICAgICAgJ1tjbGFzcyo9Im5pY2siXScsDQogICAgICAgICAgICAgICAgJ1tjbGFzcyo9InVzZXIiXScsDQogICAgICAgICAgICAgICAgJy5kLXRleHQ6Zmlyc3QtY2hpbGQnLA0KDQogICAgICAgICAgICAgICAgLy8g6ZmN57qn6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgJy5kLXRleHQnLA0KICAgICAgICAgICAgICAgICdzcGFuJywNCiAgICAgICAgICAgICAgICAnZGl2Jw0KICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgLy8g5re75Yqg6K+m57uG55qE6LCD6K+V5L+h5oGvDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+W8gOWni+eUqOaIt+WQjeaPkOWPlicsIHsNCiAgICAgICAgICAgICAgICBlbGVtZW50VGFnOiBjb250YWN0RWxlbWVudC50YWdOYW1lLA0KICAgICAgICAgICAgICAgIGVsZW1lbnRDbGFzczogY29udGFjdEVsZW1lbnQuY2xhc3NOYW1lLA0KICAgICAgICAgICAgICAgIGVsZW1lbnRJZDogY29udGFjdEVsZW1lbnQuaWQsDQogICAgICAgICAgICAgICAgZGF0YUtleTogY29udGFjdEVsZW1lbnQuZGF0YXNldD8ua2V5LA0KICAgICAgICAgICAgICAgIGlubmVySFRNTDogY29udGFjdEVsZW1lbnQuaW5uZXJIVE1MLnN1YnN0cmluZygwLCAyMDApICsgJy4uLicNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdG9yIG9mIHNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG5hbWVFbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcihzZWxlY3RvciwgY29udGFjdEVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICBpZiAobmFtZUVsZW1lbnQgJiYgbmFtZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuYW1lID0gbmFtZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aJvuWIsOa9nOWcqOeUqOaIt+WQjeWFg+e0oCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Rv",
        "ciwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRUYWc6IG5hbWVFbGVtZW50LnRhZ05hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudENsYXNzOiBuYW1lRWxlbWVudC5jbGFzc05hbWUNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDov4fmu6TmjonmmI7mmL7kuI3mmK/nlKjmiLflkI3nmoTlhoXlrrkNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzVmFsaWRVc2VyTmFtZShuYW1lKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn55So5oi35ZCN5o+Q5Y+W5oiQ5YqfJywgeyBzZWxlY3RvciwgbmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmFtZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfnlKjmiLflkI3pqozor4HlpLHotKUnLCB7IHNlbGVjdG9yLCBuYW1lLCByZWFzb246ICfkuI3nrKblkIjnlKjmiLflkI3moLzlvI8nIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpgInmi6nlmajmnKrmib7liLDmnInmlYjlhYPntKAnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3IsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm91bmQ6ICEhbmFtZUVsZW1lbnQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzVGV4dDogbmFtZUVsZW1lbnQgPyAhIW5hbWVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSA6IGZhbHNlDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn55So5oi35ZCN6YCJ5oup5Zmo5aSx6LSlJywgeyBzZWxlY3RvciwgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDpmY3nuqfnrZbnlaXvvJrlsJ3or5Xku47lhbbku5blsZ7mgKfnlJ/miJDnlKjmiLfmoIfor4YNCiAgICAgICAgICAgIGNvbnN0IGZhbGxiYWNrTmFtZSA9IHRoaXMuZ2VuZXJhdGVGYWxsYmFja1VzZXJOYW1lKGNvbnRhY3RFbGVtZW50KTsNCiAgICAgICAgICAgIGlmIChmYWxsYmFja05hbWUgJiYgZmFsbGJhY2tOYW1lICE9PSAn5pyq55+l55So5oi3Jykgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfkvb/nlKjpmY3nuqfnrZbnlaXnlJ/miJDnlKjmiLfmoIfor4YnLCB7IGZhbGxiYWNrTmFtZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsbGJhY2tOYW1lOw0KICAgICAg",
        "ICAgICAgfQ0KDQogICAgICAgICAgICAvLyDlop7lvLrnmoTplJnor6/kv6Hmga8NCiAgICAgICAgICAgIExvZ2dlci53YXJuKCfmiYDmnInnlKjmiLflkI3mj5Dlj5bnrZbnlaXpg73lpLHotKUnLCB7DQogICAgICAgICAgICAgICAgZWxlbWVudE91dGVySFRNTDogY29udGFjdEVsZW1lbnQub3V0ZXJIVE1MLnN1YnN0cmluZygwLCA1MDApICsgJy4uLicsDQogICAgICAgICAgICAgICAgYXZhaWxhYmxlQ2xhc3NlczogY29udGFjdEVsZW1lbnQuY2xhc3NOYW1lLA0KICAgICAgICAgICAgICAgIGNoaWxkRWxlbWVudHNDb3VudDogY29udGFjdEVsZW1lbnQuY2hpbGRyZW4ubGVuZ3RoLA0KICAgICAgICAgICAgICAgIHRleHRDb250ZW50OiBjb250YWN0RWxlbWVudC50ZXh0Q29udGVudC5zdWJzdHJpbmcoMCwgMTAwKSArICcuLi4nDQogICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIHJldHVybiAn5pyq55+l55So5oi3JzsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aKe5by655qE5raI5oGv5YaF5a655o+Q5Y+W5pa55rOVDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gY29udGFjdEVsZW1lbnQg5Lya6K+d5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0TGFzdE1lc3NhZ2VFbmhhbmNlZChjb250YWN0RWxlbWVudCkgew0KICAgICAgICAgICAgY29uc3Qgc2VsZWN0b3JzID0gWw0KICAgICAgICAgICAgICAgIC8vIOagh+WHhumAieaLqeWZqA0KICAgICAgICAgICAgICAgIENPTkZJRy5TRUxFQ1RPUlMubGFzdE1lc3NhZ2UsDQogICAgICAgICAgICAgICAgJy5jb250ZW50JywNCiAgICAgICAgICAgICAgICAnLml0ZW0tbWFpbi1jZW50ZXIgLmNvbnRlbnQnLA0KICAgICAgICAgICAgICAgICcuZC10ZXh0LmNvbnRlbnQnLA0KDQogICAgICAgICAgICAgICAgLy8g5bCP57qi5Lmm54m55a6a6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgJy5zeC1jb250YWN0LWl0ZW0tbWVzc2FnZScsDQogICAgICAgICAgICAgICAgJy5sYXN0LW1lc3NhZ2UnLA0KICAgICAgICAgICAgICAgICcubWVzc2FnZS1wcmV2aWV3JywNCiAgICAgICAgICAgICAgICAnLm1lc3NhZ2UtY29udGVudCcsDQoNCiAgICAgICAgICAgICAgICAvLyDpgJrnlKjpgInmi6nlmagNCiAgICAgICAgICAgICAgICAnW2NsYXNzKj0ibWVzc2FnZSJdJywNCiAgICAgICAgICAgICAgICAnW2NsYXNzKj0iY29udGVudCJdJywNCiAgICAgICAgICAgICAgICAnLmQtdGV4dDpsYXN0LWNoaWxkJywNCiAgICAgICAgICAgICAgICAnLmQtdGV4dDpudGgtY2hpbGQoMiknDQogICAgICAgICAgICBdOw0KDQogICAgICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdG9yIG9mIHNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2VFbGVtZW50ID0gVXRpbHMucXVlcnlTZWxlY3RvcihzZWxlY3RvciwgY29udGFjdEVsZW1lbnQpOw0K",
        "ICAgICAgICAgICAgICAgICAgICBpZiAobWVzc2FnZUVsZW1lbnQgJiYgbWVzc2FnZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gbWVzc2FnZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6L+H5ruk5o6J5piO5pi+5LiN5piv5raI5oGv5YaF5a6555qE5paH5pysDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5pc1ZhbGlkTWVzc2FnZShtZXNzYWdlKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5aKe5by65raI5oGv5YaF5a655o+Q5Y+W5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RvciwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogbWVzc2FnZS5zdWJzdHJpbmcoMCwgNTApICsgKG1lc3NhZ2UubGVuZ3RoID4gNTAgPyAnLi4uJyA6ICcnKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUxlbmd0aDogbWVzc2FnZS5sZW5ndGgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWVzc2FnZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5raI5oGv6YCJ5oup5Zmo5aSx6LSlJywgeyBzZWxlY3RvciwgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WinuW8uua2iOaBr+WGheWuueaPkOWPluWksei0pe+8jOi/lOWbnuepuuWtl+espuS4sicpOw0KICAgICAgICAgICAgcmV0dXJuICcnOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnlJ/miJDpmY3nuqfnlKjmiLflkI3moIfor4YNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBjb250YWN0RWxlbWVudCDkvJror53lhYPntKANCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIGdlbmVyYXRlRmFsbGJhY2tVc2VyTmFtZShjb250YWN0RWxlbWVudCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDnrZbnlaUx77ya5L2/55SoZGF0YS1rZXnlsZ7mgKcNCiAgICAgICAgICAgICAgICBpZiAoY29udGFjdEVsZW1lbnQuZGF0YXNldCAmJiBjb250YWN0RWxlbWVudC5kYXRhc2V0LmtleSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRhS2V5ID0gY29udGFjdEVsZW1lbnQuZGF0YXNldC5rZXk7DQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenGRhdGEta2V555yL6LW35p2l5YOP55So5oi3SUTvvIznlJ/miJDkuIDkuKrlj4vlpb3nmoTmoIfor4YNCiAg",
        "ICAgICAgICAgICAgICAgICAgaWYgKGRhdGFLZXkubGVuZ3RoID4gMTApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBg55So5oi3XyR7ZGF0YUtleS5zdWJzdHJpbmcoMCwgOCl9YDsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOetlueVpTLvvJrku47lhYPntKDnmoTmiYDmnInmlofmnKzlhoXlrrnkuK3mj5Dlj5blj6/og73nmoTnlKjmiLflkI0NCiAgICAgICAgICAgICAgICBjb25zdCBhbGxUZXh0ID0gY29udGFjdEVsZW1lbnQudGV4dENvbnRlbnQgfHwgJyc7DQogICAgICAgICAgICAgICAgY29uc3QgdGV4dFBhcnRzID0gYWxsVGV4dC5zcGxpdCgvW1xzXG5cclx0XSsvKS5maWx0ZXIocGFydCA9PiBwYXJ0LnRyaW0oKSk7DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHBhcnQgb2YgdGV4dFBhcnRzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyaW1tZWQgPSBwYXJ0LnRyaW0oKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRyaW1tZWQubGVuZ3RoID49IDIgJiYgdHJpbW1lZC5sZW5ndGggPD0gMjAgJiYgdGhpcy5pc1ZhbGlkVXNlck5hbWUodHJpbW1lZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5LuO5paH5pys5YaF5a655Lit5o+Q5Y+W5Yiw55So5oi35ZCNJywgeyBuYW1lOiB0cmltbWVkIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRyaW1tZWQ7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnrZbnlaUz77ya5L2/55So5pe26Ze05oiz55Sf5oiQ5ZSv5LiA5qCH6K+GDQogICAgICAgICAgICAgICAgY29uc3QgdGltZXN0YW1wID0gRGF0ZS5ub3coKS50b1N0cmluZygpLnNsaWNlKC02KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gYOeUqOaIt18ke3RpbWVzdGFtcH1gOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6ZmN57qn55So5oi35ZCN55Sf5oiQ5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gJ+acquefpeeUqOaItyc7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmqjOivgeaYr+WQpuS4uuacieaViOeahOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBpc1ZhbGlkVXNlck5hbWUobmFtZSkgew0KICAgICAgICAgICAgaWYgKCFuYW1lIHx8IG5hbWUubGVuZ3RoIDwgMSB8fCBuYW1lLmxlbmd0aCA+IDUwKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDov4fmu6TmjonmmI7mmL7kuI3mmK/nlKjmiLfl",
        "kI3nmoTlhoXlrrkNCiAgICAgICAgICAgIGNvbnN0IGludmFsaWRQYXR0ZXJucyA9IFsNCiAgICAgICAgICAgICAgICAvXlxkKyQvLCAvLyDnuq/mlbDlrZcNCiAgICAgICAgICAgICAgICAvXltcc1xuXHJcdF0rJC8sIC8vIOe6r+epuueZveWtl+espg0KICAgICAgICAgICAgICAgIC9eW15cdTRlMDAtXHU5ZmE1YS16QS1aMC05XSskLywgLy8g5LiN5YyF5ZCr5Lit5paH44CB6Iux5paH44CB5pWw5a2X55qE5a2X56ym5LiyDQogICAgICAgICAgICAgICAgL14o5pe26Ze0fOa2iOaBr3zlhoXlrrl85qCH6aKYfOmTvuaOpXzlm77niYd86KeG6aKRfOmfs+mikSkkL2ksIC8vIOaYjuaYvueahFVJ5paH5pysDQogICAgICAgICAgICAgICAgL14o5pio5aSpfOS7iuWkqXzliJrliJp8XGQrOlxkKykkL2kgLy8g5pe26Ze055u45YWz5paH5pysDQogICAgICAgICAgICBdOw0KDQogICAgICAgICAgICByZXR1cm4gIWludmFsaWRQYXR0ZXJucy5zb21lKHBhdHRlcm4gPT4gcGF0dGVybi50ZXN0KG5hbWUpKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6aqM6K+B5piv5ZCm5Li65pyJ5pWI55qE5raI5oGv5YaF5a65DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIOa2iOaBr+WGheWuuQ0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGlzVmFsaWRNZXNzYWdlKG1lc3NhZ2UpIHsNCiAgICAgICAgICAgIGlmICghbWVzc2FnZSB8fCBtZXNzYWdlLmxlbmd0aCA+IDUwMCkgew0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g6L+H5ruk5o6J5piO5pi+5LiN5piv5raI5oGv5YaF5a6555qE5paH5pysDQogICAgICAgICAgICBjb25zdCBpbnZhbGlkUGF0dGVybnMgPSBbDQogICAgICAgICAgICAgICAgL15bXHNcblxyXHRdKyQvLCAvLyDnuq/nqbrnmb3lrZfnrKYNCiAgICAgICAgICAgICAgICAvXijnlKjmiLflkI185pi156ewfOWktOWDj3zlnKjnur9856a757q/KSQvaSwgLy8gVUnnm7jlhbPmlofmnKwNCiAgICAgICAgICAgICAgICAvXihcZCs6XGQrfFxkK+WIhumSn+WJjXzliJrliJp85pio5aSpfOS7iuWkqSkkL2kgLy8g57qv5pe26Ze05paH5pysDQogICAgICAgICAgICBdOw0KDQogICAgICAgICAgICByZXR1cm4gIWludmFsaWRQYXR0ZXJucy5zb21lKHBhdHRlcm4gPT4gcGF0dGVybi50ZXN0KG1lc3NhZ2UpKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qCH5YeG5YyW5pe26Ze05oiz77yM5aSE55CG55u45a+55pe26Ze0DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0aW1lVGV4dCDml7bpl7TmlofmnKwNCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30NCiAgICAgICAgICovDQogICAgICAgIG5vcm1hbGl6ZVRpbWVzdGFtcCh0aW1lVGV4dCkgew0KICAgICAgICAgICAgLy8g5a+55LqO55u45a+55pe26Ze077yM6L2s5o2i5Li656iz5a6a55qE5qCH6K+G",
        "56ym6ICM6Z2e57ud5a+55pe26Ze0DQogICAgICAgICAgICBpZiAodGltZVRleHQuaW5jbHVkZXMoJ+WIhumSn+WJjScpKSB7DQogICAgICAgICAgICAgICAgY29uc3QgbWludXRlcyA9IHBhcnNlSW50KHRpbWVUZXh0KSB8fCAwOw0KICAgICAgICAgICAgICAgIC8vIOWwhuWIhumSn+aVsOW9kuexu+WIsOaXtumXtOaute+8jOWHj+WwkeaXtumXtOaIs+WPmOWMlg0KICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVTbG90ID0gTWF0aC5mbG9vcihtaW51dGVzIC8gNSkgKiA1OyAvLyA15YiG6ZKf5Li65LiA5Liq5pe26Ze05q61DQogICAgICAgICAgICAgICAgcmV0dXJuIGAke3RpbWVTbG90fW1pbl9hZ29gOw0KICAgICAgICAgICAgfSBlbHNlIGlmICh0aW1lVGV4dC5pbmNsdWRlcygn5bCP5pe25YmNJykpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBob3VycyA9IHBhcnNlSW50KHRpbWVUZXh0KSB8fCAwOw0KICAgICAgICAgICAgICAgIHJldHVybiBgJHtob3Vyc31ob3VyX2Fnb2A7DQogICAgICAgICAgICB9IGVsc2UgaWYgKHRpbWVUZXh0LmluY2x1ZGVzKCflpKnliY0nKSB8fCB0aW1lVGV4dC5pbmNsdWRlcygn5pio5aSpJykpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdGltZVRleHQ7IC8vIOWkqee6p+WIq+eahOaXtumXtOebuOWvueeos+Wumg0KICAgICAgICAgICAgfSBlbHNlIGlmICh0aW1lVGV4dC5tYXRjaCgvXGR7Mn06XGR7Mn0vKSkgew0KICAgICAgICAgICAgICAgIC8vIOS7iuWkqeeahOWFt+S9k+aXtumXtO+8jOS/neaMgeWOn+agtw0KICAgICAgICAgICAgICAgIHJldHVybiB0aW1lVGV4dDsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgLy8g5YW25LuW5qC85byP77yM5L+d5oyB5Y6f5qC3DQogICAgICAgICAgICAgICAgcmV0dXJuIHRpbWVUZXh0Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnlJ/miJDln7rkuo7lhoXlrrnnmoTnqLPlrprml7bpl7TmiLMNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZUNvbnRlbnQg5raI5oGv5YaF5a65DQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBnZW5lcmF0ZVN0YWJsZVRpbWVzdGFtcCh1c2VyTmFtZSwgbWVzc2FnZUNvbnRlbnQpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBgJHt1c2VyTmFtZX1fJHttZXNzYWdlQ29udGVudH1gOw0KICAgICAgICAgICAgcmV0dXJuIE1lc3NhZ2VEZWR1cGxpY2F0b3IuZ2VuZXJhdGVDb250ZW50SGFzaChjb250ZW50KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog54K55Ye75Lya6K+d6aG5IC0g5aKe5by654mI77yM5pSv5oyB6Jma5ouf5rua5YqoDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gY29udGFjdEVsZW1lbnQg5Lya6K+d5YWD57SgDQogICAgICAgICAqIEBwYXJh",
        "bSB7T2JqZWN0fSBvcHRpb25zIOmAiemhuQ0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGNsaWNrQ29udGFjdEl0ZW0oY29udGFjdEVsZW1lbnQsIG9wdGlvbnMgPSB7fSkgew0KICAgICAgICAgICAgY29uc3QgdXNlck5hbWUgPSBQYWdlRWxlbWVudE1hbmFnZXIuZXh0cmFjdFVzZXJOYW1lKGNvbnRhY3RFbGVtZW50KSB8fCAn5pyq55+l55So5oi3JzsNCiAgICAgICAgICAgIGNvbnN0IHNraXBBY3RpdmF0aW9uID0gb3B0aW9ucy5za2lwQWN0aXZhdGlvbiB8fCBmYWxzZTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflh4blpIfngrnlh7vkvJror53pobknLCB7IHVzZXJOYW1lLCBza2lwQWN0aXZhdGlvbiB9KTsNCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyAxLiDmnaHku7bmgKflhYPntKDmv4DmtLvvvIjpgb/lhY3ph43lpI3mv4DmtLvvvIkNCiAgICAgICAgICAgICAgICBpZiAoIXNraXBBY3RpdmF0aW9uKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IEVsZW1lbnRNYW5hZ2VyLmlzRWxlbWVudFZpc2libGUoY29udGFjdEVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoIWlzVmlzaWJsZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfkvJror53pobnkuI3lj6/op4HvvIzlsJ3or5Xmv4DmtLsnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2YXRlZCA9IGF3YWl0IEVsZW1lbnRNYW5hZ2VyLmZpbmRBbmRBY3RpdmF0ZUVsZW1lbnQoY29udGFjdEVsZW1lbnQsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3YWl0Rm9yU3RhYmlsaXR5OiBmYWxzZSAvLyDot7Pov4fnqLPlrprmgKfnrYnlvoUNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFhY3RpdmF0ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoYOaXoOazlea/gOa0u+aIlua7muWKqOWIsOS8muivnemhuTogJHt1c2VyTmFtZX1gKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S8muivnemhueW3suWPr+inge+8jOi3s+i/h+a/gOa0uycpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfot7Pov4flhYPntKDmv4DmtLvmo4Dmn6UnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnrYnlvoXmu5rliqjmlYjmnpznqLPlrpoNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheShDT05GSUcuREVMQVlTLmNsaWNrRGVsYXkgLyAyKTsNCg0KICAgICAgICAg",
        "ICAgICAgIC8vIDIuIOaooeaLn+eCueWHuw0KICAgICAgICAgICAgICAgIGNvbnN0IGNsaWNrZWQgPSBVdGlscy5zaW11bGF0ZUNsaWNrKGNvbnRhY3RFbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAoIWNsaWNrZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKGDmqKHmi5/ngrnlh7vlpLHotKU6ICR7dXNlck5hbWV9YCk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbyhg5oiQ5Yqf54K55Ye75Lya6K+d6aG5OiAke3VzZXJOYW1lfWApOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcihg54K55Ye75Lya6K+d6aG55pe25Y+R55Sf5pyq55+l6ZSZ6K+vOiAke3VzZXJOYW1lfWAsIHsNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgIHN0YWNrOiBlcnJvci5zdGFjaw0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5o+Q5Y+W5pyA5paw5raI5oGv5YaF5a65IC0g5bey5pu05paw5Lul6YCC6YWN6Jma5ouf5rua5Yqo57uT5p6E77yM5Z+65LqO5pe26Ze05oiz5o6S5bqPDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGV4dHJhY3RMYXRlc3RNZXNzYWdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+W8gOWni+aPkOWPluacgOaWsOa2iOaBry4uLicpOw0KDQogICAgICAgICAgICAgICAgLy8g562J5b6F5a+56K+d56qX5Y+j5Yqg6L29IC0g5L2/55So5paw55qE6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgY29uc3QgY2hhdFdpbmRvdyA9IFBhZ2VFbGVtZW50TWFuYWdlci5nZXRFbGVtZW50V2l0aFNtYXJ0RmFsbGJhY2soJ2NoYXRXaW5kb3cnKTsNCiAgICAgICAgICAgICAgICBpZiAoIWNoYXRXaW5kb3cpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflr7nor53nqpflj6PmnKrmib7liLAnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmib7liLDlr7nor53nqpflj6MnLCB7DQogICAgICAgICAgICAgICAgICAgIGlkOiBjaGF0V2luZG93LmlkLA0KICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IGNoYXRXaW5kb3cuY2xhc3NOYW1lDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmn6Xmib7omZrmi5/mu5rliqjlrrnlmagNCiAgICAgICAgICAgICAgICBjb25zdCBzY3JvbGxDb250YWluZXIgPSBQYWdlRWxl",
        "bWVudE1hbmFnZXIuZ2V0RWxlbWVudFdpdGhTbWFydEZhbGxiYWNrKCdjaGF0Q29udGFpbmVyJywgY2hhdFdpbmRvdyk7DQogICAgICAgICAgICAgICAgaWYgKCFzY3JvbGxDb250YWluZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfomZrmi5/mu5rliqjlrrnlmajmnKrmib7liLAnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g562J5b6F5raI5oGv5Yqg6L29DQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMTAwMCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmn6Xmib7miYDmnInlj6/op4HnmoTmtojmga/pobkgLSDpgILphY3omZrmi5/mu5rliqgNCiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlVmlld3MgPSBVdGlscy5xdWVyeVNlbGVjdG9yQWxsKCcudnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0tdmlldycsIHNjcm9sbENvbnRhaW5lcik7DQogICAgICAgICAgICAgICAgY29uc3QgdXNlck1lc3NhZ2VzID0gW107DQoNCiAgICAgICAgICAgICAgICAvLyDmlLbpm4bmiYDmnInnlKjmiLfmtojmga/lubbmj5Dlj5bml7bpl7TmiLMNCiAgICAgICAgICAgICAgICBtZXNzYWdlVmlld3MuZm9yRWFjaCgodmlldywgdmlld0luZGV4KSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybSA9IHZpZXcuc3R5bGUudHJhbnNmb3JtOw0KICAgICAgICAgICAgICAgICAgICAvLyDot7Pov4fooqvnp7vlh7rop4bnqpfnmoTlhYPntKDvvIh0cmFuc2xhdGVZKC05OTk5cHgp77yJDQogICAgICAgICAgICAgICAgICAgIGlmICghdHJhbnNmb3JtLmluY2x1ZGVzKCctOTk5OXB4JykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2VJdGVtID0gVXRpbHMucXVlcnlTZWxlY3RvcignLmltLW1zZy1pdGVtJywgdmlldyk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAobWVzc2FnZUl0ZW0pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6Xmtojmga/nmoTluIPlsYDmlrnlkJHmnaXliKTmlq3mmK/lkKbmmK/nlKjmiLflj5HpgIHnmoTmtojmga8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmbGV4Q29udGFpbmVyID0gVXRpbHMucXVlcnlTZWxlY3RvcignZGl2W3N0eWxlKj0iZGlzcGxheTogZmxleCJdJywgbWVzc2FnZUl0ZW0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmbGV4Q29udGFpbmVyKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGp1c3RpZnlDb250ZW50ID0gZmxleENvbnRhaW5lci5zdHlsZS5qdXN0aWZ5Q29udGVudDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNVc2VyTWVzc2FnZSA9IGp1c3RpZnlDb250ZW50ID09PSAnZmxleC1zdGFydCc7IC8vIOW3puWvuem9kOeahOaYr+eUqOaIt+a2iOaBrw0KICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICBjb25zdCBpc0FJUmVwbHkgPSBqdXN0aWZ5Q29udGVudCA9PT0gJ2ZsZXgtZW5kJzsgLy8g5Y+z5a+56b2Q55qE5pivQUnlm57lpI0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNTeXN0ZW1NZXNzYWdlID0ganVzdGlmeUNvbnRlbnQgPT09ICdjZW50ZXInOyAvLyDlsYXkuK3nmoTmmK/ns7vnu5/mtojmga8NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a2iOaBr+aWueWQkeajgOa1iycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNVc2VyTWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzQUlSZXBseSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzU3lzdGVtTWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdJbmRleDogdmlld0luZGV4DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWPquWkhOeQhueUqOaIt+a2iOaBr++8jOaOkumZpEFJ5Zue5aSN5ZKM57O757uf5raI5oGvDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1VzZXJNZXNzYWdlICYmICFpc0FJUmVwbHkgJiYgIWlzU3lzdGVtTWVzc2FnZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5o+Q5Y+W5pe26Ze05oizDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0aW1lRWxlbWVudCA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJ3NwYW5bc3R5bGUqPSJjb2xvcjogdmFyKC0tVGV4dC1wbGFjZWhvbGRlciJdJywgbWVzc2FnZUl0ZW0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHRpbWVzdGFtcCA9IG51bGw7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgdGltZVRleHQgPSAnJzsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRpbWVFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZVRleHQgPSB0aW1lRWxlbWVudC50ZXh0Q29udGVudC50cmltKCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g6Kej5p6Q5pe26Ze05oiz77yM5qC85byP5aaC77yaIuaYn+Wwj+S4uyAyMDI1LTA3LTExIDIyOjEyOjQ3Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVNYXRjaCA9IHRpbWVUZXh0Lm1hdGNoKC8oXGR7NH0tXGR7Mn0tXGR7Mn0gXGR7Mn06XGR7Mn06XGR7Mn0pLyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRpbWVNYXRjaCkgew0KICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXAgPSBuZXcgRGF0ZSh0aW1lTWF0Y2hbMV0pLmdldFRpbWUoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOS9v+eUqOe7n+S4gOeahOa2iOaBr+WGheWuueaPkOWPlg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZVR5cGUgPSB0aGlzLmRldGVjdE1lc3NhZ2VUeXBlKG1lc3NhZ2VJdGVtKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLmV4dHJhY3RVbmlmaWVkQ29udGVudChtZXNzYWdlSXRlbSwgbWVzc2FnZVR5cGUpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29udGVudCAmJiBjb250ZW50Lmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTWVzc2FnZXMucHVzaCh7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGNvbnRlbnQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogdGltZXN0YW1wIHx8IDAsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVUZXh0OiB0aW1lVGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZVR5cGU6IG1lc3NhZ2VUeXBlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3SW5kZXg6IHZpZXdJbmRleCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogbWVzc2FnZUl0ZW0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5om+5Yiw55So5oi35raI5oGvJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBjb250ZW50LnN1YnN0cmluZygwLCA1MCkgKyAoY29udGVudC5sZW5ndGggPiA1MCA/ICcuLi4nIDogJycpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlVHlwZTogbWVzc2FnZVR5cGUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVUZXh0OiB0aW1lVGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiB0aW1lc3RhbXAsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdJbmRleDogdmlld0luZGV4DQogICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5raI5oGv5YaF5a655o+Q5Y+W5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlVHlwZTogbWVzc2FnZVR5cGUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdJbmRleDogdmlld0luZGV4LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lVGV4dDogdGltZVRleHQNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmib7liLDnlKjmiLfmtojmga/mgLvmlbAnLCB7IGNvdW50OiB1c2VyTWVzc2FnZXMubGVuZ3RoIH0pOw0KDQogICAgICAgICAgICAgICAgaWYgKHVzZXJNZXNzYWdlcy5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+acquaJvuWIsOS7u+S9leeUqOaIt+a2iOaBrycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmjInml7bpl7TmiLPmjpLluo/vvIzmib7liLDmnIDmlrDnmoTmtojmga8NCiAgICAgICAgICAgICAgICB1c2VyTWVzc2FnZXMuc29ydCgoYSwgYikgPT4gYi50aW1lc3RhbXAgLSBhLnRpbWVzdGFtcCk7DQogICAgICAgICAgICAgICAgY29uc3QgbGF0ZXN0TWVzc2FnZSA9IHVzZXJNZXNzYWdlc1swXTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmiJDlip/mj5Dlj5bmnIDmlrDnlKjmiLfmtojmga8nLCB7DQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGxhdGVzdE1lc3NhZ2UuY29udGVudC5zdWJzdHJpbmcoMCwgMTAwKSArIChsYXRlc3RNZXNzYWdlLmNvbnRlbnQubGVuZ3RoID4gMTAwID8gJy4uLicgOiAnJyksDQogICAgICAgICAgICAgICAgICAgIHRpbWVUZXh0OiBsYXRlc3RNZXNzYWdlLnRpbWVUZXh0LA0KICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IGxhdGVzdE1lc3NhZ2UudGltZXN0YW1wLA0KICAgICAgICAgICAgICAgICAgICBzZWxlY3RvcjogbGF0ZXN0TWVzc2FnZS5zZWxlY3RvciwNCiAgICAgICAgICAgICAgICAgICAgdmlld0luZGV4OiBsYXRlc3RNZXNzYWdlLnZpZXdJbmRleA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0",
        "dXJuIGxhdGVzdE1lc3NhZ2UuY29udGVudDsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aPkOWPluacgOaWsOa2iOaBr+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UsIHN0YWNrOiBlcnJvci5zdGFjayB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5rWL5raI5oGv57G75Z6LDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gbWVzc2FnZUVsZW1lbnQg5raI5oGv5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IOa2iOaBr+exu+Wei++8midURVhUJywgJ0NBUkQnLCAnRU1PSkknLCAnU1BPVExJR0hUX0xFQUQnLCAnVU5LTk9XTicNCiAgICAgICAgICovDQogICAgICAgIGRldGVjdE1lc3NhZ2VUeXBlKG1lc3NhZ2VFbGVtZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOS8mOWFiOajgOa1i+iBmuWFiei/m+e6v+a2iOaBrw0KICAgICAgICAgICAgICAgIGlmIChTcG90bGlnaHRMZWFkUHJvY2Vzc29yLmlzU3BvdGxpZ2h0TGVhZChtZXNzYWdlRWxlbWVudCkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmo4DmtYvliLDogZrlhYnov5vnur/mtojmga8nKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIENPTkZJRy5NRVNTQUdFX1RZUEVTLlNQT1RMSUdIVF9MRUFEOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOafpeaJvua2iOaBr+WuueWZqA0KICAgICAgICAgICAgICAgIGNvbnN0IG1zZ0NvbnRhaW5lciA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW1zZy10eXBlXScsIG1lc3NhZ2VFbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAoIW1zZ0NvbnRhaW5lcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+acquaJvuWIsGRhdGEtbXNnLXR5cGXlsZ7mgKcnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIENPTkZJRy5NRVNTQUdFX1RZUEVTLlVOS05PV047DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgbXNnVHlwZSA9IG1zZ0NvbnRhaW5lci5nZXRBdHRyaWJ1dGUoJ2RhdGEtbXNnLXR5cGUnKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+ajgOa1i+WIsOa2iOaBr+exu+WeiycsIHsgbXNnVHlwZSB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr1RFWFTnsbvlnovvvIzov5vkuIDmraXmo4Dmn6XmmK/lkKbljIXlkKvooajmg4XljIUNCiAgICAgICAgICAgICAgICBpZiAobXNnVHlwZSA9PT0gJ1RFWFQnKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGVtb2ppSW1nID0gVXRpbHMucXVlcnlTZWxlY3RvcignLnhocy1lbW9qaScsIG1zZ0NvbnRhaW5lcik7DQogICAgICAgICAgICAgICAgICAgIGlmIChlbW9qaUltZykgew0KICAgICAg",
        "ICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmo4DmtYvliLDooajmg4XljIXmtojmga8nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBDT05GSUcuTUVTU0FHRV9UWVBFUy5FTU9KSTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gQ09ORklHLk1FU1NBR0VfVFlQRVMuVEVYVDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDov5Tlm57lr7nlupTnmoTmtojmga/nsbvlnovluLjph48NCiAgICAgICAgICAgICAgICBzd2l0Y2ggKG1zZ1R5cGUpIHsNCiAgICAgICAgICAgICAgICAgICAgY2FzZSAnQ0FSRCc6DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gQ09ORklHLk1FU1NBR0VfVFlQRVMuQ0FSRDsNCiAgICAgICAgICAgICAgICAgICAgY2FzZSAnVEVYVCc6DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gQ09ORklHLk1FU1NBR0VfVFlQRVMuVEVYVDsNCiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBtc2dUeXBlIHx8IENPTkZJRy5NRVNTQUdFX1RZUEVTLlVOS05PV047DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a2iOaBr+exu+Wei+ajgOa1i+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIENPTkZJRy5NRVNTQUdFX1RZUEVTLlVOS05PV047DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOe7n+S4gOeahOa2iOaBr+WGheWuueaPkOWPlg0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IG1lc3NhZ2VFbGVtZW50IOa2iOaBr+WFg+e0oA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZVR5cGUg5raI5oGv57G75Z6LDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd8bnVsbH0g5o+Q5Y+W55qE5YaF5a65DQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0VW5pZmllZENvbnRlbnQobWVzc2FnZUVsZW1lbnQsIG1lc3NhZ2VUeXBlKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHN3aXRjaCAobWVzc2FnZVR5cGUpIHsNCiAgICAgICAgICAgICAgICAgICAgY2FzZSBDT05GSUcuTUVTU0FHRV9UWVBFUy5TUE9UTElHSFRfTEVBRDoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmV4dHJhY3RTcG90bGlnaHRMZWFkQ29udGVudChtZXNzYWdlRWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgIGNhc2UgQ09ORklHLk1FU1NBR0VfVFlQRVMuRU1PSkk6DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5leHRyYWN0RW1vamlDb250ZW50KG1lc3NhZ2VFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgY2FzZSBDT05GSUcuTUVTU0FHRV9UWVBFUy5DQVJEOg0KICAgICAgICAg",
        "ICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZXh0cmFjdENhcmRDb250ZW50KG1lc3NhZ2VFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgY2FzZSBDT05GSUcuTUVTU0FHRV9UWVBFUy5URVhUOg0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZXh0cmFjdFRleHRDb250ZW50KG1lc3NhZ2VFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgLy8g5YW85a655pen54mI5pys5a2X56ym5Liy5bi46YePDQogICAgICAgICAgICAgICAgICAgIGNhc2UgJ0VNT0pJJzoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmV4dHJhY3RFbW9qaUNvbnRlbnQobWVzc2FnZUVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICBjYXNlICdDQVJEJzoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmV4dHJhY3RDYXJkQ29udGVudChtZXNzYWdlRWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgIGNhc2UgJ1RFWFQnOg0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZXh0cmFjdFRleHRDb250ZW50KG1lc3NhZ2VFbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWbnumAgOWIsOWOn+aciemAu+i+kQ0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZXh0cmFjdFRleHRDb250ZW50KG1lc3NhZ2VFbGVtZW50KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn57uf5LiA5YaF5a655o+Q5Y+W5aSx6LSlJywgeyBtZXNzYWdlVHlwZSwgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaPkOWPluiBmuWFiei/m+e6v+WGheWuuQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IG1lc3NhZ2VFbGVtZW50IOa2iOaBr+WFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0U3BvdGxpZ2h0TGVhZENvbnRlbnQobWVzc2FnZUVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgbGVhZENvbnRlbnQgPSBTcG90bGlnaHRMZWFkUHJvY2Vzc29yLmV4dHJhY3RTcG90bGlnaHRMZWFkQ29udGVudChtZXNzYWdlRWxlbWVudCk7DQogICAgICAgICAgICAgICAgaWYgKGxlYWRDb250ZW50KSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOi/lOWbnuagvOW8j+WMlueahOWGheWuueeUqOS6juaYvuekuuWSjOWkhOeQhg0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gYFvogZrlhYnov5vnur9dICR7bGVhZENvbnRlbnQuZnVsbFRleHR9YDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9",
        "IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6IGa5YWJ6L+b57q/5YaF5a655o+Q5Y+W5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5o+Q5Y+W6KGo5oOF5YyF5YaF5a65DQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gbWVzc2FnZUVsZW1lbnQg5raI5oGv5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RFbW9qaUNvbnRlbnQobWVzc2FnZUVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgZW1vamlJbWcgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcueGhzLWVtb2ppJywgbWVzc2FnZUVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmIChlbW9qaUltZyAmJiBlbW9qaUltZy5hbHQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZW1vamlUZXh0ID0gZW1vamlJbWcuYWx0LnRyaW0oKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmj5Dlj5booajmg4XljIXlhoXlrrknLCB7IGVtb2ppVGV4dCB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVtb2ppVGV4dDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6KGo5oOF5YyF5YaF5a655o+Q5Y+W5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5o+Q5Y+W56yU6K6w5Y2h54mH5YaF5a65DQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gbWVzc2FnZUVsZW1lbnQg5raI5oGv5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RDYXJkQ29udGVudChtZXNzYWdlRWxlbWVudCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjYXJkQ29udGFpbmVyID0gVXRpbHMucXVlcnlTZWxlY3RvcignLmNhcmRfY29udGFpbmVyJywgbWVzc2FnZUVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmICghY2FyZENvbnRhaW5lcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+acquaJvuWIsOWNoeeJh+WuueWZqCcpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmj5Dlj5bmoIfpopgNCiAgICAgICAgICAgICAgICBjb25zdCB0aXRsZUVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcuY2FyZF9ib3R0b21fdGl0bGUn",
        "LCBjYXJkQ29udGFpbmVyKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0aXRsZSA9IHRpdGxlRWxlbWVudCA/IHRpdGxlRWxlbWVudC50ZXh0Q29udGVudC50cmltKCkgOiAnJzsNCg0KICAgICAgICAgICAgICAgIC8vIOaPkOWPluS9nOiAhQ0KICAgICAgICAgICAgICAgIGNvbnN0IGF1dGhvckVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKCcuY2FyZF9ib3R0b21faW5mb19uYW1lJywgY2FyZENvbnRhaW5lcik7DQogICAgICAgICAgICAgICAgY29uc3QgYXV0aG9yID0gYXV0aG9yRWxlbWVudCA/IGF1dGhvckVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpIDogJyc7DQoNCiAgICAgICAgICAgICAgICBpZiAodGl0bGUpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2FyZENvbnRlbnQgPSBhdXRob3IgPyBgW+eslOiusF0gJHt0aXRsZX0gLSAke2F1dGhvcn1gIDogYFvnrJTorrBdICR7dGl0bGV9YDsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmj5Dlj5bnrJTorrDljaHniYflhoXlrrknLCB7IHRpdGxlLCBhdXRob3IsIGNhcmRDb250ZW50IH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2FyZENvbnRlbnQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn56yU6K6w5Y2h54mH5YaF5a655o+Q5Y+W5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5o+Q5Y+W5pmu6YCa5paH5pys5YaF5a65DQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gbWVzc2FnZUVsZW1lbnQg5raI5oGv5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RUZXh0Q29udGVudChtZXNzYWdlRWxlbWVudCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50U2VsZWN0b3JzID0gWw0KICAgICAgICAgICAgICAgICAgICAnLnRleHQtbWVzc2FnZSBzcGFuIHNwYW4nLCAvLyDmnIDlhbfkvZPnmoTpgInmi6nlmagNCiAgICAgICAgICAgICAgICAgICAgJy50ZXh0LW1lc3NhZ2Ugc3BhbicsDQogICAgICAgICAgICAgICAgICAgICcudGV4dC1tZXNzYWdlJywNCiAgICAgICAgICAgICAgICAgICAgJy5sZWZ0IC50ZXh0LW1lc3NhZ2UnLA0KICAgICAgICAgICAgICAgICAgICAncC50ZXh0LW1lc3NhZ2Ugc3BhbicsDQogICAgICAgICAgICAgICAgICAgICcuY29udGVudCcNCiAgICAgICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiBjb250ZW50U2VsZWN0b3JzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnRFbGVtZW50ID0gVXRpbHMu",
        "cXVlcnlTZWxlY3RvcihzZWxlY3RvciwgbWVzc2FnZUVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoY29udGVudEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBjb250ZW50RWxlbWVudC50ZXh0Q29udGVudC50cmltKCk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29udGVudCAmJiBjb250ZW50Lmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aPkOWPluaWh+acrOWGheWuuScsIHsgc2VsZWN0b3IsIGNvbnRlbnRMZW5ndGg6IGNvbnRlbnQubGVuZ3RoIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb250ZW50Ow0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5paH5pys5YaF5a655o+Q5Y+W5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6Ieq5Yqo6K6w5b2V55So5oi35Yiw6L+957KJ57O757ufDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSB1c2VySW5mbyDnlKjmiLfkv6Hmga8NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2VDb250ZW50IOa2iOaBr+WGheWuuQ0KICAgICAgICAgKi8NCiAgICAgICAgYXV0b1JlY29yZFVzZXJGb3JGb2xsb3dVcCh1c2VySW5mbywgbWVzc2FnZUNvbnRlbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCFGb2xsb3dVcE1hbmFnZXIgfHwgIUZvbGxvd1VwUmVjb3JkTWFuYWdlcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqOacquWIneWni+WMlu+8jOi3s+i/h+iHquWKqOiusOW9lScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgZGVsYXkgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBBdXRvUmVjb3JkRGVsYXknLCA1KSAqIDEwMDA7DQoNCiAgICAgICAgICAgICAgICAvLyDlu7bov5/miafooYzvvIzpgb/lhY3lvbHlk43kuLvmtYHnqIsNCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IHVzZXJJbmZvLnVzZXJJZCB8fCB1c2VySW5mby5jb252ZXJzYXRpb25JZDsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJOYW1lID0gdXNlckluZm8udXNlck5hbWUgfHwgJ+acquefpeeUqOaItyc7DQogICAg",
        "ICAgICAgICAgICAgICAgICAgICAvLyDwn5SnIEJVR+S/ruWkje+8muS7jnVzZXJJZOiOt+WPlmNvbnZlcnNhdGlvbklk77yM5Zug5Li6ZXh0cmFjdFVzZXJJbmZv6L+U5Zue55qE5a+56LGh5LitdXNlcklk5bCx5pivY29udmVyc2F0aW9uSWQNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnZlcnNhdGlvbklkID0gdXNlckluZm8uY29udmVyc2F0aW9uSWQgfHwgdXNlckluZm8udXNlcklkOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblt7LlrZjlnKjorrDlvZUNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nUmVjb3JkID0gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlLmdldCh1c2VySWQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV4aXN0aW5nUmVjb3JkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonoh6rliqjorrDlvZXvvJrnlKjmiLflt7LlrZjlnKjvvIzot7Pov4cnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IGV4aXN0aW5nUmVjb3JkLnN0YXR1cw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l6buR5ZCN5Y2VDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoQmxhY2tsaXN0TWFuYWdlciAmJiBCbGFja2xpc3RNYW5hZ2VyLmlzQmxhY2tsaXN0ZWQodXNlcklkKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6Ieq5Yqo6K6w5b2V77ya55So5oi35Zyo6buR5ZCN5Y2V5Lit77yM6Lez6L+HJywgeyB1c2VyTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOS9v+eUqEFQSeS8mOWFiOeahOW8guatpeW/q+mAn+ajgOafpeeVmeWuoui1hOeKtuaAgQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaGFzTGVhZHNUYWcgPSBhd2FpdCBGb2xsb3dVcE1hbmFnZXIuY2hlY2tVc2VyTGVhZHNTdGF0dXNGYXN0QXN5bmMoew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZA0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChoYXNMZWFkc1RhZykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6Ieq5Yqo6K6w5b2V77ya55So5oi35bey5pyJ55WZ5a6i6LWE",
        "5qCH562+77yM6Lez6L+HJywgeyB1c2VyTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWIm+W7uuaWsOeahOi/veeyieiusOW9lQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlY29yZCA9IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RDb250YWN0OiBub3csDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdEZvbGxvd1VwOiBudWxsLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwQ291bnQ6IDAsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBIaXN0b3J5OiBbXSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICdwZW5kaW5nJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvUmVjb3JkZWQ6IHRydWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RNZXNzYWdlOiBtZXNzYWdlQ29udGVudC5zdWJzdHJpbmcoMCwgMTAwKSAvLyDkv53lrZjliY0xMDDlrZfnrKYNCiAgICAgICAgICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5zZXQodXNlcklkLCByZWNvcmQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnN5bmNUb1N0b3JhZ2VJZk5lZWRlZCgpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6Ieq5Yqo6K6w5b2V77ya5paw55So5oi35bey5re75Yqg5Yiw6L+957KJ5YiX6KGoJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlUHJldmlldzogbWVzc2FnZUNvbnRlbnQuc3Vic3RyaW5nKDAsIDUwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonoh6rliqjorrDlvZXvvJrlpITnkIblpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAg",
        "ICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0sIGRlbGF5KTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiHquWKqOiusOW9le+8muWIneWni+WMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWPkemAgeWbnuWkjea2iOaBrw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gcmVwbHlUZXh0IOWbnuWkjeWGheWuuQ0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHNlbmRSZXBseShyZXBseVRleHQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W8gOWni+WPkemAgeWbnuWkjScsIHsNCiAgICAgICAgICAgICAgICAgICAgcmVwbHlMZW5ndGg6IHJlcGx5VGV4dC5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIHByZXZpZXc6IHJlcGx5VGV4dC5zdWJzdHJpbmcoMCwgNTApICsgJy4uLicNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOafpeaJvui+k+WFpeahhg0KICAgICAgICAgICAgICAgIGNvbnN0IGlucHV0Qm94ID0gUGFnZUVsZW1lbnRNYW5hZ2VyLmdldE1lc3NhZ2VJbnB1dEJveCgpOw0KICAgICAgICAgICAgICAgIGlmICghaW5wdXRCb3gpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmnKrmib7liLDmtojmga/ovpPlhaXmoYYnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWhq+WFheWbnuWkjeWGheWuuQ0KICAgICAgICAgICAgICAgIGNvbnN0IGZpbGxlZCA9IFV0aWxzLnNpbXVsYXRlSW5wdXQoaW5wdXRCb3gsIHJlcGx5VGV4dCk7DQogICAgICAgICAgICAgICAgaWYgKCFmaWxsZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfloavlhYXovpPlhaXmoYblpLHotKUnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOetieW+heS4gOS4i+ehruS/neWGheWuueW3suWhq+WFhQ0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDUwMCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmn6Xmib7lj5HpgIHmjInpkq4NCiAgICAgICAgICAgICAgICBjb25zdCBzZW5kQnV0dG9uID0gUGFnZUVsZW1lbnRNYW5hZ2VyLmdldFNlbmRCdXR0b24oKTsNCiAgICAgICAgICAgICAgICBpZiAoIXNlbmRCdXR0b24pIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmnKrmib7liLDlj5HpgIHmjInpkq4nKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAg",
        "ICAgICAgICAgICAgIC8vIOajgOafpeWPkemAgeaMiemSruaYr+WQpuWPr+eUqA0KICAgICAgICAgICAgICAgIGlmIChzZW5kQnV0dG9uLmRpc2FibGVkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCflj5HpgIHmjInpkq7ooqvnpoHnlKgnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOeCueWHu+WPkemAgeaMiemSrg0KICAgICAgICAgICAgICAgIGNvbnN0IGNsaWNrZWQgPSBVdGlscy5zaW11bGF0ZUNsaWNrKHNlbmRCdXR0b24pOw0KICAgICAgICAgICAgICAgIGlmICghY2xpY2tlZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+eCueWHu+WPkemAgeaMiemSruWksei0pScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g562J5b6F5Y+R6YCB5a6M5oiQDQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMTAwMCk7DQoNCiAgICAgICAgICAgICAgICAvLyDpqozor4Hlj5HpgIHmmK/lkKbmiJDlip/vvIjmo4Dmn6XovpPlhaXmoYbmmK/lkKblt7LmuIXnqbrvvIkNCiAgICAgICAgICAgICAgICBpZiAoIWlucHV0Qm94LnZhbHVlIHx8IGlucHV0Qm94LnZhbHVlLnRyaW0oKSA9PT0gJycpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+WbnuWkjeWPkemAgeaIkOWKnycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5Zue5aSN5Y+v6IO95Y+R6YCB5aSx6LSl77yM6L6T5YWl5qGG5pyq5riF56m6Jyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflj5HpgIHlm57lpI3ml7blj5HnlJ/plJnor68nLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5re75Yqg5Yiw5aSE55CG6Zif5YiX77yI5pm66IO95Y676YeN54mI5pys77yJDQogICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IGVsZW1lbnRzIOWFg+e0oOWIl+ihqA0KICAgICAgICAgKi8NCiAgICAgICAgYWRkVG9RdWV1ZShlbGVtZW50cykgew0KICAgICAgICAgICAgbGV0IGFkZGVkQ291bnQgPSAwOw0KICAgICAgICAgICAgbGV0IGR1cGxpY2F0ZUNvdW50ID0gMDsNCiAgICAgICAgICAgIGxldCByZXBsYWNlZENvdW50ID0gMDsNCg0KICAgICAgICAgICAgZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHsNCiAgICAgICAgICAgICAgICAvLyDmj5Dlj5bogZTns7vkurrmoIfor4YNCiAgICAgICAg",
        "ICAgICAgICBjb25zdCBjb250YWN0SWQgPSB0aGlzLmV4dHJhY3RDb250YWN0SWQoZWxlbWVudCk7DQogICAgICAgICAgICAgICAgaWYgKCFjb250YWN0SWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+aXoOazleaPkOWPluiBlOezu+S6uklE77yM6Lez6L+H6K+l5raI5oGvJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblt7LlrZjlnKjor6XogZTns7vkurrnmoTmtojmga8NCiAgICAgICAgICAgICAgICBpZiAodGhpcy5wcm9jZXNzaW5nUXVldWUuaGFzKGNvbnRhY3RJZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5pu05paw5Li65pyA5paw5raI5oGv77yI6YG/5YWN6YeN5aSN5aSE55CG77yJDQogICAgICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc2luZ1F1ZXVlLnNldChjb250YWN0SWQsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6IGVsZW1lbnQsDQogICAgICAgICAgICAgICAgICAgICAgICBhZGRlZEF0OiBEYXRlLm5vdygpLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGFjdElkOiBjb250YWN0SWQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJlcGxhY2VkQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmm7TmlrDpmJ/liJfkuK3nmoTogZTns7vkurrmtojmga8nLCB7IGNvbnRhY3RJZCB9KTsNCiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucHJvY2Vzc2luZ1F1ZXVlLnNpemUgPCB0aGlzLm1heFF1ZXVlU2l6ZSkgew0KICAgICAgICAgICAgICAgICAgICAvLyDmt7vliqDmlrDmtojmga8NCiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzaW5nUXVldWUuc2V0KGNvbnRhY3RJZCwgew0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudDogZWxlbWVudCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGFkZGVkQXQ6IERhdGUubm93KCksDQogICAgICAgICAgICAgICAgICAgICAgICBjb250YWN0SWQ6IGNvbnRhY3RJZA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgYWRkZWRDb3VudCsrOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOmYn+WIl+W3sua7oe+8jOabv+aNouacgOaXp+eahOa2iOaBrw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBvbGRlc3RFbnRyeSA9IHRoaXMuZmluZE9sZGVzdFF1ZXVlRW50cnkoKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG9sZGVzdEVudHJ5KSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NpbmdRdWV1ZS5kZWxldGUob2xkZXN0RW50cnkuY29udGFjdElkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc2luZ1F1ZXVlLnNldChjb250YWN0SWQsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVt",
        "ZW50OiBlbGVtZW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZGVkQXQ6IERhdGUubm93KCksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGFjdElkOiBjb250YWN0SWQNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmVwbGFjZWRDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+mYn+WIl+W3sua7oe+8jOabv+aNouacgOaXp+a2iOaBrycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbGRDb250YWN0SWQ6IG9sZGVzdEVudHJ5LmNvbnRhY3RJZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdDb250YWN0SWQ6IGNvbnRhY3RJZA0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgLy8g6K6w5b2V6Zif5YiX54q25oCBDQogICAgICAgICAgICBjb25zdCBxdWV1ZVVzYWdlID0gKHRoaXMucHJvY2Vzc2luZ1F1ZXVlLnNpemUgLyB0aGlzLm1heFF1ZXVlU2l6ZSAqIDEwMCkudG9GaXhlZCgxKTsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfpmJ/liJfmm7TmlrDlrozmiJAnLCB7DQogICAgICAgICAgICAgICAgYWRkZWQ6IGFkZGVkQ291bnQsDQogICAgICAgICAgICAgICAgcmVwbGFjZWQ6IHJlcGxhY2VkQ291bnQsDQogICAgICAgICAgICAgICAgZHVwbGljYXRlczogZHVwbGljYXRlQ291bnQsDQogICAgICAgICAgICAgICAgcXVldWVTaXplOiB0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zaXplLA0KICAgICAgICAgICAgICAgIHF1ZXVlVXNhZ2U6IGAke3F1ZXVlVXNhZ2V9JWANCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAvLyDpmJ/liJfkvb/nlKjnjoforablkYoNCiAgICAgICAgICAgIGlmICh0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zaXplID49IHRoaXMucXVldWVXYXJuaW5nVGhyZXNob2xkKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+mYn+WIl+S9v+eUqOeOh+i+g+mrmCcsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNhZ2U6IGAke3F1ZXVlVXNhZ2V9JWAsDQogICAgICAgICAgICAgICAgICAgIHRocmVzaG9sZDogYCR7KHRoaXMucXVldWVXYXJuaW5nVGhyZXNob2xkIC8gdGhpcy5tYXhRdWV1ZVNpemUgKiAxMDApLnRvRml4ZWQoMSl9JWANCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5o+Q5Y+W6IGU57O75Lq6SUQNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOiBlOezu+S6uuWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0Q29udGFjdElkKGVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5bCd6K+V5aSa56eN5pa5",
        "5byP5o+Q5Y+W6IGU57O75Lq65ZSv5LiA5qCH6K+GDQogICAgICAgICAgICAgICAgY29uc3QgdXNlck5hbWUgPSBQYWdlRWxlbWVudE1hbmFnZXIuZXh0cmFjdFVzZXJOYW1lKGVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmICh1c2VyTmFtZSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gYHVzZXJfJHt1c2VyTmFtZX1gOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWkh+eUqOaWueahiO+8muS9v+eUqOWFg+e0oOeahGRhdGHlsZ7mgKfmiJblhbbku5bllK/kuIDmoIfor4YNCiAgICAgICAgICAgICAgICBjb25zdCBkYXRhSWQgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1pZCcpIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXVzZXItaWQnKSB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1jb250YWN0LWlkJyk7DQogICAgICAgICAgICAgICAgaWYgKGRhdGFJZCkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gYGlkXyR7ZGF0YUlkfWA7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pyA5ZCO5pa55qGI77ya5L2/55So5YWD57Sg5ZyoRE9N5Lit55qE5L2N572uDQogICAgICAgICAgICAgICAgY29uc3Qgc2libGluZ3MgPSBBcnJheS5mcm9tKGVsZW1lbnQucGFyZW50Tm9kZT8uY2hpbGRyZW4gfHwgW10pOw0KICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gc2libGluZ3MuaW5kZXhPZihlbGVtZW50KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gYHBvc18ke2luZGV4fV8ke2VsZW1lbnQudGV4dENvbnRlbnQ/LnNsaWNlKDAsIDIwKSB8fCAndW5rbm93bid9YDsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmj5Dlj5bogZTns7vkurpJROWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOafpeaJvumYn+WIl+S4reacgOaXp+eahOadoeebrg0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fG51bGx9DQogICAgICAgICAqLw0KICAgICAgICBmaW5kT2xkZXN0UXVldWVFbnRyeSgpIHsNCiAgICAgICAgICAgIGxldCBvbGRlc3RFbnRyeSA9IG51bGw7DQogICAgICAgICAgICBsZXQgb2xkZXN0VGltZSA9IERhdGUubm93KCk7DQoNCiAgICAgICAgICAgIGZvciAoY29uc3QgW2NvbnRhY3RJZCwgZW50cnldIG9mIHRoaXMucHJvY2Vzc2luZ1F1ZXVlKSB7DQogICAgICAgICAgICAgICAgaWYgKGVudHJ5LmFkZGVkQXQgPCBvbGRlc3RUaW1lKSB7DQogICAgICAgICAgICAgICAgICAgIG9sZGVzdFRpbWUgPSBlbnRyeS5hZGRlZEF0Ow0KICAgICAgICAgICAgICAgICAgICBvbGRlc3RFbnRyeSA9IHsgY29udGFj",
        "dElkLCAuLi5lbnRyeSB9Ow0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIG9sZGVzdEVudHJ5Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbpmJ/liJfkuK3nmoTmtojmga8NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHByb2Nlc3NRdWV1ZSgpIHsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCflvIDlp4vlpITnkIbpmJ/liJfmtojmga8nLCB7IHF1ZXVlU2l6ZTogdGhpcy5wcm9jZXNzaW5nUXVldWUuc2l6ZSB9KTsNCg0KICAgICAgICAgICAgd2hpbGUgKHRoaXMucHJvY2Vzc2luZ1F1ZXVlLnNpemUgPiAwKSB7DQogICAgICAgICAgICAgICAgLy8g6I635Y+W5pyA5paw55qE5raI5oGv77yITElGT+etlueVpe+8iQ0KICAgICAgICAgICAgICAgIGNvbnN0IGVudHJpZXMgPSBBcnJheS5mcm9tKHRoaXMucHJvY2Vzc2luZ1F1ZXVlLmVudHJpZXMoKSk7DQogICAgICAgICAgICAgICAgY29uc3QgW2NvbnRhY3RJZCwgZW50cnldID0gZW50cmllc1tlbnRyaWVzLmxlbmd0aCAtIDFdOw0KDQogICAgICAgICAgICAgICAgLy8g5LuO6Zif5YiX5Lit56e76ZmkDQogICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzaW5nUXVldWUuZGVsZXRlKGNvbnRhY3RJZCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WkhOeQhumYn+WIl+a2iOaBrycsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGFjdElkLA0KICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdRdWV1ZTogdGhpcy5wcm9jZXNzaW5nUXVldWUuc2l6ZQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5wcm9jZXNzU2luZ2xlTWVzc2FnZShlbnRyeS5lbGVtZW50KTsNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheShDb25maWdNYW5hZ2VyLmdldCgncmVwbHlEZWxheScsIDMwMDApKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+mYn+WIl+WkhOeQhuWujOaIkCcpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5blpITnkIbnu5/orqENCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldFN0YXRzKCkgew0KICAgICAgICAgICAgY29uc3QgcXVldWVVc2FnZSA9ICh0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zaXplIC8gdGhpcy5tYXhRdWV1ZVNpemUgKiAxMDApLnRvRml4ZWQoMSk7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIGlzUHJvY2Vzc2luZzogdGhpcy5pc1Byb2Nlc3NpbmcsDQogICAgICAgICAgICAgICAgcXVldWVMZW5ndGg6IHRoaXMucHJvY2Vzc2luZ1F1ZXVlLnNpemUsDQogICAgICAgICAgICAgICAgbWF4UXVldWVTaXplOiB0aGlzLm1heFF1ZXVlU2l6ZSwNCiAgICAgICAgICAgICAgICBxdWV1ZVVzYWdlOiBgJHtxdWV1ZVVzYWdlfSVgLA0KICAgICAgICAgICAgICAgIHF1ZXVl",
        "V2FybmluZ1RocmVzaG9sZDogdGhpcy5xdWV1ZVdhcm5pbmdUaHJlc2hvbGQsDQogICAgICAgICAgICAgICAgcXVldWVDb250YWN0czogQXJyYXkuZnJvbSh0aGlzLnByb2Nlc3NpbmdRdWV1ZS5rZXlzKCkpLA0KICAgICAgICAgICAgICAgIGRlZHVwbGljYXRvclN0YXRzOiBNZXNzYWdlRGVkdXBsaWNhdG9yLmdldFN0YXRzKCkNCiAgICAgICAgICAgIH07DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heepuuWkhOeQhumYn+WIlw0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYXJRdWV1ZSgpIHsNCiAgICAgICAgICAgIGNvbnN0IGNsZWFyZWRDb3VudCA9IHRoaXMucHJvY2Vzc2luZ1F1ZXVlLnNpemU7DQogICAgICAgICAgICB0aGlzLnByb2Nlc3NpbmdRdWV1ZS5jbGVhcigpOw0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+WkhOeQhumYn+WIl+W3sua4heepuicsIHsgY2xlYXJlZENvdW50IH0pOw0KICAgICAgICAgICAgcmV0dXJuIGNsZWFyZWRDb3VudDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W6Zif5YiX5L2/55So546HDQogICAgICAgICAqIEByZXR1cm5zIHtudW1iZXJ9DQogICAgICAgICAqLw0KICAgICAgICBnZXRRdWV1ZVVzYWdlKCkgew0KICAgICAgICAgICAgcmV0dXJuICh0aGlzLnByb2Nlc3NpbmdRdWV1ZS5zaXplIC8gdGhpcy5tYXhRdWV1ZVNpemUgKiAxMDApOw0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g6I635a6i5bel5YW35Y+R6YCB5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBDdXN0b21lckFjcXVpc2l0aW9uU2VuZGVyID0gew0KICAgICAgICAvKioNCiAgICAgICAgICog5Y+R6YCB6I635a6i5bel5YW3DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0b29sVHlwZSDlt6XlhbfnsbvlnovvvJon55WZ6LWE5Y2hJyDmiJYgJ+WQjeeJhycNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRvb2xOYW1lIOW3peWFt+WQjeensO+8iOWPr+mAie+8jOWmguaenOS4jeaMh+WumuWImeS9v+eUqOesrOS4gOS4qu+8iQ0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHNlbmRBY3F1aXNpdGlvblRvb2wodG9vbFR5cGUgPSAn55WZ6LWE5Y2hJywgdG9vbE5hbWUgPSAnJykgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5byA5aeL5Y+R6YCB6I635a6i5bel5YW3JywgeyB0b29sVHlwZSwgdG9vbE5hbWUgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyAxLiDnoa7kv53ojrflrqLlt6XlhbfpnaLmnb/lj6/op4ENCiAgICAgICAgICAgICAgICBjb25zdCBwYW5lbFZpc2libGUgPSBhd2FpdCB0aGlzLmVuc3VyZUFjcXVpc2l0aW9uUGFuZWxWaXNpYmxlKCk7DQogICAgICAgICAgICAgICAgaWYgKCFwYW5lbFZp",
        "c2libGUpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfojrflrqLlt6XlhbfpnaLmnb/kuI3lj6/op4EnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIDIuIOWIh+aNouWIsOaMh+WumuW3peWFt+exu+Weiw0KICAgICAgICAgICAgICAgIGNvbnN0IHR5cGVTZWxlY3RlZCA9IGF3YWl0IHRoaXMuc2VsZWN0VG9vbFR5cGUodG9vbFR5cGUpOw0KICAgICAgICAgICAgICAgIGlmICghdHlwZVNlbGVjdGVkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5YiH5o2i5bel5YW357G75Z6L5aSx6LSlJywgeyB0b29sVHlwZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIDMuIOetieW+heW3peWFt+WIl+ihqOWKoOi9vQ0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDEwMDApOw0KDQogICAgICAgICAgICAgICAgLy8gNC4g6YCJ5oup5bm25Y+R6YCB5bel5YW3DQogICAgICAgICAgICAgICAgY29uc3Qgc2VudCA9IGF3YWl0IHRoaXMuc2VsZWN0QW5kU2VuZFRvb2wodG9vbE5hbWUpOw0KICAgICAgICAgICAgICAgIGlmICghc2VudCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WPkemAgeW3peWFt+Wksei0pScsIHsgdG9vbE5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6I635a6i5bel5YW35Y+R6YCB5oiQ5YqfJywgeyB0b29sVHlwZSwgdG9vbE5hbWUgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflj5HpgIHojrflrqLlt6Xlhbfml7blj5HnlJ/plJnor68nLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5r+A5rS76I635a6i5bel5YW36Z2i5p2/DQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgYWN0aXZhdGVBY3F1aXNpdGlvblRvb2xQYW5lbCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfwn5SnIOWwneivlea/gOa0u+iOt+WuouW3peWFt+mdouadvycpOw0KDQogICAgICAgICAgICAgICAgLy8g5p+l5om+c2VydmljZVBhZ2UtaWNvbuWFg+e0oA0KICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldFN2ZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3N2Zy5zZXJ2aWNlUGFnZS1pY29uJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIXRhcmdldFN2Zykg",
        "ew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4p2MIOacquaJvuWIsHNlcnZpY2VQYWdlLWljb27lhYPntKAnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOS9v+eUqFV0aWxzLnNpbXVsYXRlQ2xpY2vmlrnms5Xov5vooYzlhbzlrrnmgKfngrnlh7sNCiAgICAgICAgICAgICAgICBjb25zdCBjbGlja2VkID0gVXRpbHMuc2ltdWxhdGVDbGljayh0YXJnZXRTdmcpOw0KICAgICAgICAgICAgICAgIGlmICghY2xpY2tlZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4p2MIOeCueWHu3NlcnZpY2VQYWdlLWljb27lpLHotKUnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOW3sueCueWHu3NlcnZpY2VQYWdlLWljb27mv4DmtLvojrflrqLlt6XlhbfpnaLmnb8nKTsNCg0KICAgICAgICAgICAgICAgIC8vIOetieW+hemdouadv+a/gOa0uw0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDEwMDApOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign4p2MIOa/gOa0u+iOt+WuouW3peWFt+mdouadv+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnoa7kv53ojrflrqLlt6XlhbfpnaLmnb/lj6/op4ENCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBlbnN1cmVBY3F1aXNpdGlvblBhbmVsVmlzaWJsZSgpIHsNCiAgICAgICAgICAgIC8vIOajgOafpeWPs+S+p+mdouadv+aYr+WQpuWtmOWcqA0KICAgICAgICAgICAgY29uc3QgcmlnaHRQYW5lbCA9IFV0aWxzLnF1ZXJ5U2VsZWN0b3IoJyNyaWdodFBhbmVsJyk7DQogICAgICAgICAgICBpZiAoIXJpZ2h0UGFuZWwpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5Y+z5L6n6Z2i5p2/5LiN5a2Y5ZyoJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDnrKzkuIDmrKHmo4Dmn6XojrflrqLlt6XlhbfmoIfnrb7pobXmmK/lkKblrZjlnKgNCiAgICAgICAgICAgIGxldCBhY3F1aXNpdGlvblRhYiA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmQtdGFicy1oZWFkZXInKSkuZmluZCh0YWIgPT4NCiAgICAgICAgICAgICAgICB0YWIudGV4dENvbnRlbnQuaW5jbHVkZXMoJ+iOt+WuouW3peWFtycpDQogICAgICAgICAgICApOw0KDQogICAgICAgICAgICBpZiAoIWFjcXVpc2l0aW9uVGFiKSB7",
        "DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfwn5SNIOiOt+WuouW3peWFt+agh+etvumhteS4jeWtmOWcqO+8jOWwneivlea/gOa0u+iOt+WuouW3peWFt+mdouadvycpOw0KDQogICAgICAgICAgICAgICAgLy8g5bCd6K+V5r+A5rS76I635a6i5bel5YW36Z2i5p2/DQogICAgICAgICAgICAgICAgY29uc3QgYWN0aXZhdGVkID0gYXdhaXQgdGhpcy5hY3RpdmF0ZUFjcXVpc2l0aW9uVG9vbFBhbmVsKCk7DQogICAgICAgICAgICAgICAgaWYgKCFhY3RpdmF0ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KdjCDojrflrqLlt6XlhbfpnaLmnb/mv4DmtLvlpLHotKUnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWGjeasoeajgOafpeiOt+WuouW3peWFt+agh+etvumhtQ0KICAgICAgICAgICAgICAgIGFjcXVpc2l0aW9uVGFiID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZC10YWJzLWhlYWRlcicpKS5maW5kKHRhYiA9Pg0KICAgICAgICAgICAgICAgICAgICB0YWIudGV4dENvbnRlbnQuaW5jbHVkZXMoJ+iOt+WuouW3peWFtycpDQogICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgIGlmICghYWNxdWlzaXRpb25UYWIpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KdjCDojrflrqLlt6XlhbfmoIfnrb7pobXku43nhLbkuI3lrZjlnKgnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg6I635a6i5bel5YW36Z2i5p2/5r+A5rS75oiQ5Yqf77yM5om+5Yiw6I635a6i5bel5YW35qCH562+6aG1Jyk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOWmguaenOagh+etvumhteacqua/gOa0u++8jOeCueWHu+a/gOa0uw0KICAgICAgICAgICAgaWYgKCFhY3F1aXNpdGlvblRhYi5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfngrnlh7vmv4DmtLvojrflrqLlt6XlhbfmoIfnrb7pobUnKTsNCiAgICAgICAgICAgICAgICBhY3F1aXNpdGlvblRhYi5jbGljaygpOw0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDUwMCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpgInmi6nlt6XlhbfnsbvlnosNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRvb2xUeXBlIOW3peWFt+exu+Weiw0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHNlbGVjdFRvb2xUeXBlKHRvb2xUeXBlKSB7DQogICAgICAgICAgICBjb25zdCBzZWdtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwo",
        "Jy5kLXNlZ21lbnQtaXRlbScpOw0KICAgICAgICAgICAgY29uc3QgdGFyZ2V0U2VnbWVudCA9IEFycmF5LmZyb20oc2VnbWVudHMpLmZpbmQoc2VnbWVudCA9Pg0KICAgICAgICAgICAgICAgIHNlZ21lbnQudGV4dENvbnRlbnQudHJpbSgpID09PSB0b29sVHlwZQ0KICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgaWYgKCF0YXJnZXRTZWdtZW50KSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmib7kuI3liLDlt6XlhbfnsbvlnosnLCB7DQogICAgICAgICAgICAgICAgICAgIHRvb2xUeXBlLA0KICAgICAgICAgICAgICAgICAgICBhdmFpbGFibGVUeXBlczogQXJyYXkuZnJvbShzZWdtZW50cykubWFwKHMgPT4gcy50ZXh0Q29udGVudC50cmltKCkpDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDlpoLmnpzmnKrmv4DmtLvvvIzngrnlh7vmv4DmtLsNCiAgICAgICAgICAgIGlmICghdGFyZ2V0U2VnbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfngrnlh7vpgInmi6nlt6XlhbfnsbvlnosnLCB7IHRvb2xUeXBlIH0pOw0KICAgICAgICAgICAgICAgIHRhcmdldFNlZ21lbnQuY2xpY2soKTsNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSg1MDApOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6YCJ5oup5bm25Y+R6YCB5bel5YW3DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0b29sTmFtZSDlt6XlhbflkI3np7DvvIjlj6/pgInvvIkNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzZWxlY3RBbmRTZW5kVG9vbCh0b29sTmFtZSA9ICcnKSB7DQogICAgICAgICAgICAvLyDmn6Xmib7miYDmnInlt6XlhbfljaHniYcNCiAgICAgICAgICAgIGNvbnN0IHRvb2xDYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYXJkJyk7DQoNCiAgICAgICAgICAgIGlmICh0b29sQ2FyZHMubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmsqHmnInmib7liLDlj6/nlKjnmoTlt6XlhbfljaHniYcnKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGxldCB0YXJnZXRDYXJkID0gbnVsbDsNCg0KICAgICAgICAgICAgLy8g5aaC5p6c5oyH5a6a5LqG5bel5YW35ZCN56ew77yM5p+l5om+5Yy56YWN55qE5Y2h54mHDQogICAgICAgICAgICBpZiAodG9vbE5hbWUpIHsNCiAgICAgICAgICAgICAgICB0YXJnZXRDYXJkID0gQXJyYXkuZnJvbSh0b29sQ2FyZHMpLmZpbmQoY2FyZCA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpdGxlRWxlbWVudCA9IGNhcmQu",
        "cXVlcnlTZWxlY3RvcignLmNhcmQtYm94X190aXRsZSwgLmNhcmQtYm94X19jb250ZW50LXRpdGxlJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0aXRsZUVsZW1lbnQgJiYgdGl0bGVFbGVtZW50LnRleHRDb250ZW50LmluY2x1ZGVzKHRvb2xOYW1lKTsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIGlmICghdGFyZ2V0Q2FyZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5om+5LiN5Yiw5oyH5a6a5ZCN56ew55qE5bel5YW377yM5L2/55So56ys5LiA5Liq5Y+v55So5bel5YW3JywgeyB0b29sTmFtZSB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOWmguaenOayoeacieaJvuWIsOaMh+WumuW3peWFt+aIluayoeacieaMh+WumuWQjeensO+8jOS9v+eUqOesrOS4gOS4qg0KICAgICAgICAgICAgaWYgKCF0YXJnZXRDYXJkKSB7DQogICAgICAgICAgICAgICAgdGFyZ2V0Q2FyZCA9IHRvb2xDYXJkc1swXTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5p+l5om+5Y+R6YCB5oyJ6ZKuDQogICAgICAgICAgICBjb25zdCBzZW5kQnV0dG9uID0gdGFyZ2V0Q2FyZC5xdWVyeVNlbGVjdG9yKCcuYnRuJyk7DQogICAgICAgICAgICBpZiAoIXNlbmRCdXR0b24gfHwgIXNlbmRCdXR0b24udGV4dENvbnRlbnQuaW5jbHVkZXMoJ+WPkemAgScpKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmib7kuI3liLDlj5HpgIHmjInpkq4nKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOiOt+WPluW3peWFt+agh+mimOeUqOS6juaXpeW/lw0KICAgICAgICAgICAgY29uc3QgdGl0bGVFbGVtZW50ID0gdGFyZ2V0Q2FyZC5xdWVyeVNlbGVjdG9yKCcuY2FyZC1ib3hfX3RpdGxlLCAuY2FyZC1ib3hfX2NvbnRlbnQtdGl0bGUnKTsNCiAgICAgICAgICAgIGNvbnN0IGFjdHVhbFRvb2xOYW1lID0gdGl0bGVFbGVtZW50ID8gdGl0bGVFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSA6ICfmnKrnn6Xlt6XlhbcnOw0KDQogICAgICAgICAgICAvLyDngrnlh7vlj5HpgIHmjInpkq4NCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn54K55Ye75Y+R6YCB5oyJ6ZKuJywgeyB0b29sTmFtZTogYWN0dWFsVG9vbE5hbWUgfSk7DQogICAgICAgICAgICBzZW5kQnV0dG9uLmNsaWNrKCk7DQoNCiAgICAgICAgICAgIC8vIOetieW+heWPkemAgeWujOaIkA0KICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMTAwMCk7DQoNCiAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5blj6/nlKjnmoTlt6XlhbfliJfooagNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRvb2xUeXBlIOW3peWFt+exu+Weiw0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxBcnJheT59DQogICAgICAgICAqLw0KICAgICAg",
        "ICBhc3luYyBnZXRBdmFpbGFibGVUb29scyh0b29sVHlwZSA9ICfnlZnotYTljaEnKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOehruS/nemdouadv+WPr+ingQ0KICAgICAgICAgICAgICAgIGNvbnN0IHBhbmVsVmlzaWJsZSA9IGF3YWl0IHRoaXMuZW5zdXJlQWNxdWlzaXRpb25QYW5lbFZpc2libGUoKTsNCiAgICAgICAgICAgICAgICBpZiAoIXBhbmVsVmlzaWJsZSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gW107DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5YiH5o2i5Yiw5oyH5a6a5bel5YW357G75Z6LDQogICAgICAgICAgICAgICAgY29uc3QgdHlwZVNlbGVjdGVkID0gYXdhaXQgdGhpcy5zZWxlY3RUb29sVHlwZSh0b29sVHlwZSk7DQogICAgICAgICAgICAgICAgaWYgKCF0eXBlU2VsZWN0ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOetieW+heWKoOi9vQ0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDEwMDApOw0KDQogICAgICAgICAgICAgICAgLy8g6I635Y+W5bel5YW35YiX6KGoDQogICAgICAgICAgICAgICAgY29uc3QgdG9vbENhcmRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNhcmQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0b29scyA9IFtdOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBjYXJkIG9mIHRvb2xDYXJkcykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0aXRsZUVsZW1lbnQgPSBjYXJkLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkLWJveF9fdGl0bGUsIC5jYXJkLWJveF9fY29udGVudC10aXRsZScpOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBkZXNjRWxlbWVudCA9IGNhcmQucXVlcnlTZWxlY3RvcignLmNhcmQtYm94X19jb250ZW50LWRlc2MnKTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAodGl0bGVFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0b29scy5wdXNoKHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB0aXRsZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjRWxlbWVudCA/IGRlc2NFbGVtZW50LnRleHRDb250ZW50LnRyaW0oKSA6ICcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6IGNhcmQNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfojrflj5bliLDlj6/nlKjlt6XlhbfliJfooagnLCB7IHRvb2xUeXBlLCBjb3VudDogdG9vbHMubGVuZ3RoIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiB0b29sczsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAg",
        "ICBMb2dnZXIuZXJyb3IoJ+iOt+WPluW3peWFt+WIl+ihqOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g6I635a6i5pe25py65Yik5pat5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBBY3F1aXNpdGlvbk9wcG9ydHVuaXR5RGV0ZWN0b3IgPSB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiDliKTmlq3mmK/lkKblupTor6Xlj5HpgIHojrflrqLlt6XlhbcNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZUNvbnRlbnQg5raI5oGv5YaF5a65DQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSB1c2VyRGF0YSDnlKjmiLflr7nor53mlbDmja4NCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBzaG91bGRTZW5kQWNxdWlzaXRpb25Ub29sOiBmdW5jdGlvbih1c2VyTmFtZSwgbWVzc2FnZUNvbnRlbnQsIHVzZXJEYXRhKSB7DQogICAgICAgICAgICAvLyDmo4Dmn6XojrflrqLlip/og73mmK/lkKblkK/nlKgNCiAgICAgICAgICAgIGlmICghQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uRW5hYmxlZCcsIGZhbHNlKSkgew0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5aaC5p6c5LiN5YWB6K646YeN5aSN5Y+R6YCB5LiU5bey57uP5Y+R6YCB6L+H77yM5YiZ5LiN5YaN5Y+R6YCBDQogICAgICAgICAgICBjb25zdCBhbGxvd1JlcGVhdCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdhY3F1aXNpdGlvbkFsbG93UmVwZWF0JywgZmFsc2UpOw0KICAgICAgICAgICAgaWYgKCFhbGxvd1JlcGVhdCAmJiB1c2VyRGF0YS5oYXNSZWNlaXZlZEFjcXVpc2l0aW9uVG9vbCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn55So5oi35bey5o6l5pS26L+H6I635a6i5bel5YW35LiU5LiN5YWB6K646YeN5aSN5Y+R6YCBJywgeyB1c2VyTmFtZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOajgOa1i+WFtOi2o+WFs+mUruivjQ0KICAgICAgICAgICAgY29uc3Qga2V5d29yZHNDb25maWcgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25LZXl3b3JkcycsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmFjcXVpc2l0aW9uS2V5d29yZHMpOw0KICAgICAgICAgICAgY29uc3QgaW50ZXJlc3RLZXl3b3JkcyA9IGtleXdvcmRzQ29uZmlnLnNwbGl0KCcsJykubWFwKGsgPT4gay50cmltKCkpLmZpbHRlcihrID0+IGspOw0KICAgICAgICAgICAgY29uc3QgaGFzSW50ZXJlc3RLZXl3b3JkID0gaW50ZXJlc3RL",
        "ZXl3b3Jkcy5zb21lKGtleXdvcmQgPT4gbWVzc2FnZUNvbnRlbnQuaW5jbHVkZXMoa2V5d29yZCkpOw0KDQogICAgICAgICAgICAvLyDojrflj5bphY3nva7nmoTova7mrKENCiAgICAgICAgICAgIGNvbnN0IHRyaWdnZXJSb3VuZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdhY3F1aXNpdGlvblRyaWdnZXJSb3VuZCcsIDIpOw0KICAgICAgICAgICAgY29uc3QgZmFsbGJhY2tSb3VuZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdhY3F1aXNpdGlvbkZhbGxiYWNrUm91bmQnLCAzKTsNCg0KICAgICAgICAgICAgLy8g5Yik5pat5Y+R6YCB5p2h5Lu2DQogICAgICAgICAgICAvLyDmnaHku7YxOiDovr7liLDop6blj5Hova7mrKEgKyDmnInlhbTotqPlhbPplK7or40NCiAgICAgICAgICAgIGlmICh1c2VyRGF0YS5tZXNzYWdlQ291bnQgPj0gdHJpZ2dlclJvdW5kICYmIGhhc0ludGVyZXN0S2V5d29yZCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmu6HotrPojrflrqLlt6Xlhbflj5HpgIHmnaHku7bvvJrova7mrKEr5YWz6ZSu6K+NJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUNvdW50OiB1c2VyRGF0YS5tZXNzYWdlQ291bnQsDQogICAgICAgICAgICAgICAgICAgIHRyaWdnZXJSb3VuZCwNCiAgICAgICAgICAgICAgICAgICAgZGV0ZWN0ZWRLZXl3b3JkczogaW50ZXJlc3RLZXl3b3Jkcy5maWx0ZXIoayA9PiBtZXNzYWdlQ29udGVudC5pbmNsdWRlcyhrKSkNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5p2h5Lu2Mjog6L6+5Yiw5YWc5bqV6L2u5qyh77yM5peg5p2h5Lu25Y+R6YCBDQogICAgICAgICAgICBpZiAodXNlckRhdGEubWVzc2FnZUNvdW50ID49IGZhbGxiYWNrUm91bmQpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5ruh6Laz6I635a6i5bel5YW35Y+R6YCB5p2h5Lu277ya5YWc5bqV6L2u5qyhJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUNvdW50OiB1c2VyRGF0YS5tZXNzYWdlQ291bnQsDQogICAgICAgICAgICAgICAgICAgIGZhbGxiYWNrUm91bmQNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmnKrmu6HotrPojrflrqLlt6Xlhbflj5HpgIHmnaHku7YnLCB7DQogICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgbWVzc2FnZUNvdW50OiB1c2VyRGF0YS5tZXNzYWdlQ291bnQsDQogICAgICAgICAgICAgICAgdHJpZ2dlclJvdW5kLA0KICAgICAgICAgICAgICAgIGZhbGxiYWNrUm91bmQsDQogICAgICAgICAgICAgICAgaGFzSW50ZXJlc3RLZXl3b3JkLA0KICAgICAgICAgICAgICAgIGhhc1JlY2VpdmVkQmVmb3JlOiB1c2Vy",
        "RGF0YS5oYXNSZWNlaXZlZEFjcXVpc2l0aW9uVG9vbA0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5YiG5p6Q5raI5oGv5Lit55qE5YW06Laj5L+h5Y+3DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlQ29udGVudCDmtojmga/lhoXlrrkNCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGFuYWx5emVJbnRlcmVzdFNpZ25hbHM6IGZ1bmN0aW9uKG1lc3NhZ2VDb250ZW50KSB7DQogICAgICAgICAgICBjb25zdCBrZXl3b3Jkc0NvbmZpZyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdhY3F1aXNpdGlvbktleXdvcmRzJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuYWNxdWlzaXRpb25LZXl3b3Jkcyk7DQogICAgICAgICAgICBjb25zdCBpbnRlcmVzdEtleXdvcmRzID0ga2V5d29yZHNDb25maWcuc3BsaXQoJywnKS5tYXAoayA9PiBrLnRyaW0oKSkuZmlsdGVyKGsgPT4gayk7DQoNCiAgICAgICAgICAgIGNvbnN0IGRldGVjdGVkS2V5d29yZHMgPSBpbnRlcmVzdEtleXdvcmRzLmZpbHRlcihrZXl3b3JkID0+IG1lc3NhZ2VDb250ZW50LmluY2x1ZGVzKGtleXdvcmQpKTsNCiAgICAgICAgICAgIGNvbnN0IGludGVyZXN0TGV2ZWwgPSBkZXRlY3RlZEtleXdvcmRzLmxlbmd0aCA+IDAgPyBNYXRoLm1pbihkZXRlY3RlZEtleXdvcmRzLmxlbmd0aCAvIGludGVyZXN0S2V5d29yZHMubGVuZ3RoLCAxKSA6IDA7DQoNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgaGFzSW50ZXJlc3Q6IGRldGVjdGVkS2V5d29yZHMubGVuZ3RoID4gMCwNCiAgICAgICAgICAgICAgICBkZXRlY3RlZEtleXdvcmRzLA0KICAgICAgICAgICAgICAgIGludGVyZXN0TGV2ZWwsDQogICAgICAgICAgICAgICAgdG90YWxLZXl3b3JkczogaW50ZXJlc3RLZXl3b3Jkcy5sZW5ndGgNCiAgICAgICAgICAgIH07DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDkvJror53orrDlv4bnrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IENoYXRTZXNzaW9uTWFuYWdlciA9IHsNCiAgICAgICAgLy8g5Lya6K+d57yT5a2Y77yaY29udmVyc2F0aW9uSWQgLT4geyBjaGF0SWQsIGxhc3RVc2VkLCBtZXNzYWdlQ291bnQsIGNyZWF0ZWRBdCB9DQogICAgICAgIHNlc3Npb25DYWNoZTogbmV3IE1hcCgpLA0KDQogICAgICAgIC8vIOWtmOWCqOmUruWQjQ0KICAgICAgICBTVE9SQUdFX0tFWTogJ3hoc19jaGF0X3Nlc3Npb25zJywNCg0KICAgICAgICAvLyDkvJror53ov4fmnJ/ml7bpl7TvvIg35aSp77yJDQogICAgICAgIFNFU1NJT05fRVhQSVJFX1RJTUU6IDcgKiAyNCAqIDYwICogNjAgKiAxMDAwLA0KDQogICAgICAgIC8vIOacgOWkp+S8muivneaVsOmHjw0KICAgICAgICBNQVhf",
        "U0VTU0lPTlM6IDEwMCwNCg0KICAgICAgICAvLyDnvJPlrZjlkIzmraXpl7TpmpTvvIg15YiG6ZKf77yJDQogICAgICAgIENBQ0hFX1NZTkNfSU5URVJWQUw6IDUgKiA2MCAqIDEwMDAsDQoNCiAgICAgICAgLy8g5LiK5qyh5ZCM5q2l5pe26Ze0DQogICAgICAgIGxhc3RTeW5jVGltZTogMCwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yid5aeL5YyW5Lya6K+d566h55CG5ZmoDQogICAgICAgICAqLw0KICAgICAgICBpbml0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDku47phY3nva7liqDovb3lj4LmlbANCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUNvbmZpZ0Zyb21TZXR0aW5ncygpOw0KDQogICAgICAgICAgICAgICAgdGhpcy5sb2FkU2Vzc2lvbnNGcm9tU3RvcmFnZSgpOw0KICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRQZXJpb2RpY0NsZWFudXAoKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Lya6K+d6K6w5b+G566h55CG5Zmo5Yid5aeL5YyW5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICBzZXNzaW9uQ291bnQ6IHRoaXMuc2Vzc2lvbkNhY2hlLnNpemUsDQogICAgICAgICAgICAgICAgICAgIGV4cGlyZVRpbWU6IHRoaXMuU0VTU0lPTl9FWFBJUkVfVElNRSwNCiAgICAgICAgICAgICAgICAgICAgbWF4U2Vzc2lvbnM6IHRoaXMuTUFYX1NFU1NJT05TDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Lya6K+d6K6w5b+G566h55CG5Zmo5Yid5aeL5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5LuO6YWN572u5pu05paw5Y+C5pWwDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVDb25maWdGcm9tU2V0dGluZ3MoKSB7DQogICAgICAgICAgICBpZiAodHlwZW9mIENvbmZpZ01hbmFnZXIgIT09ICd1bmRlZmluZWQnKSB7DQogICAgICAgICAgICAgICAgY29uc3QgZXhwaXJlRGF5cyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzZXNzaW9uRXhwaXJlRGF5cycsIDcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IG1heFNlc3Npb25zID0gQ29uZmlnTWFuYWdlci5nZXQoJ21heFNlc3Npb25zJywgMTAwKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuU0VTU0lPTl9FWFBJUkVfVElNRSA9IGV4cGlyZURheXMgKiAyNCAqIDYwICogNjAgKiAxMDAwOw0KICAgICAgICAgICAgICAgIHRoaXMuTUFYX1NFU1NJT05TID0gbWF4U2Vzc2lvbnM7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S8muivneeuoeeQhuWZqOmFjee9ruW3suabtOaWsCcsIHsNCiAgICAgICAgICAgICAgICAgICAgZXhwaXJlRGF5cywNCiAgICAgICAgICAgICAgICAgICAgbWF4U2Vzc2lvbnMsDQogICAgICAgICAgICAgICAgICAgIGV4cGlyZVRpbWU6IHRoaXMuU0VTU0lPTl9FWFBJ",
        "UkVfVElNRQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmiJbliJvlu7rkvJror50NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIOWvueivnUlEDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IGNoYXRJZA0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0T3JDcmVhdGVTZXNzaW9uKGNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICBpZiAoIWNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+S8muivneeuoeeQhu+8mmNvbnZlcnNhdGlvbklk5Li656m677yM6L+U5Zue5Li05pe2Y2hhdElkJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2VuZXJhdGVUZW1wQ2hhdElkKCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOajgOafpee8k+WtmA0KICAgICAgICAgICAgbGV0IHNlc3Npb24gPSB0aGlzLnNlc3Npb25DYWNoZS5nZXQoY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgLy8g5aaC5p6c5Lya6K+d5LiN5a2Y5Zyo5oiW5bey6L+H5pyf77yM5Yib5bu65paw5Lya6K+dDQogICAgICAgICAgICBpZiAoIXNlc3Npb24gfHwgdGhpcy5pc1Nlc3Npb25FeHBpcmVkKHNlc3Npb24sIG5vdykpIHsNCiAgICAgICAgICAgICAgICBzZXNzaW9uID0gdGhpcy5jcmVhdGVOZXdTZXNzaW9uKGNvbnZlcnNhdGlvbklkLCBub3cpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2Vzc2lvbkNhY2hlLnNldChjb252ZXJzYXRpb25JZCwgc2Vzc2lvbik7DQogICAgICAgICAgICAgICAgdGhpcy5zYXZlU2Vzc2lvbnNUb1N0b3JhZ2UoKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfkvJror53orrDlv4bvvJrliJvlu7rmlrDkvJror50nLCB7DQogICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgIGNoYXRJZDogc2Vzc2lvbi5jaGF0SWQuc3Vic3RyaW5nKDAsIDIwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBpc0V4cGlyZWQ6ICEhc2Vzc2lvbg0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDmnIDlkI7kvb/nlKjml7bpl7QNCiAgICAgICAgICAgICAgICBzZXNzaW9uLmxhc3RVc2VkID0gbm93Ow0KICAgICAgICAgICAgICAgIHRoaXMuc2Vzc2lvbkNhY2hlLnNldChjb252ZXJzYXRpb25JZCwgc2Vzc2lvbik7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S8muivneiusOW/hu+8muS9v+eUqOeOsOacieS8muivnScsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywN",
        "CiAgICAgICAgICAgICAgICAgICAgY2hhdElkOiBzZXNzaW9uLmNoYXRJZC5zdWJzdHJpbmcoMCwgMjApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VDb3VudDogc2Vzc2lvbi5tZXNzYWdlQ291bnQNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIHNlc3Npb24uY2hhdElkOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmm7TmlrDkvJror53mtojmga/orqHmlbANCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIOWvueivnUlEDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVTZXNzaW9uTWVzc2FnZUNvdW50KGNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICBpZiAoIWNvbnZlcnNhdGlvbklkKSByZXR1cm47DQoNCiAgICAgICAgICAgIGNvbnN0IHNlc3Npb24gPSB0aGlzLnNlc3Npb25DYWNoZS5nZXQoY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgaWYgKHNlc3Npb24pIHsNCiAgICAgICAgICAgICAgICBzZXNzaW9uLm1lc3NhZ2VDb3VudCA9IChzZXNzaW9uLm1lc3NhZ2VDb3VudCB8fCAwKSArIDE7DQogICAgICAgICAgICAgICAgc2Vzc2lvbi5sYXN0VXNlZCA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgdGhpcy5zZXNzaW9uQ2FjaGUuc2V0KGNvbnZlcnNhdGlvbklkLCBzZXNzaW9uKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWumuacn+WQjOatpeWIsOWtmOWCqA0KICAgICAgICAgICAgICAgIHRoaXMuc3luY1RvU3RvcmFnZUlmTmVlZGVkKCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIm+W7uuaWsOS8muivnQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5a+56K+dSUQNCiAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IHRpbWVzdGFtcCDml7bpl7TmiLMNCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g5Lya6K+d5a+56LGhDQogICAgICAgICAqLw0KICAgICAgICBjcmVhdGVOZXdTZXNzaW9uKGNvbnZlcnNhdGlvbklkLCB0aW1lc3RhbXApIHsNCiAgICAgICAgICAgIGNvbnN0IGNoYXRJZCA9IHRoaXMuZ2VuZXJhdGVDaGF0SWQoY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICBjaGF0SWQsDQogICAgICAgICAgICAgICAgY3JlYXRlZEF0OiB0aW1lc3RhbXAsDQogICAgICAgICAgICAgICAgbGFzdFVzZWQ6IHRpbWVzdGFtcCwNCiAgICAgICAgICAgICAgICBtZXNzYWdlQ291bnQ6IDANCiAgICAgICAgICAgIH07DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOeUn+aIkGNoYXRJZA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5a+56K+dSUQNCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30gY2hhdElkDQogICAgICAgICAqLw0KICAgICAgICBnZW5lcmF0ZUNoYXRJZChjb252",
        "ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgLy8g56Gu5L+dY2hhdElk5ZSv5LiA5LiU56ym5ZCIRmFzdEdQVOimgeaxgu+8iOmVv+W6pjwyNTDvvIkNCiAgICAgICAgICAgIGNvbnN0IHNob3J0SWQgPSBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMjApOw0KICAgICAgICAgICAgY29uc3QgdGltZXN0YW1wID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIHJldHVybiBgeGhzXyR7c2hvcnRJZH1fJHt0aW1lc3RhbXB9YDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog55Sf5oiQ5Li05pe2Y2hhdElk77yI55So5LqO5byC5bi45oOF5Ya177yJDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IOS4tOaXtmNoYXRJZA0KICAgICAgICAgKi8NCiAgICAgICAgZ2VuZXJhdGVUZW1wQ2hhdElkKCkgew0KICAgICAgICAgICAgcmV0dXJuIGB4aHNfdGVtcF8ke0RhdGUubm93KCl9XyR7TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIsIDgpfWA7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpeS8muivneaYr+WQpui/h+acnw0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gc2Vzc2lvbiDkvJror53lr7nosaENCiAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IG5vdyDlvZPliY3ml7bpl7QNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpui/h+acnw0KICAgICAgICAgKi8NCiAgICAgICAgaXNTZXNzaW9uRXhwaXJlZChzZXNzaW9uLCBub3cpIHsNCiAgICAgICAgICAgIHJldHVybiAobm93IC0gc2Vzc2lvbi5sYXN0VXNlZCkgPiB0aGlzLlNFU1NJT05fRVhQSVJFX1RJTUU7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7jmxvY2FsU3RvcmFnZeWKoOi9veS8muivneaVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgbG9hZFNlc3Npb25zRnJvbVN0b3JhZ2UoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHN0b3JlZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKHRoaXMuU1RPUkFHRV9LRVkpOw0KICAgICAgICAgICAgICAgIGlmIChzdG9yZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Vzc2lvbnMgPSBKU09OLnBhcnNlKHN0b3JlZCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2Vzc2lvbkNhY2hlLmNsZWFyKCk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5Y+q5Yqg6L295pyq6L+H5pyf55qE5Lya6K+dDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgICAgIGxldCBsb2FkZWRDb3VudCA9IDA7DQoNCiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBbY29udmVyc2F0aW9uSWQsIHNlc3Npb25dIG9mIE9iamVjdC5lbnRyaWVzKHNlc3Npb25zKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzU2Vzc2lvbkV4cGlyZWQoc2Vzc2lvbiwgbm93KSkgew0KICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgIHRoaXMuc2Vzc2lvbkNhY2hlLnNldChjb252ZXJzYXRpb25JZCwgc2Vzc2lvbik7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9hZGVkQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfkvJror53orrDlv4bvvJrku47lrZjlgqjliqDovb3kvJror50nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB0b3RhbFN0b3JlZDogT2JqZWN0LmtleXMoc2Vzc2lvbnMpLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRlZENvdW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgZXhwaXJlZENvdW50OiBPYmplY3Qua2V5cyhzZXNzaW9ucykubGVuZ3RoIC0gbG9hZGVkQ291bnQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S8muivneiusOW/hu+8muWKoOi9veWtmOWCqOaVsOaNruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zZXNzaW9uQ2FjaGUuY2xlYXIoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5L+d5a2Y5Lya6K+d5pWw5o2u5YiwbG9jYWxTdG9yYWdlDQogICAgICAgICAqLw0KICAgICAgICBzYXZlU2Vzc2lvbnNUb1N0b3JhZ2UoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHNlc3Npb25zID0gT2JqZWN0LmZyb21FbnRyaWVzKHRoaXMuc2Vzc2lvbkNhY2hlKTsNCiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLlNUT1JBR0VfS0VZLCBKU09OLnN0cmluZ2lmeShzZXNzaW9ucykpOw0KICAgICAgICAgICAgICAgIHRoaXMubGFzdFN5bmNUaW1lID0gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5Lya6K+d6K6w5b+G77ya5L+d5a2Y5Yiw5a2Y5YKoJywgew0KICAgICAgICAgICAgICAgICAgICBzZXNzaW9uQ291bnQ6IHRoaXMuc2Vzc2lvbkNhY2hlLnNpemUsDQogICAgICAgICAgICAgICAgICAgIHN0b3JhZ2VTaXplOiBKU09OLnN0cmluZ2lmeShzZXNzaW9ucykubGVuZ3RoDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Lya6K+d6K6w5b+G77ya5L+d5a2Y5a2Y5YKo5pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5a6a5pyf5ZCM5q2l5Yiw5a2Y5YKo77yI6YG/5YWN6aKR57mB5YaZ5YWl77yJDQogICAgICAgICAqLw0KICAgICAgICBzeW5jVG9TdG9yYWdlSWZOZWVkZWQoKSB7DQogICAg",
        "ICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgaWYgKChub3cgLSB0aGlzLmxhc3RTeW5jVGltZSkgPiB0aGlzLkNBQ0hFX1NZTkNfSU5URVJWQUwpIHsNCiAgICAgICAgICAgICAgICB0aGlzLnNhdmVTZXNzaW9uc1RvU3RvcmFnZSgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmuIXnkIbov4fmnJ/kvJror50NCiAgICAgICAgICovDQogICAgICAgIGNsZWFuRXhwaXJlZFNlc3Npb25zKCkgew0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGxldCBjbGVhbmVkQ291bnQgPSAwOw0KDQogICAgICAgICAgICBmb3IgKGNvbnN0IFtjb252ZXJzYXRpb25JZCwgc2Vzc2lvbl0gb2YgdGhpcy5zZXNzaW9uQ2FjaGUuZW50cmllcygpKSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNTZXNzaW9uRXhwaXJlZChzZXNzaW9uLCBub3cpKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2Vzc2lvbkNhY2hlLmRlbGV0ZShjb252ZXJzYXRpb25JZCk7DQogICAgICAgICAgICAgICAgICAgIGNsZWFuZWRDb3VudCsrOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5aaC5p6c5Lya6K+d5pWw6YeP6LaF6L+H6ZmQ5Yi277yM5riF55CG5pyA5pen55qE5Lya6K+dDQogICAgICAgICAgICBpZiAodGhpcy5zZXNzaW9uQ2FjaGUuc2l6ZSA+IHRoaXMuTUFYX1NFU1NJT05TKSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc2Vzc2lvbnMgPSBBcnJheS5mcm9tKHRoaXMuc2Vzc2lvbkNhY2hlLmVudHJpZXMoKSk7DQogICAgICAgICAgICAgICAgc2Vzc2lvbnMuc29ydCgoYSwgYikgPT4gYVsxXS5sYXN0VXNlZCAtIGJbMV0ubGFzdFVzZWQpOw0KDQogICAgICAgICAgICAgICAgY29uc3QgdG9SZW1vdmUgPSBzZXNzaW9ucy5zbGljZSgwLCB0aGlzLnNlc3Npb25DYWNoZS5zaXplIC0gdGhpcy5NQVhfU0VTU0lPTlMpOw0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2NvbnZlcnNhdGlvbklkXSBvZiB0b1JlbW92ZSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNlc3Npb25DYWNoZS5kZWxldGUoY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgICAgICBjbGVhbmVkQ291bnQrKzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmIChjbGVhbmVkQ291bnQgPiAwKSB7DQogICAgICAgICAgICAgICAgdGhpcy5zYXZlU2Vzc2lvbnNUb1N0b3JhZ2UoKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Lya6K+d6K6w5b+G77ya5riF55CG6L+H5pyf5Lya6K+dJywgew0KICAgICAgICAgICAgICAgICAgICBjbGVhbmVkQ291bnQsDQogICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ0NvdW50OiB0aGlzLnNlc3Npb25DYWNoZS5zaXplDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAg",
        "IHJldHVybiBjbGVhbmVkQ291bnQ7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWQr+WKqOWumuacn+a4heeQhg0KICAgICAgICAgKi8NCiAgICAgICAgc3RhcnRQZXJpb2RpY0NsZWFudXAoKSB7DQogICAgICAgICAgICAvLyDmr4/lsI/ml7bmuIXnkIbkuIDmrKHov4fmnJ/kvJror50NCiAgICAgICAgICAgIHNldEludGVydmFsKCgpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmNsZWFuRXhwaXJlZFNlc3Npb25zKCk7DQogICAgICAgICAgICB9LCA2MCAqIDYwICogMTAwMCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluS8muivnee7n+iuoeS/oeaBrw0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDnu5/orqHkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIGdldFNlc3Npb25TdGF0cygpIHsNCiAgICAgICAgICAgIGNvbnN0IHNlc3Npb25zID0gQXJyYXkuZnJvbSh0aGlzLnNlc3Npb25DYWNoZS52YWx1ZXMoKSk7DQogICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIHRvdGFsU2Vzc2lvbnM6IHRoaXMuc2Vzc2lvbkNhY2hlLnNpemUsDQogICAgICAgICAgICAgICAgYWN0aXZlU2Vzc2lvbnM6IHNlc3Npb25zLmZpbHRlcihzID0+IChub3cgLSBzLmxhc3RVc2VkKSA8IDI0ICogNjAgKiA2MCAqIDEwMDApLmxlbmd0aCwNCiAgICAgICAgICAgICAgICB0b3RhbE1lc3NhZ2VzOiBzZXNzaW9ucy5yZWR1Y2UoKHN1bSwgcykgPT4gc3VtICsgKHMubWVzc2FnZUNvdW50IHx8IDApLCAwKSwNCiAgICAgICAgICAgICAgICBvbGRlc3RTZXNzaW9uOiBzZXNzaW9ucy5sZW5ndGggPiAwID8gTWF0aC5taW4oLi4uc2Vzc2lvbnMubWFwKHMgPT4gcy5jcmVhdGVkQXQpKSA6IG51bGwsDQogICAgICAgICAgICAgICAgbmV3ZXN0U2Vzc2lvbjogc2Vzc2lvbnMubGVuZ3RoID4gMCA/IE1hdGgubWF4KC4uLnNlc3Npb25zLm1hcChzID0+IHMuY3JlYXRlZEF0KSkgOiBudWxsLA0KICAgICAgICAgICAgICAgIHN0b3JhZ2VTaXplOiBKU09OLnN0cmluZ2lmeShPYmplY3QuZnJvbUVudHJpZXModGhpcy5zZXNzaW9uQ2FjaGUpKS5sZW5ndGgNCiAgICAgICAgICAgIH07DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaJi+WKqOa4heeQhuaJgOacieS8muivnQ0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYXJBbGxTZXNzaW9ucygpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvdW50ID0gdGhpcy5zZXNzaW9uQ2FjaGUuc2l6ZTsNCiAgICAgICAgICAgIHRoaXMuc2Vzc2lvbkNhY2hlLmNsZWFyKCk7DQogICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLlNUT1JBR0VfS0VZKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+S8muivneiusOW/hu+8muaJi+WKqOa4heeQhuaJgOacieS8muivnScsIHsgY2xlYXJlZENvdW50OiBjb3VudCB9KTsNCiAgICAgICAg",
        "ICAgIHJldHVybiBjb3VudDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5a+85Ye65Lya6K+d5pWw5o2uDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IEpTT07moLzlvI/nmoTkvJror53mlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGV4cG9ydFNlc3Npb25zKCkgew0KICAgICAgICAgICAgY29uc3QgZGF0YSA9IHsNCiAgICAgICAgICAgICAgICB2ZXJzaW9uOiAnMS4wJywNCiAgICAgICAgICAgICAgICBleHBvcnRUaW1lOiBEYXRlLm5vdygpLA0KICAgICAgICAgICAgICAgIHNlc3Npb25zOiBPYmplY3QuZnJvbUVudHJpZXModGhpcy5zZXNzaW9uQ2FjaGUpDQogICAgICAgICAgICB9Ow0KICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDIpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlr7zlhaXkvJror53mlbDmja4NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGpzb25EYXRhIEpTT07moLzlvI/nmoTkvJror53mlbDmja4NCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOWvvOWFpeaYr+WQpuaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgaW1wb3J0U2Vzc2lvbnMoanNvbkRhdGEpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoanNvbkRhdGEpOw0KICAgICAgICAgICAgICAgIGlmICghZGF0YS5zZXNzaW9ucykgew0KICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+aXoOaViOeahOS8muivneaVsOaNruagvOW8jycpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgbGV0IGltcG9ydGVkQ291bnQgPSAwOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBbY29udmVyc2F0aW9uSWQsIHNlc3Npb25dIG9mIE9iamVjdC5lbnRyaWVzKGRhdGEuc2Vzc2lvbnMpKSB7DQogICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5pc1Nlc3Npb25FeHBpcmVkKHNlc3Npb24sIG5vdykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2Vzc2lvbkNhY2hlLnNldChjb252ZXJzYXRpb25JZCwgc2Vzc2lvbik7DQogICAgICAgICAgICAgICAgICAgICAgICBpbXBvcnRlZENvdW50Kys7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0aGlzLnNhdmVTZXNzaW9uc1RvU3RvcmFnZSgpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfkvJror53orrDlv4bvvJrlr7zlhaXkvJror53mlbDmja4nLCB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsSW1wb3J0ZWQ6IE9iamVjdC5rZXlzKGRhdGEuc2Vzc2lvbnMpLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgdmFsaWRJbXBvcnRlZDogaW1wb3J0ZWRDb3VudA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAg",
        "cmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Lya6K+d6K6w5b+G77ya5a+85YWl5Lya6K+d5pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyBTZWxsZXIgSUQg5o+Q5Y+W5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBTZWxsZXJJZEV4dHJhY3RvciA9IHsNCiAgICAgICAgc2VsbGVySWQ6IG51bGwsDQogICAgICAgIGluaXRpYWxpemVkOiBmYWxzZSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yid5aeL5YyWU2VsbGVyIElE5o+Q5Y+W5Zmo77yI5aKe5by654mI77yJDQogICAgICAgICAqLw0KICAgICAgICBpbml0KCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuaW5pdGlhbGl6ZWQpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ1NlbGxlcklkRXh0cmFjdG9y5bey5Yid5aeL5YyW77yM6Lez6L+H6YeN5aSN5Yid5aeL5YyWJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5qAIOW8gOWni+WIneWni+WMllNlbGxlciBJROaPkOWPluWZqCcpOw0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l6aG16Z2i546v5aKDDQogICAgICAgICAgICAgICAgY29uc3QgaXNQcm9QYWdlID0gd2luZG93LmxvY2F0aW9uLmhyZWYuaW5jbHVkZXMoJ3Byby54aWFvaG9uZ3NodS5jb20nKTsNCiAgICAgICAgICAgICAgICBpZiAoIWlzUHJvUGFnZSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4pqg77iPIOW9k+WJjeS4jeWcqOWwj+e6ouS5puS4k+S4mueJiOmhtemdou+8jHNlbGxlcl9pZOaPkOWPluWPr+iDveWksei0pScpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTHvvJrku45VUkzlj4LmlbDmj5Dlj5bvvIjnq4vljbPmiafooYzvvIkNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ/CflI0g5bCd6K+V5LuOVVJM5Y+C5pWw5o+Q5Y+Wc2VsbGVyX2lkJyk7DQogICAgICAgICAgICAgICAgdGhpcy5leHRyYWN0RnJvbVVSTCgpOw0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMu+8muebkeWQrOe9kee7nOivt+axgu+8iOeri+WNs+iuvue9ruebkeWQrOWZqO+8iQ0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+UjSDorr7nva7nvZHnu5zor7fmsYLnm5HlkKzlmagnKTsNCiAgICAgICAgICAgICAgICB0aGlzLmludGVyY2VwdE5ldHdvcmtSZXF1ZXN0cygpOw0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVM++8muS7jumhtemdouaVsOaNruaPkOWPlu+8iOeri+WN",
        "s+WwneivlSArIOW7tui/n+mHjeivle+8iQ0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn8J+UjSDlsJ3or5Xku47pobXpnaLmlbDmja7mj5Dlj5ZzZWxsZXJfaWQnKTsNCiAgICAgICAgICAgICAgICB0aGlzLmV4dHJhY3RGcm9tUGFnZURhdGEoKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuaW5pdGlhbGl6ZWQgPSB0cnVlOw0KDQogICAgICAgICAgICAgICAgLy8g5Yid5aeL5YyW5a6M5oiQ5ZCO55qE54q25oCB5qOA5p+lDQogICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1cyA9IHRoaXMuZ2V0U3RhdHVzUmVwb3J0KCk7DQogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnNlbGxlcklkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIFNlbGxlciBJROaPkOWPluWZqOWIneWni+WMluaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogdGhpcy5zZWxsZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAn5bey6I635Y+WJw0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4pqg77iPIFNlbGxlciBJROaPkOWPluWZqOWIneWni+WMluWujOaIkO+8jOS9huacquiOt+WPluWIsHNlbGxlcl9pZCcsIHN0YXR1cyk7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+SoSDlkK/liqjoh6rliqjkv67lpI3mnLrliLYuLi4nKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5ZCv5Yqo6Ieq5Yqo5L+u5aSN5py65Yi2DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0QXV0b1JlcGFpcigpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSwgMzAwMCk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfinYwgU2VsbGVyIElE5o+Q5Y+W5Zmo5Yid5aeL5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLmluaXRpYWxpemVkID0gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7jlVSTOWPguaVsOaPkOWPlnNlbGxlcl9pZA0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdEZyb21VUkwoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHVybFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMod2luZG93LmxvY2F0aW9uLnNlYXJjaCk7DQogICAgICAgICAgICAgICAgY29uc3Qgc2VsbGVySWQgPSB1cmxQYXJhbXMuZ2V0KCdzZWxsZXJfaWQnKTsNCiAgICAgICAgICAgICAgICBpZiAoc2VsbGVySWQpIHsNCiAgICAgICAgICAg",
        "ICAgICAgICAgdGhpcy5zZWxsZXJJZCA9IHNlbGxlcklkOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5LuOVVJM5o+Q5Y+Wc2VsbGVyX2lkJywgeyBzZWxsZXJJZDogc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkuZ/mo4Dmn6VoYXNo5Y+C5pWwDQogICAgICAgICAgICAgICAgY29uc3QgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoOw0KICAgICAgICAgICAgICAgIGNvbnN0IGhhc2hNYXRjaCA9IGhhc2gubWF0Y2goL3NlbGxlcl9pZD0oW14mXSspLyk7DQogICAgICAgICAgICAgICAgaWYgKGhhc2hNYXRjaCAmJiBoYXNoTWF0Y2hbMV0pIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxsZXJJZCA9IGhhc2hNYXRjaFsxXTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+S7jlVSTCBoYXNo5o+Q5Y+Wc2VsbGVyX2lkJywgeyBzZWxsZXJJZDogaGFzaE1hdGNoWzFdLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJyB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S7jlVSTOaPkOWPlnNlbGxlcl9pZOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOebkeWQrOe9kee7nOivt+axguaPkOWPlnNlbGxlcl9pZO+8iOWinuW8uueJiO+8iQ0KICAgICAgICAgKi8NCiAgICAgICAgaW50ZXJjZXB0TmV0d29ya1JlcXVlc3RzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBvcmlnaW5hbEZldGNoID0gd2luZG93LmZldGNoOw0KICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsWEhST3BlbiA9IFhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZS5vcGVuOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNlbGYgPSB0aGlzOw0KDQogICAgICAgICAgICAgICAgLy8g5oum5oiqZmV0Y2jor7fmsYINCiAgICAgICAgICAgICAgICB3aW5kb3cuZmV0Y2ggPSBmdW5jdGlvbiguLi5hcmdzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IG9yaWdpbmFsRmV0Y2guYXBwbHkodGhpcywgYXJncyk7DQoNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IGFyZ3NbMF07DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHVybCA9PT0gJ3N0cmluZycpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmV4dHJhY3RTZWxsZXJJZEZyb21VcmwodXJsLCAnZmV0Y2gnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0N",
        "CiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOW/veeVpee9kee7nOivt+axguaLpuaIquS4reeahOmUmeivrw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgLy8g5oum5oiqWE1MSHR0cFJlcXVlc3Tor7fmsYINCiAgICAgICAgICAgICAgICBYTUxIdHRwUmVxdWVzdC5wcm90b3R5cGUub3BlbiA9IGZ1bmN0aW9uKG1ldGhvZCwgdXJsLCAuLi5hcmdzKSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHVybCA9PT0gJ3N0cmluZycpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmV4dHJhY3RTZWxsZXJJZEZyb21VcmwodXJsLCAneGhyJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlv73nlaXnvZHnu5zor7fmsYLmi6bmiKrkuK3nmoTplJnor68NCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbFhIUk9wZW4uYXBwbHkodGhpcywgW21ldGhvZCwgdXJsLCAuLi5hcmdzXSk7DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5SNIOWinuW8uue9kee7nOivt+axguaLpuaIquWZqOW3suiuvue9ricsIHsNCiAgICAgICAgICAgICAgICAgICAg55uR5ZCs57G75Z6LOiBbJ2ZldGNoJywgJ1hNTEh0dHBSZXF1ZXN0J10sDQogICAgICAgICAgICAgICAgICAgIOebruagh0FQSTogWw0KICAgICAgICAgICAgICAgICAgICAgICAgJ2xhbmRpbmdwYWdlL2xpc3QgKHNlbGxlcl9pZCknLA0KICAgICAgICAgICAgICAgICAgICAgICAgJ3dpa2kvZ3JvdXAgKG93bmVyX2lkKScsDQogICAgICAgICAgICAgICAgICAgICAgICAnd2lraS9pdGVtIChvd25lcl9pZCknLA0KICAgICAgICAgICAgICAgICAgICAgICAgJ3JvYmluL3RyaWdnZXIgKHVzZXJJZCknDQogICAgICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCforr7nva7nvZHnu5zor7fmsYLmi6bmiKrlmajlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDku45VUkzkuK3mj5Dlj5ZzZWxsZXJfaWTnmoTmoLjlv4PpgLvovpENCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVybCDor7fmsYJVUkwNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHNvdXJjZSDmnaXmupDnsbvlnosNCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RTZWxsZXJJZEZy",
        "b21VcmwodXJsLCBzb3VyY2UgPSAndW5rbm93bicpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLnNlbGxlcklkKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOyAvLyDlt7Lnu4/ojrflj5bliLDkuobvvIzkuI3pnIDopoHph43lpI3mj5Dlj5YNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDmlrnms5UxOiDnm7TmjqXku45zZWxsZXJfaWTlj4LmlbDmj5Dlj5YNCiAgICAgICAgICAgICAgICBpZiAodXJsLmluY2x1ZGVzKCdzZWxsZXJfaWQ9JykpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWF0Y2ggPSB1cmwubWF0Y2goL3NlbGxlcl9pZD0oW14mXSspLyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCAmJiBtYXRjaFsxXSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VsbGVySWQgPSBkZWNvZGVVUklDb21wb25lbnQobWF0Y2hbMV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMudmFsaWRhdGVTZWxsZXJJZChzZWxsZXJJZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGxlcklkID0gc2VsbGVySWQ7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDku45zZWxsZXJfaWTlj4LmlbDmj5Dlj5bmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGxlcklkOiBzZWxsZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwuc3Vic3RyaW5nKDAsIDgwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMjog5LuOb3duZXJfaWTlj4LmlbDmj5Dlj5bvvIh3aWtpIEFQSeS4rW93bmVyX2lk562J5ZCM5LqOc2VsbGVyX2lk77yJDQogICAgICAgICAgICAgICAgaWYgKHVybC5pbmNsdWRlcygnb3duZXJfaWQ9JykgJiYgKHVybC5pbmNsdWRlcygnL3dpa2kvJykgfHwgdXJsLmluY2x1ZGVzKCcvdG9vbHMvJykpKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG1hdGNoID0gdXJsLm1hdGNoKC9vd25lcl9pZD0oW14mXSspLyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCAmJiBtYXRjaFsxXSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3duZXJJZCA9IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFsxXSk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy52YWxpZGF0ZVNlbGxlcklkKG93bmVySWQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxsZXJJZCA9IG93bmVySWQ7DQog",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDku45vd25lcl9pZOWPguaVsOaPkOWPluaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsbGVySWQ6IG93bmVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLnN1YnN0cmluZygwLCA4MCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTM6IOS7jnVzZXJJZOWPguaVsOaPkOWPlu+8iHJvYmluIEFQSeS4rXVzZXJJZOetieWQjOS6jnNlbGxlcl9pZO+8iQ0KICAgICAgICAgICAgICAgIGlmICh1cmwuaW5jbHVkZXMoJ3VzZXJJZD0nKSAmJiB1cmwuaW5jbHVkZXMoJy9yb2Jpbi90cmlnZ2VyJykpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWF0Y2ggPSB1cmwubWF0Y2goL3VzZXJJZD0oW14mXSspLyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaCAmJiBtYXRjaFsxXSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzFdKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnZhbGlkYXRlU2VsbGVySWQodXNlcklkKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsbGVySWQgPSB1c2VySWQ7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDku451c2VySWTlj4LmlbDmj5Dlj5bmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGxlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLnN1YnN0cmluZygwLCA4MCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTQ6IOS7jui3r+W+hOS4reaPkOWPlklE77yI5p+Q5LqbQVBJ5bCGSUTkvZzkuLrot6/lvoTlj4LmlbDvvIkNCiAgICAgICAgICAgICAgICBjb25zdCBwYXRoSWRNYXRjaCA9IHVybC5tYXRjaCgvXC8oW2EtZjAtOV17MjR9KVwvLyk7DQogICAgICAgICAgICAgICAgaWYgKHBhdGhJZE1hdGNoICYmIHBhdGhJZE1hdGNoWzFdKSB7DQogICAgICAgICAg",
        "ICAgICAgICAgIGNvbnN0IHBhdGhJZCA9IHBhdGhJZE1hdGNoWzFdOw0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy52YWxpZGF0ZVNlbGxlcklkKHBhdGhJZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsbGVySWQgPSBwYXRoSWQ7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOS7jui3r+W+hOWPguaVsOaPkOWPluaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogcGF0aElkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwuc3Vic3RyaW5nKDAsIDgwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ1VSTOWPguaVsOaPkOWPluWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgIHVybDogdXJsLnN1YnN0cmluZygwLCA1MCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpqozor4FzZWxsZXJfaWTmoLzlvI/mmK/lkKbmraPnoa4NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHNlbGxlcklkIOW+hemqjOivgeeahHNlbGxlcl9pZA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5pyJ5pWIDQogICAgICAgICAqLw0KICAgICAgICB2YWxpZGF0ZVNlbGxlcklkKHNlbGxlcklkKSB7DQogICAgICAgICAgICBpZiAoIXNlbGxlcklkIHx8IHR5cGVvZiBzZWxsZXJJZCAhPT0gJ3N0cmluZycpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOWOu+mZpOWPr+iDveeahOW8leWPt+WSjOepuuagvA0KICAgICAgICAgICAgc2VsbGVySWQgPSBzZWxsZXJJZC50cmltKCkucmVwbGFjZSgvWyciXS9nLCAnJyk7DQoNCiAgICAgICAgICAgIC8vIOajgOafpemVv+W6pu+8iOmAmuW4uOS4ujI05L2N5Y2B5YWt6L+b5Yi25a2X56ym77yJDQogICAgICAgICAgICBpZiAoc2VsbGVySWQubGVuZ3RoICE9PSAyNCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygnc2VsbGVyX2lk6ZW/5bqm5LiN5q2j56GuJywgew0KICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBsZW5ndGg6IHNlbGxlcklkLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxz",
        "ZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5Li65pyJ5pWI55qE5Y2B5YWt6L+b5Yi25a2X56ym5LiyDQogICAgICAgICAgICBpZiAoIS9eW2EtZjAtOV17MjR9JC9pLnRlc3Qoc2VsbGVySWQpKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCdzZWxsZXJfaWTmoLzlvI/kuI3mraPnoa4nLCB7DQogICAgICAgICAgICAgICAgICAgIHNlbGxlcklkOiBzZWxsZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgIGZvcm1hdDogJ+mdnuWNgeWFrei/m+WItuagvOW8jycNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygnc2VsbGVyX2lk5qC85byP6aqM6K+B6YCa6L+HJywgew0KICAgICAgICAgICAgICAgIHNlbGxlcklkOiBzZWxsZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7jumhtemdouaVsOaNruaPkOWPlnNlbGxlcl9pZO+8iOWinuW8uueJiO+8iQ0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdEZyb21QYWdlRGF0YSgpIHsNCiAgICAgICAgICAgIC8vIOeri+WNs+WwneivleS4gOasoQ0KICAgICAgICAgICAgdGhpcy50cnlFeHRyYWN0RnJvbVBhZ2VEYXRhKCk7DQoNCiAgICAgICAgICAgIC8vIOW7tui/n+mHjeivleacuuWItg0KICAgICAgICAgICAgY29uc3QgcmV0cnlJbnRlcnZhbHMgPSBbMTAwMCwgMzAwMCwgNTAwMCwgMTAwMDBdOyAvLyAxcywgM3MsIDVzLCAxMHMNCg0KICAgICAgICAgICAgcmV0cnlJbnRlcnZhbHMuZm9yRWFjaCgoZGVsYXksIGluZGV4KSA9PiB7DQogICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5zZWxsZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDnrKwke2luZGV4ICsgMX3mrKHph43or5Xmj5Dlj5ZzZWxsZXJfaWRgLCB7IGRlbGF5IH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50cnlFeHRyYWN0RnJvbVBhZ2VEYXRhKCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9LCBkZWxheSk7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5bCd6K+V5LuO6aG16Z2i5pWw5o2u5o+Q5Y+Wc2VsbGVyX2lk55qE5qC45b+D6YC76L6RDQogICAgICAgICAqLw0KICAgICAgICB0cnlFeHRyYWN0RnJvbVBhZ2VEYXRhKCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuc2VsbGVySWQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm47IC8vIOW3sue7j+iOt+WPluWIsOS6hg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAg",
        "ICAgIExvZ2dlci5kZWJ1Zygn8J+UjSDlvIDlp4vku47pobXpnaLmlbDmja7mj5Dlj5ZzZWxsZXJfaWQnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTE6IOS7juWFqOWxgOWPmOmHj+S4reaPkOWPlg0KICAgICAgICAgICAgICAgIGNvbnN0IGdsb2JhbFNvdXJjZXMgPSBbDQogICAgICAgICAgICAgICAgICAgICgpID0+IHdpbmRvdy5fX0lOSVRJQUxfU1RBVEVfXz8uc2VsbGVyPy5pZCwNCiAgICAgICAgICAgICAgICAgICAgKCkgPT4gd2luZG93Ll9fSU5JVElBTF9TVEFURV9fPy51c2VyPy5zZWxsZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgKCkgPT4gd2luZG93Ll9fSU5JVElBTF9TVEFURV9fPy5hY2NvdW50Py5zZWxsZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgKCkgPT4gd2luZG93LmdfY29uZmlnPy5zZWxsZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgKCkgPT4gd2luZG93LkFQUF9DT05GSUc/LnNlbGxlcklkLA0KICAgICAgICAgICAgICAgICAgICAoKSA9PiB3aW5kb3cuVVNFUl9JTkZPPy5zZWxsZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgKCkgPT4gd2luZG93LlNFTExFUl9JTkZPPy5pZA0KICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGdldFNvdXJjZSBvZiBnbG9iYWxTb3VyY2VzKSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzZWxsZXJJZCA9IGdldFNvdXJjZSgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGxlcklkICYmIHRoaXMudmFsaWRhdGVTZWxsZXJJZChzZWxsZXJJZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGxlcklkID0gc2VsbGVySWQ7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDku47lhajlsYDlj5jph4/mj5Dlj5ZzZWxsZXJfaWTmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGxlcklkOiBzZWxsZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZTogZ2V0U291cmNlLnRvU3RyaW5nKCkubWF0Y2goL3dpbmRvd1wuKFteP10rKS8pPy5bMV0gfHwgJ3Vua25vd24nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5b+955Wl5Y2V5Liq5rqQ55qE6ZSZ6K+vDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5UyOiDku45sb2NhbFN0b3JhZ2Uvc2Vzc2lvblN0b3JhZ2Xmj5Dlj5YNCiAgICAgICAgICAgICAgICBjb25zdCBzdG9yYWdlS2V5cyA9IFsNCiAgICAgICAgICAgICAgICAg",
        "ICAgJ3NlbGxlcl9pZCcsICdzZWxsZXJJZCcsICdTRUxMRVJfSUQnLA0KICAgICAgICAgICAgICAgICAgICAndXNlcl9pZCcsICd1c2VySWQnLCAnVVNFUl9JRCcsDQogICAgICAgICAgICAgICAgICAgICdhY2NvdW50X2lkJywgJ2FjY291bnRJZCcsICdBQ0NPVU5UX0lEJw0KICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBzdG9yYWdlS2V5cykgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RvcmVkSWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpIHx8IHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oa2V5KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdG9yZWRJZCAmJiB0aGlzLnZhbGlkYXRlU2VsbGVySWQoc3RvcmVkSWQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxsZXJJZCA9IHN0b3JlZElkOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg5LuO5a2Y5YKo5Lit5o+Q5Y+Wc2VsbGVyX2lk5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogc3RvcmVkSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdG9yYWdlS2V5OiBrZXkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlv73nlaXlrZjlgqjorr/pl67plJnor68NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTM6IOS7jkRPTeWFg+e0oOS4reaPkOWPlg0KICAgICAgICAgICAgICAgIGNvbnN0IGRvbVNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICAgICAgJ1tkYXRhLXNlbGxlci1pZF0nLA0KICAgICAgICAgICAgICAgICAgICAnW3NlbGxlci1pZF0nLA0KICAgICAgICAgICAgICAgICAgICAnW2RhdGEtdXNlci1pZF0nLA0KICAgICAgICAgICAgICAgICAgICAnW3VzZXItaWRdJywNCiAgICAgICAgICAgICAgICAgICAgJy5zZWxsZXItaW5mb1tkYXRhLWlkXScsDQogICAgICAgICAgICAgICAgICAgICcudXNlci1pbmZvW2RhdGEtaWRdJywNCiAgICAgICAgICAgICAgICAgICAgJ21ldGFbbmFtZT0ic2VsbGVyLWlkIl0nLA0KICAgICAgICAgICAgICAgICAgICAnbWV0YVtwcm9wZXJ0eT0ic2VsbGVyLWlkIl0nDQogICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2VsZWN0b3Igb2YgZG9tU2VsZWN0b3JzKSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50",
        "cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGVsZW1lbnRzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VsbGVySWQgPSBlbGVtZW50LmRhdGFzZXQ/LnNlbGxlcklkIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuZGF0YXNldD8udXNlcklkIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuZGF0YXNldD8uaWQgfHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ3NlbGxlci1pZCcpIHx8DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCd1c2VyLWlkJykgfHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2NvbnRlbnQnKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWxsZXJJZCAmJiB0aGlzLnZhbGlkYXRlU2VsbGVySWQoc2VsbGVySWQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsbGVySWQgPSBzZWxsZXJJZDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDku45ET03lhYPntKDmj5Dlj5ZzZWxsZXJfaWTmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3IsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWdOYW1lOiBlbGVtZW50LnRhZ05hbWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlv73nlaVET03mn6Xor6LplJnor68NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTQ6IOS7jumhtemdouiEmuacrOagh+etvuS4reaPkOWPlg0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjcmlwdFRhZ3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzY3JpcHQnKTsNCiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBzY3JpcHQgb2Ygc2NyaXB0VGFncykgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNjcmlwdC50ZXh0",
        "Q29udGVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGxlcklkTWF0Y2ggPSBzY3JpcHQudGV4dENvbnRlbnQubWF0Y2goL1siJ11zZWxsZXJfaWRbIiddXHMqOlxzKlsiJ10oW14iJ10rKVsiJ10vKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySWRNYXRjaCA9IHNjcmlwdC50ZXh0Q29udGVudC5tYXRjaCgvWyInXXVzZXJJZFsiJ11ccyo6XHMqWyInXShbXiInXSspWyInXS8pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZm91bmRJZCA9IHNlbGxlcklkTWF0Y2g/LlsxXSB8fCB1c2VySWRNYXRjaD8uWzFdOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmb3VuZElkICYmIHRoaXMudmFsaWRhdGVTZWxsZXJJZChmb3VuZElkKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGxlcklkID0gZm91bmRJZDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDku47ohJrmnKzmoIfnrb7mj5Dlj5ZzZWxsZXJfaWTmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogZm91bmRJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S7juiEmuacrOagh+etvuaPkOWPluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfinYwg6aG16Z2i5pWw5o2u5o+Q5Y+W5pyq5om+5Yiw5pyJ5pWI55qEc2VsbGVyX2lkJyk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpobXpnaLmlbDmja7mj5Dlj5bov4fnqIvlh7rplJknLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5ZzZWxsZXJfaWQNCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ3xudWxsfQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0U2VsbGVySWQoKSB7DQogICAgICAgICAgICByZXR1cm4gdGhpcy5zZWxsZXJJZDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5omL5Yqo6K6+572uc2VsbGVyX2lkDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZWxsZXJJZA0KICAgICAgICAgKi8NCiAgICAgICAgc2V0U2VsbGVySWQoc2VsbGVySWQpIHsNCiAgICAgICAgICAgIGlmIChzZWxs",
        "ZXJJZCAmJiB0eXBlb2Ygc2VsbGVySWQgPT09ICdzdHJpbmcnKSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMudmFsaWRhdGVTZWxsZXJJZChzZWxsZXJJZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxsZXJJZCA9IHNlbGxlcklkOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn4pyFIOaJi+WKqOiuvue9rnNlbGxlcl9pZOaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGxlcklkOiBzZWxsZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KdjCDmiYvliqjorr7nva5zZWxsZXJfaWTlpLHotKXvvJrmoLzlvI/ml6DmlYgnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5by65Yi26YeN5paw5o+Q5Y+Wc2VsbGVyX2lkDQogICAgICAgICAqLw0KICAgICAgICBmb3JjZVJlZnJlc2goKSB7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+UhCDlvLrliLbph43mlrDmj5Dlj5ZzZWxsZXJfaWQnKTsNCiAgICAgICAgICAgIHRoaXMuc2VsbGVySWQgPSBudWxsOw0KICAgICAgICAgICAgdGhpcy5pbml0aWFsaXplZCA9IGZhbHNlOw0KICAgICAgICAgICAgdGhpcy5pbml0KCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluaPkOWPlueKtuaAgeaKpeWRig0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDnirbmgIHmiqXlkYoNCiAgICAgICAgICovDQogICAgICAgIGdldFN0YXR1c1JlcG9ydCgpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgaW5pdGlhbGl6ZWQ6IHRoaXMuaW5pdGlhbGl6ZWQsDQogICAgICAgICAgICAgICAgaGFzU2VsbGVySWQ6ICEhdGhpcy5zZWxsZXJJZCwNCiAgICAgICAgICAgICAgICBzZWxsZXJJZDogdGhpcy5zZWxsZXJJZCA/IHRoaXMuc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nIDogbnVsbCwNCiAgICAgICAgICAgICAgICBjdXJyZW50VXJsOiB3aW5kb3cubG9jYXRpb24uaHJlZiwNCiAgICAgICAgICAgICAgICBpc1Byb1BhZ2U6IHdpbmRvdy5sb2NhdGlvbi5ocmVmLmluY2x1ZGVzKCdwcm8ueGlhb2hvbmdzaHUuY29tJyksDQogICAgICAgICAgICAgICAgZXh0cmFjdGlvbk1ldGhvZHM6IHsNCiAgICAgICAgICAgICAgICAgICAgdXJsOiB0aGlzLnNlbGxlcklkID8gJ+W3suWwneivlScgOiAn5pyq5oiQ5YqfJywNCiAgICAgICAgICAgICAgICAgICAgbmV0d29yazogJ+ebkeWQrOS4rScsDQogICAgICAgICAgICAgICAgICAgIHBhZ2VEYXRhOiAn5bey5bCd6K+VJywNCiAg",
        "ICAgICAgICAgICAgICAgICAgbWFudWFsOiAn5Y+v55SoJw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH07DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa1i+ivlXNlbGxlcl9pZOaPkOWPluWKn+iDvQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgdGVzdEV4dHJhY3Rpb24oKSB7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+nqiDlvIDlp4vmtYvor5VzZWxsZXJfaWTmj5Dlj5blip/og70nKTsNCg0KICAgICAgICAgICAgY29uc3QgcmVwb3J0ID0gdGhpcy5nZXRTdGF0dXNSZXBvcnQoKTsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5OKIOW9k+WJjeeKtuaAgeaKpeWRiicsIHJlcG9ydCk7DQoNCiAgICAgICAgICAgIC8vIOa1i+ivlVVSTOaPkOWPlg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CflI0g5rWL6K+VVVJM5o+Q5Y+WLi4uJyk7DQogICAgICAgICAgICB0aGlzLmV4dHJhY3RGcm9tVVJMKCk7DQoNCiAgICAgICAgICAgIC8vIOa1i+ivlemhtemdouaVsOaNruaPkOWPlg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CflI0g5rWL6K+V6aG16Z2i5pWw5o2u5o+Q5Y+WLi4uJyk7DQogICAgICAgICAgICB0aGlzLnRyeUV4dHJhY3RGcm9tUGFnZURhdGEoKTsNCg0KICAgICAgICAgICAgLy8g562J5b6F572R57uc6K+35rGCDQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+UjSDnrYnlvoXnvZHnu5zor7fmsYLnm5HlkKwuLi4nKTsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5KhIOivt+WcqOmhtemdouS4rei/m+ihjOS4gOS6m+aTjeS9nO+8iOWmguWIh+aNouagh+etvumhteOAgeWIt+aWsOetie+8ieadpeinpuWPkee9kee7nOivt+axgicpOw0KDQogICAgICAgICAgICAvLyA156eS5ZCO6L6T5Ye65pyA57uI57uT5p6cDQogICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICBjb25zdCBmaW5hbFJlcG9ydCA9IHRoaXMuZ2V0U3RhdHVzUmVwb3J0KCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfk4sg5rWL6K+V5a6M5oiQIC0g5pyA57uI54q25oCB5oql5ZGKJywgZmluYWxSZXBvcnQpOw0KDQogICAgICAgICAgICAgICAgaWYgKHRoaXMuc2VsbGVySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSBzZWxsZXJfaWTmj5Dlj5bmiJDlip/vvIEnKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4p2MIHNlbGxlcl9pZOaPkOWPluWksei0pe+8jOivt+ajgOafpe+8micpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2FybignMS4g5piv5ZCm5Zyo5bCP57qi5Lmm5LiT5Lia54mI6aG16Z2iIChwcm8ueGlhb2hvbmdzaHUuY29tKScpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2FybignMi4g5piv5ZCm5bey55m75b2V6LSm5oi3Jyk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCczLiDlsJ3or5XliLfm",
        "lrDpobXpnaLmiJbliIfmjaLmoIfnrb7pobUnKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJzQuIOWPr+S7peaJi+WKqOiuvue9ru+8mlNlbGxlcklkRXh0cmFjdG9yLnNldFNlbGxlcklkKCJ5b3VyX3NlbGxlcl9pZCIpJyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSwgNTAwMCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOi+k+WHuuiwg+ivleS/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgZGVidWcoKSB7DQogICAgICAgICAgICBjb25zdCByZXBvcnQgPSB0aGlzLmdldFN0YXR1c1JlcG9ydCgpOw0KICAgICAgICAgICAgY29uc29sZS5ncm91cCgn8J+UjSBTZWxsZXJJZEV4dHJhY3RvciDosIPor5Xkv6Hmga8nKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfnirbmgIHmiqXlkYo6JywgcmVwb3J0KTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCflvZPliY1VUkw6Jywgd2luZG93LmxvY2F0aW9uLmhyZWYpOw0KICAgICAgICAgICAgY29uc29sZS5sb2coJ+mhtemdouagh+mimDonLCBkb2N1bWVudC50aXRsZSk7DQogICAgICAgICAgICBjb25zb2xlLmxvZygn5YWo5bGA5Y+Y6YeP5qOA5p+lOicpOw0KICAgICAgICAgICAgY29uc29sZS5sb2coJyAgLSB3aW5kb3cuX19JTklUSUFMX1NUQVRFX186JywgISF3aW5kb3cuX19JTklUSUFMX1NUQVRFX18pOw0KICAgICAgICAgICAgY29uc29sZS5sb2coJyAgLSB3aW5kb3cuZ19jb25maWc6JywgISF3aW5kb3cuZ19jb25maWcpOw0KICAgICAgICAgICAgY29uc29sZS5sb2coJyAgLSB3aW5kb3cuQVBQX0NPTkZJRzonLCAhIXdpbmRvdy5BUFBfQ09ORklHKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdsb2NhbFN0b3JhZ2Xmo4Dmn6U6Jyk7DQogICAgICAgICAgICBjb25zb2xlLmxvZygnICAtIHNlbGxlcl9pZDonLCBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnc2VsbGVyX2lkJykpOw0KICAgICAgICAgICAgY29uc29sZS5sb2coJyAgLSB1c2VySWQ6JywgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJJZCcpKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdET03lhYPntKDmo4Dmn6U6Jyk7DQogICAgICAgICAgICBjb25zb2xlLmxvZygnICAtIFtkYXRhLXNlbGxlci1pZF06JywgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtc2VsbGVyLWlkXScpLmxlbmd0aCk7DQogICAgICAgICAgICBjb25zb2xlLmxvZygnICAtIFtkYXRhLXVzZXItaWRdOicsIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXVzZXItaWRdJykubGVuZ3RoKTsNCiAgICAgICAgICAgIGNvbnNvbGUuZ3JvdXBFbmQoKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6Ieq5Yqo5L+u5aSN5py65Yi2IC0g5b2Tc2VsbGVyX2lk5Li656m65pe26Ieq5Yqo6Kem5Y+R5Lya6K+d54K55Ye7DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzdGFydEF1dG9SZXBhaXIoKSB7DQogICAgICAgICAgICBMb2dnZXIu",
        "aW5mbygn8J+UpyDlkK/liqhTZWxsZXIgSUToh6rliqjkv67lpI3mnLrliLYnKTsNCg0KICAgICAgICAgICAgY29uc3QgbWF4UmV0cmllcyA9IDM7DQogICAgICAgICAgICBsZXQgY3VycmVudFJldHJ5ID0gMDsNCg0KICAgICAgICAgICAgd2hpbGUgKGN1cnJlbnRSZXRyeSA8IG1heFJldHJpZXMgJiYgIXRoaXMuc2VsbGVySWQpIHsNCiAgICAgICAgICAgICAgICBjdXJyZW50UmV0cnkrKzsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbyhg8J+UhCDnrKwke2N1cnJlbnRSZXRyeX3mrKHoh6rliqjkv67lpI3lsJ3or5UgKOWFsSR7bWF4UmV0cmllc33mrKEpYCk7DQoNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzdWNjZXNzID0gYXdhaXQgdGhpcy5hdHRlbXB0QXV0b1JlcGFpcihjdXJyZW50UmV0cnkpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KchSDoh6rliqjkv67lpI3miJDlip/vvIFzZWxsZXJfaWTlt7Lojrflj5YnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsbGVySWQ6IHRoaXMuc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHJ5Q291bnQ6IGN1cnJlbnRSZXRyeQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoYOKdjCDnrKwke2N1cnJlbnRSZXRyeX3mrKHoh6rliqjkv67lpI3lpLHotKVgLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHJ5Q291bnQ6IGN1cnJlbnRSZXRyeQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnrYnlvoXkuIDmrrXml7bpl7Tlho3ph43or5UNCiAgICAgICAgICAgICAgICBpZiAoY3VycmVudFJldHJ5IDwgbWF4UmV0cmllcykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB3YWl0VGltZSA9IGN1cnJlbnRSZXRyeSAqIDIwMDA7IC8vIOmAkuWinuetieW+heaXtumXtO+8mjJzLCA0cywgNnMNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oYOKPsyDnrYnlvoUke3dhaXRUaW1lLzEwMDB956eS5ZCO6L+b6KGM5LiL5qyh6YeN6K+VLi4uYCk7DQogICAgICAgICAgICAgICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCB3YWl0VGltZSkpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5omA5pyJ6YeN6K+V6YO95aSx6LSlDQogICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+KdjCDo",
        "h6rliqjkv67lpI3mnLrliLblpLHotKXvvIzmiYDmnInph43or5Xpg73mnKrmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgdG90YWxSZXRyaWVzOiBtYXhSZXRyaWVzLA0KICAgICAgICAgICAgICAgIHN1Z2dlc3Rpb25zOiBbDQogICAgICAgICAgICAgICAgICAgICcxLiDor7fmiYvliqjliLfmlrDpobXpnaInLA0KICAgICAgICAgICAgICAgICAgICAnMi4g56Gu6K6k5piv5ZCm5Zyo5bCP57qi5Lmm5LiT5Lia54mI6aG16Z2iIChwcm8ueGlhb2hvbmdzaHUuY29tKScsDQogICAgICAgICAgICAgICAgICAgICczLiDmo4Dmn6XnvZHnu5zov57mjqXnirbmgIEnLA0KICAgICAgICAgICAgICAgICAgICAnNC4g5bCd6K+V5omL5Yqo54K55Ye75Lu75oSP5Lya6K+d6aG5JywNCiAgICAgICAgICAgICAgICAgICAgJzUuIOaJp+ihjCBTZWxsZXJJZEV4dHJhY3Rvci5mb3JjZVJlZnJlc2goKScNCiAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5omn6KGM5Y2V5qyh6Ieq5Yqo5L+u5aSN5bCd6K+VDQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSByZXRyeUNvdW50IOW9k+WJjemHjeivleasoeaVsA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5oiQ5YqfDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBhdHRlbXB0QXV0b1JlcGFpcihyZXRyeUNvdW50KSB7DQogICAgICAgICAgICBMb2dnZXIuZGVidWcoYPCflI0g5byA5aeL56ysJHtyZXRyeUNvdW50feasoeiHquWKqOS/ruWkjeWwneivlWApOw0KDQogICAgICAgICAgICAvLyAxLiDojrflj5blj6/op4HnmoTkvJror53pobkNCiAgICAgICAgICAgIGNvbnN0IHZpc2libGVDb250YWN0SXRlbXMgPSB0aGlzLmdldFZpc2libGVDb250YWN0SXRlbXMoKTsNCiAgICAgICAgICAgIGlmICh2aXNpYmxlQ29udGFjdEl0ZW1zLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfimqDvuI8g5pyq5om+5Yiw5Y+v6KeB55qE5Lya6K+d6aG577yM5peg5rOV5omn6KGM6Ieq5Yqo5L+u5aSNJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuaW5mbyhg8J+TiyDmib7liLAke3Zpc2libGVDb250YWN0SXRlbXMubGVuZ3RofeS4quWPr+ingeS8muivnemhuWApOw0KDQogICAgICAgICAgICAvLyAyLiDpmo/mnLrpgInmi6nkuIDkuKrkvJror53pobnvvIjpgb/lhY3mgLvmmK/pgInmi6nlkIzkuIDkuKrvvIkNCiAgICAgICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdmlzaWJsZUNvbnRhY3RJdGVtcy5sZW5ndGgpOw0KICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRJdGVtID0gdmlzaWJsZUNvbnRhY3RJdGVtc1tyYW5kb21JbmRleF07DQoNCiAgICAgICAgICAgIC8vIDMuIOaPkOWPluS8muivneS/oeaBr+eUqOS6juaXpeW/lw0KICAgICAgICAgICAg",
        "Y29uc3QgdXNlck5hbWUgPSB0aGlzLmV4dHJhY3RVc2VyTmFtZUZyb21Db250YWN0KHNlbGVjdGVkSXRlbSkgfHwgJ+acquefpeeUqOaItyc7DQogICAgICAgICAgICBjb25zdCBjb252ZXJzYXRpb25JZCA9IHNlbGVjdGVkSXRlbS5kYXRhc2V0Py5rZXkgfHwgJ+acquefpUlEJzsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oYPCfjq8g6YCJ5Lit5Lya6K+d6aG56L+b6KGM5L+u5aSN5bCd6K+VYCwgew0KICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTUpICsgJy4uLicsDQogICAgICAgICAgICAgICAgaXRlbUluZGV4OiByYW5kb21JbmRleCwNCiAgICAgICAgICAgICAgICB0b3RhbEl0ZW1zOiB2aXNpYmxlQ29udGFjdEl0ZW1zLmxlbmd0aA0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIDQuIOaJp+ihjOeCueWHu+aTjeS9nA0KICAgICAgICAgICAgY29uc3QgY2xpY2tTdWNjZXNzID0gdGhpcy5jbGlja0NvbnRhY3RJdGVtRm9yUmVwYWlyKHNlbGVjdGVkSXRlbSwgdXNlck5hbWUpOw0KICAgICAgICAgICAgaWYgKCFjbGlja1N1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybihg4p2MIOeCueWHu+S8muivnemhueWksei0pTogJHt1c2VyTmFtZX1gKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIDUuIOetieW+hUFQSeivt+axguinpuWPkeWSjOWTjeW6lA0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+KPsyDnrYnlvoVBUEnor7fmsYLop6blj5EuLi4nKTsNCiAgICAgICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAzMDAwKSk7IC8vIOetieW+hTPnp5LorqlBUEnor7fmsYLlrozmiJANCg0KICAgICAgICAgICAgLy8gNi4g5qOA5p+lc2VsbGVyX2lk5piv5ZCm5bey6I635Y+WDQogICAgICAgICAgICBpZiAodGhpcy5zZWxsZXJJZCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg6Ieq5Yqo5L+u5aSN5oiQ5Yqf77yB6YCa6L+H54K55Ye75Lya6K+d6aG56I635Y+W5Yiwc2VsbGVyX2lkJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgc2VsbGVySWQ6IHRoaXMuc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKGDimqDvuI8g54K55Ye75Lya6K+d6aG55ZCO5LuN5pyq6I635Y+W5Yiwc2VsbGVyX2lkOiAke3VzZXJOYW1lfWApOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5Y+v6KeB55qE5Lya6K+d",
        "6aG5DQogICAgICAgICAqIEByZXR1cm5zIHtBcnJheTxFbGVtZW50Pn0g5Y+v6KeB55qE5Lya6K+d6aG55pWw57uEDQogICAgICAgICAqLw0KICAgICAgICBnZXRWaXNpYmxlQ29udGFjdEl0ZW1zKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBhbGxJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zeC1jb250YWN0LWl0ZW0nKTsNCiAgICAgICAgICAgICAgICBjb25zdCB2aXNpYmxlSXRlbXMgPSBbXTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBhbGxJdGVtcykgew0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5pc0NvbnRhY3RJdGVtVmlzaWJsZShpdGVtKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJsZUl0ZW1zLnB1c2goaXRlbSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYPCfk4og5Lya6K+d6aG55Y+v6KeB5oCn57uf6K6hYCwgew0KICAgICAgICAgICAgICAgICAgICB0b3RhbEl0ZW1zOiBhbGxJdGVtcy5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIHZpc2libGVJdGVtczogdmlzaWJsZUl0ZW1zLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHZpc2libGVJdGVtczsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfojrflj5blj6/op4HkvJror53pobnml7blh7rplJknLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBbXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l5Lya6K+d6aG55piv5ZCm5Y+v6KeBDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gaXRlbSDkvJror53pobnlhYPntKANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuWPr+ingQ0KICAgICAgICAgKi8NCiAgICAgICAgaXNDb250YWN0SXRlbVZpc2libGUoaXRlbSkgew0KICAgICAgICAgICAgaWYgKCFpdGVtIHx8ICFpdGVtLmlzQ29ubmVjdGVkKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuWcqERPTeWbnuaUtueKtuaAge+8iHZ1ZS1yZWN5Y2xlLXNjcm9sbGVy54m55pyJ77yJDQogICAgICAgICAgICAgICAgY29uc3QgaXRlbVZpZXcgPSBpdGVtLmNsb3Nlc3QoJy52dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3Jyk7DQogICAgICAgICAgICAgICAgaWYgKGl0ZW1WaWV3KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybSA9IGl0ZW1WaWV3LnN0eWxlLnRyYW5zZm9ybTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRyYW5zZm9ybSAmJiB0cmFuc2Zv",
        "cm0uaW5jbHVkZXMoJ3RyYW5zbGF0ZVkoLTk5OTlweCknKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyDlhYPntKDooqvlm57mlLbliLDkuI3lj6/op4HljLrln58NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWfuuacrOWPr+ingeaApw0KICAgICAgICAgICAgICAgIGNvbnN0IHJlY3QgPSBpdGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGlzSW5WaWV3cG9ydCA9IHJlY3QudG9wID49IDAgJiYgcmVjdC5sZWZ0ID49IDAgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjdC5ib3R0b20gPD0gd2luZG93LmlubmVySGVpZ2h0ICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY3QucmlnaHQgPD0gd2luZG93LmlubmVyV2lkdGg7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBjb21wdXRlZFN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoaXRlbSk7DQogICAgICAgICAgICAgICAgY29uc3QgaXNWaXNpYmxlID0gY29tcHV0ZWRTdHlsZS5kaXNwbGF5ICE9PSAnbm9uZScgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXB1dGVkU3R5bGUudmlzaWJpbGl0eSAhPT0gJ2hpZGRlbicgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXB1dGVkU3R5bGUub3BhY2l0eSAhPT0gJzAnOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGlzSW5WaWV3cG9ydCAmJiBpc1Zpc2libGU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5qOA5p+l5Lya6K+d6aG55Y+v6KeB5oCn5pe25Ye66ZSZJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7juS8muivnemhueS4reaPkOWPlueUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRhY3RJdGVtIOS8muivnemhueWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSDnlKjmiLflkI0NCiAgICAgICAgICovDQogICAgICAgIGV4dHJhY3RVc2VyTmFtZUZyb21Db250YWN0KGNvbnRhY3RJdGVtKSB7DQogICAgICAgICAgICBjb25zdCBzZWxlY3RvcnMgPSBbDQogICAgICAgICAgICAgICAgJy5zeC1jb250YWN0LWl0ZW0gLm5pY2stbmFtZScsDQogICAgICAgICAgICAgICAgJy5uaWNrLW5hbWUnLA0KICAgICAgICAgICAgICAgICcuZC10ZXh0Lm5pY2stbmFtZScsDQogICAgICAgICAgICAgICAgJy5pdGVtLW1haW4tdG9wIC5uaWNrLW5hbWUnLA0KICAgICAgICAgICAgICAgICcuc3gtY29udGFjdC1pdGVtLW5hbWUnLA0KICAgICAgICAgICAgICAgICcuY29udGFjdC1uYW1lJywNCiAgICAgICAgICAgICAg",
        "ICAnLnVzZXItbmFtZScNCiAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgIGZvciAoY29uc3Qgc2VsZWN0b3Igb2Ygc2VsZWN0b3JzKSB7DQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGNvbnRhY3RJdGVtLnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudCAmJiBlbGVtZW50LnRleHRDb250ZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudC50ZXh0Q29udGVudC50cmltKCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAvLyDlv73nlaXpgInmi6nlmajplJnor6/vvIznu6fnu63lsJ3or5XkuIvkuIDkuKoNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDkuLrkv67lpI3nm67nmoTngrnlh7vkvJror53pobkNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBjb250YWN0SXRlbSDkvJror53pobnlhYPntKANCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQje+8iOeUqOS6juaXpeW/l++8iQ0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm54K55Ye75oiQ5YqfDQogICAgICAgICAqLw0KICAgICAgICBjbGlja0NvbnRhY3RJdGVtRm9yUmVwYWlyKGNvbnRhY3RJdGVtLCB1c2VyTmFtZSkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYPCflrHvuI8g5YeG5aSH54K55Ye75Lya6K+d6aG56L+b6KGM5L+u5aSNOiAke3VzZXJOYW1lfWApOw0KDQogICAgICAgICAgICAgICAgLy8g56Gu5L+d5YWD57Sg5Y+v5Lqk5LqSDQogICAgICAgICAgICAgICAgaWYgKCFjb250YWN0SXRlbS5pc0Nvbm5lY3RlZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5Lya6K+d6aG55YWD57Sg5bey5LuORE9N5Lit56e76ZmkJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkvb/nlKjpobnnm67kuK3lt7LmnInnmoRVdGlscy5zaW11bGF0ZUNsaWNr5pa55rOVDQogICAgICAgICAgICAgICAgY29uc3QgY2xpY2tlZCA9IFV0aWxzLnNpbXVsYXRlQ2xpY2soY29udGFjdEl0ZW0pOw0KDQogICAgICAgICAgICAgICAgaWYgKGNsaWNrZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oYOKchSDmiJDlip/ngrnlh7vkvJror53pobk6ICR7dXNlck5hbWV9YCk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKGDimqDvuI8g54K55Ye75Lya6K+d6aG55aSx6LSl",
        "OiAke3VzZXJOYW1lfWApOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcihg4p2MIOeCueWHu+S8muivnemhueaXtuWPkeeUn+mUmeivrzogJHt1c2VyTmFtZX1gLCB7DQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g55WZ5a6i6LWEQVBJ5qOA5rWL5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBMZWFkc0FQSURldGVjdG9yID0gew0KICAgICAgICAvLyBBUEnor7fmsYLpmJ/liJfvvIzpgb/lhY3lubblj5Hov4flpJoNCiAgICAgICAgcmVxdWVzdFF1ZXVlOiBbXSwNCiAgICAgICAgaXNQcm9jZXNzaW5nOiBmYWxzZSwNCiAgICAgICAgbWF4Q29uY3VycmVudDogMiwNCg0KICAgICAgICAvLyDor7fmsYLpl7TpmpTvvIjmr6vnp5LvvIktIOWunuaXtuaooeW8j+S4i+eojeW+rue8qeefremXtOmalA0KICAgICAgICBSRVFVRVNUX0lOVEVSVkFMOiAxNTAsDQoNCiAgICAgICAgLy8g55So5oi35L+h5oGv57yT5a2YDQogICAgICAgIHVzZXJJbmZvQ2FjaGU6IG5ldyBNYXAoKSwNCg0KICAgICAgICAvLyDnvJPlrZjov4fmnJ/ml7bpl7TvvIgxMOWIhumSn++8iQ0KICAgICAgICBVU0VSX0lORk9fQ0FDSEVfRVhQSVJFOiAxMCAqIDYwICogMTAwMCwNCg0KICAgICAgICAvLyDmgKfog73nu5/orqENCiAgICAgICAgc3RhdHM6IHsNCiAgICAgICAgICAgIHRvdGFsUmVxdWVzdHM6IDAsDQogICAgICAgICAgICBzdWNjZXNzZnVsUmVxdWVzdHM6IDAsDQogICAgICAgICAgICBmYWlsZWRSZXF1ZXN0czogMCwNCiAgICAgICAgICAgIGF2ZXJhZ2VSZXNwb25zZVRpbWU6IDAsDQogICAgICAgICAgICBsYXN0UmVxdWVzdFRpbWU6IDAsDQogICAgICAgICAgICByZWFsdGltZVJlcXVlc3RzOiAwDQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmAmui/h0FQSeajgOa1i+eVmeWuoui1hOeKtuaAge+8iOW4puaAp+iDvee7n+iuoe+8iQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkIOeUqOaIt0lEDQogICAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gaXNSZWFsdGltZSDmmK/lkKbkuLrlrp7ml7bmo4DmtYsNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0fG51bGw+fSDmo4DmtYvnu5PmnpwNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGRldGVjdExlYWRzU3RhdHVzVmlhQVBJKHVzZXJJZCwgaXNSZWFsdGltZSA9IGZhbHNlKSB7DQogICAgICAgICAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpOw0KICAgICAgICAg",
        "ICAgdGhpcy5zdGF0cy50b3RhbFJlcXVlc3RzKys7DQoNCiAgICAgICAgICAgIGlmIChpc1JlYWx0aW1lKSB7DQogICAgICAgICAgICAgICAgdGhpcy5zdGF0cy5yZWFsdGltZVJlcXVlc3RzKys7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCF1c2VySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ0FQSeajgOa1i++8mueUqOaIt0lE5Li656m6Jyk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdHMuZmFpbGVkUmVxdWVzdHMrKzsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6I635Y+Wc2VsbGVyX2lkDQogICAgICAgICAgICAgICAgY29uc3Qgc2VsbGVySWQgPSBTZWxsZXJJZEV4dHJhY3Rvci5nZXRTZWxsZXJJZCgpOw0KICAgICAgICAgICAgICAgIGlmICghc2VsbGVySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+KdjCBBUEnmo4DmtYvlpLHotKXvvJrml6Dms5Xojrflj5ZzZWxsZXJfaWQnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICBpc1JlYWx0aW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAg6Kej5Yaz5pa55qGIOiBbDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJzEuIOWIt+aWsOmhtemdoumHjeaWsOWKoOi9vScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJzIuIOaJp+ihjCBTZWxsZXJJZEV4dHJhY3Rvci50ZXN0RXh0cmFjdGlvbigpJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnMy4g5omn6KGMIFNlbGxlcklkRXh0cmFjdG9yLmZvcmNlUmVmcmVzaCgpJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnNC4g5qOA5p+l5piv5ZCm5Zyo5bCP57qi5Lmm5LiT5Lia54mI6aG16Z2iJw0KICAgICAgICAgICAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDlsJ3or5XlvLrliLbliLfmlrDkuIDmrKFzZWxsZXJfaWTmj5Dlj5YNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFTZWxsZXJJZEV4dHJhY3Rvci5pbml0aWFsaXplZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/CflIQg5bCd6K+V6YeN5paw5Yid5aeL5YyWU2VsbGVySWRFeHRyYWN0b3InKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIFNlbGxlcklkRXh0cmFjdG9yLmluaXQoKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdHMuZmFpbGVkUmVxdWVzdHMrKzsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5a6e5pe25qOA5rWL5pe255qE6aKR546H5o6n5Yi2DQogICAgICAg",
        "ICAgICAgICAgaWYgKGlzUmVhbHRpbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGltZVNpbmNlTGFzdFJlcXVlc3QgPSBEYXRlLm5vdygpIC0gdGhpcy5zdGF0cy5sYXN0UmVxdWVzdFRpbWU7DQogICAgICAgICAgICAgICAgICAgIGlmICh0aW1lU2luY2VMYXN0UmVxdWVzdCA8IHRoaXMuUkVRVUVTVF9JTlRFUlZBTCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgd2FpdFRpbWUgPSB0aGlzLlJFUVVFU1RfSU5URVJWQUwgLSB0aW1lU2luY2VMYXN0UmVxdWVzdDsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5a6e5pe25qOA5rWL77ya562J5b6F6K+35rGC6Ze06ZqUJywgeyB3YWl0VGltZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCB3YWl0VGltZSkpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgdXJsID0gYGh0dHBzOi8vcHJvLnhpYW9ob25nc2h1LmNvbS9hcGkvZWRpdGgvYWRzL3Byby9jaGF0L2NzL3Rvb2xzL21hcmstbGVhZHNgOw0KICAgICAgICAgICAgICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoew0KICAgICAgICAgICAgICAgICAgICB1c2VyX2lkOiB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgIHNlbGxlcl9pZDogc2VsbGVySWQsDQogICAgICAgICAgICAgICAgICAgIHNvdXJjZTogJzEnDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ0FQSeajgOa1i++8muWPkei1t+ivt+axgicsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBzZWxsZXJJZDogc2VsbGVySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBpc1JlYWx0aW1lLA0KICAgICAgICAgICAgICAgICAgICByZXF1ZXN0Q291bnQ6IHRoaXMuc3RhdHMudG90YWxSZXF1ZXN0cw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgdGhpcy5zdGF0cy5sYXN0UmVxdWVzdFRpbWUgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICAgICAgLy8g5p6E5bu65a6M5pW055qE6K+35rGC5aS077yM5qih5ouf5q2j5bi45rWP6KeI5Zmo6K+35rGCDQogICAgICAgICAgICAgICAgY29uc3QgcmVxdWVzdEhlYWRlcnMgPSB7DQogICAgICAgICAgICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qJywNCiAgICAgICAgICAgICAgICAgICAgJ0FjY2VwdC1MYW5ndWFnZSc6ICd6aC1DTix6aDtxPTAuOSxlbjtxPTAuOCcsDQogICAgICAgICAgICAgICAgICAgICdBY2NlcHQtRW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZSwgYnInLA0KICAgICAgICAgICAgICAgICAgICAnQ2FjaGUtQ29u",
        "dHJvbCc6ICduby1jYWNoZScsDQogICAgICAgICAgICAgICAgICAgICdQcmFnbWEnOiAnbm8tY2FjaGUnLA0KICAgICAgICAgICAgICAgICAgICAnUmVmZXJlcic6IHdpbmRvdy5sb2NhdGlvbi5ocmVmLA0KICAgICAgICAgICAgICAgICAgICAnT3JpZ2luJzogd2luZG93LmxvY2F0aW9uLm9yaWdpbiwNCiAgICAgICAgICAgICAgICAgICAgJ1gtUmVxdWVzdGVkLVdpdGgnOiAnWE1MSHR0cFJlcXVlc3QnLA0KICAgICAgICAgICAgICAgICAgICAnVXNlci1BZ2VudCc6IG5hdmlnYXRvci51c2VyQWdlbnQsDQogICAgICAgICAgICAgICAgICAgICdTZWMtRmV0Y2gtRGVzdCc6ICdlbXB0eScsDQogICAgICAgICAgICAgICAgICAgICdTZWMtRmV0Y2gtTW9kZSc6ICdjb3JzJywNCiAgICAgICAgICAgICAgICAgICAgJ1NlYy1GZXRjaC1TaXRlJzogJ3NhbWUtb3JpZ2luJw0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAvLyDlsJ3or5Xojrflj5ZDU1JGIHRva2VuDQogICAgICAgICAgICAgICAgY29uc3QgY3NyZlRva2VuID0gdGhpcy5nZXRDU1JGVG9rZW4oKTsNCiAgICAgICAgICAgICAgICBpZiAoY3NyZlRva2VuKSB7DQogICAgICAgICAgICAgICAgICAgIHJlcXVlc3RIZWFkZXJzWydYLUNTUkYtVG9rZW4nXSA9IGNzcmZUb2tlbjsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmt7vliqBDU1JGIFRva2Vu5Yiw6K+35rGC5aS0Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW46IGNzcmZUb2tlbi5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5bCd6K+V6I635Y+W5YW25LuW5Y+v6IO96ZyA6KaB55qE6K6k6K+B5aS0DQogICAgICAgICAgICAgICAgY29uc3QgYXV0aEhlYWRlcnMgPSB0aGlzLmdldEF1dGhIZWFkZXJzKCk7DQogICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihyZXF1ZXN0SGVhZGVycywgYXV0aEhlYWRlcnMpOw0KDQogICAgICAgICAgICAgICAgLy8g6I635Y+W5o6I5p2D5Luk54mMDQogICAgICAgICAgICAgICAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncHJvLWFjY2Vzc1Rva2VuJyk7DQogICAgICAgICAgICAgICAgaWYgKCF0b2tlbikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2FybignQVBJ5qOA5rWL77ya5pyq5om+5Yiw5o6I5p2D5Luk54mMJyk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdHMuZmFpbGVkUmVxdWVzdHMrKzsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCdBUEnor7fmsYLphY3nva4nLCB7DQogICAgICAgICAgICAgICAgICAgIHVybDogYCR7dXJsfT8ke3BhcmFtc31gLA0KICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnLA0KICAgICAgICAgICAgICAgICAgICBoYXNUb2tl",
        "bjogISF0b2tlbg0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5L2/55So566A5YyW55qEZmV0Y2ggQVBJ5Y+R6YCB5bim5pyJ5o6I5p2D5aS055qE6K+35rGCDQogICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt1cmx9PyR7cGFyYW1zfWAsIHsNCiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAiR0VUIiwNCiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6L+Z5piv5oiQ5Yqf55qE5YWz6ZSu77yBDQogICAgICAgICAgICAgICAgICAgICAgICAiQXV0aG9yaXphdGlvbiI6IHRva2VuLA0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDliqDkuIrov5nkupvku44gY1VSTCDlkb3ku6TkuK3noa7orqTov4fnmoTlpLTvvIzmm7Tkv53pmakNCiAgICAgICAgICAgICAgICAgICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICJ4LXN1YnN5c3RlbSI6ICJhcmVzIg0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdBUEnmo4DmtYvvvJror7fmsYLlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IHJlc3BvbnNlLnN0YXR1cywNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQ6IHJlc3BvbnNlLnN0YXR1c1RleHQsDQogICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICBpc1JlYWx0aW1lDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRzLmZhaWxlZFJlcXVlc3RzKys7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7DQoNCiAgICAgICAgICAgICAgICBpZiAoZGF0YS5zdWNjZXNzICYmIGRhdGEuY29kZSA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBsZWFkc1RhZyA9IGRhdGEuZGF0YT8ubWFya19sZWFkc19kZXRhaWw/LmxlYWRzX3RhZyB8fCAwOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySW5mbyA9IGRhdGEuZGF0YT8udXNlcl9tYXJrX2xlYWRzX2RldGFpbCB8fCB7fTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Vzc2lvbkluZm8gPSBkYXRhLmRhdGE/LnNlc3Npb24gfHwge307DQoNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgaGFzTGVhZHM6IGxlYWRzVGFnID09PSAyLA0KICAgICAgICAgICAgICAgICAgICAgICAgbGVh",
        "ZHNUYWc6IGxlYWRzVGFnLA0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlckluZm86IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuaWNrTmFtZTogdXNlckluZm8udXNlcl9uaWNrX25hbWUgfHwgJycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGhvbmU6IHVzZXJJbmZvLnBob25lX251bSB8fCAnJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3ZWNoYXQ6IHVzZXJJbmZvLndlY2hhdCB8fCB1c2VySW5mby53ZV9jaGF0IHx8ICcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbWFyazogdXNlckluZm8ucmVtYXJrIHx8ICcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3ZpbmNlOiB1c2VySW5mby5wcm92aW5jZSB8fCAnJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaXR5OiB1c2VySW5mby5jaXR5IHx8ICcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF2YXRhcjogdXNlckluZm8uYXZhdGFyIHx8ICcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZElkOiB1c2VySW5mby5yZWRfaWQgfHwgJycNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBzZXNzaW9uSW5mbzogew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlc3Npb25JZDogc2Vzc2lvbkluZm8uc2Vzc2lvbl9pZCB8fCAnJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZTogc2Vzc2lvbkluZm8uc3RhdGUgfHwgJycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbm90ZVRpdGxlOiBzZXNzaW9uSW5mby5ub3RlX3RpdGxlIHx8ICcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdGVVcmw6IHNlc3Npb25JbmZvLm5vdGVfdXJsIHx8ICcnDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpLA0KICAgICAgICAgICAgICAgICAgICAgICAgaXNSZWFsdGltZQ0KICAgICAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgICAgIC8vIOe8k+WtmOeUqOaIt+S/oeaBrw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNhY2hlVXNlckluZm8odXNlcklkLCByZXN1bHQpOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOabtOaWsOaAp+iDvee7n+iuoQ0KICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRzLnN1Y2Nlc3NmdWxSZXF1ZXN0cysrOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZVRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnRUaW1lOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRzLmF2ZXJhZ2VSZXNwb25zZVRpbWUgPSBNYXRoLnJvdW5kKA0KICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMuc3RhdHMuYXZlcmFnZVJlc3BvbnNlVGltZSAqICh0aGlzLnN0YXRzLnN1Y2Nlc3NmdWxSZXF1ZXN0cyAtIDEpICsgcmVzcG9uc2VUaW1lKSAvIHRoaXMuc3RhdHMuc3VjY2Vzc2Z1",
        "bFJlcXVlc3RzDQogICAgICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oaXNSZWFsdGltZSA/ICfwn5SEIOWunuaXtkFQSeajgOa1i+aIkOWKnycgOiAn8J+OryBBUEnmo4DmtYvmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICBoYXNMZWFkczogcmVzdWx0Lmhhc0xlYWRzLA0KICAgICAgICAgICAgICAgICAgICAgICAgbGVhZHNUYWc6IGxlYWRzVGFnLA0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHJlc3VsdC51c2VySW5mby5uaWNrTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlVGltZTogcmVzcG9uc2VUaW1lICsgJ21zJywNCiAgICAgICAgICAgICAgICAgICAgICAgIGlzUmVhbHRpbWUNCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2FybignQVBJ5qOA5rWL77ya5ZON5bqU5byC5bi4Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29kZTogZGF0YS5jb2RlLA0KICAgICAgICAgICAgICAgICAgICAgICAgbXNnOiBkYXRhLm1zZywNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgIGlzUmVhbHRpbWUNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdHMuZmFpbGVkUmVxdWVzdHMrKzsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcignQVBJ5qOA5rWL77ya6K+35rGC5byC5bi4Jywgew0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQgPyB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nIDogJ251bGwnLA0KICAgICAgICAgICAgICAgICAgICBpc1JlYWx0aW1lDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zdGF0cy5mYWlsZWRSZXF1ZXN0cysrOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5ZBUEnmo4DmtYvmgKfog73nu5/orqENCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g5oCn6IO957uf6K6h5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0cygpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgLi4udGhpcy5zdGF0cywNCiAgICAgICAgICAg",
        "ICAgICBzdWNjZXNzUmF0ZTogdGhpcy5zdGF0cy50b3RhbFJlcXVlc3RzID4gMCA/DQogICAgICAgICAgICAgICAgICAgIE1hdGgucm91bmQoKHRoaXMuc3RhdHMuc3VjY2Vzc2Z1bFJlcXVlc3RzIC8gdGhpcy5zdGF0cy50b3RhbFJlcXVlc3RzKSAqIDEwMCkgOiAwLA0KICAgICAgICAgICAgICAgIHJlYWx0aW1lUmF0ZTogdGhpcy5zdGF0cy50b3RhbFJlcXVlc3RzID4gMCA/DQogICAgICAgICAgICAgICAgICAgIE1hdGgucm91bmQoKHRoaXMuc3RhdHMucmVhbHRpbWVSZXF1ZXN0cyAvIHRoaXMuc3RhdHMudG90YWxSZXF1ZXN0cykgKiAxMDApIDogMA0KICAgICAgICAgICAgfTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+WQ1NSRiBUb2tlbg0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9IENTUkYgVG9rZW4NCiAgICAgICAgICovDQogICAgICAgIGdldENTUkZUb2tlbigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5pa55rOVMTog5LuObWV0Yeagh+etvuiOt+WPlg0KICAgICAgICAgICAgICAgIGNvbnN0IG1ldGFUb2tlbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ21ldGFbbmFtZT0iY3NyZi10b2tlbiJdJyk/LmdldEF0dHJpYnV0ZSgnY29udGVudCcpOw0KICAgICAgICAgICAgICAgIGlmIChtZXRhVG9rZW4pIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1ldGFUb2tlbjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5UyOiDku45jb29raWVz6I635Y+WDQogICAgICAgICAgICAgICAgY29uc3QgY29va2llcyA9IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOycpOw0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgY29va2llIG9mIGNvb2tpZXMpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgW25hbWUsIHZhbHVlXSA9IGNvb2tpZS50cmltKCkuc3BsaXQoJz0nKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWUgPT09ICdjc3JmX3Rva2VuJyB8fCBuYW1lID09PSAnWFNSRi1UT0tFTicgfHwgbmFtZSA9PT0gJ190b2tlbicpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQodmFsdWUpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMzog5LuObG9jYWxTdG9yYWdl6I635Y+WDQogICAgICAgICAgICAgICAgY29uc3Qgc3RvcmFnZVRva2VuID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NzcmZfdG9rZW4nKSB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd4c3JmX3Rva2VuJykgfHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdjc3JmX3Rva2VuJyk7DQogICAgICAgICAgICAgICAgaWYgKHN0b3JhZ2VUb2tlbikgew0KICAgICAgICAgICAgICAgICAgICBy",
        "ZXR1cm4gc3RvcmFnZVRva2VuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTQ6IOS7jumhtemdouiEmuacrOS4reaPkOWPlg0KICAgICAgICAgICAgICAgIGNvbnN0IHNjcmlwdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzY3JpcHQnKTsNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHNjcmlwdCBvZiBzY3JpcHRzKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChzY3JpcHQudGV4dENvbnRlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRva2VuTWF0Y2ggPSBzY3JpcHQudGV4dENvbnRlbnQubWF0Y2goL2NzcmZbXy1dP3Rva2VuWyInXVxzKjpccypbIiddKFteIiddKylbIiddL2kpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRva2VuTWF0Y2gpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdG9rZW5NYXRjaFsxXTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+iOt+WPlkNTUkYgVG9rZW7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5borqTor4Hnm7jlhbPnmoTor7fmsYLlpLQNCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g6K6k6K+B6K+35rGC5aS0DQogICAgICAgICAqLw0KICAgICAgICBnZXRBdXRoSGVhZGVycygpIHsNCiAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7fTsNCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDnm7TmjqXku45sb2NhbFN0b3JhZ2XliqjmgIHojrflj5bmjojmnYPku6TniYwNCiAgICAgICAgICAgICAgICBjb25zdCB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwcm8tYWNjZXNzVG9rZW4nKTsNCg0KICAgICAgICAgICAgICAgIGlmICh0b2tlbikgew0KICAgICAgICAgICAgICAgICAgICBoZWFkZXJzWydhdXRob3JpemF0aW9uJ10gPSB0b2tlbjsgLy8g5rOo5oSP77ya5bCP5YaZ55qEYXV0aG9yaXphdGlvbu+8jOS4jeaYr0F1dGhvcml6YXRpb24NCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfku45sb2NhbFN0b3JhZ2Xojrflj5bliLBhY2Nlc3MtdG9rZW4nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB0b2tlbjogdG9rZW4uc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmnKrmib7liLBsb2NhbFN0b3JhZ2XkuK3nmoRwcm8tYWNjZXNzVG9rZW4nKTsNCiAgICAg",
        "ICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmt7vliqDlhbbku5blj6/og73pnIDopoHnmoTlpLQNCiAgICAgICAgICAgICAgICBjb25zdCBkZXZpY2VJZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdkZXZpY2VfaWQnKSB8fCB0aGlzLmdlbmVyYXRlRGV2aWNlSWQoKTsNCiAgICAgICAgICAgICAgICBpZiAoZGV2aWNlSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1snWC1EZXZpY2UtSWQnXSA9IGRldmljZUlkOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHNlc3Npb25JZCA9IHRoaXMuZ2V0U2Vzc2lvbklkKCk7DQogICAgICAgICAgICAgICAgaWYgKHNlc3Npb25JZCkgew0KICAgICAgICAgICAgICAgICAgICBoZWFkZXJzWydYLVNlc3Npb24tSWQnXSA9IHNlc3Npb25JZDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfojrflj5borqTor4HlpLTlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gaGVhZGVyczsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog55Sf5oiQ6K6+5aSHSUQNCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ30g6K6+5aSHSUQNCiAgICAgICAgICovDQogICAgICAgIGdlbmVyYXRlRGV2aWNlSWQoKSB7DQogICAgICAgICAgICBjb25zdCBkZXZpY2VJZCA9ICd3ZWJfJyArIERhdGUubm93KCkgKyAnXycgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSk7DQogICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnZGV2aWNlX2lkJywgZGV2aWNlSWQpOw0KICAgICAgICAgICAgcmV0dXJuIGRldmljZUlkOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bkvJror51JRA0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9IOS8muivnUlEDQogICAgICAgICAqLw0KICAgICAgICBnZXRTZXNzaW9uSWQoKSB7DQogICAgICAgICAgICAvLyDku45VUkzlj4LmlbDojrflj5YNCiAgICAgICAgICAgIGNvbnN0IHVybFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMod2luZG93LmxvY2F0aW9uLnNlYXJjaCk7DQogICAgICAgICAgICBjb25zdCBzZXNzaW9uSWQgPSB1cmxQYXJhbXMuZ2V0KCdzZXNzaW9uX2lkJykgfHwgdXJsUGFyYW1zLmdldCgnc2lkJyk7DQogICAgICAgICAgICBpZiAoc2Vzc2lvbklkKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHNlc3Npb25JZDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5LuOY29va2llc+iOt+WPlg0KICAgICAgICAgICAgY29uc3QgY29va2llcyA9IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOycpOw0KICAgICAgICAgICAgZm9yIChjb25zdCBjb29raWUgb2YgY29va2llcykgew0KICAgICAgICAgICAgICAgIGNvbnN0IFtuYW1l",
        "LCB2YWx1ZV0gPSBjb29raWUudHJpbSgpLnNwbGl0KCc9Jyk7DQogICAgICAgICAgICAgICAgaWYgKG5hbWUgPT09ICdzZXNzaW9uX2lkJyB8fCBuYW1lID09PSAnc2lkJyB8fCBuYW1lID09PSAnSlNFU1NJT05JRCcpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6L6T5Ye65oCn6IO957uf6K6h5oql5ZGKDQogICAgICAgICAqLw0KICAgICAgICBsb2dQZXJmb3JtYW5jZVN0YXRzKCkgew0KICAgICAgICAgICAgY29uc3Qgc3RhdHMgPSB0aGlzLmdldFN0YXRzKCk7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+TiiDnlZnlrqLotYRBUEnmo4DmtYvmgKfog73nu5/orqEnLCB7DQogICAgICAgICAgICAgICAg5oC76K+35rGC5pWwOiBzdGF0cy50b3RhbFJlcXVlc3RzLA0KICAgICAgICAgICAgICAgIOaIkOWKn+ivt+axguaVsDogc3RhdHMuc3VjY2Vzc2Z1bFJlcXVlc3RzLA0KICAgICAgICAgICAgICAgIOWksei0peivt+axguaVsDogc3RhdHMuZmFpbGVkUmVxdWVzdHMsDQogICAgICAgICAgICAgICAg5oiQ5Yqf546HOiBzdGF0cy5zdWNjZXNzUmF0ZSArICclJywNCiAgICAgICAgICAgICAgICDlrp7ml7bmo4DmtYvmlbA6IHN0YXRzLnJlYWx0aW1lUmVxdWVzdHMsDQogICAgICAgICAgICAgICAg5a6e5pe25qOA5rWL546HOiBzdGF0cy5yZWFsdGltZVJhdGUgKyAnJScsDQogICAgICAgICAgICAgICAg5bmz5Z2H5ZON5bqU5pe26Ze0OiBzdGF0cy5hdmVyYWdlUmVzcG9uc2VUaW1lICsgJ21zJywNCiAgICAgICAgICAgICAgICDmnIDlkI7or7fmsYLml7bpl7Q6IHN0YXRzLmxhc3RSZXF1ZXN0VGltZSA/IG5ldyBEYXRlKHN0YXRzLmxhc3RSZXF1ZXN0VGltZSkudG9Mb2NhbGVUaW1lU3RyaW5nKCkgOiAn5pegJw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7jmNvbnZlcnNhdGlvbklk5o+Q5Y+WdXNlcklkDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb252ZXJzYXRpb25JZCDmoLzlvI/vvJpUb3RhbC01YmY3NmM0ZGNmYWEyZTAwMDE0YTNkYzMNCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ3xudWxsfSDnlKjmiLdJRA0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdFVzZXJJZEZyb21Db252ZXJzYXRpb24oY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgIGlmICghY29udmVyc2F0aW9uSWQgfHwgdHlwZW9mIGNvbnZlcnNhdGlvbklkICE9PSAnc3RyaW5nJykgew0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDku44gVG90YWwte3VzZXJJZH0g5qC85byP5Lit5o+Q5Y+WdXNlcklkDQogICAgICAgICAgICBjb25zdCBtYXRjaCA9IGNvbnZlcnNhdGlvbklkLm1h",
        "dGNoKC9eVG90YWwtKC4rKSQvKTsNCiAgICAgICAgICAgIGlmIChtYXRjaCAmJiBtYXRjaFsxXSkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5oiQ5Yqf5o+Q5Y+WdXNlcklkJywgew0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDIwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IG1hdGNoWzFdLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBtYXRjaFsxXTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfml6Dms5Xku45jb252ZXJzYXRpb25JZOaPkOWPlnVzZXJJZCcsIHsNCiAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDIwKSArICcuLi4nDQogICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnvJPlrZjnlKjmiLfkv6Hmga8NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCDnlKjmiLdJRA0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gdXNlckluZm8g55So5oi35L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICBjYWNoZVVzZXJJbmZvKHVzZXJJZCwgdXNlckluZm8pIHsNCiAgICAgICAgICAgIGlmICghdXNlcklkIHx8ICF1c2VySW5mbykgew0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdGhpcy51c2VySW5mb0NhY2hlLnNldCh1c2VySWQsIHsNCiAgICAgICAgICAgICAgICAuLi51c2VySW5mbywNCiAgICAgICAgICAgICAgICBjYWNoZWRBdDogRGF0ZS5ub3coKQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOa4heeQhui/h+acn+e8k+WtmA0KICAgICAgICAgICAgdGhpcy5jbGVhbkV4cGlyZWRVc2VySW5mb0NhY2hlKCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPlue8k+WtmOeahOeUqOaIt+S/oeaBrw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkIOeUqOaIt0lEDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIGdldENhY2hlZFVzZXJJbmZvKHVzZXJJZCkgew0KICAgICAgICAgICAgaWYgKCF1c2VySWQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgY2FjaGVkID0gdGhpcy51c2VySW5mb0NhY2hlLmdldCh1c2VySWQpOw0KICAgICAgICAgICAgaWYgKCFjYWNoZWQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm6L+H5pyfDQogICAgICAgICAgICBpZiAoRGF0ZS5ub3coKSAtIGNhY2hlZC5jYWNoZWRB",
        "dCA+IHRoaXMuVVNFUl9JTkZPX0NBQ0hFX0VYUElSRSkgew0KICAgICAgICAgICAgICAgIHRoaXMudXNlckluZm9DYWNoZS5kZWxldGUodXNlcklkKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIGNhY2hlZDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF55CG6L+H5pyf55qE55So5oi35L+h5oGv57yT5a2YDQogICAgICAgICAqLw0KICAgICAgICBjbGVhbkV4cGlyZWRVc2VySW5mb0NhY2hlKCkgew0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGxldCBjbGVhbmVkQ291bnQgPSAwOw0KDQogICAgICAgICAgICBmb3IgKGNvbnN0IFt1c2VySWQsIGluZm9dIG9mIHRoaXMudXNlckluZm9DYWNoZS5lbnRyaWVzKCkpIHsNCiAgICAgICAgICAgICAgICBpZiAobm93IC0gaW5mby5jYWNoZWRBdCA+IHRoaXMuVVNFUl9JTkZPX0NBQ0hFX0VYUElSRSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVzZXJJbmZvQ2FjaGUuZGVsZXRlKHVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgIGNsZWFuZWRDb3VudCsrOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKGNsZWFuZWRDb3VudCA+IDApIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+a4heeQhui/h+acn+eUqOaIt+S/oeaBr+e8k+WtmCcsIHsNCiAgICAgICAgICAgICAgICAgICAgY2xlYW5lZENvdW50LA0KICAgICAgICAgICAgICAgICAgICByZW1haW5pbmdDb3VudDogdGhpcy51c2VySW5mb0NhY2hlLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6Zif5YiX5YyWQVBJ6K+35rGC77yI6YG/5YWN5bm25Y+R6L+H5aSa77yJDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VySWQg55So5oi3SUQNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0fG51bGw+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgcXVldWVBUElSZXF1ZXN0KHVzZXJJZCkgew0KICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5yZXF1ZXN0UXVldWUucHVzaCh7IHVzZXJJZCwgcmVzb2x2ZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NRdWV1ZSgpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuivt+axgumYn+WIlw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgcHJvY2Vzc1F1ZXVlKCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuaXNQcm9jZXNzaW5nIHx8IHRoaXMucmVxdWVzdFF1ZXVlLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdGhpcy5pc1By",
        "b2Nlc3NpbmcgPSB0cnVlOw0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGJhdGNoID0gdGhpcy5yZXF1ZXN0UXVldWUuc3BsaWNlKDAsIHRoaXMubWF4Q29uY3VycmVudCk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBwcm9taXNlcyA9IGJhdGNoLm1hcChhc3luYyAoeyB1c2VySWQsIHJlc29sdmUgfSkgPT4gew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5kZXRlY3RMZWFkc1N0YXR1c1ZpYUFQSSh1c2VySWQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShyZXN1bHQpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDor7fmsYLpl7TpmpQNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLlJFUVVFU1RfSU5URVJWQUwgPiAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIHRoaXMuUkVRVUVTVF9JTlRFUlZBTCkpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfpmJ/liJflpITnkIZBUEnor7fmsYLlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUobnVsbCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflpITnkIZBUEnor7fmsYLpmJ/liJflpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfSBmaW5hbGx5IHsNCiAgICAgICAgICAgICAgICB0aGlzLmlzUHJvY2Vzc2luZyA9IGZhbHNlOw0KDQogICAgICAgICAgICAgICAgLy8g57un57ut5aSE55CG6Zif5YiXDQogICAgICAgICAgICAgICAgaWYgKHRoaXMucmVxdWVzdFF1ZXVlLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB0aGlzLnByb2Nlc3NRdWV1ZSgpLCAxMDApOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOeVmeWuoui1hOeKtuaAgeeuoeeQhuWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3Qg",
        "TGVhZHNTdGF0dXNNYW5hZ2VyID0gew0KICAgICAgICAvLyDnirbmgIHnvJPlrZjvvJpjb252ZXJzYXRpb25JZCAtPiB7IGhhc0xlYWRzVGFnOiBib29sZWFuLCBsYXN0Q2hlY2tlZDogdGltZXN0YW1wLCBzb3VyY2U6IHN0cmluZyB9DQogICAgICAgIHN0YXR1c0NhY2hlOiBuZXcgTWFwKCksDQoNCiAgICAgICAgLy8g55So5oi36aKd5aSW5L+h5oGv57yT5a2Y77yaY29udmVyc2F0aW9uSWQgLT4gdXNlckluZm8NCiAgICAgICAgdXNlckluZm9DYWNoZTogbmV3IE1hcCgpLA0KDQogICAgICAgIC8vIOm7mOiupOe8k+WtmOi/h+acn+aXtumXtO+8iDXliIbpkp/vvIznlKjkuo5ET03mo4DmtYvvvIkNCiAgICAgICAgREVGQVVMVF9DQUNIRV9FWFBJUkVfVElNRTogNSAqIDYwICogMTAwMCwNCg0KICAgICAgICAvLyDpu5jorqRBUEnmo4DmtYvnvJPlrZjov4fmnJ/ml7bpl7TvvIgzMOenku+8jOaUr+aMgeWunuaXtuajgOa1i++8iQ0KICAgICAgICBERUZBVUxUX0FQSV9DQUNIRV9FWFBJUkVfVElNRTogMzAgKiAxMDAwLA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4DmtYvlr7nor53lhYPntKDnmoTnlZnlrqLotYTnirbmgIENCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBjb250YWN0RWxlbWVudCDlr7nor53lhYPntKANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuWFt+acieeVmeWuoui1hOagh+etvg0KICAgICAgICAgKi8NCiAgICAgICAgZGV0ZWN0TGVhZHNTdGF0dXMoY29udGFjdEVsZW1lbnQpIHsNCiAgICAgICAgICAgIGlmICghY29udGFjdEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eVmeWuoui1hOajgOa1i++8muWFg+e0oOS4uuepuicpOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDlpJrnp43pgInmi6nlmajnrZbnlaXnoa7kv53lhbzlrrnmgKcNCiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RvcnMgPSBbDQogICAgICAgICAgICAgICAgICAgICcubGVhZHMtdGFnIC5kLXRhZy1jb250ZW50JywgIC8vIOS4u+mAieaLqeWZqA0KICAgICAgICAgICAgICAgICAgICAnLmxlYWRzLXRhZycsICAgICAgICAgICAgICAgICAvLyDlpIfnlKjpgInmi6nlmagxDQogICAgICAgICAgICAgICAgICAgICdbY2xhc3MqPSJsZWFkcyJdJywgICAgICAgICAgIC8vIOWkh+eUqOmAieaLqeWZqDINCiAgICAgICAgICAgICAgICAgICAgJy5kLXRhZy1jb250ZW50JyAgICAgICAgICAgICAgLy8g6YCa55So5qCH562+6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2VsZWN0b3Igb2Ygc2VsZWN0b3JzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRzID0gY29udGFjdEVsZW1lbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7DQogICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZWxlbWVu",
        "dCBvZiBlbGVtZW50cykgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGV4dCA9IGVsZW1lbnQudGV4dENvbnRlbnQ/LnRyaW0oKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0ZXh0ICYmIHRleHQuaW5jbHVkZXMoJ+eVmeWuoui1hCcpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfnlZnlrqLotYTmo4DmtYvvvJrlj5HnjrDnlZnlrqLotYTmoIfnrb4nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50Q2xhc3M6IGVsZW1lbnQuY2xhc3NOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eVmeWuoui1hOajgOa1i++8muacquWPkeeOsOeVmeWuoui1hOagh+etvicpOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfnlZnlrqLotYTmo4DmtYvlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5Yqo5oCB57yT5a2Y6L+H5pyf5pe26Ze0DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzb3VyY2Ug5pWw5o2u5rqQ57G75Z6LDQogICAgICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IOe8k+WtmOi/h+acn+aXtumXtO+8iOavq+enku+8iQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0Q2FjaGVFeHBpcmVUaW1lKHNvdXJjZSkgew0KICAgICAgICAgICAgY29uc3QgcmVhbHRpbWVDaGVjayA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcFJlYWx0aW1lTGVhZHNDaGVjaycsIHRydWUpOw0KICAgICAgICAgICAgY29uc3QgY3VzdG9tQ2FjaGVUaW1lID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwTGVhZHNDYWNoZVRpbWUnLCAzMCk7DQoNCiAgICAgICAgICAgIC8vIOWmguaenOWQr+eUqOW8uuWItuWunuaXtuajgOa1i+S4lOe8k+WtmOaXtumXtOS4ujDvvIzliJnnpoHnlKjnvJPlrZgNCiAgICAgICAgICAgIGlmIChyZWFsdGltZUNoZWNrICYmIGN1c3RvbUNhY2hlVGltZSA9PT0gMCkgew0KICAgICAgICAgICAgICAgIHJldHVybiAwOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDkvb/nlKjoh6rlrprkuYnnvJPlrZjml7bpl7QNCiAgICAgICAgICAgIGlmIChjdXN0b21DYWNoZVRpbWUgPiAwKSB7DQogICAgICAgICAgICAgICAgcmV0",
        "dXJuIGN1c3RvbUNhY2hlVGltZSAqIDEwMDA7IC8vIOi9rOaNouS4uuavq+enkg0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDkvb/nlKjpu5jorqTnvJPlrZjml7bpl7QNCiAgICAgICAgICAgIHJldHVybiBzb3VyY2UgPT09ICdhcGknID8gdGhpcy5ERUZBVUxUX0FQSV9DQUNIRV9FWFBJUkVfVElNRSA6IHRoaXMuREVGQVVMVF9DQUNIRV9FWFBJUkVfVElNRTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5a+56K+d55qE55WZ5a6i6LWE54q25oCB77yI5a6e5pe25qOA5rWL5LyY5YWI77yJDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb252ZXJzYXRpb25JZCDlr7nor51JRA0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRhY3RFbGVtZW50IOWvueivneWFg+e0oO+8iOeUqOS6jumHjeaWsOajgOa1i++8iQ0KICAgICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGZvcmNlUmVhbHRpbWUg5piv5ZCm5by65Yi25a6e5pe25qOA5rWL77yI5b+955Wl57yT5a2Y77yJDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fSDmmK/lkKblhbfmnInnlZnlrqLotYTmoIfnrb4NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGdldExlYWRzU3RhdHVzKGNvbnZlcnNhdGlvbklkLCBjb250YWN0RWxlbWVudCA9IG51bGwsIGZvcmNlUmVhbHRpbWUgPSBmYWxzZSkgew0KICAgICAgICAgICAgaWYgKCFjb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgY29uc3QgcmVhbHRpbWVFbmFibGVkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwUmVhbHRpbWVMZWFkc0NoZWNrJywgdHJ1ZSk7DQogICAgICAgICAgICBjb25zdCBzaG91bGRGb3JjZVJlYWx0aW1lID0gZm9yY2VSZWFsdGltZSB8fCByZWFsdGltZUVuYWJsZWQ7DQoNCiAgICAgICAgICAgIC8vIOajgOafpee8k+WtmO+8iOS7heWcqOmdnuW8uuWItuWunuaXtuaooeW8j+S4i++8iQ0KICAgICAgICAgICAgaWYgKCFzaG91bGRGb3JjZVJlYWx0aW1lKSB7DQogICAgICAgICAgICAgICAgY29uc3QgY2FjaGVkID0gdGhpcy5zdGF0dXNDYWNoZS5nZXQoY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgY29uc3QgZXhwaXJlVGltZSA9IHRoaXMuZ2V0Q2FjaGVFeHBpcmVUaW1lKGNhY2hlZD8uc291cmNlIHx8ICdkb20nKTsNCg0KICAgICAgICAgICAgICAgIGlmIChjYWNoZWQgJiYgZXhwaXJlVGltZSA+IDAgJiYgKG5vdyAtIGNhY2hlZC5sYXN0Q2hlY2tlZCkgPCBleHBpcmVUaW1lKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn55WZ5a6i6LWE54q25oCB77ya5L2/55So57yT5a2Y57uT5p6cJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkg",
        "KyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0xlYWRzVGFnOiBjYWNoZWQuaGFzTGVhZHNUYWcsDQogICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2U6IGNhY2hlZC5zb3VyY2UgfHwgJ2RvbScsDQogICAgICAgICAgICAgICAgICAgICAgICBjYWNoZUFnZTogYCR7TWF0aC5yb3VuZCgobm93IC0gY2FjaGVkLmxhc3RDaGVja2VkKSAvIDEwMDApfXNgDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGVkLmhhc0xlYWRzVGFnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5omn6KGM5a6e5pe25qOA5rWLDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eVmeWuoui1hOeKtuaAge+8muaJp+ihjOWunuaXtuajgOa1iycsIHsNCiAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgIGZvcmNlUmVhbHRpbWU6IHNob3VsZEZvcmNlUmVhbHRpbWUsDQogICAgICAgICAgICAgICAgcmVhc29uOiBzaG91bGRGb3JjZVJlYWx0aW1lID8gJ+W8uuWItuWunuaXtuajgOa1iycgOiAn57yT5a2Y6L+H5pyfJw0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOS8mOWFiOWwneivlUFQSeajgOa1i++8iOWmguaenOWQr+eUqO+8iQ0KICAgICAgICAgICAgaWYgKENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEFwaUxlYWRzQ2hlY2snLCB0cnVlKSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IExlYWRzQVBJRGV0ZWN0b3IuZXh0cmFjdFVzZXJJZEZyb21Db252ZXJzYXRpb24oY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgIGlmICh1c2VySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFwaVJlc3VsdCA9IGF3YWl0IExlYWRzQVBJRGV0ZWN0b3IuZGV0ZWN0TGVhZHNTdGF0dXNWaWFBUEkodXNlcklkLCBzaG91bGRGb3JjZVJlYWx0aW1lKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcGlSZXN1bHQgIT09IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmm7TmlrDnvJPlrZjvvIhBUEnmlbDmja7vvIkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUxlYWRzU3RhdHVzKGNvbnZlcnNhdGlvbklkLCBhcGlSZXN1bHQuaGFzTGVhZHMsICdhcGknKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWtmOWCqOeUqOaIt+mineWkluS/oeaBrw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlVXNlckV4dHJhSW5mbyhjb252ZXJzYXRpb25JZCwgYXBpUmVzdWx0LnVzZXJJbmZvKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKHNob3VsZEZvcmNlUmVhbHRpbWUgPyAn8J+UhCDlvLrliLblrp7ml7ZBUEnmo4Dm",
        "tYvlrozmiJAnIDogJ/Cfjq8gQVBJ5qOA5rWL5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDE1KSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNMZWFkczogYXBpUmVzdWx0Lmhhc0xlYWRzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogYXBpUmVzdWx0LnVzZXJJbmZvPy5uaWNrTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhbHRpbWU6IHNob3VsZEZvcmNlUmVhbHRpbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlVGltZTogdGhpcy5nZXRDYWNoZUV4cGlyZVRpbWUoJ2FwaScpIC8gMTAwMCArICdzJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFwaVJlc3VsdC5oYXNMZWFkczsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCflrp7ml7ZBUEnmo4DmtYvlpLHotKXvvIzpmY3nuqfliLBET03mo4DmtYsnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFsdGltZTogc2hvdWxkRm9yY2VSZWFsdGltZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIEFQSeajgOa1i+Wksei0pe+8jOmZjee6p+WIsERPTeajgOa1iw0KICAgICAgICAgICAgaWYgKGNvbnRhY3RFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgY29uc3QgaGFzTGVhZHNUYWcgPSB0aGlzLmRldGVjdExlYWRzU3RhdHVzKGNvbnRhY3RFbGVtZW50KTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUxlYWRzU3RhdHVzKGNvbnZlcnNhdGlvbklkLCBoYXNMZWFkc1RhZywgJ2RvbScpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfwn5SNIOWunuaXtkRPTeajgOa1i+WujOaIkCcsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxNSkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgaGFzTGVhZHM6IGhhc0xlYWRzVGFnLA0KICAgICAgICAgICAgICAgICAgICByZWFsdGltZTogc2hvdWxkRm9yY2VSZWFsdGltZQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGhhc0xlYWRzVGFnOw0KICAgICAgICAgICAgfQ0KDQog",
        "ICAgICAgICAgICAvLyDml6Dms5Xph43mlrDmo4DmtYvvvIzov5Tlm57nvJPlrZjlgLzmiJbpu5jorqTlgLzvvIjku4XlnKjpnZ7lvLrliLblrp7ml7bmqKHlvI/kuIvvvIkNCiAgICAgICAgICAgIGlmICghc2hvdWxkRm9yY2VSZWFsdGltZSkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNhY2hlZCA9IHRoaXMuc3RhdHVzQ2FjaGUuZ2V0KGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGVkID8gY2FjaGVkLmhhc0xlYWRzVGFnIDogZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOW8uuWItuWunuaXtuaooeW8j+S4i+aXoOazleajgOa1i++8jOi/lOWbnmZhbHNlDQogICAgICAgICAgICBMb2dnZXIud2Fybign5by65Yi25a6e5pe25qOA5rWL5aSx6LSl77yM5peg5Y+v55So5qOA5rWL5pa55rOVJywgew0KICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlkIzmraXniYjmnKznmoRnZXRMZWFkc1N0YXR1c++8iOS/neaMgeWQkeWQjuWFvOWuue+8iQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5a+56K+dSUQNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBjb250YWN0RWxlbWVudCDlr7nor53lhYPntKANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuWFt+acieeVmeWuoui1hOagh+etvg0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0TGVhZHNTdGF0dXNTeW5jKGNvbnZlcnNhdGlvbklkLCBjb250YWN0RWxlbWVudCA9IG51bGwpIHsNCiAgICAgICAgICAgIGlmICghY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOajgOafpee8k+WtmA0KICAgICAgICAgICAgY29uc3QgY2FjaGVkID0gdGhpcy5zdGF0dXNDYWNoZS5nZXQoY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGNvbnN0IGV4cGlyZVRpbWUgPSBjYWNoZWQ/LnNvdXJjZSA9PT0gJ2FwaScgPyB0aGlzLkFQSV9DQUNIRV9FWFBJUkVfVElNRSA6IHRoaXMuQ0FDSEVfRVhQSVJFX1RJTUU7DQoNCiAgICAgICAgICAgIGlmIChjYWNoZWQgJiYgKG5vdyAtIGNhY2hlZC5sYXN0Q2hlY2tlZCkgPCBleHBpcmVUaW1lKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlZC5oYXNMZWFkc1RhZzsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5Y+q6L+b6KGMRE9N5qOA5rWL77yI5ZCM5q2l77yJDQogICAgICAgICAgICBpZiAoY29udGFjdEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBoYXNMZWFkc1RhZyA9IHRoaXMuZGV0ZWN0TGVhZHNTdGF0dXMoY29udGFj",
        "dEVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlTGVhZHNTdGF0dXMoY29udmVyc2F0aW9uSWQsIGhhc0xlYWRzVGFnLCAnZG9tJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGhhc0xlYWRzVGFnOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICByZXR1cm4gY2FjaGVkID8gY2FjaGVkLmhhc0xlYWRzVGFnIDogZmFsc2U7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOeVmeWuoui1hOeKtuaAgee8k+WtmA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5a+56K+dSUQNCiAgICAgICAgICogQHBhcmFtIHtib29sZWFufSBoYXNMZWFkc1RhZyDmmK/lkKblhbfmnInnlZnlrqLotYTmoIfnrb4NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHNvdXJjZSDmlbDmja7mupDvvJonYXBpJyDmiJYgJ2RvbScNCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZUxlYWRzU3RhdHVzKGNvbnZlcnNhdGlvbklkLCBoYXNMZWFkc1RhZywgc291cmNlID0gJ2RvbScpIHsNCiAgICAgICAgICAgIGlmICghY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRoaXMuc3RhdHVzQ2FjaGUuc2V0KGNvbnZlcnNhdGlvbklkLCB7DQogICAgICAgICAgICAgICAgaGFzTGVhZHNUYWcsDQogICAgICAgICAgICAgICAgbGFzdENoZWNrZWQ6IERhdGUubm93KCksDQogICAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2UNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eVmeWuoui1hOeKtuaAge+8mue8k+WtmOW3suabtOaWsCcsIHsNCiAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgIGhhc0xlYWRzVGFnLA0KICAgICAgICAgICAgICAgIHNvdXJjZSwNCiAgICAgICAgICAgICAgICBjYWNoZVNpemU6IHRoaXMuc3RhdHVzQ2FjaGUuc2l6ZQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWtmOWCqOeUqOaIt+mineWkluS/oeaBrw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5Lya6K+dSUQNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHVzZXJJbmZvIOeUqOaIt+S/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlVXNlckV4dHJhSW5mbyhjb252ZXJzYXRpb25JZCwgdXNlckluZm8pIHsNCiAgICAgICAgICAgIGlmICghY29udmVyc2F0aW9uSWQgfHwgIXVzZXJJbmZvKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0aGlzLnVzZXJJbmZvQ2FjaGUuc2V0KGNvbnZlcnNhdGlvbklkLCB7DQogICAgICAgICAgICAgICAgLi4udXNlckluZm8sDQogICAgICAgICAgICAgICAgbGFzdFVwZGF0ZWQ6IERhdGUubm93",
        "KCkNCiAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+eUqOaIt+S/oeaBr++8mue8k+WtmOW3suabtOaWsCcsIHsNCiAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby5uaWNrTmFtZSwNCiAgICAgICAgICAgICAgICBoYXNQaG9uZTogISF1c2VySW5mby5waG9uZSwNCiAgICAgICAgICAgICAgICBoYXNXZWNoYXQ6ICEhdXNlckluZm8ud2VjaGF0DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W55So5oi36aKd5aSW5L+h5oGvDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb252ZXJzYXRpb25JZCDkvJror51JRA0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fG51bGx9IOeUqOaIt+S/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0VXNlckV4dHJhSW5mbyhjb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgaWYgKCFjb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb25zdCB1c2VySW5mbyA9IHRoaXMudXNlckluZm9DYWNoZS5nZXQoY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgaWYgKCF1c2VySW5mbykgew0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbov4fmnJ/vvIjnlKjmiLfkv6Hmga/nvJPlrZjml7bpl7TovoPplb/vvIwzMOWIhumSn++8iQ0KICAgICAgICAgICAgaWYgKERhdGUubm93KCkgLSB1c2VySW5mby5sYXN0VXBkYXRlZCA+IDMwICogNjAgKiAxMDAwKSB7DQogICAgICAgICAgICAgICAgdGhpcy51c2VySW5mb0NhY2hlLmRlbGV0ZShjb252ZXJzYXRpb25JZCk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiB1c2VySW5mbzsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF55CG6L+H5pyf55qE57yT5a2Y5p2h55uuDQogICAgICAgICAqLw0KICAgICAgICBjbGVhckV4cGlyZWRDYWNoZSgpIHsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICBsZXQgY2xlYXJlZENvdW50ID0gMDsNCg0KICAgICAgICAgICAgZm9yIChjb25zdCBbY29udmVyc2F0aW9uSWQsIGRhdGFdIG9mIHRoaXMuc3RhdHVzQ2FjaGUuZW50cmllcygpKSB7DQogICAgICAgICAgICAgICAgaWYgKChub3cgLSBkYXRhLmxhc3RDaGVja2VkKSA+PSB0aGlzLkNBQ0hFX0VYUElSRV9USU1FKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdHVzQ2FjaGUuZGVsZXRlKGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICAgICAgY2xlYXJlZENvdW50Kys7DQogICAgICAg",
        "ICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoY2xlYXJlZENvdW50ID4gMCkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn55WZ5a6i6LWE54q25oCB77ya5riF55CG6L+H5pyf57yT5a2YJywgew0KICAgICAgICAgICAgICAgICAgICBjbGVhcmVkQ291bnQsDQogICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ0NvdW50OiB0aGlzLnN0YXR1c0NhY2hlLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W57yT5a2Y57uf6K6h5L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOe8k+WtmOe7n+iuoQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0Q2FjaGVTdGF0cygpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgdG90YWxFbnRyaWVzOiB0aGlzLnN0YXR1c0NhY2hlLnNpemUsDQogICAgICAgICAgICAgICAgZXhwaXJlVGltZTogdGhpcy5DQUNIRV9FWFBJUkVfVElNRQ0KICAgICAgICAgICAgfTsNCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOWbnuiuv+m7keWQjeWNleeuoeeQhuWZqA0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgRm9sbG93VXBCbGFja2xpc3RNYW5hZ2VyID0gew0KICAgICAgICAvLyDlrZjlgqjplK4NCiAgICAgICAgU1RPUkFHRV9LRVk6ICd4aHNfZm9sbG93dXBfYmxhY2tsaXN0JywNCg0KICAgICAgICAvLyDlhoXlrZjnvJPlrZjvvJp1c2VySWQgLT4gYmxhY2tsaXN0RGF0YQ0KICAgICAgICBibGFja2xpc3RDYWNoZTogbmV3IE1hcCgpLA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliJ3lp4vljJblm57orr/pu5HlkI3ljZXnrqHnkIblmagNCiAgICAgICAgICovDQogICAgICAgIGluaXQoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHRoaXMubG9hZEJsYWNrbGlzdEZyb21TdG9yYWdlKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+Wbnuiuv+m7keWQjeWNleeuoeeQhuWZqOWIneWni+WMluWujOaIkCcsIHsNCiAgICAgICAgICAgICAgICAgICAgYmxhY2tsaXN0Q291bnQ6IHRoaXMuYmxhY2tsaXN0Q2FjaGUuc2l6ZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+Wbnuiuv+m7keWQjeWNleeuoeeQhuWZqOWIneWni+WMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7jmxvY2FsU3RvcmFnZeWKoOi9vem7keWQjeWNleaVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgbG9hZEJsYWNrbGlzdEZyb21TdG9yYWdlKCkgew0KICAgICAgICAgICAgdHJ5",
        "IHsNCiAgICAgICAgICAgICAgICBjb25zdCBzdG9yZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLlNUT1JBR0VfS0VZKTsNCiAgICAgICAgICAgICAgICBpZiAoc3RvcmVkKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGJsYWNrbGlzdCA9IEpTT04ucGFyc2Uoc3RvcmVkKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5ibGFja2xpc3RDYWNoZS5jbGVhcigpOw0KDQogICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW3VzZXJJZCwgZGF0YV0gb2YgT2JqZWN0LmVudHJpZXMoYmxhY2tsaXN0KSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5ibGFja2xpc3RDYWNoZS5zZXQodXNlcklkLCBkYXRhKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflm57orr/pu5HlkI3ljZXvvJrku47lrZjlgqjliqDovb3mlbDmja4nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBsb2FkZWRDb3VudDogdGhpcy5ibGFja2xpc3RDYWNoZS5zaXplDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflm57orr/pu5HlkI3ljZXvvJrliqDovb3lrZjlgqjmlbDmja7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuYmxhY2tsaXN0Q2FjaGUuY2xlYXIoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5L+d5a2Y6buR5ZCN5Y2V5pWw5o2u5YiwbG9jYWxTdG9yYWdlDQogICAgICAgICAqLw0KICAgICAgICBzYXZlQmxhY2tsaXN0VG9TdG9yYWdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBibGFja2xpc3QgPSBPYmplY3QuZnJvbUVudHJpZXModGhpcy5ibGFja2xpc3RDYWNoZSk7DQogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5TVE9SQUdFX0tFWSwgSlNPTi5zdHJpbmdpZnkoYmxhY2tsaXN0KSk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+Wbnuiuv+m7keWQjeWNle+8muS/neWtmOWIsOWtmOWCqCcsIHsNCiAgICAgICAgICAgICAgICAgICAgYmxhY2tsaXN0Q291bnQ6IHRoaXMuYmxhY2tsaXN0Q2FjaGUuc2l6ZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+Wbnuiuv+m7keWQjeWNle+8muS/neWtmOWtmOWCqOaVsOaNruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa3u+WKoOeUqOaIt+WIsOWbnuiuv+m7keWQjeWNlQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkIOeUqOaIt0lEDQogICAgICAgICAqIEBw",
        "YXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHJlYXNvbiDmt7vliqDljp/lm6ANCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpua3u+WKoOaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgYWRkKHVzZXJJZCwgdXNlck5hbWUsIHJlYXNvbiA9ICdtYW51YWwnKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghdXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCflm57orr/pu5HlkI3ljZXvvJrnlKjmiLdJROS4uuepuicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5bey5a2Y5ZyoDQogICAgICAgICAgICAgICAgaWYgKHRoaXMuYmxhY2tsaXN0Q2FjaGUuaGFzKHVzZXJJZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflm57orr/pu5HlkI3ljZXvvJrnlKjmiLflt7LlrZjlnKgnLCB7IHVzZXJJZCwgdXNlck5hbWUgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOa3u+WKoOaWsOadoeebrg0KICAgICAgICAgICAgICAgIGNvbnN0IGJsYWNrbGlzdEVudHJ5ID0gew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyTmFtZSB8fCAn5pyq55+l55So5oi3JywNCiAgICAgICAgICAgICAgICAgICAgYWRkZWRBdDogRGF0ZS5ub3coKSwNCiAgICAgICAgICAgICAgICAgICAgcmVhc29uDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuYmxhY2tsaXN0Q2FjaGUuc2V0KHVzZXJJZCwgYmxhY2tsaXN0RW50cnkpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2F2ZUJsYWNrbGlzdFRvU3RvcmFnZSgpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfmqsg55So5oi35bey5re75Yqg5Yiw5Zue6K6/6buR5ZCN5Y2VJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICByZWFzb24sDQogICAgICAgICAgICAgICAgICAgIHRvdGFsOiB0aGlzLmJsYWNrbGlzdENhY2hlLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflm57orr/pu5HlkI3ljZXvvJrmt7vliqDlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog",
        "5LuO5Zue6K6/6buR5ZCN5Y2V56e76Zmk55So5oi3DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VySWQg55So5oi3SUQNCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuenu+mZpOaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgcmVtb3ZlKHVzZXJJZCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJZCkgcmV0dXJuIGZhbHNlOw0KDQogICAgICAgICAgICAgICAgY29uc3QgcmVtb3ZlZCA9IHRoaXMuYmxhY2tsaXN0Q2FjaGUuZGVsZXRlKHVzZXJJZCk7DQogICAgICAgICAgICAgICAgaWYgKHJlbW92ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zYXZlQmxhY2tsaXN0VG9TdG9yYWdlKCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfinIUg55So5oi35bey5LuO5Zue6K6/6buR5ZCN5Y2V56e76ZmkJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgcmVtYWluaW5nOiB0aGlzLmJsYWNrbGlzdENhY2hlLnNpemUNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHJldHVybiByZW1vdmVkOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+Wbnuiuv+m7keWQjeWNle+8muenu+mZpOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XnlKjmiLfmmK/lkKblnKjlm57orr/pu5HlkI3ljZXkuK0NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCDnlKjmiLdJRA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5Zyo6buR5ZCN5Y2V5LitDQogICAgICAgICAqLw0KICAgICAgICBpc0JsYWNrbGlzdGVkKHVzZXJJZCkgew0KICAgICAgICAgICAgaWYgKCF1c2VySWQpIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLmJsYWNrbGlzdENhY2hlLmhhcyh1c2VySWQpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmiYDmnInlm57orr/pu5HlkI3ljZXnlKjmiLcNCiAgICAgICAgICogQHJldHVybnMge0FycmF5fSDpu5HlkI3ljZXliJfooagNCiAgICAgICAgICovDQogICAgICAgIGdldEFsbCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5ibGFja2xpc3RDYWNoZS52YWx1ZXMoKSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Zue6K6/6buR5ZCN5Y2V77ya6I635Y+W5YiX6KGo5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVz",
        "c2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gW107DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heepuuWbnuiuv+m7keWQjeWNlQ0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5riF56m65oiQ5YqfDQogICAgICAgICAqLw0KICAgICAgICBjbGVhcigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgY291bnQgPSB0aGlzLmJsYWNrbGlzdENhY2hlLnNpemU7DQogICAgICAgICAgICAgICAgdGhpcy5ibGFja2xpc3RDYWNoZS5jbGVhcigpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2F2ZUJsYWNrbGlzdFRvU3RvcmFnZSgpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfwn5eR77iPIOWbnuiuv+m7keWQjeWNleW3sua4heepuicsIHsgY2xlYXJlZENvdW50OiBjb3VudCB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflm57orr/pu5HlkI3ljZXvvJrmuIXnqbrlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5Zue6K6/6buR5ZCN5Y2V57uf6K6h5L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOe7n+iuoeS/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0U3RhdHMoKSB7DQogICAgICAgICAgICBjb25zdCBibGFja2xpc3QgPSB0aGlzLmdldEFsbCgpOw0KICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgIGNvbnN0IG9uZURheSA9IDI0ICogNjAgKiA2MCAqIDEwMDA7DQoNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgdG90YWw6IGJsYWNrbGlzdC5sZW5ndGgsDQogICAgICAgICAgICAgICAgbWFudWFsOiBibGFja2xpc3QuZmlsdGVyKGl0ZW0gPT4gaXRlbS5yZWFzb24gPT09ICdtYW51YWwnKS5sZW5ndGgsDQogICAgICAgICAgICAgICAgcmVjZW50bHlBZGRlZDogYmxhY2tsaXN0LmZpbHRlcihpdGVtID0+IG5vdyAtIGl0ZW0uYWRkZWRBdCA8IG9uZURheSkubGVuZ3RoDQogICAgICAgICAgICB9Ow0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g6L+957KJ6K6w5b2V566h55CG5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBGb2xsb3dVcFJlY29yZE1hbmFnZXIgPSB7DQogICAgICAgIC8vIOWtmOWCqOmUrg0KICAgICAgICBTVE9SQUdFX0tFWTogJ3hoc19mb2xsb3d1cF9yZWNvcmRzJywNCg0KICAgICAgICAvLyDlhoXlrZjnvJPlrZjvvJp1c2VySWQgLT4gcmVjb3JkRGF0YQ0KICAgICAgICByZWNvcmRD",
        "YWNoZTogbmV3IE1hcCgpLA0KDQogICAgICAgIC8vIOe8k+WtmOWQjOatpeaXtumXtOmXtOmalO+8iDXliIbpkp/vvIkNCiAgICAgICAgQ0FDSEVfU1lOQ19JTlRFUlZBTDogNSAqIDYwICogMTAwMCwNCg0KICAgICAgICAvLyDkuIrmrKHlkIzmraXml7bpl7QNCiAgICAgICAgbGFzdFN5bmNUaW1lOiAwLA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliJ3lp4vljJbov73nsonorrDlvZXnrqHnkIblmagNCiAgICAgICAgICovDQogICAgICAgIGluaXQoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHRoaXMubG9hZFJlY29yZHNGcm9tU3RvcmFnZSgpOw0KICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRQZXJpb2RpY1N5bmMoKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6K6w5b2V566h55CG5Zmo5Yid5aeL5YyW5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICByZWNvcmRDb3VudDogdGhpcy5yZWNvcmRDYWNoZS5zaXplDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V566h55CG5Zmo5Yid5aeL5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5LuObG9jYWxTdG9yYWdl5Yqg6L296K6w5b2V5pWw5o2uDQogICAgICAgICAqLw0KICAgICAgICBsb2FkUmVjb3Jkc0Zyb21TdG9yYWdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBzdG9yZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLlNUT1JBR0VfS0VZKTsNCiAgICAgICAgICAgICAgICBpZiAoc3RvcmVkKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlY29yZHMgPSBKU09OLnBhcnNlKHN0b3JlZCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVjb3JkQ2FjaGUuY2xlYXIoKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDliqDovb3orrDlvZXlubbmuIXnkIbov4fmnJ/mlbDmja4NCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXhwaXJlRGF5cyA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcFNjYW5EYXlzJywgMykgKyAzMDsgLy8g5L+d55WZMzDlpKnpop3lpJbmlbDmja4NCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXhwaXJlVGltZSA9IGV4cGlyZURheXMgKiAyNCAqIDYwICogNjAgKiAxMDAwOw0KICAgICAgICAgICAgICAgICAgICBsZXQgbG9hZGVkQ291bnQgPSAwOw0KDQogICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW3VzZXJJZCwgcmVjb3JkXSBvZiBPYmplY3QuZW50cmllcyhyZWNvcmRzKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g8J+UpyDkv67lpI3vvJrmlLnov5vov4fmnJ/liKTmlq3pgLvovpHvvIzkv53n",
        "lZnlt7Llm57orr/nlKjmiLfnmoTorrDlvZUNCiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBzaG91bGRLZWVwID0gZmFsc2U7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZWNvcmQuZmlyc3RDb250YWN0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5a+55LqO5pyq5Zue6K6/55qE55So5oi377yM5qOA5p+l6aaW5qyh6IGU57O75pe26Ze0DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFyZWNvcmQubGFzdEZvbGxvd1VwICYmIChub3cgLSByZWNvcmQuZmlyc3RDb250YWN0KSA8IGV4cGlyZVRpbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdWxkS2VlcCA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWvueS6juW3suWbnuiuv+eahOeUqOaIt++8jOS9v+eUqOabtOmVv+eahOS/neeVmeaXtumXtO+8iDkw5aSp77yJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAocmVjb3JkLmxhc3RGb2xsb3dVcCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBleHRlbmRlZEV4cGlyZVRpbWUgPSA5MCAqIDI0ICogNjAgKiA2MCAqIDEwMDA7IC8vIDkw5aSpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxhc3RBY3Rpdml0eVRpbWUgPSBNYXRoLm1heChyZWNvcmQuZmlyc3RDb250YWN0LCByZWNvcmQubGFzdEZvbGxvd1VwKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChub3cgLSBsYXN0QWN0aXZpdHlUaW1lKSA8IGV4dGVuZGVkRXhwaXJlVGltZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdWxkS2VlcCA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzaG91bGRLZWVwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNvcmRDYWNoZS5zZXQodXNlcklkLCByZWNvcmQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRlZENvdW50Kys7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6K6w5b2V77ya5LuO5a2Y5YKo5Yqg6L296K6w5b2VJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxTdG9yZWQ6IE9iamVjdC5rZXlzKHJlY29yZHMpLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRlZENvdW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgZXhwaXJlZENvdW50OiBPYmplY3Qua2V5cyhyZWNvcmRzKS5sZW5ndGggLSBsb2FkZWRDb3VudA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAg",
        "ICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya5Yqg6L295a2Y5YKo5pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnJlY29yZENhY2hlLmNsZWFyKCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS/neWtmOiusOW9leaVsOaNruWIsGxvY2FsU3RvcmFnZQ0KICAgICAgICAgKi8NCiAgICAgICAgc2F2ZVJlY29yZHNUb1N0b3JhZ2UoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHJlY29yZHMgPSBPYmplY3QuZnJvbUVudHJpZXModGhpcy5yZWNvcmRDYWNoZSk7DQogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5TVE9SQUdFX0tFWSwgSlNPTi5zdHJpbmdpZnkocmVjb3JkcykpOw0KICAgICAgICAgICAgICAgIHRoaXMubGFzdFN5bmNUaW1lID0gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6K6w5b2V77ya5L+d5a2Y5Yiw5a2Y5YKoJywgew0KICAgICAgICAgICAgICAgICAgICByZWNvcmRDb3VudDogdGhpcy5yZWNvcmRDYWNoZS5zaXplLA0KICAgICAgICAgICAgICAgICAgICBzdG9yYWdlU2l6ZTogSlNPTi5zdHJpbmdpZnkocmVjb3JkcykubGVuZ3RoDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya5L+d5a2Y5a2Y5YKo5pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5a6a5pyf5ZCM5q2l5Yiw5a2Y5YKo77yI6YG/5YWN6aKR57mB5YaZ5YWl77yJDQogICAgICAgICAqLw0KICAgICAgICBzeW5jVG9TdG9yYWdlSWZOZWVkZWQoKSB7DQogICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgaWYgKChub3cgLSB0aGlzLmxhc3RTeW5jVGltZSkgPiB0aGlzLkNBQ0hFX1NZTkNfSU5URVJWQUwpIHsNCiAgICAgICAgICAgICAgICB0aGlzLnNhdmVSZWNvcmRzVG9TdG9yYWdlKCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWQr+WKqOWumuacn+WQjOatpQ0KICAgICAgICAgKi8NCiAgICAgICAgc3RhcnRQZXJpb2RpY1N5bmMoKSB7DQogICAgICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5zeW5jVG9TdG9yYWdlSWZOZWVkZWQoKTsNCiAgICAgICAgICAgIH0sIHRoaXMuQ0FDSEVfU1lOQ19JTlRFUlZBTCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWQr+WKqOeVmeWuoui1hOeKtuaAgeebkeaOpw0KICAgICAg",
        "ICAgKi8NCiAgICAgICAgc3RhcnRMZWFkc01vbml0b3JpbmcoKSB7DQogICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcExlYWRzTW9uaXRvcicsIHRydWUpKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonorrDlvZXvvJrnlZnlrqLotYTnm5Hmjqflt7LnpoHnlKgnKTsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGNvbnN0IGNoZWNrSW50ZXJ2YWwgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBMZWFkc0NoZWNrSW50ZXJ2YWwnLCAzMCkgKiA2MCAqIDEwMDA7IC8vIOi9rOaNouS4uuavq+enkg0KDQogICAgICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy5jaGVja0FuZFVwZGF0ZUxlYWRzU3RhdHVzKCk7DQogICAgICAgICAgICB9LCBjaGVja0ludGVydmFsKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiusOW9le+8mueVmeWuoui1hOebkeaOp+W3suWQr+WKqCcsIHsNCiAgICAgICAgICAgICAgICBjaGVja0ludGVydmFsOiBjaGVja0ludGVydmFsIC8gNjAgLyAxMDAwICsgJ+WIhumSnycNCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6Xlubbmm7TmlrDnlZnlrqLotYTnirbmgIENCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGNoZWNrQW5kVXBkYXRlTGVhZHNTdGF0dXMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnJlY29yZENhY2hlLnNpemUgPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6K6w5b2V77ya5byA5aeL5qOA5p+l55WZ5a6i6LWE54q25oCBJywgew0KICAgICAgICAgICAgICAgICAgICB0b3RhbFJlY29yZHM6IHRoaXMucmVjb3JkQ2FjaGUuc2l6ZQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgbGV0IHVwZGF0ZWRDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgY29uc3QgcmVjb3Jkc1RvQ2hlY2sgPSBBcnJheS5mcm9tKHRoaXMucmVjb3JkQ2FjaGUuZW50cmllcygpKQ0KICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKChbdXNlcklkLCByZWNvcmRdKSA9Pg0KICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3JkLnN0YXR1cyA9PT0gJ3BlbmRpbmcnIHx8IHJlY29yZC5zdGF0dXMgPT09ICdmb2xsb3dpbmcnDQogICAgICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFt1c2VySWQsIHJlY29yZF0gb2YgcmVjb3Jkc1RvQ2hlY2spIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOS9v+eUqOW8guatpUFQSeS8mOWFiOajgOafpeeVmeWuoui1hOeKtuaAgQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29u",
        "c3QgaGFzTGVhZHNUYWcgPSBhd2FpdCBGb2xsb3dVcE1hbmFnZXIuY2hlY2tVc2VyTGVhZHNTdGF0dXNGYXN0QXN5bmMoew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogcmVjb3JkLnVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogcmVjb3JkLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiByZWNvcmQuY29udmVyc2F0aW9uSWQNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGFzTGVhZHNUYWcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmm7TmlrDnirbmgIHkuLrlt7LlrozmiJDvvIjojrflvpfnlZnlrqLotYTvvIkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWNvcmQuc3RhdHVzID0gJ2xlYWRzX2FjcXVpcmVkJzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWNvcmQubGVhZHNBY3F1aXJlZFRpbWUgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNvcmRDYWNoZS5zZXQodXNlcklkLCByZWNvcmQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZWRDb3VudCsrOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiusOW9le+8mueUqOaIt+W3suiOt+W+l+eVmeWuoui1hO+8jOenu+WHuui/veeyieWIl+ihqCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHJlY29yZC51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcENvdW50OiByZWNvcmQuZm9sbG93VXBDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5qOA5rWL5pa55byPOiAnQVBJ5LyY5YWI5byC5q2l5qOA5rWLJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonorrDlvZXvvJrmo4Dmn6XnlKjmiLfnlZnlrqLotYTnirbmgIHlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHJlY29yZC51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAvLyDmt7vliqDlu7bov5/ku6XpgILlupRBUEnosIPnlKgNCiAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMjAwKTsNCiAgICAgICAgICAgICAgICB9DQoN",
        "CiAgICAgICAgICAgICAgICBpZiAodXBkYXRlZENvdW50ID4gMCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnN5bmNUb1N0b3JhZ2VJZk5lZWRlZCgpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6K6w5b2V77ya55WZ5a6i6LWE54q25oCB5qOA5p+l5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZFJlY29yZHM6IHJlY29yZHNUb0NoZWNrLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZWRDb3VudA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonorrDlvZXvvJrnlZnlrqLotYTnirbmgIHmo4Dmn6XlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorrDlvZXlm57orr/mk43kvZwNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCDnlKjmiLdJRA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCNDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb252ZXJzYXRpb25JZCDkvJror51JRA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGVtcGxhdGUg5L2/55So55qE6K+d5pyv5qih5p2/DQogICAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gc3VjY2VzcyDmmK/lkKblj5HpgIHmiJDlip8NCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuiusOW9leaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgcmVjb3JkRm9sbG93VXAodXNlcklkLCB1c2VyTmFtZSwgY29udmVyc2F0aW9uSWQsIHRlbXBsYXRlLCBzdWNjZXNzKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghdXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonorrDlvZXvvJrnlKjmiLdJROS4uuepuicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICBsZXQgcmVjb3JkID0gdGhpcy5yZWNvcmRDYWNoZS5nZXQodXNlcklkKTsNCg0KICAgICAgICAgICAgICAgIGlmICghcmVjb3JkKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWIm+W7uuaWsOiusOW9lQ0KICAgICAgICAgICAgICAgICAgICByZWNvcmQgPSB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlck5hbWUgfHwgJ+acquefpeeUqOaItycsDQogICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0Q29udGFjdDogbm93LA0KICAgICAgICAg",
        "ICAgICAgICAgICAgICAgbGFzdEZvbGxvd1VwOiBudWxsLA0KICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBDb3VudDogMCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwSGlzdG9yeTogW10sDQogICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICdwZW5kaW5nJw0KICAgICAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOiusOW9lQ0KICAgICAgICAgICAgICAgIHJlY29yZC5sYXN0Rm9sbG93VXAgPSBub3c7DQogICAgICAgICAgICAgICAgcmVjb3JkLmZvbGxvd1VwQ291bnQrKzsNCiAgICAgICAgICAgICAgICByZWNvcmQuZm9sbG93VXBIaXN0b3J5LnB1c2goew0KICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG5vdywNCiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGU6IHRlbXBsYXRlLnN1YnN0cmluZygwLCAxMDApICsgJy4uLicsIC8vIOWPquS/neWtmOWJjTEwMOWtl+espg0KICAgICAgICAgICAgICAgICAgICBzdWNjZXNzLA0KICAgICAgICAgICAgICAgICAgICBkZWxheTogMCAvLyDlj6/ku6XorrDlvZXlrp7pmYXlu7bov5/ml7bpl7QNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOeKtuaAgQ0KICAgICAgICAgICAgICAgIGNvbnN0IG1heENvdW50ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwTWF4Q291bnQnLCAyKTsNCiAgICAgICAgICAgICAgICBpZiAocmVjb3JkLmZvbGxvd1VwQ291bnQgPj0gbWF4Q291bnQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmVjb3JkLnN0YXR1cyA9ICdjb21wbGV0ZWQnOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHJlY29yZC5zdGF0dXMgPSAnZm9sbG93aW5nJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0aGlzLnJlY29yZENhY2hlLnNldCh1c2VySWQsIHJlY29yZCk7DQoNCiAgICAgICAgICAgICAgICAvLyDwn5SnIEJVR+S/ruWkje+8mueri+WNs+WQjOatpeWbnuiuv+iusOW9leWIsOWtmOWCqO+8jOmBv+WFjemHjeWkjeWbnuiuvw0KICAgICAgICAgICAgICAgIC8vIOWOn+adpeS9v+eUqCBzeW5jVG9TdG9yYWdlSWZOZWVkZWQoKSDkvJrmnInlu7bov5/vvIzlr7zoh7Tnq57mgIHmnaHku7YNCiAgICAgICAgICAgICAgICB0aGlzLnNhdmVSZWNvcmRzVG9TdG9yYWdlKCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6K6w5b2V77ya6K6w5b2V5Zue6K6/5pON5L2cJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcENvdW50OiByZWNvcmQuZm9sbG93VXBDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiByZWNvcmQuc3RhdHVzLA0KICAgICAgICAgICAg",
        "ICAgICAgICBzdWNjZXNzLA0KICAgICAgICAgICAgICAgICAgICBsYXN0Rm9sbG93VXA6IG5ldyBEYXRlKHJlY29yZC5sYXN0Rm9sbG93VXApLnRvTG9jYWxlU3RyaW5nKCkNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8muiusOW9leWbnuiuv+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XnlKjmiLfmmK/lkKblj6/ku6Xov5vooYzlm57orr8NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCDnlKjmiLdJRA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5Y+v5Lul5Zue6K6/DQogICAgICAgICAqLw0KICAgICAgICBjYW5Gb2xsb3dVcCh1c2VySWQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCF1c2VySWQgfHwgIUNvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEVuYWJsZWQnLCBmYWxzZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHJlY29yZCA9IHRoaXMucmVjb3JkQ2FjaGUuZ2V0KHVzZXJJZCk7DQogICAgICAgICAgICAgICAgaWYgKCFyZWNvcmQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7IC8vIOaWsOeUqOaIt+WPr+S7peWbnuiuvw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuW3suWujOaIkOaIluiiq+mYu+atog0KICAgICAgICAgICAgICAgIGlmIChyZWNvcmQuc3RhdHVzID09PSAnY29tcGxldGVkJyB8fCByZWNvcmQuc3RhdHVzID09PSAnYmxvY2tlZCcpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWbnuiuv+asoeaVsOmZkOWItg0KICAgICAgICAgICAgICAgIGNvbnN0IG1heENvdW50ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwTWF4Q291bnQnLCAyKTsNCiAgICAgICAgICAgICAgICBpZiAocmVjb3JkLmZvbGxvd1VwQ291bnQgPj0gbWF4Q291bnQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaXtumXtOmXtOmalA0KICAgICAgICAgICAgICAgIGNvbnN0IGludGVydmFsSG91cnMgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBJbnRlcnZhbCcsIDI0KTsNCg0KICAgICAgICAgICAgICAgIC8vIOmqjOivgemXtOmalOmFjee9rueahOacieaViOaApw0KICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaW50",
        "ZXJ2YWxIb3VycyAhPT0gJ251bWJlcicgfHwgaXNOYU4oaW50ZXJ2YWxIb3VycykgfHwgaW50ZXJ2YWxIb3VycyA8PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya5Zue6K6/6Ze06ZqU6YWN572u5peg5pWIJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWxIb3VycywNCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHR5cGVvZiBpbnRlcnZhbEhvdXJzDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgaW50ZXJ2YWwgPSBpbnRlcnZhbEhvdXJzICogNjAgKiA2MCAqIDEwMDA7IC8vIOi9rOaNouS4uuavq+enkg0KICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQoNCiAgICAgICAgICAgICAgICAvLyDkv67lpI3vvJrlkIzml7bmo4Dmn6XpppbmrKHogZTns7vml7bpl7TlkozmnIDlkI7lm57orr/ml7bpl7QNCiAgICAgICAgICAgICAgICBpZiAoIXJlY29yZC5sYXN0Rm9sbG93VXApIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5LuO5pyq5Zue6K6/6L+H77yM5qOA5p+l6Led56a76aaW5qyh6IGU57O755qE5pe26Ze0DQogICAgICAgICAgICAgICAgICAgIGlmIChyZWNvcmQuZmlyc3RDb250YWN0ICYmIChub3cgLSByZWNvcmQuZmlyc3RDb250YWN0KSA8IGludGVydmFsKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8mummluasoeiBlOezu+aXtumXtOmXtOmalOacqua7oei2sycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RDb250YWN0OiBuZXcgRGF0ZShyZWNvcmQuZmlyc3RDb250YWN0KS50b0xvY2FsZVN0cmluZygpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludGVydmFsSG91cnMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVtYWluaW5nSG91cnM6IE1hdGguY2VpbCgoaW50ZXJ2YWwgLSAobm93IC0gcmVjb3JkLmZpcnN0Q29udGFjdCkpIC8gKDYwICogNjAgKiAxMDAwKSkNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5bey57uP5Zue6K6/6L+H77yM5qOA5p+l6Led56a75LiK5qyh5Zue6K6/55qE5pe26Ze0DQogICAgICAgICAgICAgICAgICAgIGlmICgobm93IC0gcmVjb3JkLmxhc3RGb2xsb3dVcCkgPCBpbnRlcnZhbCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonorrDlvZXvvJrlm57orr/ml7bpl7Tpl7Tp",
        "mpTmnKrmu6HotrMnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RGb2xsb3dVcDogbmV3IERhdGUocmVjb3JkLmxhc3RGb2xsb3dVcCkudG9Mb2NhbGVTdHJpbmcoKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbEhvdXJzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbWFpbmluZ0hvdXJzOiBNYXRoLmNlaWwoKGludGVydmFsIC0gKG5vdyAtIHJlY29yZC5sYXN0Rm9sbG93VXApKSAvICg2MCAqIDYwICogMTAwMCkpDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8muajgOafpeWbnuiuv+adg+mZkOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5blvoXlm57orr/nlKjmiLfliJfooagNCiAgICAgICAgICogQHBhcmFtIHtudW1iZXJ9IHNjYW5EYXlzIOaJq+aPj+WkqeaVsA0KICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9IOW+heWbnuiuv+eUqOaIt+WIl+ihqA0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0UGVuZGluZ1VzZXJzKHNjYW5EYXlzID0gbnVsbCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDnoa7kv53nvJPlrZjlt7LliJ3lp4vljJYNCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMucmVjb3JkQ2FjaGUpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieiusOW9le+8mue8k+WtmOacquWIneWni+WMlu+8jOWwneivleWKoOi9vScpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmxvYWRSZWNvcmRzRnJvbVN0b3JhZ2UoKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMucmVjb3JkQ2FjaGUgfHwgdGhpcy5yZWNvcmRDYWNoZS5zaXplID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6K6w5b2V77ya5peg6K6w5b2V5pWw5o2u77yM6L+U5Zue56m65YiX6KGoJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBbXTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBkYXlzID0gc2NhbkRheXMgfHwgQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwU2NhbkRheXMnLCAzKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzY2FuVGltZSA9IGRheXMgKiAyNCAqIDYwICogNjAgKiAx",
        "MDAwOw0KICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgY29uc3QgcGVuZGluZ1VzZXJzID0gW107DQogICAgICAgICAgICAgICAgY29uc3QgYWxsUmVjb3JkcyA9IFtdOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonorrDlvZXvvJrlvIDlp4vojrflj5blvoXlm57orr/nlKjmiLcnLCB7DQogICAgICAgICAgICAgICAgICAgIHNjYW5EYXlzOiBkYXlzLA0KICAgICAgICAgICAgICAgICAgICB0b3RhbFJlY29yZHM6IHRoaXMucmVjb3JkQ2FjaGUuc2l6ZSwNCiAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBFbmFibGVkOiBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBFbmFibGVkJywgZmFsc2UpDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFt1c2VySWQsIHJlY29yZF0gb2YgdGhpcy5yZWNvcmRDYWNoZS5lbnRyaWVzKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOmqjOivgeiusOW9leaVsOaNruWujOaVtOaApw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFyZWNvcmQgfHwgIXVzZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6K6w5b2V77ya6Lez6L+H5peg5pWI6K6w5b2VJywgeyB1c2VySWQsIHJlY29yZCB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5p6E5bu66K6w5b2V5pGY6KaB77yI55So5LqO6LCD6K+V77yJDQogICAgICAgICAgICAgICAgICAgICAgICBhbGxSZWNvcmRzLnB1c2goew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogcmVjb3JkLnVzZXJOYW1lIHx8ICfmnKrnn6XnlKjmiLcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVjb3JkLnN0YXR1cyB8fCAncGVuZGluZycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBDb3VudDogcmVjb3JkLmZvbGxvd1VwQ291bnQgfHwgMCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJzdENvbnRhY3Q6IHJlY29yZC5maXJzdENvbnRhY3QgPyBuZXcgRGF0ZShyZWNvcmQuZmlyc3RDb250YWN0KS50b0xvY2FsZVN0cmluZygpIDogJ04vQScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdEZvbGxvd1VwOiByZWNvcmQubGFzdEZvbGxvd1VwID8gbmV3IERhdGUocmVjb3JkLmxhc3RGb2xsb3dVcCkudG9Mb2NhbGVTdHJpbmcoKSA6ICdOL0EnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRheXNTaW5jZUZpcnN0OiByZWNvcmQuZmlyc3RDb250YWN0ID8gTWF0aC5yb3VuZCgobm93",
        "IC0gcmVjb3JkLmZpcnN0Q29udGFjdCkgLyAoMjQgKiA2MCAqIDYwICogMTAwMCkgKiAxMCkgLyAxMCA6ICdOL0EnDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5o6S6Zmk5bey6I635b6X55WZ5a6i6LWE55qE55So5oi3DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVjb3JkLnN0YXR1cyA9PT0gJ2xlYWRzX2FjcXVpcmVkJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6K6w5b2V77ya55So5oi35bey6I635b6X55WZ5a6i6LWE77yM6Lez6L+H5Zue6K6/Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogcmVjb3JkLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWFkc0FjcXVpcmVkVGltZTogcmVjb3JkLmxlYWRzQWNxdWlyZWRUaW1lID8gbmV3IERhdGUocmVjb3JkLmxlYWRzQWNxdWlyZWRUaW1lKS50b0xvY2FsZVN0cmluZygpIDogJ04vQScNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5Zue6K6/6buR5ZCN5Y2VDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoRm9sbG93VXBCbGFja2xpc3RNYW5hZ2VyICYmIHR5cGVvZiBGb2xsb3dVcEJsYWNrbGlzdE1hbmFnZXIuaXNCbGFja2xpc3RlZCA9PT0gJ2Z1bmN0aW9uJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChGb2xsb3dVcEJsYWNrbGlzdE1hbmFnZXIuaXNCbGFja2xpc3RlZCh1c2VySWQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8mueUqOaIt+WcqOWbnuiuv+m7keWQjeWNleS4re+8jOi3s+i/h+WbnuiuvycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogcmVjb3JkLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoYmxhY2tsaXN0RXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonorrDlvZXvvJrmo4Dmn6Xpu5HlkI3ljZXlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogYmxhY2tsaXN0",
        "RXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g6buR5ZCN5Y2V5qOA5p+l5aSx6LSl5pe257un57ut5aSE55CG77yM5LiN6Lez6L+H55So5oi3DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblnKjmiavmj4/ml7bpl7TojIPlm7TlhoUNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZWNvcmQuZmlyc3RDb250YWN0ICYmIHR5cGVvZiByZWNvcmQuZmlyc3RDb250YWN0ID09PSAnbnVtYmVyJyAmJiAobm93IC0gcmVjb3JkLmZpcnN0Q29udGFjdCkgPD0gc2NhblRpbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblj6/ku6Xlm57orr8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgY2FuRm9sbG93VXAgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYW5Gb2xsb3dVcCA9IHRoaXMuY2FuRm9sbG93VXAodXNlcklkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChjYW5Gb2xsb3dVcEVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya5qOA5p+l5Zue6K6/5p2h5Lu25aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGNhbkZvbGxvd1VwRXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuRm9sbG93VXAgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8muajgOafpeeUqOaIt+Wbnuiuv+adoeS7ticsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHJlY29yZC51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiByZWNvcmQuc3RhdHVzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcENvdW50OiByZWNvcmQuZm9sbG93VXBDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5c1NpbmNlRmlyc3Q6IE1hdGgucm91bmQoKG5vdyAtIHJlY29yZC5maXJzdENvbnRhY3QpIC8gKDI0ICogNjAgKiA2MCAqIDEwMDApICogMTApIC8gMTAsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc0xhc3RGb2xsb3dVcDogISFyZWNvcmQu",
        "bGFzdEZvbGxvd1VwLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0Rm9sbG93VXA6IHJlY29yZC5sYXN0Rm9sbG93VXAgPyBuZXcgRGF0ZShyZWNvcmQubGFzdEZvbGxvd1VwKS50b0xvY2FsZVN0cmluZygpIDogJ+S7juacquWbnuiuvycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0Q29udGFjdDogcmVjb3JkLmZpcnN0Q29udGFjdCA/IG5ldyBEYXRlKHJlY29yZC5maXJzdENvbnRhY3QpLnRvTG9jYWxlU3RyaW5nKCkgOiAnTi9BJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuRm9sbG93VXANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYW5Gb2xsb3dVcCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJpb3JpdHkgPSB0aGlzLmNhbGN1bGF0ZVByaW9yaXR5KHJlY29yZCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZW5kaW5nVXNlcnMucHVzaCh7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiByZWNvcmQudXNlck5hbWUgfHwgJ+acquefpeeUqOaItycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IHJlY29yZC5jb252ZXJzYXRpb25JZCB8fCB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RDb250YWN0OiByZWNvcmQuZmlyc3RDb250YWN0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RGb2xsb3dVcDogcmVjb3JkLmxhc3RGb2xsb3dVcCB8fCBudWxsLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwQ291bnQ6IHJlY29yZC5mb2xsb3dVcENvdW50IHx8IDAsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpb3JpdHk6IHByaW9yaXR5DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAocHJpb3JpdHlFcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonorrDlvZXvvJrorqHnrpfkvJjlhYjnuqflpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBwcmlvcml0eUVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5LyY5YWI57qn6K6h566X5aSx6LSl5pe25L2/55So6buY6K6k5LyY5YWI57qnDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZW5kaW5nVXNlcnMucHVzaCh7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiByZWNvcmQudXNlck5hbWUgfHwgJ+acquefpeeUqOaItycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IHJlY29yZC5jb252ZXJzYXRpb25JZCB8fCB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RDb250YWN0OiByZWNvcmQuZmlyc3RDb250YWN0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RGb2xsb3dVcDogcmVjb3JkLmxhc3RGb2xsb3dVcCB8fCBudWxsLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwQ291bnQ6IHJlY29yZC5mb2xsb3dVcENvdW50IHx8IDAsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpb3JpdHk6IDANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8mueUqOaIt+i2heWHuuaJq+aPj+aXtumXtOiMg+WbtCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHJlY29yZC51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF5c1NpbmNlRmlyc3Q6IHJlY29yZC5maXJzdENvbnRhY3QgPyBNYXRoLnJvdW5kKChub3cgLSByZWNvcmQuZmlyc3RDb250YWN0KSAvICgyNCAqIDYwICogNjAgKiAxMDAwKSAqIDEwKSAvIDEwIDogJ04vQScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjYW5EYXlzOiBkYXlzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNGaXJzdENvbnRhY3Q6ICEhcmVjb3JkLmZpcnN0Q29udGFjdCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RDb250YWN0VHlwZTogdHlwZW9mIHJlY29yZC5maXJzdENvbnRhY3QNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAocmVjb3JkRXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya5aSE55CG5Y2V5Liq6K6w5b2V5aSx6LSlJywgew0KICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkPy5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IHJlY29yZEVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g57un57ut5aSE55CG5LiL5LiA5Liq6K6w5b2VDQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaMieS8mOWFiOe6p+aOkuW6jw0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIHBlbmRpbmdVc2Vycy5zb3J0KChhLCBiKSA9PiAoYi5wcmlvcml0eSB8fCAwKSAtIChhLnByaW9yaXR5IHx8IDApKTsNCiAgICAgICAgICAgICAgICB9IGNhdGNoIChzb3J0RXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonorrDlvZXvvJrmjpLluo/lpLHotKUnLCB7IGVycm9yOiBzb3J0RXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgLy8g5o6S5bqP5aSx6LSl5pe25L+d5oyB5Y6f6aG65bqPDQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5rKh5pyJ5b6F5Zue6K6/55So5oi377yM5o+Q5L6b6K+m57uG55qE6K+K5pat5L+h5oGvDQogICAgICAgICAgICAgICAgaWYgKHBlbmRpbmdVc2Vycy5sZW5ndGggPT09IDAgJiYgdGhpcy5yZWNvcmRDYWNoZS5zaXplID4gMCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8muacieeUqOaIt+iusOW9leS9huaXoOW+heWbnuiuv+eUqOaItycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsUmVjb3JkczogdGhpcy5yZWNvcmRDYWNoZS5zaXplLA0KICAgICAgICAgICAgICAgICAgICAgICAgc2NhbkRheXM6IGRheXMsDQogICAgICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcEVuYWJsZWQ6IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEVuYWJsZWQnLCBmYWxzZSksDQogICAgICAgICAgICAgICAgICAgICAgICBzYW1wbGVSZWNvcmRzOiBhbGxSZWNvcmRzLnNsaWNlKDAsIDMpIC8vIOaYvuekuuWJjTPmnaHorrDlvZXkvZzkuLrmoLfmnKwNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonorrDlvZXvvJrojrflj5blvoXlm57orr/nlKjmiLflrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgIHNjYW5EYXlzOiBkYXlzLA0KICAgICAgICAgICAgICAgICAgICB0b3RhbFJlY29yZHM6IHRoaXMucmVjb3JkQ2FjaGUuc2l6ZSwNCiAgICAgICAgICAgICAgICAgICAgcGVuZGluZ0NvdW50OiBwZW5kaW5nVXNlcnMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICBhbGxSZWNvcmRzOiBhbGxSZWNv",
        "cmRzLnNsaWNlKDAsIDUpIC8vIOWPquaYvuekuuWJjTXmnaHorrDlvZUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBwZW5kaW5nVXNlcnM7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonorrDlvZXvvJrojrflj5blvoXlm57orr/nlKjmiLflpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICBzdGFjazogZXJyb3Iuc3RhY2sNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gW107DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiuoeeul+eUqOaIt+Wbnuiuv+S8mOWFiOe6pw0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gcmVjb3JkIOeUqOaIt+iusOW9lQ0KICAgICAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSDkvJjlhYjnuqfliIbmlbANCiAgICAgICAgICovDQogICAgICAgIGNhbGN1bGF0ZVByaW9yaXR5KHJlY29yZCkgew0KICAgICAgICAgICAgbGV0IHByaW9yaXR5ID0gMDsNCiAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQoNCiAgICAgICAgICAgIC8vIOWfuuS6jummluasoeaOpeinpuaXtumXtO+8iOi2iuaXqeS8mOWFiOe6p+i2iumrmO+8iQ0KICAgICAgICAgICAgY29uc3QgZGF5c1NpbmNlRmlyc3RDb250YWN0ID0gKG5vdyAtIHJlY29yZC5maXJzdENvbnRhY3QpIC8gKDI0ICogNjAgKiA2MCAqIDEwMDApOw0KICAgICAgICAgICAgcHJpb3JpdHkgKz0gTWF0aC5tYXgoMCwgMTAgLSBkYXlzU2luY2VGaXJzdENvbnRhY3QpOw0KDQogICAgICAgICAgICAvLyDln7rkuo7lm57orr/mrKHmlbDvvIjlm57orr/mrKHmlbDlsJHnmoTkvJjlhYjnuqfpq5jvvIkNCiAgICAgICAgICAgIHByaW9yaXR5ICs9ICgzIC0gcmVjb3JkLmZvbGxvd1VwQ291bnQpICogMjsNCg0KICAgICAgICAgICAgLy8g5Z+65LqO5LiK5qyh5Zue6K6/5pe26Ze077yI6LaK5LmF5rKh5Zue6K6/5LyY5YWI57qn6LaK6auY77yJDQogICAgICAgICAgICBpZiAocmVjb3JkLmxhc3RGb2xsb3dVcCkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGhvdXJzU2luY2VMYXN0Rm9sbG93VXAgPSAobm93IC0gcmVjb3JkLmxhc3RGb2xsb3dVcCkgLyAoNjAgKiA2MCAqIDEwMDApOw0KICAgICAgICAgICAgICAgIHByaW9yaXR5ICs9IE1hdGgubWluKGhvdXJzU2luY2VMYXN0Rm9sbG93VXAgLyAyNCwgNSk7IC8vIOacgOWkmuWKoDXliIYNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgcHJpb3JpdHkgKz0gNTsgLy8g5LuO5pyq5Zue6K6/55qE55So5oi35LyY5YWI57qn6L6D6auYDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBwcmlvcml0eTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw55So5oi354q2",
        "5oCBDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VySWQg55So5oi3SUQNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHN0YXR1cyDmlrDnirbmgIENCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IOaYr+WQpuabtOaWsOaIkOWKnw0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlVXNlclN0YXR1cyh1c2VySWQsIHN0YXR1cykgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCByZWNvcmQgPSB0aGlzLnJlY29yZENhY2hlLmdldCh1c2VySWQpOw0KICAgICAgICAgICAgICAgIGlmIChyZWNvcmQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmVjb3JkLnN0YXR1cyA9IHN0YXR1czsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNvcmRDYWNoZS5zZXQodXNlcklkLCByZWNvcmQpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnN5bmNUb1N0b3JhZ2VJZk5lZWRlZCgpOw0KDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6K6w5b2V77ya5pu05paw55So5oi354q25oCBJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8muabtOaWsOeUqOaIt+eKtuaAgeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bnu5/orqHkv6Hmga8NCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g57uf6K6h5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g56Gu5L+d57yT5a2Y5bey5Yid5aeL5YyWDQogICAgICAgICAgICAgICAgaWYgKCF0aGlzLnJlY29yZENhY2hlKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonorrDlvZXvvJrnvJPlrZjmnKrliJ3lp4vljJbvvIzlsJ3or5XliqDovb0nKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2FkUmVjb3Jkc0Zyb21TdG9yYWdlKCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3Qgc3RhdHMgPSB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsVXNlcnM6IHRoaXMucmVjb3JkQ2FjaGUgPyB0aGlzLnJlY29yZENhY2hlLnNpemUgOiAwLA0KICAgICAgICAgICAgICAgICAgICBwZW5kaW5nVXNlcnM6IDAsDQogICAgICAgICAgICAgICAgICAgIGZv",
        "bGxvd2luZ1VzZXJzOiAwLA0KICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZWRVc2VyczogMCwNCiAgICAgICAgICAgICAgICAgICAgYmxvY2tlZFVzZXJzOiAwLA0KICAgICAgICAgICAgICAgICAgICBsZWFkc0FjcXVpcmVkVXNlcnM6IDAsIC8vIOaWsOWinu+8muW3suiOt+W+l+eVmeWuoui1hOeahOeUqOaItw0KICAgICAgICAgICAgICAgICAgICB0b3RhbEZvbGxvd1VwczogMA0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5yZWNvcmRDYWNoZSAmJiB0aGlzLnJlY29yZENhY2hlLnNpemUgPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcmVjb3JkIG9mIHRoaXMucmVjb3JkQ2FjaGUudmFsdWVzKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5a6J5YWo5Zyw57Sv5Yqg5Zue6K6/5qyh5pWwDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlY29yZC5mb2xsb3dVcENvdW50ICYmIHR5cGVvZiByZWNvcmQuZm9sbG93VXBDb3VudCA9PT0gJ251bWJlcicpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHMudG90YWxGb2xsb3dVcHMgKz0gcmVjb3JkLmZvbGxvd1VwQ291bnQ7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5a6J5YWo5Zyw57uf6K6h54q25oCBDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzID0gcmVjb3JkLnN0YXR1cyB8fCAncGVuZGluZyc7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChzdGF0dXMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAncGVuZGluZyc6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0cy5wZW5kaW5nVXNlcnMrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdmb2xsb3dpbmcnOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHMuZm9sbG93aW5nVXNlcnMrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdjb21wbGV0ZWQnOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHMuY29tcGxldGVkVXNlcnMrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdibG9ja2VkJzoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRzLmJsb2NrZWRVc2VycysrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgIGNhc2UgJ2xlYWRzX2FjcXVpcmVkJzoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRzLmxlYWRzQWNxdWlyZWRVc2VycysrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmnKrnn6XnirbmgIHpu5jorqTkuLpwZW5kaW5nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0cy5wZW5kaW5nVXNlcnMrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6K6w5b2V77ya5Y+R546w5pyq55+l54q25oCBJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogcmVjb3JkLnVzZXJJZD8uc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1cw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChyZWNvcmRFcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya5aSE55CG5Y2V5Liq6K6w5b2V57uf6K6h5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHJlY29yZC51c2VySWQ/LnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IHJlY29yZEVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlh7rplJnnmoTorrDlvZXpu5jorqTorqHlhaVwZW5kaW5nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHMucGVuZGluZ1VzZXJzKys7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8mue7n+iuoeS/oeaBr+iuoeeul+WujOaIkCcsIHN0YXRzKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gc3RhdHM7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonorrDlvZXvvJrojrflj5bnu5/orqHkv6Hmga/lpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICBzdGFjazogZXJyb3Iuc3RhY2sNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAg",
        "IC8vIOi/lOWbnuWuieWFqOeahOm7mOiupOWAvA0KICAgICAgICAgICAgICAgIGNvbnN0IGRlZmF1bHRTdGF0cyA9IHsNCiAgICAgICAgICAgICAgICAgICAgdG90YWxVc2VyczogMCwNCiAgICAgICAgICAgICAgICAgICAgcGVuZGluZ1VzZXJzOiAwLA0KICAgICAgICAgICAgICAgICAgICBmb2xsb3dpbmdVc2VyczogMCwNCiAgICAgICAgICAgICAgICAgICAgY29tcGxldGVkVXNlcnM6IDAsDQogICAgICAgICAgICAgICAgICAgIGJsb2NrZWRVc2VyczogMCwNCiAgICAgICAgICAgICAgICAgICAgbGVhZHNBY3F1aXJlZFVzZXJzOiAwLA0KICAgICAgICAgICAgICAgICAgICB0b3RhbEZvbGxvd1VwczogMA0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiusOW9le+8mui/lOWbnum7mOiupOe7n+iuoeS/oeaBrycsIGRlZmF1bHRTdGF0cyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGRlZmF1bHRTdGF0czsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riF55CG6L+H5pyf6K6w5b2VDQogICAgICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IOa4heeQhueahOiusOW9leaVsOmHjw0KICAgICAgICAgKi8NCiAgICAgICAgY2xlYW5FeHBpcmVkUmVjb3JkcygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICBjb25zdCBleHBpcmVEYXlzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwU2NhbkRheXMnLCAzKSArIDMwOyAvLyDkv53nlZkzMOWkqemineWkluaVsOaNrg0KICAgICAgICAgICAgICAgIGNvbnN0IGV4cGlyZVRpbWUgPSBleHBpcmVEYXlzICogMjQgKiA2MCAqIDYwICogMTAwMDsNCiAgICAgICAgICAgICAgICBsZXQgY2xlYW5lZENvdW50ID0gMDsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW3VzZXJJZCwgcmVjb3JkXSBvZiB0aGlzLnJlY29yZENhY2hlLmVudHJpZXMoKSkgew0KICAgICAgICAgICAgICAgICAgICBpZiAocmVjb3JkLmZpcnN0Q29udGFjdCAmJiAobm93IC0gcmVjb3JkLmZpcnN0Q29udGFjdCkgPj0gZXhwaXJlVGltZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNvcmRDYWNoZS5kZWxldGUodXNlcklkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFuZWRDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGNsZWFuZWRDb3VudCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zYXZlUmVjb3Jkc1RvU3RvcmFnZSgpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6K6w5b2V77ya5riF55CG6L+H5pyf6K6w5b2VJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgY2xlYW5lZENvdW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgcmVtYWluaW5nQ291bnQ6",
        "IHRoaXMucmVjb3JkQ2FjaGUuc2l6ZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gY2xlYW5lZENvdW50Ow0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiusOW9le+8mua4heeQhui/h+acn+iusOW9leWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIDA7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWvvOWHuuiusOW9leaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDlr7zlh7rnmoTmlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGV4cG9ydERhdGEoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB7DQogICAgICAgICAgICAgICAgICAgIHZlcnNpb246ICcxLjAnLA0KICAgICAgICAgICAgICAgICAgICBleHBvcnRUaW1lOiBEYXRlLm5vdygpLA0KICAgICAgICAgICAgICAgICAgICByZWNvcmRzOiBPYmplY3QuZnJvbUVudHJpZXModGhpcy5yZWNvcmRDYWNoZSksDQogICAgICAgICAgICAgICAgICAgIHN0YXRzOiB0aGlzLmdldFN0YXRzKCkNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiusOW9le+8muWvvOWHuuaVsOaNricsIHsNCiAgICAgICAgICAgICAgICAgICAgcmVjb3JkQ291bnQ6IHRoaXMucmVjb3JkQ2FjaGUuc2l6ZSwNCiAgICAgICAgICAgICAgICAgICAgZGF0YVNpemU6IEpTT04uc3RyaW5naWZ5KGRhdGEpLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya5a+85Ye65pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5a+85YWl6K6w5b2V5pWw5o2uDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhIOWvvOWFpeeahOaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5a+85YWl5oiQ5YqfDQogICAgICAgICAqLw0KICAgICAgICBpbXBvcnREYXRhKGRhdGEpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCFkYXRhIHx8ICFkYXRhLnJlY29yZHMpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfmlbDmja7moLzlvI/ml6DmlYgnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDpqozor4HmlbDmja7moLzlvI8NCiAgICAgICAgICAgICAgICBsZXQgaW1wb3J0",
        "ZWRDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBbdXNlcklkLCByZWNvcmRdIG9mIE9iamVjdC5lbnRyaWVzKGRhdGEucmVjb3JkcykpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHJlY29yZCAmJiB0eXBlb2YgcmVjb3JkID09PSAnb2JqZWN0JyAmJiByZWNvcmQudXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlY29yZENhY2hlLnNldCh1c2VySWQsIHJlY29yZCk7DQogICAgICAgICAgICAgICAgICAgICAgICBpbXBvcnRlZENvdW50Kys7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0aGlzLnNhdmVSZWNvcmRzVG9TdG9yYWdlKCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6K6w5b2V77ya5a+85YWl5pWw5o2u5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICBpbXBvcnRlZENvdW50LA0KICAgICAgICAgICAgICAgICAgICB0b3RhbFJlY29yZHM6IHRoaXMucmVjb3JkQ2FjaGUuc2l6ZQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya5a+85YWl5pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4heepuuaJgOacieiusOW9lQ0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5riF56m65oiQ5YqfDQogICAgICAgICAqLw0KICAgICAgICBjbGVhckFsbFJlY29yZHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvdW50ID0gdGhpcy5yZWNvcmRDYWNoZS5zaXplOw0KICAgICAgICAgICAgICAgIHRoaXMucmVjb3JkQ2FjaGUuY2xlYXIoKTsNCiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLlNUT1JBR0VfS0VZKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonorrDlvZXvvJrmuIXnqbrmiYDmnInorrDlvZUnLCB7IGNsZWFyZWRDb3VudDogY291bnQgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6K6w5b2V77ya5riF56m66K6w5b2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDov73nsonosIPluqblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09",
        "PT09PQ0KICAgIGNvbnN0IEZvbGxvd1VwU2NoZWR1bGVyID0gew0KICAgICAgICAvLyDosIPluqblmajnirbmgIENCiAgICAgICAgaXNSdW5uaW5nOiBmYWxzZSwNCiAgICAgICAgc2NoZWR1bGVyVGltZXI6IG51bGwsDQoNCiAgICAgICAgLy8g5qOA5p+l6Ze06ZqU77yIMzDliIbpkp/vvIkNCiAgICAgICAgQ0hFQ0tfSU5URVJWQUw6IDMwICogNjAgKiAxMDAwLA0KDQogICAgICAgIC8vIOW9k+WJjeWkhOeQhueKtuaAgQ0KICAgICAgICBpc1Byb2Nlc3Npbmc6IGZhbHNlLA0KDQogICAgICAgIC8vIOS7iuaXpeW3suWkhOeQhuaVsOmHjw0KICAgICAgICB0b2RheVByb2Nlc3NlZENvdW50OiAwLA0KICAgICAgICBsYXN0UmVzZXREYXRlOiBudWxsLA0KDQogICAgICAgIC8vIPCflKcgQlVH5L+u5aSN77ya5re75Yqg5pWw5o2u5oyB5LmF5YyW5a2Y5YKo6ZSuDQogICAgICAgIERBSUxZX1NUQVRTX0tFWTogJ3hoc19mb2xsb3d1cF9kYWlseV9zdGF0cycsDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIPCflKcgQlVH5L+u5aSN77ya5L+d5a2Y5q+P5pel57uf6K6h5pWw5o2u5YiwbG9jYWxTdG9yYWdlDQogICAgICAgICAqLw0KICAgICAgICBzYXZlRGFpbHlTdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc3RhdHMgPSB7DQogICAgICAgICAgICAgICAgICAgIHRvZGF5UHJvY2Vzc2VkQ291bnQ6IHRoaXMudG9kYXlQcm9jZXNzZWRDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgbGFzdFJlc2V0RGF0ZTogdGhpcy5sYXN0UmVzZXREYXRlLA0KICAgICAgICAgICAgICAgICAgICBsYXN0U2F2ZVRpbWU6IERhdGUubm93KCkNCiAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHRoaXMuREFJTFlfU1RBVFNfS0VZLCBKU09OLnN0cmluZ2lmeShzdGF0cykpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6LCD5bqm5Zmo77ya5q+P5pel57uf6K6h5pWw5o2u5bey5L+d5a2YJywgc3RhdHMpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiwg+W6puWZqO+8muS/neWtmOavj+aXpee7n+iuoeaVsOaNruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIPCflKcgQlVH5L+u5aSN77ya5LuObG9jYWxTdG9yYWdl5Yqg6L295q+P5pel57uf6K6h5pWw5o2uDQogICAgICAgICAqLw0KICAgICAgICBsb2FkRGFpbHlTdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc2F2ZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLkRBSUxZX1NUQVRTX0tFWSk7DQogICAgICAgICAgICAgICAgaWYgKHNhdmVkKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzID0gSlNPTi5wYXJzZShzYXZlZCk7DQogICAgICAg",
        "ICAgICAgICAgICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKS50b0RhdGVTdHJpbmcoKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzmmK/lkIzkuIDlpKnnmoTmlbDmja7vvIzmgaLlpI3nu5/orqENCiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXRzLmxhc3RSZXNldERhdGUgPT09IHRvZGF5KSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRvZGF5UHJvY2Vzc2VkQ291bnQgPSBzdGF0cy50b2RheVByb2Nlc3NlZENvdW50IHx8IDA7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxhc3RSZXNldERhdGUgPSBzdGF0cy5sYXN0UmVzZXREYXRlOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiwg+W6puWZqO+8muW3suaBouWkjeS7iuaXpee7n+iuoeaVsOaNricsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RheVByb2Nlc3NlZENvdW50OiB0aGlzLnRvZGF5UHJvY2Vzc2VkQ291bnQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdFJlc2V0RGF0ZTogdGhpcy5sYXN0UmVzZXREYXRlDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr+aWsOeahOS4gOWkqe+8jOmHjee9ruiuoeaVsOWZqA0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50b2RheVByb2Nlc3NlZENvdW50ID0gMDsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubGFzdFJlc2V0RGF0ZSA9IHRvZGF5Ow0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zYXZlRGFpbHlTdGF0cygpOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiwg+W6puWZqO+8muajgOa1i+WIsOaWsOeahOS4gOWkqe+8jOW3sumHjee9rue7n+iuoeaVsOaNricpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g6aaW5qyh6L+Q6KGM77yM5Yid5aeL5YyW5pWw5o2uDQogICAgICAgICAgICAgICAgICAgIHRoaXMudG9kYXlQcm9jZXNzZWRDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubGFzdFJlc2V0RGF0ZSA9IG5ldyBEYXRlKCkudG9EYXRlU3RyaW5nKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2F2ZURhaWx5U3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiwg+W6puWZqO+8mummluasoei/kOihjO+8jOW3suWIneWni+WMlue7n+iuoeaVsOaNricpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonosIPluqblmajvvJrliqDovb3mr4/ml6Xnu5/orqHmlbDmja7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIC8vIOWHuumUmeaXtumH",
        "jee9ruS4uum7mOiupOWAvA0KICAgICAgICAgICAgICAgIHRoaXMudG9kYXlQcm9jZXNzZWRDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgdGhpcy5sYXN0UmVzZXREYXRlID0gbmV3IERhdGUoKS50b0RhdGVTdHJpbmcoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5ZCv5Yqo6LCD5bqm5ZmoDQogICAgICAgICAqLw0KICAgICAgICBzdGFydCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNSdW5uaW5nKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonosIPluqblmajvvJrlt7LlnKjov5DooYzkuK0nKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICghQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwRW5hYmxlZCcsIGZhbHNlKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ6LCD5bqm5Zmo77ya5Yqf6IO95pyq5ZCv55SoJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDwn5SnIEJVR+S/ruWkje+8muWQr+WKqOaXtuWKoOi9veavj+aXpee7n+iuoeaVsOaNrg0KICAgICAgICAgICAgICAgIHRoaXMubG9hZERhaWx5U3RhdHMoKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuaXNSdW5uaW5nID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICB0aGlzLnJlc2V0RGFpbHlDb3VudElmTmVlZGVkKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDnq4vljbPmiafooYzkuIDmrKHmo4Dmn6UNCiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrQW5kRXhlY3V0ZUZvbGxvd1VwcygpOw0KDQogICAgICAgICAgICAgICAgLy8g6K6+572u5a6a5pe25qOA5p+lDQogICAgICAgICAgICAgICAgdGhpcy5zY2hlZHVsZXJUaW1lciA9IHNldEludGVydmFsKCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGVja0FuZEV4ZWN1dGVGb2xsb3dVcHMoKTsNCiAgICAgICAgICAgICAgICB9LCB0aGlzLkNIRUNLX0lOVEVSVkFMKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonosIPluqblmajvvJrlt7LlkK/liqgnLCB7DQogICAgICAgICAgICAgICAgICAgIGNoZWNrSW50ZXJ2YWw6IHRoaXMuQ0hFQ0tfSU5URVJWQUwgLyAxMDAwIC8gNjAgKyAn5YiG6ZKfJywNCiAgICAgICAgICAgICAgICAgICAgdG9kYXlQcm9jZXNzZWQ6IHRoaXMudG9kYXlQcm9jZXNzZWRDb3VudA0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiwg+W6puWZqO+8muWQr+WKqOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5pc1J1bm5pbmcgPSBmYWxzZTsNCiAgICAgICAgICAgIH0N",
        "CiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5YGc5q2i6LCD5bqm5ZmoDQogICAgICAgICAqLw0KICAgICAgICBzdG9wKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaXNSdW5uaW5nKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonosIPluqblmajvvJrmnKrlnKjov5DooYwnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHRoaXMuaXNSdW5uaW5nID0gZmFsc2U7DQoNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5zY2hlZHVsZXJUaW1lcikgew0KICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuc2NoZWR1bGVyVGltZXIpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNjaGVkdWxlclRpbWVyID0gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6LCD5bqm5Zmo77ya5bey5YGc5q2iJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6LCD5bqm5Zmo77ya5YGc5q2i5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+l5bm25omn6KGM5Zue6K6/DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBjaGVja0FuZEV4ZWN1dGVGb2xsb3dVcHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzUHJvY2Vzc2luZykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiwg+W6puWZqO+8muato+WcqOWkhOeQhuS4re+8jOi3s+i/h+acrOasoeajgOafpScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKCFDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBFbmFibGVkJywgZmFsc2UpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6LCD5bqm5Zmo77ya5Yqf6IO95bey56aB55SoJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblnKjlhYHorrjnmoTml7bpl7TmrrXlhoUNCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaXNJbkFsbG93ZWRUaW1lUmFuZ2UoKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiwg+W6puWZqO+8muS4jeWcqOWFgeiuuOeahOaXtumXtOauteWGhScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5LuK5pel5aSE55CG6ZmQ5Yi2DQogICAgICAgICAgICAgICAgdGhpcy5y",
        "ZXNldERhaWx5Q291bnRJZk5lZWRlZCgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRhaWx5TGltaXQgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBEYWlseUxpbWl0JywgMTApOw0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnRvZGF5UHJvY2Vzc2VkQ291bnQgPj0gZGFpbHlMaW1pdCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiwg+W6puWZqO+8muW3sui+vuWIsOS7iuaXpeWkhOeQhumZkOWIticsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3NlZDogdGhpcy50b2RheVByb2Nlc3NlZENvdW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgbGltaXQ6IGRhaWx5TGltaXQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0aGlzLmlzUHJvY2Vzc2luZyA9IHRydWU7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiwg+W6puWZqO+8muW8gOWni+ajgOafpeWbnuiuv+S7u+WKoScpOw0KDQogICAgICAgICAgICAgICAgLy8g6I635Y+W5b6F5Zue6K6/55So5oi3DQogICAgICAgICAgICAgICAgY29uc3QgcGVuZGluZ1VzZXJzID0gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLmdldFBlbmRpbmdVc2VycygpOw0KICAgICAgICAgICAgICAgIGlmIChwZW5kaW5nVXNlcnMubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6LCD5bqm5Zmo77ya5peg5b6F5Zue6K6/55So5oi3Jyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDpmZDliLbljZXmrKHlpITnkIbmlbDph48gLSDlop7liqDmibnph4/lpITnkIbog73lipsNCiAgICAgICAgICAgICAgICBjb25zdCBtYXhCYXRjaFNpemUgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBCYXRjaFNpemUnLCAxMCk7IC8vIOm7mOiupDEw5Liq55So5oi3DQogICAgICAgICAgICAgICAgY29uc3QgYmF0Y2hTaXplID0gTWF0aC5taW4obWF4QmF0Y2hTaXplLCBkYWlseUxpbWl0IC0gdGhpcy50b2RheVByb2Nlc3NlZENvdW50KTsNCiAgICAgICAgICAgICAgICBjb25zdCB1c2Vyc1RvUHJvY2VzcyA9IHBlbmRpbmdVc2Vycy5zbGljZSgwLCBiYXRjaFNpemUpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiwg+W6puWZqO+8muWHhuWkh+WkhOeQhuWbnuiuvycsIHsNCiAgICAgICAgICAgICAgICAgICAgdG90YWxQZW5kaW5nOiBwZW5kaW5nVXNlcnMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICBiYXRjaFNpemU6IHVzZXJzVG9Qcm9jZXNzLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgdG9kYXlQcm9jZXNzZWQ6IHRoaXMudG9kYXlQcm9jZXNzZWRDb3VudA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g6YCQ5Liq5aSE55CG",
        "55So5oi3IC0g5aKe5by66ZSZ6K+v5aSE55CG5ZKM6L+b5bqm6Lef6LiqDQogICAgICAgICAgICAgICAgbGV0IHN1Y2Nlc3NDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgbGV0IGZhaWx1cmVDb3VudCA9IDA7DQoNCiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHVzZXJzVG9Qcm9jZXNzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXIgPSB1c2Vyc1RvUHJvY2Vzc1tpXTsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonosIPluqblmajvvJrlpITnkIbov5vluqYnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudDogaSArIDEsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWw6IHVzZXJzVG9Qcm9jZXNzLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlci51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzQ291bnQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFpbHVyZUNvdW50DQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5wcm9jZXNzRm9sbG93VXBVc2VyKHVzZXIpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50b2RheVByb2Nlc3NlZENvdW50Kys7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDwn5SnIEJVR+S/ruWkje+8muavj+asoeWinuWKoOiuoeaVsOWQjueri+WNs+S/neWtmA0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zYXZlRGFpbHlTdGF0cygpOw0KICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2Vzc0NvdW50Kys7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOa3u+WKoOmaj+acuuW7tui/nw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVsYXkgPSB0aGlzLmdldFJhbmRvbURlbGF5KCk7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiwg+W6puWZqO+8muetieW+heW7tui/nycsIHsgZGVsYXk6IGRlbGF5ICsgJ21zJyB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KGRlbGF5KTsNCg0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgZmFpbHVyZUNvdW50Kys7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiwg+W6puWZqO+8muWkhOeQhueUqOaIt+Wksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXIudXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlci51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2Fn",
        "ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFjazogZXJyb3Iuc3RhY2ssDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvZ3Jlc3M6IGAke2kgKyAxfS8ke3VzZXJzVG9Qcm9jZXNzLmxlbmd0aH1gDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5aSx6LSl5ZCO55+t5pqC5bu26L+f77yM6YG/5YWN6L+e57ut5aSx6LSlDQogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgyMDAwKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonosIPluqblmajvvJrmnKzova7lpITnkIblrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsVXNlcnM6IHVzZXJzVG9Qcm9jZXNzLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgc3VjY2Vzc0NvdW50LA0KICAgICAgICAgICAgICAgICAgICBmYWlsdXJlQ291bnQsDQogICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NSYXRlOiB1c2Vyc1RvUHJvY2Vzcy5sZW5ndGggPiAwID8gKHN1Y2Nlc3NDb3VudCAvIHVzZXJzVG9Qcm9jZXNzLmxlbmd0aCAqIDEwMCkudG9GaXhlZCgxKSArICclJyA6ICcwJScsDQogICAgICAgICAgICAgICAgICAgIHRvZGF5VG90YWw6IHRoaXMudG9kYXlQcm9jZXNzZWRDb3VudA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g6Ieq5Yqo5Zue6K6/5a6M5oiQ5ZCO77yM5rua5Yqo5Zue5Yiw5YiX6KGo6aG26YOo5bm25Yi35pawVUnmmL7npLoNCiAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzc0NvdW50ID4gMCkgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5rua5Yqo5Zue5Yiw5YiX6KGo6aG26YOo77yM5pa55L6/5aSE55CG5paw5raI5oGvDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzY3JvbGxlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5kLWNvbGxhcHNlLWNvbnRlbnQtd3JhcHBlcjpub3QoW3N0eWxlKj0ibWF4LWhlaWdodDogMHB4Il0pIC52dWUtcmVjeWNsZS1zY3JvbGxlci5zY3JvbGxlcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNjcm9sbGVyKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieiwg+W6puWZqO+8muiHquWKqOWbnuiuv+WujOaIkO+8jOato+WcqOa7muWKqOWbnuWIsOWIl+ihqOmhtumDqC4uLicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjcm9sbGVyLnNjcm9sbFRvcCA9IDA7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g562J5b6F5rua5Yqo5a6M5oiQDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDMwMCkpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAg",
        "IExvZ2dlci5pbmZvKCfov73nsonosIPluqblmajvvJrlt7Llm57liLDliJfooajpobbpg6jvvIzlh4blpIflpITnkIbmlrDmtojmga8nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBVSU1hbmFnZXIgIT09ICd1bmRlZmluZWQnICYmIFVJTWFuYWdlci5yZW5kZXJGb2xsb3dVcExpc3QpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBVSU1hbmFnZXIucmVuZGVyRm9sbG93VXBMaXN0KCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonosIPluqblmajvvJroh6rliqjlm57orr/lkI7lt7LliLfmlrDov73nsonlkI3ljZVVSScpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBVSU1hbmFnZXIgIT09ICd1bmRlZmluZWQnICYmIFVJTWFuYWdlci51cGRhdGVGb2xsb3dVcFN0YXRzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnVwZGF0ZUZvbGxvd1VwU3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiwg+W6puWZqO+8muiHquWKqOWbnuiuv+WQjuW3suWIt+aWsOe7n+iuoeS/oeaBrycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoICh1aUVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiwg+W6puWZqO+8muiHquWKqOWbnuiuv+WQjuWkhOeQhuWksei0pScsIHsgZXJyb3I6IHVpRXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiwg+W6puWZqO+8muajgOafpeaJp+ihjOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9IGZpbmFsbHkgew0KICAgICAgICAgICAgICAgIHRoaXMuaXNQcm9jZXNzaW5nID0gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOajgOafpeaYr+WQpuWcqOWFgeiuuOeahOaXtumXtOiMg+WbtOWGhQ0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0NCiAgICAgICAgICovDQogICAgICAgIGlzSW5BbGxvd2VkVGltZVJhbmdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRIb3VyID0gbm93LmdldEhvdXJzKCk7DQogICAgICAgICAgICAgICAgY29uc3QgYWxsb3dlZEhvdXJzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwU2NoZWR1bGVIb3VycycsIFs5LCAxNCwgMThdKTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuWc",
        "qOWFgeiuuOeahOaXtumXtOeCuemZhOi/ke+8iMKxMeWwj+aXtu+8iQ0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaG91ciBvZiBhbGxvd2VkSG91cnMpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKE1hdGguYWJzKGN1cnJlbnRIb3VyIC0gaG91cikgPD0gMSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6LCD5bqm5Zmo77ya5qOA5p+l5pe26Ze06IyD5Zu05aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmHjee9ruavj+aXpeiuoeaVsOWZqA0KICAgICAgICAgKi8NCiAgICAgICAgcmVzZXREYWlseUNvdW50SWZOZWVkZWQoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKS50b0RhdGVTdHJpbmcoKTsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5sYXN0UmVzZXREYXRlICE9PSB0b2RheSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnRvZGF5UHJvY2Vzc2VkQ291bnQgPSAwOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmxhc3RSZXNldERhdGUgPSB0b2RheTsNCiAgICAgICAgICAgICAgICAgICAgLy8g8J+UpyBCVUfkv67lpI3vvJrph43nva7lkI7nq4vljbPkv53lrZjmlbDmja4NCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zYXZlRGFpbHlTdGF0cygpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiwg+W6puWZqO+8mumHjee9ruavj+aXpeiuoeaVsOWZqCcpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonosIPluqblmajvvJrph43nva7orqHmlbDlmajlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bpmo/mnLrlu7bov5/ml7bpl7QNCiAgICAgICAgICogQHJldHVybnMge251bWJlcn0g5bu26L+f5pe26Ze077yI5q+r56eS77yJDQogICAgICAgICAqLw0KICAgICAgICBnZXRSYW5kb21EZWxheSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCFDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBSYW5kb21EZWxheScsIHRydWUpKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiAxMDAwOyAvLyDpu5jorqQx56eS5bu26L+fDQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgbWluRGVs",
        "YXkgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBNaW5EZWxheScsIDMwKSAqIDEwMDA7DQogICAgICAgICAgICAgICAgY29uc3QgbWF4RGVsYXkgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBNYXhEZWxheScsIDMwMCkgKiAxMDAwOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXhEZWxheSAtIG1pbkRlbGF5ICsgMSkpICsgbWluRGVsYXk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6LCD5bqm5Zmo77ya6I635Y+W6ZqP5py65bu26L+f5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gNjAwMDA7IC8vIOm7mOiupDYw56eSDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWNleS4queUqOaIt+eahOWbnuiuvw0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gdXNlciDnlKjmiLfkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHByb2Nlc3NGb2xsb3dVcFVzZXIodXNlcikgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6LCD5bqm5Zmo77ya5byA5aeL5aSE55CG55So5oi35Zue6K6/Jywgew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXIudXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXIudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwQ291bnQ6IHVzZXIuZm9sbG93VXBDb3VudA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l55So5oi36buR5ZCN5Y2VDQogICAgICAgICAgICAgICAgaWYgKEJsYWNrbGlzdE1hbmFnZXIuaXNCbGFja2xpc3RlZCh1c2VyLnVzZXJJZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieiwg+W6puWZqO+8mueUqOaIt+WcqOeUqOaIt+m7keWQjeWNleS4re+8jOi3s+i/hycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlci51c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIudXBkYXRlVXNlclN0YXR1cyh1c2VyLnVzZXJJZCwgJ2Jsb2NrZWQnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWbnuiuv+m7keWQjeWNlQ0KICAgICAgICAgICAgICAgIGlmIChGb2xsb3dVcEJsYWNrbGlzdE1hbmFnZXIgJiYgRm9sbG93VXBCbGFja2xpc3RNYW5hZ2VyLmlzQmxhY2tsaXN0ZWQodXNlci51c2VySWQpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73n",
        "sonosIPluqblmajvvJrnlKjmiLflnKjlm57orr/pu5HlkI3ljZXkuK3vvIzot7Pov4cnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXIudXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6I635Y+W6K+d5pyv5qih5p2/DQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGUgPSB0aGlzLmdldEZvbGxvd1VwVGVtcGxhdGUodXNlcik7DQogICAgICAgICAgICAgICAgaWYgKCF0ZW1wbGF0ZSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiwg+W6puWZqO+8muiOt+WPluivneacr+aooeadv+Wksei0pScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5Y+R6YCB5Zue6K6/5raI5oGvDQogICAgICAgICAgICAgICAgY29uc3Qgc3VjY2VzcyA9IGF3YWl0IEZvbGxvd1VwTWFuYWdlci5zZW5kRm9sbG93VXBNZXNzYWdlKHVzZXIsIHRlbXBsYXRlKTsNCg0KICAgICAgICAgICAgICAgIC8vIOiusOW9leWbnuiuv+e7k+aenA0KICAgICAgICAgICAgICAgIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRGb2xsb3dVcCgNCiAgICAgICAgICAgICAgICAgICAgdXNlci51c2VySWQsDQogICAgICAgICAgICAgICAgICAgIHVzZXIudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIHVzZXIuY29udmVyc2F0aW9uSWQsDQogICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlLA0KICAgICAgICAgICAgICAgICAgICBzdWNjZXNzDQogICAgICAgICAgICAgICAgKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonosIPluqblmajvvJrnlKjmiLflm57orr/lpITnkIblrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlci51c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBzdWNjZXNzDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonosIPluqblmajvvJrlpITnkIbnlKjmiLflm57orr/lpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlci51c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHRocm93IGVycm9yOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5blm57orr/or53mnK/mqKHmnb8NCiAgICAgICAgICogQHBh",
        "cmFtIHtPYmplY3R9IHVzZXIg55So5oi35L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IOWkhOeQhuWQjueahOivneacrw0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0Rm9sbG93VXBUZW1wbGF0ZSh1c2VyKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlTW9kZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcFRlbXBsYXRlTW9kZScsICdzZXF1ZW5jZScpOw0KICAgICAgICAgICAgICAgIGxldCB0ZW1wbGF0ZSA9ICcnOw0KDQogICAgICAgICAgICAgICAgaWYgKHRlbXBsYXRlTW9kZSA9PT0gJ2FpJykgew0KICAgICAgICAgICAgICAgICAgICAvLyBBSeeUn+aIkOaooeW8jw0KICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZSA9IHRoaXMuZ2VuZXJhdGVBSVRlbXBsYXRlKHVzZXIpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOiOt+WPluWkmuWll+ivneacr+aooeadvw0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZXMgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBUZW1wbGF0ZXMnLCBbXSk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGZhbGxiYWNrVGVtcGxhdGUgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBUZW1wbGF0ZScsICfmgqjlpb1755So5oi35ZCNfe+8jOaIkeaYr+aCqOeahOS4k+WxnumhvumXri4uLicpOw0KDQogICAgICAgICAgICAgICAgICAgIGlmICh0ZW1wbGF0ZXMubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZSA9IGZhbGxiYWNrVGVtcGxhdGU7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGVtcGxhdGVNb2RlID09PSAncmFuZG9tJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6ZqP5py66YCJ5oup5qih5byPDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRlbXBsYXRlcy5sZW5ndGgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGUgPSB0ZW1wbGF0ZXNbcmFuZG9tSW5kZXhdOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5oyJ5qyh5bqP6YCJ5oup5qih5byP77yI6buY6K6k77yJDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZUluZGV4ID0gTWF0aC5taW4odXNlci5mb2xsb3dVcENvdW50LCB0ZW1wbGF0ZXMubGVuZ3RoIC0gMSk7DQogICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZSA9IHRlbXBsYXRlc1t0ZW1wbGF0ZUluZGV4XTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWPmOmHj+abv+aNog0KICAgICAgICAgICAgICAgIHRlbXBsYXRlID0gdGVtcGxhdGUucmVwbGFjZSgvXHvnlKjmiLflkI1cfS9nLCB1c2VyLnVzZXJOYW1lIHx8ICcn",
        "KTsNCiAgICAgICAgICAgICAgICB0ZW1wbGF0ZSA9IHRlbXBsYXRlLnJlcGxhY2UoL1x75Zue6K6/5qyh5pWwXH0vZywgKHVzZXIuZm9sbG93VXBDb3VudCArIDEpLnRvU3RyaW5nKCkpOw0KICAgICAgICAgICAgICAgIHRlbXBsYXRlID0gdGVtcGxhdGUucmVwbGFjZSgvXFxuL2csICdcbicpOyAvLyDlpITnkIbmjaLooYznrKYNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ6LCD5bqm5Zmo77ya6YCJ5oup6K+d5pyv5qih5p2/Jywgew0KICAgICAgICAgICAgICAgICAgICBtb2RlOiB0ZW1wbGF0ZU1vZGUsDQogICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwQ291bnQ6IHVzZXIuZm9sbG93VXBDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVMZW5ndGg6IHRlbXBsYXRlLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHRlbXBsYXRlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiwg+W6puWZqO+8muiOt+WPluivneacr+aooeadv+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOeUn+aIkEFJ6K+d5pyv5qih5p2/DQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSB1c2VyIOeUqOaIt+S/oeaBrw0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBBSeeUn+aIkOeahOivneacrw0KICAgICAgICAgKi8NCiAgICAgICAgZ2VuZXJhdGVBSVRlbXBsYXRlKHVzZXIpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5p6E5bu6QUnnlJ/miJDor53mnK/nmoTmj5DnpLror40NCiAgICAgICAgICAgICAgICBjb25zdCBwcm9tcHRzID0gWw0KICAgICAgICAgICAgICAgICAgICBg6K+35Li656ysJHt1c2VyLmZvbGxvd1VwQ291bnQgKyAxfeasoeWbnuiuv+eUqOaItyIke3VzZXIudXNlck5hbWV9IueUn+aIkOS4gOauteS4k+S4muOAgeWPi+WlveeahOi/veeyieivneacr+OAguimgeaxgu+8mjHvvInor63msJToh6rnhLbkurLliIcgMu+8ieS9k+eOsOS4k+S4muaApyAz77yJ5byV5a+85re75Yqg5b6u5L+hIDTvvInkuI3otoXov4cxMDDlrZdgLA0KICAgICAgICAgICAgICAgICAgICBg5Li655So5oi3IiR7dXNlci51c2VyTmFtZX0i5YaZ5LiA5q6156ysJHt1c2VyLmZvbGxvd1VwQ291bnQgKyAxfeasoeWbnuiuv+eahOivneacr++8jOimgeaxgua4qeWSjOS4jeaJk+aJsO+8jOS9k+eOsOWFs+aAgO+8jOW8leWvvOi/m+S4gOatpeayn+mAmu+8jOe6pjgw5a2X5bem5Y+zYCwNCiAgICAgICAgICAgICAgICAgICAgYOeUn+aIkOS4gOautemSiOWvuSIke3VzZXIudXNlck5hbWV9IueahOWbnuiuv+a2iOaBr++8jOi/meaYr+esrCR7dXNlci5mb2xsb3dVcENvdW50ICsgMX3mrKHogZTns7vvvIzpnIDo",
        "poHkvZPnjrDku7flgLzvvIzlu7rnq4vkv6Hku7vvvIzlvJXlr7zliqDlvq7kv6HvvIzor63oqIDnroDmtIHmnInliptgDQogICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgIC8vIOagueaNruWbnuiuv+asoeaVsOmAieaLqeS4jeWQjOeahOaPkOekuuivjemjjuagvA0KICAgICAgICAgICAgICAgIGNvbnN0IHByb21wdEluZGV4ID0gTWF0aC5taW4odXNlci5mb2xsb3dVcENvdW50LCBwcm9tcHRzLmxlbmd0aCAtIDEpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkUHJvbXB0ID0gcHJvbXB0c1twcm9tcHRJbmRleF07DQoNCiAgICAgICAgICAgICAgICAvLyDov5nph4zlj6/ku6Xpm4bmiJBBSSBBUEnnlJ/miJDor53mnK8NCiAgICAgICAgICAgICAgICAvLyDmmoLml7bov5Tlm57ln7rkuo7mqKHmnb/nmoTmmbrog73or53mnK8NCiAgICAgICAgICAgICAgICBjb25zdCBhaVRlbXBsYXRlcyA9IFsNCiAgICAgICAgICAgICAgICAgICAgYOaCqOWlvSR7dXNlci51c2VyTmFtZX3vvIzmiJHmmK/mgqjnmoTkuJPlsZ7pob7pl67jgILnnIvliLDmgqjkuYvliY3lr7nmiJHku6znmoTkuqflk4HmnInlhbTotqPvvIzmg7Pkuobop6PkuIDkuIvmgqjnjrDlnKjnmoTpnIDmsYLmg4XlhrXjgILlpoLmnpzmlrnkvr/nmoTor53vvIzlj6/ku6Xmt7vliqDmiJHnmoTlvq7kv6Hor6bnu4bmsp/pgJrvvIzmiJHkvJrkuLrmgqjmj5DkvpvkuJPkuJrlu7rorq7jgILmnJ/lvoXmgqjnmoTlm57lpI3vvIHwn5iKYCwNCiAgICAgICAgICAgICAgICAgICAgYCR7dXNlci51c2VyTmFtZX3mgqjlpb3vvIHmhJ/osKLmgqjkuYvliY3nmoTlhbPms6jjgILmiJHmg7Plho3mrKHkuLrmgqjku4vnu43miJHku6znmoTkvJjlir/lkozmnIDmlrDkvJjmg6DjgILlpoLmnpzmgqjmnInku7vkvZXnlpHpl67vvIzpmo/ml7blj6/ku6XogZTns7vmiJHvvIzmiJHkvJrnrKzkuIDml7bpl7TkuLrmgqjop6PnrZTjgILmnJ/lvoXov5vkuIDmraXkuqTmtYHvvIFgLA0KICAgICAgICAgICAgICAgICAgICBg5Lqy54ix55qEJHt1c2VyLnVzZXJOYW1lfe+8jOW4jOacm+aCqOS4gOWIh+mDveWlve+8geaDs+i3n+i/m+S4gOS4i+aCqOS5i+WJjeWSqOivoueahOS6p+WTge+8jOeci+eci+i/mOacieS7gOS5iOWPr+S7peW4ruWKqeaCqOeahOOAguaIkeS7rOacgOi/keacieaWsOeahOS8mOaDoOaUv+etlu+8jOebuOS/oeS8muWvueaCqOacieW4ruWKqeOAguaWueS+v+eahOivneaIkeS7rOWPr+S7peivpue7huayn+mAmuS4gOS4i+OAgmANCiAgICAgICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVJbmRleCA9IE1hdGgubWluKHVzZXIuZm9sbG93VXBDb3VudCwgYWlUZW1wbGF0ZXMubGVuZ3RoIC0gMSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGFpVGVtcGxhdGVzW3RlbXBsYXRlSW5kZXhdOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6LCD5bqm",
        "5Zmo77yaQUnor53mnK/nlJ/miJDlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIC8vIOi/lOWbnum7mOiupOivneacrw0KICAgICAgICAgICAgICAgIHJldHVybiBg5oKo5aW9JHt1c2VyLnVzZXJOYW1lfe+8jOaIkeaYr+aCqOeahOS4k+WxnumhvumXru+8jOaDs+S6huino+S4gOS4i+aCqOeahOmcgOaxguaDheWGte+8jOacn+W+heS4juaCqOi/m+S4gOatpeS6pOa1ge+8gWA7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluiwg+W6puWZqOeKtuaAgQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDnirbmgIHkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIGdldFN0YXR1cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g56Gu5L+d5q+P5pel6K6h5pWw5Zmo5piv5pyA5paw55qEDQogICAgICAgICAgICAgICAgdGhpcy5yZXNldERhaWx5Q291bnRJZk5lZWRlZCgpOw0KDQogICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzID0gew0KICAgICAgICAgICAgICAgICAgICBpc1J1bm5pbmc6IEJvb2xlYW4odGhpcy5pc1J1bm5pbmcpLA0KICAgICAgICAgICAgICAgICAgICBpc1Byb2Nlc3Npbmc6IEJvb2xlYW4odGhpcy5pc1Byb2Nlc3NpbmcpLA0KICAgICAgICAgICAgICAgICAgICB0b2RheVByb2Nlc3NlZENvdW50OiBOdW1iZXIodGhpcy50b2RheVByb2Nlc3NlZENvdW50KSB8fCAwLA0KICAgICAgICAgICAgICAgICAgICBsYXN0UmVzZXREYXRlOiB0aGlzLmxhc3RSZXNldERhdGUgfHwgbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgbmV4dENoZWNrVGltZTogdGhpcy5zY2hlZHVsZXJUaW1lciA/IERhdGUubm93KCkgKyB0aGlzLkNIRUNLX0lOVEVSVkFMIDogbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgY2hlY2tJbnRlcnZhbDogdGhpcy5DSEVDS19JTlRFUlZBTCwNCiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwRW5hYmxlZCcsIGZhbHNlKQ0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieiwg+W6puWZqO+8mueKtuaAgeS/oeaBrycsIHN0YXR1cyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHN0YXR1czsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieiwg+W6puWZqO+8muiOt+WPlueKtuaAgeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDov5Tlm57lronlhajnmoTpu5jorqTnirbmgIENCiAgICAgICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgICAgICBpc1J1bm5pbmc6IGZhbHNlLA0KICAgICAgICAgICAgICAgICAgICBpc1Byb2Nlc3Npbmc6IGZhbHNlLA0KICAgICAgICAgICAgICAgICAgICB0b2RheVByb2Nlc3NlZENv",
        "dW50OiAwLA0KICAgICAgICAgICAgICAgICAgICBsYXN0UmVzZXREYXRlOiBudWxsLA0KICAgICAgICAgICAgICAgICAgICBuZXh0Q2hlY2tUaW1lOiBudWxsLA0KICAgICAgICAgICAgICAgICAgICBjaGVja0ludGVydmFsOiB0aGlzLkNIRUNLX0lOVEVSVkFMIHx8IDMwICogNjAgKiAxMDAwLA0KICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiBmYWxzZQ0KICAgICAgICAgICAgICAgIH07DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDov73nsonnrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IEZvbGxvd1VwTWFuYWdlciA9IHsNCiAgICAgICAgLy8g5Yid5aeL5YyW54q25oCBDQogICAgICAgIGlzSW5pdGlhbGl6ZWQ6IGZhbHNlLA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliJ3lp4vljJbov73nsonnrqHnkIblmagNCiAgICAgICAgICovDQogICAgICAgIGluaXQoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzSW5pdGlhbGl6ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8muW3suWIneWni+WMlicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5Yid5aeL5YyW5Zue6K6/6buR5ZCN5Y2V566h55CG5ZmoDQogICAgICAgICAgICAgICAgRm9sbG93VXBCbGFja2xpc3RNYW5hZ2VyLmluaXQoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWIneWni+WMluiusOW9leeuoeeQhuWZqA0KICAgICAgICAgICAgICAgIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5pbml0KCk7DQoNCiAgICAgICAgICAgICAgICAvLyDlkK/liqjnlZnlrqLotYTnm5HmjqcNCiAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIuc3RhcnRMZWFkc01vbml0b3JpbmcoKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuaXNJbml0aWFsaXplZCA9IHRydWU7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muWIneWni+WMluWujOaIkCcpOw0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5Yqf6IO95bey5ZCv55So77yM6Ieq5Yqo5ZCv5Yqo6LCD5bqm5ZmoDQogICAgICAgICAgICAgICAgaWYgKENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEVuYWJsZWQnLCBmYWxzZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGFydCgpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrliJ3lp4vljJblpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAg",
        "ICAgKiDlkK/liqjov73nsonlip/og70NCiAgICAgICAgICovDQogICAgICAgIHN0YXJ0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIUNvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEVuYWJsZWQnLCBmYWxzZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8muWKn+iDveacquWQr+eUqCcpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgRm9sbG93VXBTY2hlZHVsZXIuc3RhcnQoKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5bey5ZCv5YqoJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5ZCv5Yqo5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5YGc5q2i6L+957KJ5Yqf6IO9DQogICAgICAgICAqLw0KICAgICAgICBzdG9wKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBGb2xsb3dVcFNjaGVkdWxlci5zdG9wKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW3suWBnOatoicpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muWBnOatouWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaJq+aPj+W5tua3u+WKoOa9nOWcqOeahOi/veeyieeUqOaIt++8iOaUr+aMgeiZmuaLn+a7muWKqOWujOaVtOaJq+aPj++8iQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgc2NhbkFuZEFkZFVzZXJzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5byA5aeL5a6M5pW05omr5o+P55So5oi377yI5YyF5ZCr6Jma5ouf5rua5Yqo77yJJyk7DQoNCiAgICAgICAgICAgICAgICBsZXQgc2Nhbm5lZENvdW50ID0gMDsNCiAgICAgICAgICAgICAgICBsZXQgYWRkZWRDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgY29uc3Qgc2NhbkRheXMgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBTY2FuRGF5cycsIDMpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNjYW5UaW1lID0gc2NhbkRheXMgKiAyNCAqIDYwICogNjAgKiAxMDAwOw0KICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmiafooYzlrozmlbTnmoTomZrmi5/mu5rliqjmiavmj48NCiAgICAgICAgICAgICAgICBjb25zdCBhbGxVc2VycyA9IGF3YWl0IHRoaXMucGVy",
        "Zm9ybUZ1bGxWaXJ0dWFsU2Nyb2xsU2NhbigpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muiZmuaLn+a7muWKqOaJq+aPj+WujOaIkCcsIHsNCiAgICAgICAgICAgICAgICAgICAgdG90YWxGb3VuZDogYWxsVXNlcnMubGVuZ3RoDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBsZXQgZmlsdGVyZWRCeVRpbWVDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgbGV0IGZpbHRlcmVkQnlMZWFkc0NvdW50ID0gMDsNCiAgICAgICAgICAgICAgICBsZXQgZmlsdGVyZWRCeUJsYWNrbGlzdENvdW50ID0gMDsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdXNlckluZm8gb2YgYWxsVXNlcnMpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdXNlckluZm8gfHwgIXVzZXJJbmZvLnVzZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICBzY2FubmVkQ291bnQrKzsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5Zyo5omr5o+P5pe26Ze06IyD5Zu05YaFDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaXNVc2VySW5TY2FuUmFuZ2UodXNlckluZm8sIHNjYW5EYXlzKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlcmVkQnlUaW1lQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8mueUqOaIt+i2heWHuuaXtumXtOiMg+WbtO+8jOi3s+i/hycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lVGV4dDogdXNlckluZm8udGltZVRleHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjYW5EYXlzDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeeVmeWuoui1hOeKtuaAge+8iOS9v+eUqEFQSeS8mOWFiOeahOW8guatpeW/q+mAn+ajgOafpe+8iQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaGFzTGVhZHNUYWcgPSBhd2FpdCB0aGlzLmNoZWNrVXNlckxlYWRzU3RhdHVzRmFzdEFzeW5jKHVzZXJJbmZvKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChoYXNMZWFkc1RhZykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlcmVkQnlMZWFkc0NvdW50Kys7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrnlKjmiLflt7LmnInnlZnl",
        "rqLotYTmoIfnrb7vvIzot7Pov4cnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6Xpu5HlkI3ljZUNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChCbGFja2xpc3RNYW5hZ2VyLmlzQmxhY2tsaXN0ZWQodXNlckluZm8udXNlcklkKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlcmVkQnlCbGFja2xpc3RDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya55So5oi35Zyo6buR5ZCN5Y2V5Lit77yM6Lez6L+HJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5bey5a2Y5Zyo6K6w5b2VDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ1JlY29yZCA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5nZXQodXNlckluZm8udXNlcklkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZXhpc3RpbmdSZWNvcmQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDliJvlu7rmlrDnmoTov73nsonorrDlvZUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDkvb/nlKjlrp7pmYXnmoTkvJror53ml7bpl7TkvZzkuLrpppbmrKHogZTns7vml7bpl7TvvIzogIzkuI3mmK/miavmj4/ml7bpl7QNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmaXJzdENvbnRhY3RUaW1lID0gdXNlckluZm8ubGFzdEFjdGl2aXR5VGltZSB8fCBub3c7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZWNvcmQgPSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlckluZm8udXNlcklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiB1c2VySW5mby5jb252ZXJzYXRpb25JZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RDb250YWN0OiBmaXJzdENvbnRhY3RUaW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0Rm9sbG93VXA6IG51bGwsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwQ291bnQ6IDAsDQog",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwSGlzdG9yeTogW10sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogJ3BlbmRpbmcnDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5Yib5bu65paw55So5oi36K6w5b2VJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlckluZm8udXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3RDb250YWN0VGltZTogbmV3IERhdGUoZmlyc3RDb250YWN0VGltZSkudG9Mb2NhbGVTdHJpbmcoKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZVRleHQ6IHVzZXJJbmZvLnRpbWVUZXh0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VkU2NhblRpbWU6ICF1c2VySW5mby5sYXN0QWN0aXZpdHlUaW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkQ2FjaGUuc2V0KHVzZXJJbmZvLnVzZXJJZCwgcmVjb3JkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRlZENvdW50Kys7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8mua3u+WKoOaWsOeUqOaIt+WIsOi/veeyieWIl+ihqCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJbmZvLnVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrlpITnkIbnlKjmiLflpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvPy51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkv53lrZjorrDlvZUNCiAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIuc3luY1RvU3RvcmFnZUlmTmVlZGVkKCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIu",
        "aW5mbygn6L+957KJ566h55CG5Zmo77ya55So5oi35omr5o+P5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICB0b3RhbEZvdW5kOiBhbGxVc2Vycy5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIHNjYW5uZWRDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgYWRkZWRDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgZmlsdGVyZWRCeVRpbWU6IGZpbHRlcmVkQnlUaW1lQ291bnQsDQogICAgICAgICAgICAgICAgICAgIGZpbHRlcmVkQnlMZWFkczogZmlsdGVyZWRCeUxlYWRzQ291bnQsDQogICAgICAgICAgICAgICAgICAgIGZpbHRlcmVkQnlCbGFja2xpc3Q6IGZpbHRlcmVkQnlCbGFja2xpc3RDb3VudCwNCiAgICAgICAgICAgICAgICAgICAgc2NhbkRheXMsDQogICAgICAgICAgICAgICAgICAgIHRvdGFsUmVjb3JkczogRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlLnNpemUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOaYvuekuuivpue7hueahOi/h+a7pOe7n+iuoQ0KICAgICAgICAgICAgICAgIGlmIChmaWx0ZXJlZEJ5VGltZUNvdW50ID4gMCB8fCBmaWx0ZXJlZEJ5TGVhZHNDb3VudCA+IDAgfHwgZmlsdGVyZWRCeUJsYWNrbGlzdENvdW50ID4gMCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya6L+H5ruk57uf6K6h6K+m5oOFJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGltZUZpbHRlcjogYCR7ZmlsdGVyZWRCeVRpbWVDb3VudH3kuKrnlKjmiLfotoXlh7oke3NjYW5EYXlzfeWkqeaJq+aPj+iMg+WbtGAsDQogICAgICAgICAgICAgICAgICAgICAgICBsZWFkc0ZpbHRlcjogYCR7ZmlsdGVyZWRCeUxlYWRzQ291bnR95Liq55So5oi35bey5pyJ55WZ5a6i6LWE5qCH562+YCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGJsYWNrbGlzdEZpbHRlcjogYCR7ZmlsdGVyZWRCeUJsYWNrbGlzdENvdW50feS4queUqOaIt+WcqOm7keWQjeWNleS4rWAsDQogICAgICAgICAgICAgICAgICAgICAgICBmaW5hbEFkZGVkOiBg5pyA57uI5re75YqgJHthZGRlZENvdW50feS4quaWsOeUqOaIt+WIsOi/veeyieWIl+ihqGANCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5omr5o+P55So5oi35aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5omn6KGM5a6M5pW055qE6Jma5ouf5rua5Yqo5omr5o+PIC0g5L2/55So57uP6L+H5rWL6K+V6aqM6K+B55qE5rua5Yqo5pa55rOVDQogICAgICAgICAqIEByZXR1cm5zIHtBcnJheX0g5omA5pyJ55So5oi35L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBwZXJmb3JtRnVsbFZpcnR1YWxTY3Jv",
        "bGxTY2FuKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5byA5aeL5L2/55So5LyY5YyW55qE5rua5Yqo5omr5o+P5pa55rOVJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDkvb/nlKjnu4/ov4fmtYvor5Xpqozor4HnmoTmu5rliqjmiavmj4/mlrnms5Xojrflj5bmiYDmnInkvJror53mlbDmja4NCiAgICAgICAgICAgICAgICBjb25zdCBhbGxDb252ZXJzYXRpb25zID0gYXdhaXQgdGhpcy5nZXRBbGxDb252ZXJzYXRpb25zQnlTY3JvbGxpbmcoKTsNCg0KICAgICAgICAgICAgICAgIGlmICghYWxsQ29udmVyc2F0aW9ucyB8fCBhbGxDb252ZXJzYXRpb25zLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5rua5Yqo5omr5o+P5pyq6I635Y+W5Yiw5Lu75L2V5Lya6K+d5pWw5o2u77yM5L2/55So5pmu6YCa5omr5o+PJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnBlcmZvcm1Ob3JtYWxTY2FuKCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8mua7muWKqOaJq+aPj+iOt+WPluWIsOS8muivneaVsOaNricsIHsNCiAgICAgICAgICAgICAgICAgICAgdG90YWxDb252ZXJzYXRpb25zOiBhbGxDb252ZXJzYXRpb25zLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5bCG5Lya6K+d5pWw5o2u6L2s5o2i5Li655So5oi35L+h5oGv5qC85byPDQogICAgICAgICAgICAgICAgY29uc3QgYWxsVXNlcnMgPSBbXTsNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGNvbnZlcnNhdGlvbiBvZiBhbGxDb252ZXJzYXRpb25zKSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySW5mbyA9IHRoaXMuY29udmVydENvbnZlcnNhdGlvblRvVXNlckluZm8oY29udmVyc2F0aW9uKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh1c2VySW5mbyAmJiB1c2VySW5mby51c2VySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGxVc2Vycy5wdXNoKHVzZXJJbmZvKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya6L2s5o2i5Lya6K+d5pWw5o2u5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5pY2tuYW1lOiBjb252ZXJzYXRpb24ubmlja25hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9n",
        "Z2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muS8muivneaVsOaNrui9rOaNouWujOaIkCcsIHsNCiAgICAgICAgICAgICAgICAgICAgdG90YWxVc2VyczogYWxsVXNlcnMubGVuZ3RoDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gYWxsVXNlcnM7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrkvJjljJbmu5rliqjmiavmj4/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIC8vIOmZjee6p+WIsOaZrumAmuaJq+aPjw0KICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnBlcmZvcm1Ob3JtYWxTY2FuKCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS9v+eUqOe7j+i/h+a1i+ivlemqjOivgeeahOa7muWKqOaJq+aPj+aWueazleiOt+WPluaJgOacieS8muivneaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9IOaJgOacieS8muivneaVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgZ2V0QWxsQ29udmVyc2F0aW9uc0J5U2Nyb2xsaW5nKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDmib7liLDmu5rliqjnmoTlrrnlmaggLSDmlK/mjIHlpJrnp43lj6/og73nmoTlrrnlmajpgInmi6nlmagNCiAgICAgICAgICAgICAgICBjb25zdCBwb3NzaWJsZVNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICAgICAgJy5kLWNvbGxhcHNlLWNvbnRlbnQtd3JhcHBlcjpub3QoW3N0eWxlKj0ibWF4LWhlaWdodDogMHB4Il0pIC52dWUtcmVjeWNsZS1zY3JvbGxlci5zY3JvbGxlcicsDQogICAgICAgICAgICAgICAgICAgICcuY2hhdC1saXN0LWJveCAudnVlLXJlY3ljbGUtc2Nyb2xsZXInLA0KICAgICAgICAgICAgICAgICAgICAnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyLnNjcm9sbGVyJywNCiAgICAgICAgICAgICAgICAgICAgJy52dWUtcmVjeWNsZS1zY3JvbGxlcicNCiAgICAgICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAgICAgbGV0IHNjcm9sbGVyID0gbnVsbDsNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdG9yIG9mIHBvc3NpYmxlU2VsZWN0b3JzKSB7DQogICAgICAgICAgICAgICAgICAgIHNjcm9sbGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7DQogICAgICAgICAgICAgICAgICAgIGlmIChzY3JvbGxlcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmib7liLDmu5rliqjlrrnlmagnLCB7IHNlbGVjdG9yIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoIXNjcm9sbGVyKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dl",
        "ci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5om+5LiN5Yiw5rS75Yqo55qE5rua5Yqo5a655Zmo44CC6K+356Gu5L+dIuWFqOmDqOS8muivnSLlt7LlsZXlvIDjgIInKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOS9v+eUqCBNYXAg5p2l5a2Y5YKo57uT5p6c77yM5LulIGRhdGEta2V5IOS9nOS4uuWUr+S4gOmUru+8jOmBv+WFjemHjeWkjea3u+WKoA0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnZlcnNhdGlvbnMgPSBuZXcgTWFwKCk7DQogICAgICAgICAgICAgICAgY29uc3QgU0NST0xMX0RFTEFZX01TID0gMzAwOyAvLyDmr4/mrKHmu5rliqjlkI7nrYnlvoUzMDDmr6vnp5LorqnmlrDlhoXlrrnmuLLmn5MNCg0KICAgICAgICAgICAgICAgIC8vIOaZuuiDveaKk+WPluWPr+ingeWFg+e0oOWHveaVsCAtIOWinuW8uuWFg+e0oOWPr+ingeaAp+ajgOa1iw0KICAgICAgICAgICAgICAgIGNvbnN0IHNjcmFwZVZpc2libGVJdGVtc1NtYXJ0ID0gKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBpdGVtcyA9IHNjcm9sbGVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy5zeC1jb250YWN0LWl0ZW0nKTsNCiAgICAgICAgICAgICAgICAgICAgbGV0IHZhbGlkSXRlbXNDb3VudCA9IDA7DQoNCiAgICAgICAgICAgICAgICAgICAgaXRlbXMuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGl0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLWtleScpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGtleSAmJiAhY29udmVyc2F0aW9ucy5oYXMoa2V5KSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuWcqERPTeWbnuaUtueKtuaAgQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1WaWV3ID0gaXRlbS5jbG9zZXN0KCcudnVlLXJlY3ljbGUtc2Nyb2xsZXJfX2l0ZW0tdmlldycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtVmlldykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm0gPSBpdGVtVmlldy5zdHlsZS50cmFuc2Zvcm07DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0cmFuc2Zvcm0gJiYgdHJhbnNmb3JtLmluY2x1ZGVzKCd0cmFuc2xhdGVZKC05OTk5cHgpJykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya6Lez6L+HRE9N5Zue5pS254q25oCB55qE5YWD57SgJywgeyBrZXk6IGtleS5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47IC8vIOi3s+i/h+iiq+WbnuaUtueahOWFg+e0oA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5YWD57Sg5piv5ZCm55yf5q2j5Y+v6KeBDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVjdCA9IGl0ZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29udGFpbmVyUmVjdCA9IHNjcm9sbGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IHJlY3QudG9wID49IGNvbnRhaW5lclJlY3QudG9wIC0gNTAgJiYgLy8g5YWB6K645LiA5Lqb5a655beuDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY3QuYm90dG9tIDw9IGNvbnRhaW5lclJlY3QuYm90dG9tICsgNTAgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjdC5oZWlnaHQgPiAwOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzVmlzaWJsZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb252ZXJzYXRpb25EYXRhID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmlja25hbWU6IGl0ZW0ucXVlcnlTZWxlY3RvcignLm5pY2stbmFtZScpPy50ZXh0Q29udGVudC50cmltKCkgfHwgJycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0TWVzc2FnZTogaXRlbS5xdWVyeVNlbGVjdG9yKCcuY29udGVudCcpPy50ZXh0Q29udGVudC50cmltKCkgfHwgJycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lOiBpdGVtLnF1ZXJ5U2VsZWN0b3IoJy50aW1lJyk/LnRleHRDb250ZW50LnRyaW0oKSB8fCAnJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhZzogaXRlbS5xdWVyeVNlbGVjdG9yKCcubGVhZHMtdGFnIC5kLXRhZy1jb250ZW50Jyk/LnRleHRDb250ZW50LnRyaW0oKSB8fCBudWxsLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNVbnJlYWQ6ICEhaXRlbS5xdWVyeVNlbGVjdG9yKCcuZC1iYWRnZS1kb3QnKSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFLZXk6IGtleQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25zLnNldChrZXksIGNvbnZlcnNhdGlvbkRhdGEpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxpZEl0ZW1zQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zyhg6L+957KJ566h55CG5Zmo77ya5pys5qyh5oqT5Y+W5YiwICR7dmFsaWRJdGVtc0NvdW50fSDk",
        "uKrmnInmlYjkvJror53poblgKTsNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgLy8g6K6w5b2V5Y6f5aeL5rua5Yqo5L2N572uDQogICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxTY3JvbGxUb3AgPSBzY3JvbGxlci5zY3JvbGxUb3A7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrorrDlvZXljp/lp4vmu5rliqjkvY3nva4nLCB7IG9yaWdpbmFsU2Nyb2xsVG9wIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5YWI5Zue5Yiw6aG26YOo6YeN5paw5byA5aeL5omr5o+PDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW8gOWni+aZuuiDvea7muWKqOaJq+aPj++8jOWFiOWbnuWIsOmhtumDqC4uLicpOw0KICAgICAgICAgICAgICAgIHNjcm9sbGVyLnNjcm9sbFRvcCA9IDA7DQogICAgICAgICAgICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDMwMCkpOw0KDQogICAgICAgICAgICAgICAgLy8g5LuO6aG26YOo5byA5aeL5oqT5Y+WDQogICAgICAgICAgICAgICAgc2NyYXBlVmlzaWJsZUl0ZW1zU21hcnQoKTsNCg0KICAgICAgICAgICAgICAgIC8vIC0tLSDmmbrog73mu5rliqjkuLvlvqrnjq8gLS0tDQogICAgICAgICAgICAgICAgbGV0IGxhc3RTY3JvbGxUb3AgPSAtMTsNCiAgICAgICAgICAgICAgICBjb25zdCBNQVhfU0NST0xMX0FUVEVNUFRTID0gMTAwOyAvLyDmnIDlpKfmu5rliqjmrKHmlbDvvIzpgb/lhY3ml6DpmZDmu5rliqgNCiAgICAgICAgICAgICAgICBsZXQgc2Nyb2xsQXR0ZW1wdHMgPSAwOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW8gOWni+aZuuiDvea7muWKqOaJq+aPj+S4u+W+queOry4uLicpOw0KICAgICAgICAgICAgICAgIHdoaWxlIChzY3JvbGxlci5zY3JvbGxUb3AgIT09IGxhc3RTY3JvbGxUb3AgJiYgc2Nyb2xsQXR0ZW1wdHMgPCBNQVhfU0NST0xMX0FUVEVNUFRTKSB7DQogICAgICAgICAgICAgICAgICAgIGxhc3RTY3JvbGxUb3AgPSBzY3JvbGxlci5zY3JvbGxUb3A7DQogICAgICAgICAgICAgICAgICAgIHNjcm9sbEF0dGVtcHRzKys7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5ZCR5LiL5rua5Yqo5LiA5Liq5bGP5bmV55qE6auY5bqmDQogICAgICAgICAgICAgICAgICAgIHNjcm9sbGVyLnNjcm9sbFRvcCArPSBzY3JvbGxlci5jbGllbnRIZWlnaHQ7DQoNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDov73nsonnrqHnkIblmajvvJrmmbrog73mu5rliqjkuK0uLi4gKCR7c2Nyb2xsQXR0ZW1wdHN9LyR7TUFYX1NDUk9MTF9BVFRFTVBUU30pIOW3suWPkeeOsCAke2NvbnZlcnNhdGlvbnMuc2l6ZX0g5p2h5LiN6YeN5aSN55qE5Lya6K+d44CCYCk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g562J5b6F5paw5YaF5a655Yqg6L29DQogICAgICAgICAgICAgICAgICAgIGF3YWl0",
        "IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCBTQ1JPTExfREVMQVlfTVMpKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDmmbrog73mipPlj5blvZPliY3lsY/luZXnmoTlhoXlrrkNCiAgICAgICAgICAgICAgICAgICAgc2NyYXBlVmlzaWJsZUl0ZW1zU21hcnQoKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblt7LliLDovr7lupXpg6gNCiAgICAgICAgICAgICAgICAgICAgaWYgKHNjcm9sbGVyLnNjcm9sbFRvcCArIHNjcm9sbGVyLmNsaWVudEhlaWdodCA+PSBzY3JvbGxlci5zY3JvbGxIZWlnaHQgLSAxMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlt7LliLDovr7liJfooajlupXpg6gnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOacgOWQjuaKk+WPluS4gOasoQ0KICAgICAgICAgICAgICAgICAgICAgICAgc2NyYXBlVmlzaWJsZUl0ZW1zU21hcnQoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c6L6+5Yiw5pyA5aSn5rua5Yqo5qyh5pWw6ZmQ5Yi2DQogICAgICAgICAgICAgICAgaWYgKHNjcm9sbEF0dGVtcHRzID49IE1BWF9TQ1JPTExfQVRURU1QVFMpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oYOi/veeyieeuoeeQhuWZqO+8mui+vuWIsOacgOWkp+a7muWKqOasoeaVsOmZkOWItiAoJHtNQVhfU0NST0xMX0FUVEVNUFRTfSnvvIzlgZzmraLmiavmj49gKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDovazmjaLkuLrmlbDnu4Tlubbov5Tlm54NCiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHRzID0gQXJyYXkuZnJvbShjb252ZXJzYXRpb25zLnZhbHVlcygpKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5pm66IO95rua5Yqo5omr5o+P5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICB0b3RhbENvbnZlcnNhdGlvbnM6IHJlc3VsdHMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICB1bmlxdWVLZXlzOiBjb252ZXJzYXRpb25zLnNpemUsDQogICAgICAgICAgICAgICAgICAgIHNjcm9sbEF0dGVtcHRzLA0KICAgICAgICAgICAgICAgICAgICBtYXhTY3JvbGxBdHRlbXB0czogTUFYX1NDUk9MTF9BVFRFTVBUUw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5Zyo5o6n5Yi25Y+w6L6T5Ye65omr5o+P57uT5p6c6KGo5qC8DQogICAgICAgICAgICAgICAgaWYgKHJlc3VsdHMubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLnRhYmxlKHJlc3VsdHMuc2xpY2UoMCwgMTApKTsgLy8g5Y+q5pi+56S65YmNMTDmnaHvvIzpgb/lhY3mjqfliLblj7Dov4fkuo7mi6XmjKQNCiAgICAgICAgICAgICAgICAgICAg",
        "aWYgKHJlc3VsdHMubGVuZ3RoID4gMTApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKGDov73nsonnrqHnkIblmajvvJrov5jmnIkgJHtyZXN1bHRzLmxlbmd0aCAtIDEwfSDmnaHkvJror53mlbDmja7mnKrlnKjooajmoLzkuK3mmL7npLpgKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaJq+aPj+WujOavleWQju+8jOWwhua7muWKqOadoea7muWbnumhtumDqO+8jOaWueS+v+WkhOeQhuaWsOa2iOaBrw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrmiavmj4/lrozmiJDvvIzmraPlnKjmu5rliqjlm57liLDliJfooajpobbpg6guLi4nKTsNCiAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgPSAwOw0KDQogICAgICAgICAgICAgICAgLy8g562J5b6F5rua5Yqo5a6M5oiQDQogICAgICAgICAgICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDMwMCkpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlt7Llm57liLDliJfooajpobbpg6jvvIzlh4blpIflpITnkIbmlrDmtojmga8nKTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHRzOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5rua5Yqo5omr5o+P6L+H56iL5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gW107DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWwhuS8muivneaVsOaNrui9rOaNouS4uueUqOaIt+S/oeaBr+agvOW8jw0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gY29udmVyc2F0aW9uIOS8muivneaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSDnlKjmiLfkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIGNvbnZlcnRDb252ZXJzYXRpb25Ub1VzZXJJbmZvKGNvbnZlcnNhdGlvbikgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDnlJ/miJDnlKjmiLdJRO+8iOS9v+eUqGRhdGFLZXnkvZzkuLpjb252ZXJzYXRpb25JZO+8iQ0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnZlcnNhdGlvbklkID0gY29udmVyc2F0aW9uLmRhdGFLZXk7DQogICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gY29udmVyc2F0aW9uSWQ7IC8vIOWcqOWwj+e6ouS5puS4re+8jGNvbnZlcnNhdGlvbklk6YCa5bi45bCx5pivdXNlcklkDQoNCiAgICAgICAgICAgICAgICAvLyDop6PmnpDml7bpl7Tkv6Hmga8NCiAgICAgICAgICAgICAgICBjb25zdCBsYXN0QWN0aXZpdHlUaW1lID0gdGhpcy5wYXJzZVRpbWVUZXh0KGNvbnZlcnNhdGlvbi50aW1lKTsNCg0KICAgICAgICAgICAgICAgIHJldHVy",
        "biB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLA0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogY29udmVyc2F0aW9uLm5pY2tuYW1lIHx8ICfmnKrnn6XnlKjmiLcnLA0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQsDQogICAgICAgICAgICAgICAgICAgIGxhc3RNZXNzYWdlOiBjb252ZXJzYXRpb24ubGFzdE1lc3NhZ2UgfHwgJycsDQogICAgICAgICAgICAgICAgICAgIHRpbWVUZXh0OiBjb252ZXJzYXRpb24udGltZSB8fCAnJywNCiAgICAgICAgICAgICAgICAgICAgbGFzdEFjdGl2aXR5VGltZTogbGFzdEFjdGl2aXR5VGltZSwNCiAgICAgICAgICAgICAgICAgICAgaGFzTGVhZHNUYWc6ICEhY29udmVyc2F0aW9uLnRhZywgLy8g5piv5ZCm5pyJ55WZ5a6i6LWE5qCH562+DQogICAgICAgICAgICAgICAgICAgIGlzVW5yZWFkOiBjb252ZXJzYXRpb24uaXNVbnJlYWQgfHwgZmFsc2UNCiAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8mui9rOaNouS8muivneaVsOaNruWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uLA0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDop6PmnpDml7bpl7TmlofmnKzkuLrml7bpl7TmiLMNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRpbWVUZXh0IOaXtumXtOaWh+acrO+8iOWmgiAiMjA6NDE6MTIiIOaIliAiMDcvMTEi77yJDQogICAgICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IOaXtumXtOaIsw0KICAgICAgICAgKi8NCiAgICAgICAgcGFyc2VUaW1lVGV4dCh0aW1lVGV4dCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIXRpbWVUZXh0KSByZXR1cm4gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDlpITnkIbku4rlpKnnmoTml7bpl7TmoLzlvI/vvJpISDpNTTpTUw0KICAgICAgICAgICAgICAgIGlmICh0aW1lVGV4dC5pbmNsdWRlcygnOicpKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVQYXJ0cyA9IHRpbWVUZXh0LnNwbGl0KCc6Jyk7DQogICAgICAgICAgICAgICAgICAgIGlmICh0aW1lUGFydHMubGVuZ3RoID49IDIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhvdXJzID0gcGFyc2VJbnQodGltZVBhcnRzWzBdLCAxMCk7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtaW51dGVzID0gcGFyc2VJbnQodGltZVBhcnRzWzFdLCAxMCk7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBz",
        "ZWNvbmRzID0gdGltZVBhcnRzLmxlbmd0aCA+IDIgPyBwYXJzZUludCh0aW1lUGFydHNbMl0sIDEwKSA6IDA7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvZGF5LnNldEhvdXJzKGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzLCAwKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5pe26Ze05piv5pyq5p2l5pe26Ze077yM6K+05piO5piv5pio5aSp55qEDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodG9kYXkgPiBub3cpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RheS5zZXREYXRlKHRvZGF5LmdldERhdGUoKSAtIDEpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdG9kYXkuZ2V0VGltZSgpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5aSE55CG5pel5pyf5qC85byP77yaTU0vREQNCiAgICAgICAgICAgICAgICBpZiAodGltZVRleHQuaW5jbHVkZXMoJy8nKSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRlUGFydHMgPSB0aW1lVGV4dC5zcGxpdCgnLycpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoZGF0ZVBhcnRzLmxlbmd0aCA9PT0gMikgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbW9udGggPSBwYXJzZUludChkYXRlUGFydHNbMF0sIDEwKSAtIDE7IC8vIOaciOS7veS7jjDlvIDlp4sNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRheSA9IHBhcnNlSW50KGRhdGVQYXJ0c1sxXSwgMTApOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIG1vbnRoLCBkYXkpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzml6XmnJ/mmK/mnKrmnaXml6XmnJ/vvIzor7TmmI7mmK/ljrvlubTnmoQNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRlID4gbm93KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZS5zZXRGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCkgLSAxKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGUuZ2V0VGltZSgpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5peg5rOV6Kej5p6Q77yM6L+U5Zue5b2T5YmN5pe26Ze0DQogICAgICAgICAgICAgICAgcmV0dXJuIERhdGUubm93KCk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya6Kej5p6Q5pe26Ze05paH5pys5aSx6LSlJywgeyB0aW1lVGV4dCwgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAg",
        "ICAgcmV0dXJuIERhdGUubm93KCk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaJq+aPj+W9k+WJjeWPr+ingeeahOeUqOaIt++8iOS/neeVmeWOn+acieaWueazleS9nOS4uumZjee6p+aWueahiO+8iQ0KICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9IOW9k+WJjeWPr+ingeeahOeUqOaIt+S/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgc2NhbkN1cnJlbnRWaXNpYmxlVXNlcnMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJzID0gW107DQogICAgICAgICAgICAgICAgY29uc3QgY29udGFjdEVsZW1lbnRzID0gRWxlbWVudE1hbmFnZXIuZ2V0VmlzaWJsZUNvbnRhY3RJdGVtcygpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmiavmj4/lvZPliY3lj6/op4HnlKjmiLcnLCB7DQogICAgICAgICAgICAgICAgICAgIGVsZW1lbnRDb3VudDogY29udGFjdEVsZW1lbnRzLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGNvbnRhY3RFbGVtZW50cykgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5YWD57Sg5piv5ZCm55yf5q2j5Y+v6KeB77yI5LiN5Zyo5Zue5pS25L2N572u77yJLSDkvb/nlKjmm7Tlrr3mnb7nmoTmo4DmtYsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5pc0VsZW1lbnRUcnVseVZpc2libGUoZWxlbWVudCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlsJ3or5Xmv4DmtLvlhYPntKDlkI7lho3mrKHmo4Dmn6UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBWaXJ0dWFsU2Nyb2xsTWFuYWdlci5lbnN1cmVFbGVtZW50VmlzaWJsZShlbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMjAwKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLmlzRWxlbWVudFRydWx5VmlzaWJsZShlbGVtZW50KSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWFg+e0oOa/gOa0u+Wksei0pe+8jOi3s+i/hycsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0K",
        "ICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlckluZm8gPSB0aGlzLmV4dHJhY3RVc2VySW5mbyhlbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh1c2VySW5mbyAmJiB1c2VySW5mby51c2VySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2Vycy5wdXNoKHVzZXJJbmZvKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muaPkOWPlueUqOaIt+S/oeaBr+aIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lVGV4dDogdXNlckluZm8udGltZVRleHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3RBY3Rpdml0eTogdXNlckluZm8ubGFzdEFjdGl2aXR5VGltZSA/IG5ldyBEYXRlKHVzZXJJbmZvLmxhc3RBY3Rpdml0eVRpbWUpLnRvTG9jYWxlU3RyaW5nKCkgOiAnTi9BJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmj5Dlj5bnlKjmiLfkv6Hmga/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlvZPliY3lj6/op4HnlKjmiLfmiavmj4/lrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgIGZvdW5kVXNlcnM6IHVzZXJzLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHVzZXJzOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaJq+aPj+W9k+WJjeWPr+ingeeUqOaIt+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XlhYPntKDmmK/lkKbnnJ/mraPlj6/op4HvvIjkuI3lnKjomZrmi5/mu5rliqjlm57mlLbkvY3nva7vvIkNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50DQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgaXNFbGVtZW50VHJ1bHlWaXNpYmxlKGVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5YWD57Sg5piv5ZCm5a2Y5ZyoDQogICAgICAgICAgICAgICAgaWYgKCFlbGVtZW50IHx8ICFlbGVtZW50LnBhcmVudEVsZW1l",
        "bnQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuiiq+enu+WKqOWIsOWbnuaUtuS9jee9rg0KICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybSA9IGVsZW1lbnQuc3R5bGUudHJhbnNmb3JtOw0KICAgICAgICAgICAgICAgIGlmICh0cmFuc2Zvcm0gJiYgdHJhbnNmb3JtLmluY2x1ZGVzKCd0cmFuc2xhdGVZKC05OTk5cHgpJykpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuWcqOinhuWPo+WGhQ0KICAgICAgICAgICAgICAgIGNvbnN0IHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lclJlY3QgPSBlbGVtZW50LmNsb3Nlc3QoJy52dWUtcmVjeWNsZS1zY3JvbGxlcicpPy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCg0KICAgICAgICAgICAgICAgIGlmIChjb250YWluZXJSZWN0KSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiByZWN0LnRvcCA+PSBjb250YWluZXJSZWN0LnRvcCAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjdC5ib3R0b20gPD0gY29udGFpbmVyUmVjdC5ib3R0b20gJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY3QuaGVpZ2h0ID4gMDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gcmVjdC5oZWlnaHQgPiAwICYmIHJlY3Qud2lkdGggPiAwOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaJp+ihjOaZrumAmuaJq+aPj++8iOmZjee6p+aWueahiO+8iQ0KICAgICAgICAgKiBAcmV0dXJucyB7QXJyYXl9IOeUqOaIt+S/oeaBr+WIl+ihqA0KICAgICAgICAgKi8NCiAgICAgICAgcGVyZm9ybU5vcm1hbFNjYW4oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJzID0gW107DQogICAgICAgICAgICAgICAgY29uc3QgY29udGFjdEVsZW1lbnRzID0gRWxlbWVudE1hbmFnZXIuZ2V0VmlzaWJsZUNvbnRhY3RJdGVtcygpOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGNvbnRhY3RFbGVtZW50cykgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFFbGVtZW50TWFuYWdlci5pc0VsZW1lbnRWaXNpYmxlKGVsZW1lbnQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJbmZvID0gdGhpcy5leHRyYWN0VXNlckluZm8o",
        "ZWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodXNlckluZm8gJiYgdXNlckluZm8udXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcnMucHVzaCh1c2VySW5mbyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muaZrumAmuaJq+aPj+aPkOWPlueUqOaIt+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muaZrumAmuaJq+aPj+WujOaIkCcsIHsgdXNlckNvdW50OiB1c2Vycy5sZW5ndGggfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHVzZXJzOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaZrumAmuaJq+aPj+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIFtdOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlv6vpgJ/mo4Dmn6XnlKjmiLfnmoTnlZnlrqLotYTnirbmgIHvvIjkuI3liIfmjaLkvJror53vvIkNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHVzZXJJbmZvIOeUqOaIt+S/oeaBrw0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5pyJ55WZ5a6i6LWE5qCH562+DQogICAgICAgICAqLw0KICAgICAgICBjaGVja1VzZXJMZWFkc1N0YXR1c0Zhc3QodXNlckluZm8pIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g8J+UpyBCVUfkv67lpI3vvJrmo4Dmn6Xlv4XopoHnmoTlj4LmlbANCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJbmZvIHx8ICF1c2VySW5mby5jb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5b+r6YCf5qOA5p+l55WZ5a6i6LWE54q25oCB5aSx6LSlIC0g57y65bCR5b+F6KaB5Y+C5pWwJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvPy51c2VyTmFtZSB8fCAn5pyq55+l55So5oi3JywNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0NvbnZlcnNhdGlvbklkOiAhIXVzZXJJbmZvPy5jb252ZXJzYXRpb25JZA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTHvvJrlpoLmnpznlKjmiLfkv6Hmga/kuK3lt7Lnu4/ljIXlkKvnlZnlrqLotYTmoIfnrb7kv6Hmga/vvIznm7TmjqXkvb/nlKgNCiAgICAgICAgICAg",
        "ICAgICBpZiAodXNlckluZm8uaGFzTGVhZHNUYWcgIT09IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muS7jueUqOaIt+S/oeaBr+S4reiOt+WPlueVmeWuoui1hOeKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0xlYWRzVGFnOiB1c2VySW5mby5oYXNMZWFkc1RhZw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVzZXJJbmZvLmhhc0xlYWRzVGFnOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTLvvJrkvJjlhYjmo4Dmn6VBUEnnvJPlrZjkuK3nmoTnlZnlrqLotYTnirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBjYWNoZWRTdGF0dXMgPSBMZWFkc1N0YXR1c01hbmFnZXIuc3RhdHVzQ2FjaGUuZ2V0KHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICBpZiAoY2FjaGVkU3RhdHVzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4cGlyZVRpbWUgPSBMZWFkc1N0YXR1c01hbmFnZXIuZ2V0Q2FjaGVFeHBpcmVUaW1lKGNhY2hlZFN0YXR1cy5zb3VyY2UpOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOajgOafpee8k+WtmOaYr+WQpuacieaViA0KICAgICAgICAgICAgICAgICAgICBpZiAoZXhwaXJlVGltZSA+IDAgJiYgKG5vdyAtIGNhY2hlZFN0YXR1cy5sYXN0Q2hlY2tlZCkgPCBleHBpcmVUaW1lKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muS9v+eUqOacieaViOe8k+WtmOS4reeahOeVmeWuoui1hOeKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzTGVhZHNUYWc6IGNhY2hlZFN0YXR1cy5oYXNMZWFkc1RhZywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2U6IGNhY2hlZFN0YXR1cy5zb3VyY2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVBZ2U6IGAke01hdGgucm91bmQoKG5vdyAtIGNhY2hlZFN0YXR1cy5sYXN0Q2hlY2tlZCkgLyAxMDAwKX1zYA0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGVkU3RhdHVzLmhhc0xlYWRzVGFnOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVM++8muWwneivleS7juW9k+WJjeWPr+ingeeahOS8muivneWFg+e0oOS4reajgOafpeeVmeWuoui1hOeKtuaAgQ0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhY3RFbGVtZW50cyA9IEVsZW1l",
        "bnRNYW5hZ2VyLmdldFZpc2libGVDb250YWN0SXRlbXMoKTsNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgY29udGFjdEVsZW1lbnRzKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LmRhdGFzZXQ/LmtleSA9PT0gdXNlckluZm8uY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuecn+ato+WPr+ingQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNFbGVtZW50VHJ1bHlWaXNpYmxlKGVsZW1lbnQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5L2/55So5ZCM5q2l54mI5pys77yM6YG/5YWN5Zyo5b+r6YCf5qOA5p+l5Lit5L2/55So5byC5q2lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaGFzTGVhZHMgPSBMZWFkc1N0YXR1c01hbmFnZXIuZ2V0TGVhZHNTdGF0dXNTeW5jKHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkLCBlbGVtZW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGFzTGVhZHMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlnKjlj6/op4HlhYPntKDkuK3lj5HnjrDnlZnlrqLotYTmoIfnrb4nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlv6vpgJ/mo4Dmn6XmnKrlj5HnjrDnlZnlrqLotYTmoIfnrb4nLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkID8gdXNlckluZm8uY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nIDogJ04vQScNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrlv6vpgJ/mo4Dmn6XnlZnlrqLotYTnirbmgIHlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mbz8udXNlck5hbWUgfHwgJ+acquefpeeUqOaItycsDQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlDQogICAgICAgICAgICAg",
        "ICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyDlh7rplJnml7bpu5jorqTorqTkuLrmsqHmnInnlZnlrqLotYQNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5byC5q2l5b+r6YCf5qOA5p+l55So5oi355qE55WZ5a6i6LWE54q25oCB77yI5pSv5oyBQVBJ5LyY5YWI77yJDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSB1c2VySW5mbyDnlKjmiLfkv6Hmga8NCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59IOaYr+WQpuacieeVmeWuoui1hOagh+etvg0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgY2hlY2tVc2VyTGVhZHNTdGF0dXNGYXN0QXN5bmModXNlckluZm8pIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g8J+UpyBCVUfkv67lpI3vvJrmo4Dmn6Xlv4XopoHnmoTlj4LmlbANCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJbmZvIHx8ICF1c2VySW5mby5jb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5byC5q2l5b+r6YCf5qOA5p+l55WZ5a6i6LWE54q25oCB5aSx6LSlIC0g57y65bCR5b+F6KaB5Y+C5pWwJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvPy51c2VyTmFtZSB8fCAn5pyq55+l55So5oi3JywNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0NvbnZlcnNhdGlvbklkOiAhIXVzZXJJbmZvPy5jb252ZXJzYXRpb25JZA0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTHvvJrlpoLmnpznlKjmiLfkv6Hmga/kuK3lt7Lnu4/ljIXlkKvnlZnlrqLotYTmoIfnrb7kv6Hmga/vvIznm7TmjqXkvb/nlKgNCiAgICAgICAgICAgICAgICBpZiAodXNlckluZm8uaGFzTGVhZHNUYWcgIT09IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muS7jueUqOaIt+S/oeaBr+S4reiOt+WPlueVmeWuoui1hOeKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0xlYWRzVGFnOiB1c2VySW5mby5oYXNMZWFkc1RhZw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVzZXJJbmZvLmhhc0xlYWRzVGFnOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaWueazlTLvvJrkvJjlhYjlsJ3or5VBUEnmo4DmtYvvvIjlpoLmnpzlkK/nlKjvvIkNCiAgICAgICAgICAgICAgICBpZiAoQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwQXBpTGVhZHNDaGVjaycsIHRydWUpKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHVz",
        "ZXJJZCA9IExlYWRzQVBJRGV0ZWN0b3IuZXh0cmFjdFVzZXJJZEZyb21Db252ZXJzYXRpb24odXNlckluZm8uY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgICAgICBpZiAodXNlcklkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFwaVJlc3VsdCA9IGF3YWl0IExlYWRzQVBJRGV0ZWN0b3IuZGV0ZWN0TGVhZHNTdGF0dXNWaWFBUEkodXNlcklkLCBmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFwaVJlc3VsdCAhPT0gbnVsbCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmm7TmlrDnvJPlrZjvvIhBUEnmlbDmja7vvIkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTGVhZHNTdGF0dXNNYW5hZ2VyLnVwZGF0ZUxlYWRzU3RhdHVzKHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkLCBhcGlSZXN1bHQuaGFzTGVhZHMsICdhcGknKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muW8guatpeW/q+mAn0FQSeajgOa1i+WujOaIkCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc0xlYWRzOiBhcGlSZXN1bHQuaGFzTGVhZHMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2U6ICdhcGknDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhcGlSZXN1bHQuaGFzTGVhZHM7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5byC5q2l5b+r6YCfQVBJ5qOA5rWL5aSx6LSl77yM6ZmN57qn5Yiw57yT5a2YL0RPTeajgOa1iycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVM++8muajgOafpee8k+WtmOS4reeahOeVmeWuoui1hOeKtuaAgQ0KICAgICAgICAgICAgICAgIGNvbnN0IGNhY2hlZFN0YXR1cyA9IExlYWRzU3RhdHVzTWFuYWdlci5zdGF0dXNDYWNoZS5nZXQodXNlckluZm8uY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgIGlmIChjYWNoZWRTdGF0dXMpIHsNCiAgICAg",
        "ICAgICAgICAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXhwaXJlVGltZSA9IExlYWRzU3RhdHVzTWFuYWdlci5nZXRDYWNoZUV4cGlyZVRpbWUoY2FjaGVkU3RhdHVzLnNvdXJjZSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l57yT5a2Y5piv5ZCm5pyJ5pWIDQogICAgICAgICAgICAgICAgICAgIGlmIChleHBpcmVUaW1lID4gMCAmJiAobm93IC0gY2FjaGVkU3RhdHVzLmxhc3RDaGVja2VkKSA8IGV4cGlyZVRpbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5L2/55So5pyJ5pWI57yT5a2Y5Lit55qE55WZ5a6i6LWE54q25oCBJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNMZWFkc1RhZzogY2FjaGVkU3RhdHVzLmhhc0xlYWRzVGFnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZTogY2FjaGVkU3RhdHVzLnNvdXJjZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWNoZUFnZTogYCR7TWF0aC5yb3VuZCgobm93IC0gY2FjaGVkU3RhdHVzLmxhc3RDaGVja2VkKSAvIDEwMDApfXNgDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZWRTdGF0dXMuaGFzTGVhZHNUYWc7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5U077ya5bCd6K+V5LuO5b2T5YmN5Y+v6KeB55qE5Lya6K+d5YWD57Sg5Lit5qOA5p+l55WZ5a6i6LWE54q25oCBDQogICAgICAgICAgICAgICAgY29uc3QgY29udGFjdEVsZW1lbnRzID0gRWxlbWVudE1hbmFnZXIuZ2V0VmlzaWJsZUNvbnRhY3RJdGVtcygpOw0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZWxlbWVudCBvZiBjb250YWN0RWxlbWVudHMpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuZGF0YXNldD8ua2V5ID09PSB1c2VySW5mby5jb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5YWD57Sg5piv5ZCm55yf5q2j5Y+v6KeBDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5pc0VsZW1lbnRUcnVseVZpc2libGUoZWxlbWVudCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDkvb/nlKjlkIzmraXniYjmnKzvvIzpgb/lhY3lnKjlv6vpgJ/mo4Dmn6XkuK3kvb/nlKjlvILmraUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBoYXNMZWFkcyA9IExlYWRzU3RhdHVzTWFuYWdlci5nZXRMZWFkc1N0YXR1c1N5bmModXNlckluZm8uY29udmVyc2F0aW9uSWQsIGVsZW1lbnQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChoYXNMZWFkcykgew0KICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWcqOWPr+ingeWFg+e0oOS4reWPkeeOsOeVmeWuoui1hOagh+etvicsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muW8guatpeW/q+mAn+ajgOafpeacquWPkeeOsOeVmeWuoui1hOagh+etvicsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogdXNlckluZm8uY29udmVyc2F0aW9uSWQgPyB1c2VySW5mby5jb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicgOiAnTi9BJw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muW8guatpeW/q+mAn+ajgOafpeeVmeWuoui1hOeKtuaAgeWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvPy51c2VyTmFtZSB8fCAn5pyq55+l55So5oi3JywNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7IC8vIOWHuumUmeaXtum7mOiupOiupOS4uuayoeacieeVmeWuoui1hA0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XnlKjmiLfnmoTnlZnlrqLotYTnirbmgIHvvIjmt7Hluqbmo4Dmn6XvvIzmlK/mjIFBUEnkvJjlhYjvvIkNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHVzZXJJbmZvIOeUqOaIt+S/oeaBrw0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0g5piv5ZCm5pyJ55WZ5a6i6LWE5qCH562+DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBjaGVja1VzZXJMZWFkc1N0YXR1cyh1c2VySW5mbykgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDwn5SnIEJVR+S/ruWkje+8muajgOafpeW/heimgeeahOWPguaVsA0KICAgICAgICAgICAgICAgIGlmICghdXNlckluZm8gfHwgIXVzZXJJbmZvLmNvbnZlcnNhdGlvbklkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonn",
        "rqHnkIblmajvvJrmo4Dmn6XnlZnlrqLotYTnirbmgIHlpLHotKUgLSDnvLrlsJHlv4XopoHlj4LmlbAnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8/LnVzZXJOYW1lIHx8ICfmnKrnn6XnlKjmiLcnLA0KICAgICAgICAgICAgICAgICAgICAgICAgaGFzQ29udmVyc2F0aW9uSWQ6ICEhdXNlckluZm8/LmNvbnZlcnNhdGlvbklkDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMe+8muS8mOWFiOWwneivlUFQSeajgOa1i++8iOWmguaenOWQr+eUqO+8iQ0KICAgICAgICAgICAgICAgIGlmIChDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBBcGlMZWFkc0NoZWNrJywgdHJ1ZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gTGVhZHNBUElEZXRlY3Rvci5leHRyYWN0VXNlcklkRnJvbUNvbnZlcnNhdGlvbih1c2VySW5mby5jb252ZXJzYXRpb25JZCk7DQogICAgICAgICAgICAgICAgICAgIGlmICh1c2VySWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlsJ3or5VBUEnmo4DmtYvnlZnlrqLotYTnirbmgIEnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VySW5mby51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhcGlSZXN1bHQgPSBhd2FpdCBMZWFkc0FQSURldGVjdG9yLmRldGVjdExlYWRzU3RhdHVzVmlhQVBJKHVzZXJJZCwgZmFsc2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcGlSZXN1bHQgIT09IG51bGwpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5pu05paw57yT5a2Y77yIQVBJ5pWw5o2u77yJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExlYWRzU3RhdHVzTWFuYWdlci51cGRhdGVMZWFkc1N0YXR1cyh1c2VySW5mby5jb252ZXJzYXRpb25JZCwgYXBpUmVzdWx0Lmhhc0xlYWRzLCAnYXBpJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJpBUEnmo4DmtYvlrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNMZWFkczogYXBpUmVzdWx0Lmhhc0xlYWRzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlOiAnYXBpJw0KICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXBpUmVzdWx0Lmhhc0xlYWRzOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8mkFQSeajgOa1i+Wksei0pe+8jOmZjee6p+WIsERPTeajgOa1iycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVMu+8muWwneivleS7juW9k+WJjeWPr+ingeeahOS8muivneWFg+e0oOS4reajgOafpeeVmeWuoui1hOeKtuaAgQ0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhY3RFbGVtZW50cyA9IEVsZW1lbnRNYW5hZ2VyLmdldFZpc2libGVDb250YWN0SXRlbXMoKTsNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgY29udGFjdEVsZW1lbnRzKSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LmRhdGFzZXQ/LmtleSA9PT0gdXNlckluZm8uY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOS9v+eUqOW8guatpeeJiOacrOi/m+ihjOWujOaVtOajgOa1iw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaGFzTGVhZHMgPSBhd2FpdCBMZWFkc1N0YXR1c01hbmFnZXIuZ2V0TGVhZHNTdGF0dXModXNlckluZm8uY29udmVyc2F0aW9uSWQsIGVsZW1lbnQsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChoYXNMZWFkcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5Zyo5Y+v6KeB5YWD57Sg5Lit5Y+R546w55WZ5a6i6LWE5qCH562+Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pa55rOVM++8muajgOafpee8k+WtmOS4reeahOeVmeWuoui1hOeKtuaAgQ0KICAgICAgICAgICAgICAgIGNvbnN0IGNhY2hlZFN0YXR1cyA9IExlYWRzU3RhdHVzTWFuYWdlci5zdGF0dXND",
        "YWNoZS5nZXQodXNlckluZm8uY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgIGlmIChjYWNoZWRTdGF0dXMgJiYgY2FjaGVkU3RhdHVzLmhhc0xlYWRzVGFnKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5Zyo57yT5a2Y5Lit5Y+R546w55WZ5a6i6LWE5qCH562+Jywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlOiBjYWNoZWRTdGF0dXMuc291cmNlDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmlrnms5U077ya5bCd6K+V5YiH5o2i5Yiw5Lya6K+d6L+b6KGM5qOA5p+l77yI5pu05YeG56Gu5L2G6L6D5oWi77yJDQogICAgICAgICAgICAgICAgaWYgKENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcERlZXBMZWFkc0NoZWNrJywgZmFsc2UpKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN3aXRjaGVkID0gYXdhaXQgdGhpcy5zd2l0Y2hUb0NvbnZlcnNhdGlvbih1c2VySW5mby5jb252ZXJzYXRpb25JZCk7DQogICAgICAgICAgICAgICAgICAgIGlmIChzd2l0Y2hlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMTAwMCk7IC8vIOetieW+hemhtemdouWKoOi9vQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDmn6Xmib7nlZnlrqLotYTmoIfnrb4NCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxlYWRzRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubGVhZHMtdGFnIC5kLXRhZy1jb250ZW50Jyk7DQogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgbGVhZHNFbGVtZW50cykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50LnRleHRDb250ZW50Py5pbmNsdWRlcygn55WZ5a6i6LWEJykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5pu05paw57yT5a2YDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExlYWRzU3RhdHVzTWFuYWdlci51cGRhdGVMZWFkc1N0YXR1cyh1c2VySW5mby5jb252ZXJzYXRpb25JZCwgdHJ1ZSwgJ2RvbV9kZWVwJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrpgJrov4fmt7Hluqbmo4Dmn6Xlj5HnjrDnlZnlrqLotYTmoIfnrb4nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAg",
        "ICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5pyq5Y+R546w55WZ5a6i6LWE5qCH562+Jywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiB1c2VySW5mby5jb252ZXJzYXRpb25JZCA/IHVzZXJJbmZvLmNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJyA6ICdOL0EnDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5qOA5p+l55WZ5a6i6LWE54q25oCB5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8/LnVzZXJOYW1lIHx8ICfmnKrnn6XnlKjmiLcnLA0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8g5Ye66ZSZ5pe26buY6K6k6K6k5Li65rKh5pyJ55WZ5a6i6LWEDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS7juS8muivneWFg+e0oOaPkOWPlueUqOaIt+S/oeaBrw0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQg5Lya6K+d5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R8bnVsbH0g55So5oi35L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICBleHRyYWN0VXNlckluZm8oZWxlbWVudCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDmj5Dlj5Zjb252ZXJzYXRpb25JZA0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnZlcnNhdGlvbklkID0gZWxlbWVudC5kYXRhc2V0Py5rZXk7DQogICAgICAgICAgICAgICAgaWYgKCFjb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWFg+e0oOe8uuWwkWRhdGEta2V55bGe5oCnJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudFRhZzogZWxlbWVudC50YWdOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudENsYXNzOiBlbGVtZW50LmNsYXNzTmFtZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5o+Q5Y+W55So5oi35ZCNIC0g5L2/55So5aSa56eN6YCJ5oup5Zmo56Gu5L+d5YW85a655oCnDQogICAgICAgICAgICAgICAgY29uc3QgbmFtZVNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICAgICAgJy5zeC1j",
        "b250YWN0LWl0ZW0tbmFtZScsICAvLyDkuLvopoHpgInmi6nlmagNCiAgICAgICAgICAgICAgICAgICAgJy5zeC1jb250YWN0LW5hbWUnLCAgICAgICAvLyDlpIfnlKjpgInmi6nlmagNCiAgICAgICAgICAgICAgICAgICAgJy5jb250YWN0LW5hbWUnLCAgICAgICAgICAvLyDpgJrnlKjpgInmi6nlmagNCiAgICAgICAgICAgICAgICAgICAgJy51c2VyLW5hbWUnLCAgICAgICAgICAgICAvLyDnlKjmiLflkI3pgInmi6nlmagNCiAgICAgICAgICAgICAgICAgICAgJ1tjbGFzcyo9Im5hbWUiXScsICAgICAgICAvLyDljIXlkKtuYW1l55qE57G7DQogICAgICAgICAgICAgICAgICAgICcubmFtZScsICAgICAgICAgICAgICAgICAgLy8g566A5Y2VbmFtZeexuw0KICAgICAgICAgICAgICAgICAgICAnLnRpdGxlJyAgICAgICAgICAgICAgICAgIC8vIOagh+mimOexuw0KICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICBsZXQgdXNlck5hbWUgPSAn5pyq55+l55So5oi3JzsNCiAgICAgICAgICAgICAgICBsZXQgbmFtZUVsZW1lbnQgPSBudWxsOw0KDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiBuYW1lU2VsZWN0b3JzKSB7DQogICAgICAgICAgICAgICAgICAgIG5hbWVFbGVtZW50ID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKG5hbWVFbGVtZW50ICYmIG5hbWVFbGVtZW50LnRleHRDb250ZW50Py50cmltKCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lID0gbmFtZUVsZW1lbnQudGV4dENvbnRlbnQudHJpbSgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmj5Dlj5bml7bpl7Tkv6Hmga8NCiAgICAgICAgICAgICAgICBjb25zdCB0aW1lRWxlbWVudCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignLnRpbWUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBsYXN0QWN0aXZpdHlUaW1lID0gdGhpcy5wYXJzZUNvbnZlcnNhdGlvblRpbWUodGltZUVsZW1lbnQpOw0KDQogICAgICAgICAgICAgICAgLy8g55Sf5oiQdXNlcklk77yI5L2/55SoY29udmVyc2F0aW9uSWTkvZzkuLp1c2VySWTvvIkNCiAgICAgICAgICAgICAgICBjb25zdCB1c2VySWQgPSBjb252ZXJzYXRpb25JZDsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJbmZvID0gew0KICAgICAgICAgICAgICAgICAgICB1c2VySWQsDQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZCwNCiAgICAgICAgICAgICAgICAgICAgbGFzdEFjdGl2aXR5VGltZSwNCiAgICAgICAgICAgICAgICAgICAgdGltZVRleHQ6IHRpbWVFbGVtZW50ID8gdGltZUVsZW1lbnQudGV4dENvbnRlbnQ/LnRyaW0oKSA6IG51bGwNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgTG9n",
        "Z2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmiJDlip/mj5Dlj5bnlKjmiLfkv6Hmga8nLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBoYXNUaW1lOiAhIWxhc3RBY3Rpdml0eVRpbWUsDQogICAgICAgICAgICAgICAgICAgIHRpbWVUZXh0OiB1c2VySW5mby50aW1lVGV4dA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHVzZXJJbmZvOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaPkOWPlueUqOaIt+S/oeaBr+Wksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgIGVsZW1lbnRUYWc6IGVsZW1lbnQ/LnRhZ05hbWUsDQogICAgICAgICAgICAgICAgICAgIGVsZW1lbnRDbGFzczogZWxlbWVudD8uY2xhc3NOYW1lDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOino+aekOS8muivneaXtumXtOS/oeaBrw0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IHRpbWVFbGVtZW50IOaXtumXtOWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7bnVtYmVyfG51bGx9IOaXtumXtOaIsw0KICAgICAgICAgKi8NCiAgICAgICAgcGFyc2VDb252ZXJzYXRpb25UaW1lKHRpbWVFbGVtZW50KSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghdGltZUVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgdGltZVRleHQgPSB0aW1lRWxlbWVudC50ZXh0Q29udGVudD8udHJpbSgpOw0KICAgICAgICAgICAgICAgIGlmICghdGltZVRleHQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTsNCiAgICAgICAgICAgICAgICBsZXQgdGFyZ2V0RGF0ZTsNCg0KICAgICAgICAgICAgICAgIC8vIOWIpOaWreaXtumXtOagvOW8jw0KICAgICAgICAgICAgICAgIGlmICh0aW1lVGV4dC5pbmNsdWRlcygnLycpKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOaXpeacn+agvOW8j++8mjA3LzExIOaIliAyMDI0LzA3LzExDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhcnRzID0gdGltZVRleHQuc3BsaXQoJy8nKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMikgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8gTU0vREQg5qC85byP",
        "77yM5YGH6K6+5piv5b2T5bm0DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtb250aCA9IHBhcnNlSW50KHBhcnRzWzBdKSAtIDE7IC8vIOaciOS7veS7jjDlvIDlp4sNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRheSA9IHBhcnNlSW50KHBhcnRzWzFdKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldERhdGUgPSBuZXcgRGF0ZShub3cuZ2V0RnVsbFllYXIoKSwgbW9udGgsIGRheSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaXpeacn+WcqOacquadpe+8jOivtOaYjuaYr+WOu+W5tOeahA0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRhcmdldERhdGUgPiBub3cpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXREYXRlLnNldEZ1bGxZZWFyKG5vdy5nZXRGdWxsWWVhcigpIC0gMSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocGFydHMubGVuZ3RoID09PSAzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyBZWVlZL01NL0REIOagvOW8jw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgeWVhciA9IHBhcnNlSW50KHBhcnRzWzBdKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vbnRoID0gcGFyc2VJbnQocGFydHNbMV0pIC0gMTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRheSA9IHBhcnNlSW50KHBhcnRzWzJdKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldERhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgZGF5KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGltZVRleHQuaW5jbHVkZXMoJzonKSkgew0KICAgICAgICAgICAgICAgICAgICAvLyDml7bpl7TmoLzlvI/vvJoyMDo0MToxMiDmiJYgMjA6NDHvvIzooajnpLrku4rlpKkNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGltZVBhcnRzID0gdGltZVRleHQuc3BsaXQoJzonKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaG91cnMgPSBwYXJzZUludCh0aW1lUGFydHNbMF0pOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBtaW51dGVzID0gcGFyc2VJbnQodGltZVBhcnRzWzFdKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Vjb25kcyA9IHRpbWVQYXJ0c1syXSA/IHBhcnNlSW50KHRpbWVQYXJ0c1syXSkgOiAwOw0KDQogICAgICAgICAgICAgICAgICAgIHRhcmdldERhdGUgPSBuZXcgRGF0ZShub3cuZ2V0RnVsbFllYXIoKSwgbm93LmdldE1vbnRoKCksIG5vdy5nZXREYXRlKCksIGhvdXJzLCBtaW51dGVzLCBzZWNvbmRzKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzml7bpl7TlnKjmnKrmnaXvvIzor7TmmI7mmK/mmKjlpKnnmoQNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRhcmdldERhdGUgPiBub3cpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldERhdGUuc2V0RGF0ZSh0YXJn",
        "ZXREYXRlLmdldERhdGUoKSAtIDEpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5YW25LuW5qC85byP77yM5bCd6K+V55u05o6l6Kej5p6QDQogICAgICAgICAgICAgICAgICAgIHRhcmdldERhdGUgPSBuZXcgRGF0ZSh0aW1lVGV4dCk7DQogICAgICAgICAgICAgICAgICAgIGlmIChpc05hTih0YXJnZXREYXRlLmdldFRpbWUoKSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajvvJrml6Dms5Xop6PmnpDml7bpl7TmoLzlvI8nLCB7IHRpbWVUZXh0IH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCB0aW1lc3RhbXAgPSB0YXJnZXREYXRlLmdldFRpbWUoKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya6Kej5p6Q5Lya6K+d5pe26Ze0Jywgew0KICAgICAgICAgICAgICAgICAgICB0aW1lVGV4dCwNCiAgICAgICAgICAgICAgICAgICAgcGFyc2VkRGF0ZTogdGFyZ2V0RGF0ZS50b0xvY2FsZVN0cmluZygpLA0KICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXANCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB0aW1lc3RhbXA7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya6Kej5p6Q5Lya6K+d5pe26Ze05aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICB0aW1lVGV4dDogdGltZUVsZW1lbnQ/LnRleHRDb250ZW50LA0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6XnlKjmiLfmmK/lkKblnKjmiavmj4/ml7bpl7TojIPlm7TlhoUNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHVzZXJJbmZvIOeUqOaIt+S/oeaBrw0KICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gc2NhbkRheXMg5omr5o+P5aSp5pWwDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKblnKjojIPlm7TlhoUNCiAgICAgICAgICovDQogICAgICAgIGlzVXNlckluU2NhblJhbmdlKHVzZXJJbmZvLCBzY2FuRGF5cykgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJbmZvLmxhc3RBY3Rpdml0eVRpbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5rKh5pyJ5pe26Ze05L+h5oGv77yM6buY6K6k5YyF5ZCr5Zyo5omr5o+P6IyD5Zu05YaFDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG",
        "5Zmo77ya55So5oi35peg5pe26Ze05L+h5oGv77yM6buY6K6k5YyF5ZCrJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXJJbmZvLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNjYW5UaW1lID0gc2NhbkRheXMgKiAyNCAqIDYwICogNjAgKiAxMDAwOyAvLyDovazmjaLkuLrmr6vnp5INCiAgICAgICAgICAgICAgICBjb25zdCB0aW1lU2luY2VMYXN0QWN0aXZpdHkgPSBub3cgLSB1c2VySW5mby5sYXN0QWN0aXZpdHlUaW1lOw0KDQogICAgICAgICAgICAgICAgY29uc3QgaW5SYW5nZSA9IHRpbWVTaW5jZUxhc3RBY3Rpdml0eSA8PSBzY2FuVGltZTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5qOA5p+l55So5oi35pe26Ze06IyD5Zu0Jywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlckluZm8udXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIHRpbWVUZXh0OiB1c2VySW5mby50aW1lVGV4dCwNCiAgICAgICAgICAgICAgICAgICAgbGFzdEFjdGl2aXR5OiBuZXcgRGF0ZSh1c2VySW5mby5sYXN0QWN0aXZpdHlUaW1lKS50b0xvY2FsZVN0cmluZygpLA0KICAgICAgICAgICAgICAgICAgICBkYXlzU2luY2U6IE1hdGgucm91bmQodGltZVNpbmNlTGFzdEFjdGl2aXR5IC8gKDI0ICogNjAgKiA2MCAqIDEwMDApICogMTApIC8gMTAsDQogICAgICAgICAgICAgICAgICAgIHNjYW5EYXlzLA0KICAgICAgICAgICAgICAgICAgICBpblJhbmdlDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gaW5SYW5nZTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrmo4Dmn6Xml7bpl7TojIPlm7TlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOyAvLyDlh7rplJnml7bpu5jorqTljIXlkKsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Y+R6YCB5Zue6K6/5raI5oGvIC0g5aKe5by65a6i6LWE54q25oCB5qOA5rWLDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSB1c2VyIOeUqOaIt+S/oeaBrw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGVtcGxhdGUg6K+d5pyv5qih5p2/DQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKblj5HpgIHmiJDlip8NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHNlbmRGb2xsb3dVcE1lc3NhZ2UodXNlciwgdGVtcGxhdGUpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeu",
        "oeeQhuWZqO+8muW8gOWni+WPkemAgeWbnuiuv+a2iOaBrycsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXIudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlTGVuZ3RoOiB0ZW1wbGF0ZS5sZW5ndGgNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIPCflKcg5paw5aKe77ya5omn6KGM5Zue6K6/5YmN5by65Yi25qOA5rWL5a6i6LWE54q25oCBDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muaJp+ihjOWbnuiuv+WJjeajgOa1i+Wuoui1hOeKtuaAgScsIHsNCiAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXIudXNlck5hbWUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOS9v+eUqEFQSeS8mOWFiOeahOW8guatpeW/q+mAn+ajgOafpeeVmeWuoui1hOeKtuaAgQ0KICAgICAgICAgICAgICAgICAgICBjb25zdCBoYXNMZWFkc1RhZyA9IGF3YWl0IHRoaXMuY2hlY2tVc2VyTGVhZHNTdGF0dXNGYXN0QXN5bmMoew0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VyLnVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IHVzZXIuY29udmVyc2F0aW9uSWQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGhhc0xlYWRzVGFnKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+OryDov73nsonnrqHnkIblmajvvJrnlKjmiLflt7LojrflvpfnlZnlrqLotYTmoIfnrb7vvIzot7Pov4flm57orr/mk43kvZwnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXIudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VyLnVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAg5qOA5rWL5pa55byPOiAnQVBJ5LyY5YWI5byC5q2l5qOA5rWLJw0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOabtOaWsOeUqOaIt+eKtuaAgeS4uuW3suiOt+W+l+eVmeWuoui1hA0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5oYXModXNlci51c2VySWQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVjb3JkID0gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlLmdldCh1c2VyLnVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3JkLnN0YXR1cyA9ICdsZWFkc19hY3F1aXJlZCc7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3JkLmxlYWRzQWNxdWlyZWRU",
        "aW1lID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkQ2FjaGUuc2V0KHVzZXIudXNlcklkLCByZWNvcmQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5zeW5jVG9TdG9yYWdlSWZOZWVkZWQoKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlt7Lmm7TmlrDnlKjmiLfnirbmgIHkuLrlt7LojrflvpfnlZnlrqLotYQnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWbnuWIsOmhtumDqA0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5zY3JvbGxUb1RvcCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7IC8vIOi/lOWbnnRydWXooajnpLoi5oiQ5YqfIu+8iOi3s+i/h+S6huS4jeW/heimgeeahOWbnuiuv++8iQ0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muWuoui1hOeKtuaAgeajgOa1i+WujOaIkO+8jOeUqOaIt+acquiOt+W+l+eVmeWuoui1hO+8jOe7p+e7reWbnuiuv+a1geeoiycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgfSBjYXRjaCAobGVhZHNDaGVja0Vycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajvvJrlrqLotYTnirbmgIHmo4DmtYvlpLHotKXvvIznu6fnu63lm57orr/mtYHnqIsnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlci51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBsZWFkc0NoZWNrRXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDpppblhYjpnIDopoHliIfmjaLliLDnm67moIfkvJror50NCiAgICAgICAgICAgICAgICBjb25zdCBzd2l0Y2hlZCA9IGF3YWl0IHRoaXMuc3dpdGNoVG9Db252ZXJzYXRpb24odXNlci5jb252ZXJzYXRpb25JZCk7DQogICAgICAgICAgICAgICAgaWYgKCFzd2l0Y2hlZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muWIh+aNouS8muivneWksei0pScpOw0KICAgICAgICAgICAgICAgICAgICAvLyDljbPkvb/liIfmjaLlpLHotKXkuZ/opoHlm57liLDpobbpg6gNCiAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5zY3JvbGxUb1RvcCgpOw0KICAgICAgICAg",
        "ICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g562J5b6F5Lya6K+d5Yqg6L29DQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMjAwMCk7DQoNCiAgICAgICAgICAgICAgICAvLyDlj5HpgIHmtojmga8NCiAgICAgICAgICAgICAgICBjb25zdCBzZW50ID0gYXdhaXQgTWVzc2FnZVByb2Nlc3Nvci5zZW5kUmVwbHkodGVtcGxhdGUpOw0KICAgICAgICAgICAgICAgIGlmIChzZW50KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlm57orr/mtojmga/lj5HpgIHmiJDlip8nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlci51c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muWbnuiuv+a2iOaBr+WPkemAgeWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIPCflKcgQlVH5L+u5aSN77ya5peg6K665Y+R6YCB5oiQ5Yqf6L+Y5piv5aSx6LSl77yM6YO96KaB5Zue5Yiw6aG26YOo77yM5pa55L6/5aSE55CG5paw5raI5oGvDQogICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5zY3JvbGxUb1RvcCgpOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHNlbnQ7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5Y+R6YCB5Zue6K6/5raI5oGv5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogdXNlci51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAvLyDljbPkvb/lh7rplJnkuZ/opoHlm57liLDpobbpg6gNCiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnNjcm9sbFRvVG9wKCk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmu5rliqjlm57liLDkvJror53liJfooajpobbpg6gNCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzY3JvbGxUb1RvcCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW8gOWni+a7muWKqOWbnuWIsOWIl+ihqOmhtumDqC4uLicpOw0KDQogICAgICAgICAgICAgICAgY29uc3Qgc2Nyb2xsZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2hhdC1saXN0LWJveCAu",
        "dnVlLXJlY3ljbGUtc2Nyb2xsZXInKTsNCiAgICAgICAgICAgICAgICBpZiAoIXNjcm9sbGVyKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajvvJrmnKrmib7liLDmu5rliqjlrrnlmajvvIzml6Dms5Xlm57liLDpobbpg6gnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOa7muWKqOWIsOmhtumDqA0KICAgICAgICAgICAgICAgIHNjcm9sbGVyLnNjcm9sbFRvcCA9IDA7DQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMzAwKTsgLy8g562J5b6F5rua5Yqo5a6M5oiQDQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5bey5Zue5Yiw5YiX6KGo6aG26YOoJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5Zue5Yiw6aG26YOo5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5YiH5o2i5Yiw5oyH5a6a5Lya6K+d77yI6Jma5ouf5rua5Yqo5YW85a6554mI77yJDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb252ZXJzYXRpb25JZCDkvJror51JRA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5YiH5o2i5oiQ5YqfDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzd2l0Y2hUb0NvbnZlcnNhdGlvbihjb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5byA5aeL5YiH5o2i5Lya6K+dJywgew0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyAxLiDmuJDov5vlvI/mn6Xmib7nm67moIfkvJror53lhYPntKDvvIjomZrmi5/mu5rliqjlhbzlrrnvvIkNCiAgICAgICAgICAgICAgICBjb25zdCB0YXJnZXRFbGVtZW50ID0gYXdhaXQgdGhpcy5maW5kQ29udmVyc2F0aW9uRWxlbWVudFdpdGhWaXJ0dWFsU2Nyb2xsKGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICBpZiAoIXRhcmdldEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrmnKrmib7liLDnm67moIfkvJror53lhYPntKAnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAg",
        "ICAgLy8gMi4g56Gu5L+d5YWD57Sg5r+A5rS75ZKM5Y+v6KeB77yI6Jma5ouf5rua5Yqo5YW85a6577yJDQogICAgICAgICAgICAgICAgY29uc3QgYWN0aXZhdGVkID0gYXdhaXQgdGhpcy5lbnN1cmVFbGVtZW50QWN0aXZhdGVkKHRhcmdldEVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmICghYWN0aXZhdGVkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5peg5rOV5r+A5rS755uu5qCH5Lya6K+d5YWD57SgJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIDMuIOaJp+ihjOeCueWHu+aTjeS9nA0KICAgICAgICAgICAgICAgIGNvbnN0IGNsaWNrZWQgPSBVdGlscy5zaW11bGF0ZUNsaWNrKHRhcmdldEVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIGlmICghY2xpY2tlZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8mueCueWHu+S8muivneWFg+e0oOWksei0pScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muaIkOWKn+WIh+aNouWIsOS8muivnScsIHsNCiAgICAgICAgICAgICAgICAgICAgY29udmVyc2F0aW9uSWQ6IGNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5YiH5o2i5Lya6K+d5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6Jma5ouf5rua5Yqo5YW85a6555qE5Lya6K+d5YWD57Sg5p+l5om+77yI5LyY5YyW54mI77yJDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb252ZXJzYXRpb25JZCDkvJror51JRA0KICAgICAgICAgKiBAcmV0dXJucyB7RWxlbWVudHxudWxsfSDmib7liLDnmoTkvJror53lhYPntKANCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGZpbmRDb252ZXJzYXRpb25FbGVtZW50V2l0aFZpcnR1YWxTY3JvbGwoY29udmVyc2F0aW9uSWQpIHsNCiAg",
        "ICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlvIDlp4vomZrmi5/mu5rliqjlhbzlrrnmn6Xmib4nLCB7DQogICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOetlueVpTHvvJrmu5rliqjmn6Xmib7nrZbnlaXvvIjkuLvopoHnrZbnlaXvvIkNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5byA5aeL5rua5Yqo5p+l5om+562W55WlJyk7DQogICAgICAgICAgICAgICAgY29uc3Qgc2Nyb2xsRm91bmRFbGVtZW50ID0gYXdhaXQgdGhpcy5maW5kVXNlckJ5U2Nyb2xsaW5nKGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsRm91bmRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrmu5rliqjmn6Xmib7miJDlip8nKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNjcm9sbEZvdW5kRWxlbWVudDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnrZbnlaUy77ya5pm66IO95pCc57Si5py65Yi277yI5aSH55So562W55Wl77yJDQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8mua7muWKqOafpeaJvuWksei0pe+8jOWwneivleaZuuiDveaQnOe0ouacuuWIticpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNlYXJjaEZvdW5kRWxlbWVudCA9IGF3YWl0IHRoaXMuc2VhcmNoQW5kRmluZEVsZW1lbnQoY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgIGlmIChzZWFyY2hGb3VuZEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muaZuuiDveaQnOe0ouaIkOWKnycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VhcmNoRm91bmRFbGVtZW50Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5omA5pyJ5p+l5om+562W55Wl6YO95aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJromZrmi5/mu5rliqjlhbzlrrnmn6Xmib7lpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJv",
        "ci5tZXNzYWdlDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmAmui/h+a7muWKqOafpeaJvueUqOaIt++8iOWfuuS6jmNvbnZlcnNhdGlvbklk77yJLSDmmbrog73ljJbmlLnov5vniYgNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIOS8muivnUlEDQogICAgICAgICAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9IOaJvuWIsOeahOWFg+e0oA0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgZmluZFVzZXJCeVNjcm9sbGluZyhjb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5byA5aeL5pm66IO95rua5Yqo5p+l5om+Jywgew0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmraXpqqQxOiDojrflj5bmu5rliqjlrrnlmaggLSDmlK/mjIHlpJrnp43pgInmi6nlmagNCiAgICAgICAgICAgICAgICBjb25zdCBwb3NzaWJsZVNlbGVjdG9ycyA9IFsNCiAgICAgICAgICAgICAgICAgICAgJy5kLWNvbGxhcHNlLWNvbnRlbnQtd3JhcHBlcjpub3QoW3N0eWxlKj0ibWF4LWhlaWdodDogMHB4Il0pIC52dWUtcmVjeWNsZS1zY3JvbGxlci5zY3JvbGxlcicsDQogICAgICAgICAgICAgICAgICAgICcuY2hhdC1saXN0LWJveCAudnVlLXJlY3ljbGUtc2Nyb2xsZXInLA0KICAgICAgICAgICAgICAgICAgICAnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyLnNjcm9sbGVyJywNCiAgICAgICAgICAgICAgICAgICAgJy52dWUtcmVjeWNsZS1zY3JvbGxlcicNCiAgICAgICAgICAgICAgICBdOw0KDQogICAgICAgICAgICAgICAgbGV0IHNjcm9sbGVyID0gbnVsbDsNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdG9yIG9mIHBvc3NpYmxlU2VsZWN0b3JzKSB7DQogICAgICAgICAgICAgICAgICAgIHNjcm9sbGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7DQogICAgICAgICAgICAgICAgICAgIGlmIChzY3JvbGxlcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmib7liLDmu5rliqjlrrnlmagnLCB7IHNlbGVjdG9yIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoIXNjcm9sbGVyKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5om+5LiN5Yiw5rS75Yqo55qE5rua5Yqo5a655Zmo77yM6K+356Gu5L+dIuWFqOmDqOS8muivnSLliJfooajlt7Lnu4/lsZXlvIAn",
        "KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5q2l6aqkMjog5pm66IO95p+l5om+5Ye95pWwIC0g5aKe5by65YWD57Sg5Y+v6KeB5oCn5qOA5rWLDQogICAgICAgICAgICAgICAgY29uc3QgZmluZFRhcmdldEVsZW1lbnRTbWFydCA9ICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXRlbXMgPSBzY3JvbGxlci5xdWVyeVNlbGVjdG9yQWxsKCcuc3gtY29udGFjdC1pdGVtJyk7DQogICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBpdGVtcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0uZGF0YXNldD8ua2V5ID09PSBjb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuWcqERPTeWbnuaUtueKtuaAge+8iHRyYW5zbGF0ZVkoLTk5OTlweCnvvIkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpdGVtVmlldyA9IGl0ZW0uY2xvc2VzdCgnLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyX19pdGVtLXZpZXcnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbVZpZXcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdHJhbnNmb3JtID0gaXRlbVZpZXcuc3R5bGUudHJhbnNmb3JtOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodHJhbnNmb3JtICYmIHRyYW5zZm9ybS5pbmNsdWRlcygndHJhbnNsYXRlWSgtOTk5OXB4KScpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muajgOa1i+WIsOWFg+e0oOWcqERPTeWbnuaUtueKtuaAge+8jOi3s+i/hycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7IC8vIOWFg+e0oOiiq+WbnuaUtu+8jOi3s+i/hw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qOA5p+l5YWD57Sg5piv5ZCm55yf5q2j5Y+v6KeBDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVjdCA9IGl0ZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY29udGFpbmVyUmVjdCA9IHNjcm9sbGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IHJlY3QudG9wID49IGNvbnRhaW5lclJlY3QudG9wICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY3Qu",
        "Ym90dG9tIDw9IGNvbnRhaW5lclJlY3QuYm90dG9tICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY3QuaGVpZ2h0ID4gMDsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNWaXNpYmxlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5YWD57Sg5LiN5Zyo5Y+v6KeB5Yy65Z+f77yM6Lez6L+HJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrmmbrog73mu5rliqjmn6Xmib7miJDlip/mib7liLDnm67moIflhYPntKAnKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOa7muWKqOWIsOWFg+e0oOS9v+WFtuWujOWFqOWPr+ingeW5tuWxheS4reaYvuekug0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0uc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcsIGJsb2NrOiAnY2VudGVyJyB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAvLyDmraXpqqQzOiDorrDlvZXljp/lp4vmu5rliqjkvY3nva4NCiAgICAgICAgICAgICAgICBjb25zdCBvcmlnaW5hbFNjcm9sbFRvcCA9IHNjcm9sbGVyLnNjcm9sbFRvcDsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muiusOW9leWOn+Wni+a7muWKqOS9jee9ricsIHsgb3JpZ2luYWxTY3JvbGxUb3AgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmraXpqqQ0OiDpppblhYjlm57liLDpobbpg6jph43mlrDlvIDlp4vmn6Xmib7vvIjop6PlhrPnlKjmiLflnKjkuIvmlrnnmoTpl67popjvvIkNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWbnuWIsOmhtumDqOmHjeaWsOW8gOWni+afpeaJvi4uLicpOw0KICAgICAgICAgICAgICAgIHNjcm9sbGVyLnNjcm9sbFRvcCA9IDA7DQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMzAwKTsgLy8g562J5b6F5rua5Yqo5a6M5oiQDQoNCiAgICAgICAgICAgICAgICAvLyDku47pobbpg6jlvIDlp4vmn6Xmib4NCiAgICAgICAgICAgICAgICBsZXQgZm91bmRFbGVtZW50ID0gZmluZFRhcmdldEVsZW1lbnRTbWFydCgpOw0KICAgICAgICAgICAgICAgIGlmIChmb3VuZEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muWcqOmhtumDqOWMuuWfn+aJvuWIsOebruagh+WFg+e0oCcpOw0KICAg",
        "ICAgICAgICAgICAgICAgICByZXR1cm4gZm91bmRFbGVtZW50Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOatpemqpDU6IOaZuuiDvea7muWKqOS4u+W+queOryAtIOWinuW8uumHjeivleacuuWItg0KICAgICAgICAgICAgICAgIGxldCBsYXN0U2Nyb2xsVG9wID0gLTE7DQogICAgICAgICAgICAgICAgY29uc3QgU0NST0xMX0RFTEFZX01TID0gMjUwOyAvLyDlop7liqDnrYnlvoXml7bpl7Tnoa7kv51ET03muLLmn5MNCiAgICAgICAgICAgICAgICBjb25zdCBNQVhfU0NST0xMX0FUVEVNUFRTID0gNTA7IC8vIOacgOWkp+a7muWKqOasoeaVsO+8jOmBv+WFjeaXoOmZkOa7muWKqA0KICAgICAgICAgICAgICAgIGxldCBzY3JvbGxBdHRlbXB0cyA9IDA7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muW8gOWni+S7jumhtumDqOa7muWKqOafpeaJvi4uLicpOw0KICAgICAgICAgICAgICAgIHdoaWxlIChzY3JvbGxlci5zY3JvbGxUb3AgIT09IGxhc3RTY3JvbGxUb3AgJiYgc2Nyb2xsQXR0ZW1wdHMgPCBNQVhfU0NST0xMX0FUVEVNUFRTKSB7DQogICAgICAgICAgICAgICAgICAgIGxhc3RTY3JvbGxUb3AgPSBzY3JvbGxlci5zY3JvbGxUb3A7DQogICAgICAgICAgICAgICAgICAgIHNjcm9sbEF0dGVtcHRzKys7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5ZCR5LiL5rua5Yqo5LiA5Liq5bGP5bmV55qE6auY5bqmDQogICAgICAgICAgICAgICAgICAgIHNjcm9sbGVyLnNjcm9sbFRvcCArPSBzY3JvbGxlci5jbGllbnRIZWlnaHQ7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zyhg6L+957KJ566h55CG5Zmo77ya5ZCR5LiL5rua5Yqo5LiA5bGPICgke3Njcm9sbEF0dGVtcHRzfS8ke01BWF9TQ1JPTExfQVRURU1QVFN9KSAo5b2T5YmN5L2N572uOiAke01hdGgucm91bmQoc2Nyb2xsZXIuc2Nyb2xsVG9wKX1weClgKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDnrYnlvoXmlrDlhoXlrrnmuLLmn5MNCiAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoU0NST0xMX0RFTEFZX01TKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDlnKjmlrDmuLLmn5PnmoTlsY/luZXlhoXlrrnkuK3mmbrog73mn6Xmib4NCiAgICAgICAgICAgICAgICAgICAgZm91bmRFbGVtZW50ID0gZmluZFRhcmdldEVsZW1lbnRTbWFydCgpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoZm91bmRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5rua5Yqo5p+l5om+5oiQ5Yqf77yM5bey5YGc5q2i5rua5YqoJywgeyBzY3JvbGxBdHRlbXB0cyB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmb3VuZEVsZW1lbnQ7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKblt7LliLDovr7lupXpg6gNCiAgICAgICAgICAgICAg",
        "ICAgICAgaWYgKHNjcm9sbGVyLnNjcm9sbFRvcCArIHNjcm9sbGVyLmNsaWVudEhlaWdodCA+PSBzY3JvbGxlci5zY3JvbGxIZWlnaHQgLSAxMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlt7Lmu5rliqjliLDlupXpg6gnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWIsOi+vuW6lemDqOWQjuacgOWQjuajgOafpeS4gOasoQ0KICAgICAgICAgICAgICAgICAgICAgICAgZm91bmRFbGVtZW50ID0gZmluZFRhcmdldEVsZW1lbnRTbWFydCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZvdW5kRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlupXpg6jmn6Xmib7miJDlip8nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZm91bmRFbGVtZW50Ow0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5pyq5om+5Yiw55uu5qCH55So5oi377yM5bCd6K+V5oGi5aSN5Y6f5aeL5rua5Yqo5L2N572uJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5oGi5aSN5Yiw5Y6f5aeL5rua5Yqo5L2N572uDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Nyb2xsZXIuc2Nyb2xsVG9wID0gb3JpZ2luYWxTY3JvbGxUb3A7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMjAwKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c6L6+5Yiw5pyA5aSn5rua5Yqo5qyh5pWw6ZmQ5Yi2DQogICAgICAgICAgICAgICAgaWYgKHNjcm9sbEF0dGVtcHRzID49IE1BWF9TQ1JPTExfQVRURU1QVFMpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oYOi/veeyieeuoeeQhuWZqO+8mui+vuWIsOacgOWkp+a7muWKqOasoeaVsOmZkOWItiAoJHtNQVhfU0NST0xMX0FUVEVNUFRTfSnvvIzlgZzmraLmn6Xmib5gKTsNCiAgICAgICAgICAgICAgICAgICAgLy8g5oGi5aSN5Yiw5Y6f5aeL5rua5Yqo5L2N572uDQogICAgICAgICAgICAgICAgICAgIHNjcm9sbGVyLnNjcm9sbFRvcCA9IG9yaWdpbmFsU2Nyb2xsVG9wOw0KICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgyMDApOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5pm66IO95rua5Yqo5p+l5om+5aSx6LSl77ya5pyq5om+5Yiw55uu5qCH55So5oi3Jywgew0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxBdHRlbXB0cywNCiAgICAgICAgICAgICAgICAgICAgb3JpZ2luYWxT",
        "Y3JvbGxUb3AsDQogICAgICAgICAgICAgICAgICAgIGZpbmFsU2Nyb2xsVG9wOiBzY3JvbGxlci5zY3JvbGxUb3AsDQogICAgICAgICAgICAgICAgICAgIHN1Z2dlc3Rpb246ICfor7fmo4Dmn6Vjb252ZXJzYXRpb25JZOaYr+WQpuato+ehru+8jOaIlueUqOaIt+aYr+WQpuW3suemu+e6vycNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muaZuuiDvea7muWKqOafpeaJvuWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaZuuiDveaQnOe0ouacuuWItu+8mumAmui/h+aQnOe0ouWKn+iDveafpeaJvuebruagh+eUqOaItw0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5Lya6K+dSUQNCiAgICAgICAgICogQHJldHVybnMge0VsZW1lbnR8bnVsbH0g5om+5Yiw55qE5YWD57SgDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBzZWFyY2hBbmRGaW5kRWxlbWVudChjb252ZXJzYXRpb25JZCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5byA5aeL5pm66IO95pCc57Si5py65Yi2Jywgew0KICAgICAgICAgICAgICAgICAgICBjb252ZXJzYXRpb25JZDogY29udmVyc2F0aW9uSWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyAxLiDku45jb252ZXJzYXRpb25JZOS4reaPkOWPlueUqOaIt0lEDQogICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gdGhpcy5leHRyYWN0VXNlcklkRnJvbUNvbnZlcnNhdGlvbklkKGNvbnZlcnNhdGlvbklkKTsNCiAgICAgICAgICAgICAgICBpZiAoIXVzZXJJZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5peg5rOV5LuOY29udmVyc2F0aW9uSWTmj5Dlj5bnlKjmiLdJRCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb252ZXJzYXRpb25JZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5o+Q5Y+W5Yiw55So5oi3SUQnLCB7IHVzZXJJZCB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIDIuIOafpeaJvuaQnOe0ouahhg0KICAgICAgICAgICAgICAgIGNvbnN0IHNlYXJjaElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlYXJjaC10b3AgLmQtaW5wdXQgaW5w",
        "dXRbdHlwZT0idGV4dCJdJyk7DQogICAgICAgICAgICAgICAgaWYgKCFzZWFyY2hJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5pyq5om+5Yiw5pCc57Si5qGGJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIDMuIOa4heepuuaQnOe0ouahhuW5tui+k+WFpeeUqOaIt0lEDQogICAgICAgICAgICAgICAgc2VhcmNoSW5wdXQudmFsdWUgPSAnJzsNCiAgICAgICAgICAgICAgICBzZWFyY2hJbnB1dC5mb2N1cygpOw0KICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDIwMCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmqKHmi5/ovpPlhaXnlKjmiLdJRA0KICAgICAgICAgICAgICAgIHNlYXJjaElucHV0LnZhbHVlID0gdXNlcklkOw0KDQogICAgICAgICAgICAgICAgLy8g6Kem5Y+RaW5wdXTkuovku7YNCiAgICAgICAgICAgICAgICBjb25zdCBpbnB1dEV2ZW50ID0gbmV3IEV2ZW50KCdpbnB1dCcsIHsgYnViYmxlczogdHJ1ZSB9KTsNCiAgICAgICAgICAgICAgICBzZWFyY2hJbnB1dC5kaXNwYXRjaEV2ZW50KGlucHV0RXZlbnQpOw0KDQogICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMTAwMCk7IC8vIOetieW+heaQnOe0oue7k+aenA0KDQogICAgICAgICAgICAgICAgLy8gNC4g5p+l5om+5pCc57Si57uT5p6c5YiX6KGoDQogICAgICAgICAgICAgICAgY29uc3QgdXNlckxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudXNlci1saXN0Jyk7DQogICAgICAgICAgICAgICAgaWYgKCF1c2VyTGlzdCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5pyq5om+5Yiw5pCc57Si57uT5p6c5YiX6KGoJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIDUuIOafpeaJvuWMuemFjeeahOaQnOe0oue7k+aenOmhuQ0KICAgICAgICAgICAgICAgIGNvbnN0IHNlYXJjaEl0ZW1zID0gdXNlckxpc3QucXVlcnlTZWxlY3RvckFsbCgnLnNlYXJjaC1jb250YWN0LWl0ZW0nKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muaJvuWIsOaQnOe0oue7k+aenCcsIHsgY291bnQ6IHNlYXJjaEl0ZW1zLmxlbmd0aCB9KTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBzZWFyY2hJdGVtcykgew0KICAgICAgICAgICAgICAgICAgICAvLyDngrnlh7vmkJzntKLnu5PmnpzpobkNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpY2tlZCA9IFV0aWxzLnNpbXVsYXRlQ2xpY2soaXRlbSk7DQogICAgICAgICAgICAgICAgICAgIGlmIChjbGlja2VkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya54K55Ye75pCc57Si57uT5p6c5oiQ",
        "5YqfJyk7DQogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgxNTAwKTsgLy8g562J5b6F6aG16Z2i5Yqg6L29DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIDYuIOafpeaJvua/gOa0u+WQjueahOS8muivneWFg+e0oA0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYWN0aXZhdGVkRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYFtkYXRhLWtleT0iJHtjb252ZXJzYXRpb25JZH0iXWApOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFjdGl2YXRlZEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5pm66IO95pCc57Si5oiQ5Yqf5om+5Yiw55uu5qCH5YWD57SgJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFjdGl2YXRlZEVsZW1lbnQ7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOayoeaJvuWIsOeyvuehruWMuemFje+8jOafpeaJvuW9k+WJjea0u+i3g+eahOS8muivneWFg+e0oA0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYWN0aXZlRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zeC1jb250YWN0LWl0ZW0uYWN0aXZlLCAuY29udGFjdC1pdGVtLmFjdGl2ZScpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFjdGl2ZUVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5pm66IO95pCc57Si5om+5Yiw5rS76LeD5Lya6K+d5YWD57SgJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFjdGl2ZUVsZW1lbnQ7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign6L+957KJ566h55CG5Zmo77ya5pm66IO95pCc57Si5pyq5om+5Yiw5Yy56YWN57uT5p6cJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5pm66IO95pCc57Si5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5LuOY29udmVyc2F0aW9uSWTkuK3mj5Dlj5bnlKjmiLdJRA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29udmVyc2F0aW9uSWQg5Lya6K+dSUQNCiAgICAgICAgICogQHJldHVybnMge3N0cmluZ3xudWxsfSDnlKjmiLdJRA0KICAgICAgICAgKi8NCiAgICAgICAgZXh0cmFjdFVzZXJJZEZyb21Db252ZXJzYXRpb25JZDogZnVuY3Rpb24oY29udmVyc2F0aW9uSWQp",
        "IHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5aSE55CG5qC85byP77yaVG90YWwtNWJmNzZjNGRjZmFhMmUwMDAxNGEzZGMzIC0+IDViZjc2YzRkY2ZhYTJlMDAwMTRhM2RjMw0KICAgICAgICAgICAgICAgIGlmIChjb252ZXJzYXRpb25JZC5pbmNsdWRlcygnLScpKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhcnRzID0gY29udmVyc2F0aW9uSWQuc3BsaXQoJy0nKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA+PSAyKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySWQgPSBwYXJ0c1twYXJ0cy5sZW5ndGggLSAxXTsgLy8g5Y+W5pyA5ZCO5LiA6YOo5YiGDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodXNlcklkLmxlbmd0aCA+PSAyMCkgeyAvLyDnlKjmiLdJROmAmuW4uOavlOi+g+mVvw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB1c2VySWQ7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlpITnkIbmoLzlvI/vvJpBY3RpdmUtNjAxLi4uIC0+IOWwneivleaPkOWPluaVsOWtl+mDqOWIhg0KICAgICAgICAgICAgICAgIGNvbnN0IG51bWJlck1hdGNoID0gY29udmVyc2F0aW9uSWQubWF0Y2goLyhcd3syMCx9KS8pOw0KICAgICAgICAgICAgICAgIGlmIChudW1iZXJNYXRjaCkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVtYmVyTWF0Y2hbMV07DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6cY29udmVyc2F0aW9uSWTmnKzouqvlsLHmmK/nlKjmiLdJROagvOW8jw0KICAgICAgICAgICAgICAgIGlmIChjb252ZXJzYXRpb25JZC5sZW5ndGggPj0gMjAgJiYgIWNvbnZlcnNhdGlvbklkLmluY2x1ZGVzKCctJykpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbnZlcnNhdGlvbklkOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+aPkOWPlueUqOaIt0lE5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KDQoNCg0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnoa7kv53lhYPntKDmv4DmtLvlkozlj6/op4HvvIjomZrmi5/mu5rliqjlhbzlrrnniYjvvIkNCiAgICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IOebruagh+WFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0g5piv5ZCm5oiQ5YqfDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBlbnN1cmVFbGVtZW50QWN0aXZhdGVkKGVsZW1lbnQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAg",
        "ICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlvIDlp4vlhYPntKDmv4DmtLvmo4Dmn6UnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuW3sue7j+WPr+ingQ0KICAgICAgICAgICAgICAgIGlmIChFbGVtZW50TWFuYWdlci5pc0VsZW1lbnRWaXNpYmxlKGVsZW1lbnQpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5YWD57Sg5bey5Y+v6KeBJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WPluWFg+e0oOeahCBjb252ZXJzYXRpb25JZCDnlKjkuo7omZrmi5/mu5rliqjlpITnkIYNCiAgICAgICAgICAgICAgICBjb25zdCBjb252ZXJzYXRpb25JZCA9IGVsZW1lbnQuZGF0YXNldD8ua2V5Ow0KICAgICAgICAgICAgICAgIGlmICghY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8muWFg+e0oOe8uuWwkSBkYXRhLWtlee+8jOWwneivleWfuuehgOa/gOa0u+aWueazlScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5iYXNpY0VsZW1lbnRBY3RpdmF0aW9uKGVsZW1lbnQpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOS9v+eUqOiZmuaLn+a7muWKqOWFvOWuueeahOa/gOa0u+aWueazlQ0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5L2/55So6Jma5ouf5rua5Yqo5YW85a655r+A5rS75pa55rOVJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYWN0aXZhdGVkRWxlbWVudCA9IGF3YWl0IHRoaXMuYWN0aXZhdGVFbGVtZW50V2l0aFZpcnR1YWxTY3JvbGwoZWxlbWVudCwgY29udmVyc2F0aW9uSWQpOw0KDQogICAgICAgICAgICAgICAgaWYgKGFjdGl2YXRlZEVsZW1lbnQgJiYgRWxlbWVudE1hbmFnZXIuaXNFbGVtZW50VmlzaWJsZShhY3RpdmF0ZWRFbGVtZW50KSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya6Jma5ouf5rua5Yqo5r+A5rS75oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajvvJromZrmi5/mu5rliqjmv4DmtLvlpLHotKXvvIzlsJ3or5Xln7rnoYDmlrnms5UnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuYmFzaWNFbGVtZW50QWN0aXZhdGlvbihlbGVtZW50KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrlhYPntKDmv4DmtLvlh7rplJknLCB7IGVycm9yOiBlcnJvci5tZXNzYWdl",
        "IH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6Jma5ouf5rua5Yqo5YW85a6555qE5YWD57Sg5r+A5rS75pa55rOVDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDnm67moIflhYPntKANCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbnZlcnNhdGlvbklkIOS8muivnUlEDQogICAgICAgICAqIEByZXR1cm5zIHtFbGVtZW50fG51bGx9IOa/gOa0u+WQjueahOWFg+e0oA0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgYWN0aXZhdGVFbGVtZW50V2l0aFZpcnR1YWxTY3JvbGwoZWxlbWVudCwgY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g6I635Y+W5rua5Yqo5a655ZmoIC0g5pSv5oyB5aSa56eN6YCJ5oup5ZmoDQogICAgICAgICAgICAgICAgY29uc3QgcG9zc2libGVTZWxlY3RvcnMgPSBbDQogICAgICAgICAgICAgICAgICAgICcuZC1jb2xsYXBzZS1jb250ZW50LXdyYXBwZXI6bm90KFtzdHlsZSo9Im1heC1oZWlnaHQ6IDBweCJdKSAudnVlLXJlY3ljbGUtc2Nyb2xsZXIuc2Nyb2xsZXInLA0KICAgICAgICAgICAgICAgICAgICAnLmNoYXQtbGlzdC1ib3ggLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyJywNCiAgICAgICAgICAgICAgICAgICAgJy52dWUtcmVjeWNsZS1zY3JvbGxlci5zY3JvbGxlcicsDQogICAgICAgICAgICAgICAgICAgICcudnVlLXJlY3ljbGUtc2Nyb2xsZXInDQogICAgICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgICAgIGxldCBzY3JvbGxlciA9IG51bGw7DQogICAgICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3RvciBvZiBwb3NzaWJsZVNlbGVjdG9ycykgew0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5om+5Yiw6Jma5ouf5rua5Yqo5a655ZmoJywgeyBzZWxlY3RvciB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKCFzY3JvbGxlcikgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muacquaJvuWIsOiZmuaLn+a7muWKqOWuueWZqO+8jOS9v+eUqOWfuuehgOaWueazlScpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZWxlbWVudDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmmbrog73mn6Xmib7lkozmv4DmtLvlh73mlbAgLSDlop7lvLrlhYPntKDlj6/op4HmgKfmo4DmtYsNCiAgICAgICAgICAgICAgICBjb25zdCBmaW5kQW5kQWN0aXZhdGVFbGVtZW50U21h",
        "cnQgPSAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1zID0gc2Nyb2xsZXIucXVlcnlTZWxlY3RvckFsbCgnLnN4LWNvbnRhY3QtaXRlbScpOw0KICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaXRlbXMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLmRhdGFzZXQ/LmtleSA9PT0gY29udmVyc2F0aW9uSWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlhYPntKDmmK/lkKblnKhET03lm57mlLbnirbmgIHvvIh0cmFuc2xhdGVZKC05OTk5cHgp77yJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaXRlbVZpZXcgPSBpdGVtLmNsb3Nlc3QoJy52dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3Jyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW1WaWV3KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybSA9IGl0ZW1WaWV3LnN0eWxlLnRyYW5zZm9ybTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRyYW5zZm9ybSAmJiB0cmFuc2Zvcm0uaW5jbHVkZXMoJ3RyYW5zbGF0ZVkoLTk5OTlweCknKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmo4DmtYvliLDlhYPntKDlnKhET03lm57mlLbnirbmgIHvvIzpnIDopoHmu5rliqjmv4DmtLsnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOyAvLyDpnIDopoHnu6fnu63mu5rliqgNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuecn+ato+WPr+ingQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlY3QgPSBpdGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lclJlY3QgPSBzY3JvbGxlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1Zpc2libGUgPSByZWN0LnRvcCA+PSBjb250YWluZXJSZWN0LnRvcCAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWN0LmJvdHRvbSA8PSBjb250YWluZXJSZWN0LmJvdHRvbSAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWN0LmhlaWdodCA+IDA7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzVmlzaWJsZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWFg+e0oOS4jeWcqOWPr+ingeWMuuWfn++8jOmcgOimgea7muWKqOa/gOa0uycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDmu5rliqjliLDlhYPntKDkvb/lhbblrozlhajlj6/op4HlubblsYXkuK3mmL7npLoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ2NlbnRlcicgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmmbrog73mv4DmtLvmib7liLDlubbmu5rliqjliLDnm67moIflhYPntKAnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgLy8g6K6w5b2V5Y6f5aeL5rua5Yqo5L2N572uDQogICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxTY3JvbGxUb3AgPSBzY3JvbGxlci5zY3JvbGxUb3A7DQoNCiAgICAgICAgICAgICAgICAvLyDpppblhYjlsJ3or5XlnKjlvZPliY3op4blm77kuK3mn6Xmib4NCiAgICAgICAgICAgICAgICBsZXQgYWN0aXZhdGVkRWxlbWVudCA9IGZpbmRBbmRBY3RpdmF0ZUVsZW1lbnRTbWFydCgpOw0KICAgICAgICAgICAgICAgIGlmIChhY3RpdmF0ZWRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDMwMCk7IC8vIOetieW+hea7muWKqOWujOaIkA0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gYWN0aXZhdGVkRWxlbWVudDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlpoLmnpzlvZPliY3op4blm77kuK3msqHmnInvvIzov5vooYzmmbrog73mu5rliqjmn6Xmib4NCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muW9k+WJjeinhuWbvuacquaJvuWIsO+8jOW8gOWni+aZuuiDvea7muWKqOafpeaJvicpOw0KDQogICAgICAgICAgICAgICAgLy8g5YWI5Zue5Yiw6aG26YOo6YeN5paw5byA5aeL5p+l5om+DQogICAgICAgICAgICAgICAgc2Nyb2xsZXIuc2Nyb2xsVG9wID0gMDsNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgzMDApOw0KDQogICAgICAgICAgICAgICAgLy8g5LuO6aG26YOo5byA5aeL5p+l5om+DQogICAgICAgICAgICAgICAgYWN0aXZhdGVkRWxlbWVudCA9IGZpbmRBbmRBY3RpdmF0ZUVsZW1lbnRTbWFydCgpOw0KICAgICAgICAgICAgICAgIGlmIChhY3RpdmF0ZWRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dl",
        "ci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya6aG26YOo5Yy65Z+f5r+A5rS75oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBhY3RpdmF0ZWRFbGVtZW50Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaZuuiDvea7muWKqOS4u+W+queOrw0KICAgICAgICAgICAgICAgIGxldCBsYXN0U2Nyb2xsVG9wID0gLTE7DQogICAgICAgICAgICAgICAgY29uc3QgU0NST0xMX0RFTEFZX01TID0gMjUwOw0KICAgICAgICAgICAgICAgIGNvbnN0IE1BWF9TQ1JPTExfQVRURU1QVFMgPSAyMDsgLy8g6ZmQ5Yi25rua5Yqo5qyh5pWwDQogICAgICAgICAgICAgICAgbGV0IHNjcm9sbEF0dGVtcHRzID0gMDsNCg0KICAgICAgICAgICAgICAgIHdoaWxlIChzY3JvbGxlci5zY3JvbGxUb3AgIT09IGxhc3RTY3JvbGxUb3AgJiYgc2Nyb2xsQXR0ZW1wdHMgPCBNQVhfU0NST0xMX0FUVEVNUFRTKSB7DQogICAgICAgICAgICAgICAgICAgIGxhc3RTY3JvbGxUb3AgPSBzY3JvbGxlci5zY3JvbGxUb3A7DQogICAgICAgICAgICAgICAgICAgIHNjcm9sbEF0dGVtcHRzKys7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5ZCR5LiL5rua5Yqo5LiA5Liq5bGP5bmV55qE6auY5bqmDQogICAgICAgICAgICAgICAgICAgIHNjcm9sbGVyLnNjcm9sbFRvcCArPSBzY3JvbGxlci5jbGllbnRIZWlnaHQ7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zyhg6L+957KJ566h55CG5Zmo77ya5pm66IO95r+A5rS75rua5YqoICgke3Njcm9sbEF0dGVtcHRzfS8ke01BWF9TQ1JPTExfQVRURU1QVFN9KWApOw0KDQogICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KFNDUk9MTF9ERUxBWV9NUyk7IC8vIOetieW+hea4suafkw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOafpeaJvuebruagh+WFg+e0oA0KICAgICAgICAgICAgICAgICAgICBhY3RpdmF0ZWRFbGVtZW50ID0gZmluZEFuZEFjdGl2YXRlRWxlbWVudFNtYXJ0KCk7DQogICAgICAgICAgICAgICAgICAgIGlmIChhY3RpdmF0ZWRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muaZuuiDvea7muWKqOa/gOa0u+aIkOWKnycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMzAwKTsgLy8g562J5b6F5rua5Yqo5a6M5oiQDQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYWN0aXZhdGVkRWxlbWVudDsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuWIsOi+vuW6lemDqA0KICAgICAgICAgICAgICAgICAgICBpZiAoc2Nyb2xsZXIuc2Nyb2xsVG9wICsgc2Nyb2xsZXIuY2xpZW50SGVpZ2h0ID49IHNjcm9sbGVyLnNjcm9sbEhlaWdodCAtIDEwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muaZuuiDvea/gOa0u+W3sua7",
        "muWKqOWIsOW6lemDqCcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5pyA5ZCO5qOA5p+l5LiA5qyhDQogICAgICAgICAgICAgICAgICAgICAgICBhY3RpdmF0ZWRFbGVtZW50ID0gZmluZEFuZEFjdGl2YXRlRWxlbWVudFNtYXJ0KCk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWN0aXZhdGVkRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhY3RpdmF0ZWRFbGVtZW50Ow0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlpoLmnpzmnKrmib7liLDvvIzmgaLlpI3ljp/lp4vmu5rliqjkvY3nva4NCiAgICAgICAgICAgICAgICBpZiAoIWFjdGl2YXRlZEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8muaZuuiDvea7muWKqOa/gOa0u+acquaJvuWIsOebruagh+WFg+e0oO+8jOaBouWkjeWOn+Wni+S9jee9ricpOw0KICAgICAgICAgICAgICAgICAgICBzY3JvbGxlci5zY3JvbGxUb3AgPSBvcmlnaW5hbFNjcm9sbFRvcDsNCiAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMjAwKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muiZmuaLn+a7muWKqOa/gOa0u+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWfuuehgOWFg+e0oOa/gOa0u+aWueazle+8iOmZjee6p+aWueahiO+8iQ0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQg55uu5qCH5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKbmiJDlip8NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGJhc2ljRWxlbWVudEFjdGl2YXRpb24oZWxlbWVudCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muS9v+eUqOWfuuehgOa/gOa0u+aWueazlScpOw0KDQogICAgICAgICAgICAgICAgLy8g5bCd6K+V5L2/55SoIEVsZW1lbnRNYW5hZ2VyIOeahOS4k+S4mua/gOa0u+aWueazlQ0KICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2YXRlZCA9IGF3YWl0IEVsZW1lbnRNYW5hZ2VyLmZpbmRBbmRBY3RpdmF0ZUVsZW1lbnQoZWxlbWVudCwgew0KICAgICAgICAgICAgICAgICAgICB3YWl0Rm9yU3RhYmlsaXR5OiBmYWxzZSwNCiAgICAgICAgICAgICAgICAgICAgbWF4UmV0cmllczogMw0KICAgICAgICAgICAgICAgIH0p",
        "Ow0KDQogICAgICAgICAgICAgICAgaWYgKGFjdGl2YXRlZCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8mkVsZW1lbnRNYW5hZ2VyIOa/gOa0u+aIkOWKnycpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlpoLmnpzkuJPkuJrmlrnms5XlpLHotKXvvIzkvb/nlKjnroDljZXmu5rliqgNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWwneivleeugOWNlea7muWKqOa/gOa0uycpOw0KICAgICAgICAgICAgICAgIGVsZW1lbnQuc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcsIGJsb2NrOiAnY2VudGVyJyB9KTsNCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSg1MDApOw0KDQogICAgICAgICAgICAgICAgY29uc3QgaXNWaXNpYmxlID0gRWxlbWVudE1hbmFnZXIuaXNFbGVtZW50VmlzaWJsZShlbGVtZW50KTsNCiAgICAgICAgICAgICAgICBpZiAoaXNWaXNpYmxlKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya566A5Y2V5rua5Yqo5r+A5rS75oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajvvJrmiYDmnInmv4DmtLvmlrnms5Xpg73lpLHotKUnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muWfuuehgOa/gOa0u+aWueazleWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmiYvliqjop6blj5Hlm57orr/mo4Dmn6XvvIjkuJPms6jkuo7lm57orr/njrDmnInnlKjmiLfvvIzkuI3ov5vooYzmiavmj4/vvIkNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHRyaWdnZXJGb2xsb3dVcENoZWNrKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ566h55CG5Zmo77ya5omL5Yqo6Kem5Y+R56uL5Y2z5Zue6K6/Jyk7DQoNCiAgICAgICAgICAgICAgICAvLyDnm7TmjqXojrflj5bnjrDmnInnmoTlvoXlm57orr/nlKjmiLfvvIzkuI3ov5vooYzmiavmj48NCiAgICAgICAgICAgICAgICBjb25zdCBwZW5kaW5nVXNlcnMgPSBGb2xsb3dVcFJlY29yZE1hbmFnZXIuZ2V0UGVuZGluZ1VzZXJzKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muiOt+WPluWIsOW+heWbnuiu",
        "v+eUqOaItycsIHsNCiAgICAgICAgICAgICAgICAgICAgY291bnQ6IHBlbmRpbmdVc2Vycy5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgIHVzZXJzOiBwZW5kaW5nVXNlcnMubWFwKHUgPT4gKHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHUudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICBmb2xsb3dVcENvdW50OiB1LmZvbGxvd1VwQ291bnQsDQogICAgICAgICAgICAgICAgICAgICAgICBkYXlzU2luY2VGaXJzdDogdS5maXJzdENvbnRhY3QgPyBNYXRoLnJvdW5kKChEYXRlLm5vdygpIC0gdS5maXJzdENvbnRhY3QpIC8gKDI0ICogNjAgKiA2MCAqIDEwMDApICogMTApIC8gMTAgOiAnTi9BJw0KICAgICAgICAgICAgICAgICAgICB9KSkNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIGlmIChwZW5kaW5nVXNlcnMubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrml6DlvoXlm57orr/nlKjmiLcnKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbmnInnlKjmiLforrDlvZXkvYbpg73kuI3nrKblkIjlm57orr/mnaHku7YNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG90YWxSZWNvcmRzID0gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlID8gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlLnNpemUgOiAwOw0KICAgICAgICAgICAgICAgICAgICBpZiAodG90YWxSZWNvcmRzID4gMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muacieeUqOaIt+iusOW9leS9huaXoOW+heWbnuiuv+eUqOaItycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3RhbFJlY29yZHMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBFbmFibGVkOiBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBFbmFibGVkJywgZmFsc2UpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjYW5EYXlzOiBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBTY2FuRGF5cycsIDMpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludGVydmFsSG91cnM6IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEludGVydmFsJywgMjQpDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrml6DnlKjmiLforrDlvZXvvIzor7flhYjmiafooYwi5pm66IO95omr5o+P55So5oi3IicpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmiYvliqjmiafooYzlm57orr/vvIjlv73nlaXml7bpl7TpmZDliLbvvIkNCiAgICAgICAgICAgICAgICBjb25z",
        "dCBtYW51YWxCYXRjaFNpemUgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBNYW51YWxCYXRjaFNpemUnLCAyMCk7IC8vIOaJi+WKqOaooeW8j+WkhOeQhuabtOWkmueUqOaItw0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdXNlciBvZiBwZW5kaW5nVXNlcnMuc2xpY2UoMCwgbWFudWFsQmF0Y2hTaXplKSkgeyAvLyDlj6/phY3nva7nmoTmibnph4/lpKflsI8NCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrlvIDlp4vmiYvliqjlm57orr/nlKjmiLcnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXIudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9sbG93VXBDb3VudDogdXNlci5mb2xsb3dVcENvdW50DQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6I635Y+W6K+d5pyv5qih5p2/DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZSA9IEZvbGxvd1VwU2NoZWR1bGVyLmdldEZvbGxvd1VwVGVtcGxhdGUodXNlcik7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRlbXBsYXRlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonnrqHnkIblmajvvJrojrflj5bor53mnK/mqKHmnb/lpLHotKUnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Y+R6YCB5Zue6K6/5raI5oGvDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdWNjZXNzID0gYXdhaXQgdGhpcy5zZW5kRm9sbG93VXBNZXNzYWdlKHVzZXIsIHRlbXBsYXRlKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6K6w5b2V5Zue6K6/57uT5p6cDQogICAgICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkRm9sbG93VXAoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlci51c2VySWQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlci51c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyLmNvbnZlcnNhdGlvbklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3MNCiAgICAgICAgICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrmiYvliqjlm57orr/lrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWU6IHVzZXIudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2Vzcw0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAg",
        "ICAgICAgICAgICAgICAgICAgIC8vIOa3u+WKoOW7tui/nw0KICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgVXRpbHMuZGVsYXkoMjAwMCk7DQoNCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5omL5Yqo5Zue6K6/55So5oi35aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyLnVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonnrqHnkIblmajvvJrmiYvliqjlm57orr/mo4Dmn6XlrozmiJAnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWbnuiuv+WujOaIkOWQju+8jOa7muWKqOWbnuWIsOWIl+ihqOmhtumDqO+8jOaWueS+v+WkhOeQhuaWsOa2iOaBrw0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjcm9sbGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmQtY29sbGFwc2UtY29udGVudC13cmFwcGVyOm5vdChbc3R5bGUqPSJtYXgtaGVpZ2h0OiAwcHgiXSkgLnZ1ZS1yZWN5Y2xlLXNjcm9sbGVyLnNjcm9sbGVyJyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChzY3JvbGxlcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muWbnuiuv+WujOaIkO+8jOato+WcqOa7muWKqOWbnuWIsOWIl+ihqOmhtumDqC4uLicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgc2Nyb2xsZXIuc2Nyb2xsVG9wID0gMDsNCiAgICAgICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KDMwMCk7IC8vIOetieW+hea7muWKqOWujOaIkA0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+i/veeyieeuoeeQhuWZqO+8muW3suWbnuWIsOWIl+ihqOmhtumDqO+8jOWHhuWkh+WkhOeQhuaWsOa2iOaBrycpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoc2Nyb2xsRXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+i/veeyieeuoeeQhuWZqO+8mua7muWKqOWbnumhtumDqOWksei0pScsIHsgZXJyb3I6IHNjcm9sbEVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5omL5Yqo5Zue6K6/5a6M5oiQ5ZCO77yM5Yi35pawVUnmmL7npLoNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIFVJTWFuYWdlciAhPT0gJ3VuZGVmaW5lZCcgJiYgVUlNYW5hZ2VyLnJlbmRlckZvbGxvd1VwTGlzdCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgVUlN",
        "YW5hZ2VyLnJlbmRlckZvbGxvd1VwTGlzdCgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrmiYvliqjlm57orr/lkI7lt7LliLfmlrDov73nsonlkI3ljZVVSScpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgVUlNYW5hZ2VyICE9PSAndW5kZWZpbmVkJyAmJiBVSU1hbmFnZXIudXBkYXRlRm9sbG93VXBTdGF0cykgew0KICAgICAgICAgICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnVwZGF0ZUZvbGxvd1VwU3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5omL5Yqo5Zue6K6/5ZCO5bey5Yi35paw57uf6K6h5L+h5oGvJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGNhdGNoICh1aUVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5omL5Yqo5Zue6K6/5ZCO5Yi35pawVUnlpLHotKUnLCB7IGVycm9yOiB1aUVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5omL5Yqo5Zue6K6/5qOA5p+l5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W6L+957KJ5Yqf6IO954q25oCBDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOeKtuaAgeS/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0U3RhdHVzKCkgew0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICBpc0luaXRpYWxpemVkOiB0aGlzLmlzSW5pdGlhbGl6ZWQsDQogICAgICAgICAgICAgICAgaXNFbmFibGVkOiBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBFbmFibGVkJywgZmFsc2UpLA0KICAgICAgICAgICAgICAgIHNjaGVkdWxlcjogRm9sbG93VXBTY2hlZHVsZXIuZ2V0U3RhdHVzKCksDQogICAgICAgICAgICAgICAgcmVjb3JkczogRm9sbG93VXBSZWNvcmRNYW5hZ2VyLmdldFN0YXRzKCkNCiAgICAgICAgICAgIH07DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaZuuiDveWFg+e0oOWPr+ingeaAp+ajgOa1iyAtIOWinuW8uueJiA0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQg55uu5qCH5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufSDmmK/lkKbnnJ/mraPlj6/op4ENCiAgICAgICAgICovDQogICAgICAgIGlzRWxlbWVudFRydWx5VmlzaWJsZShlbGVtZW50KSB7DQogICAgICAgICAgICBpZiAoIWVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRyeSB7DQog",
        "ICAgICAgICAgICAgICAgLy8g5qOA5p+l5YWD57Sg5piv5ZCm6KKr56e75Yqo5Yiw5Zue5pS25L2N572uDQogICAgICAgICAgICAgICAgY29uc3QgaXRlbVZpZXcgPSBlbGVtZW50LmNsb3Nlc3QoJy52dWUtcmVjeWNsZS1zY3JvbGxlcl9faXRlbS12aWV3Jyk7DQogICAgICAgICAgICAgICAgaWYgKGl0ZW1WaWV3KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybSA9IGl0ZW1WaWV3LnN0eWxlLnRyYW5zZm9ybTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRyYW5zZm9ybSAmJiB0cmFuc2Zvcm0uaW5jbHVkZXMoJ3RyYW5zbGF0ZVkoLTk5OTlweCknKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonnrqHnkIblmajvvJrlhYPntKDlnKhET03lm57mlLbnirbmgIEnLCB7IHRyYW5zZm9ybSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWFg+e0oOaYr+WQpuWcqOinhuWPo+WGhQ0KICAgICAgICAgICAgICAgIGNvbnN0IHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lclJlY3QgPSBlbGVtZW50LmNsb3Nlc3QoJy52dWUtcmVjeWNsZS1zY3JvbGxlcicpPy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCg0KICAgICAgICAgICAgICAgIGlmIChjb250YWluZXJSZWN0KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IHJlY3QudG9wID49IGNvbnRhaW5lclJlY3QudG9wICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWN0LmJvdHRvbSA8PSBjb250YWluZXJSZWN0LmJvdHRvbSAmJg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjdC5oZWlnaHQgPiAwICYmDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWN0LndpZHRoID4gMDsNCg0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+i/veeyieeuoeeQhuWZqO+8muWFg+e0oOWPr+ingeaAp+ajgOa1iycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlzVmlzaWJsZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRSZWN0OiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiByZWN0LnRvcCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3R0b206IHJlY3QuYm90dG9tLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogcmVjdC5oZWlnaHQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHJlY3Qud2lkdGgNCiAgICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgICBjb250YWluZXJSZWN0OiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiBjb250YWluZXJSZWN0LnRvcCwN",
        "CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3R0b206IGNvbnRhaW5lclJlY3QuYm90dG9tDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIHJldHVybiBpc1Zpc2libGU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5Z+656GA5Y+v6KeB5oCn5qOA5rWLDQogICAgICAgICAgICAgICAgcmV0dXJuIHJlY3QuaGVpZ2h0ID4gMCAmJiByZWN0LndpZHRoID4gMDsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieeuoeeQhuWZqO+8muWFg+e0oOWPr+ingeaAp+ajgOa1i+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlrp7ml7blrqLotYTnirbmgIHmm7TmlrDlkozml6Xlv5forrDlvZUNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCDnlKjmiLdJRA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck5hbWUg55So5oi35ZCNDQogICAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gaGFzTGVhZHNUYWcg5piv5ZCm5pyJ55WZ5a6i6LWE5qCH562+DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzb3VyY2Ug5qOA5rWL5p2l5rqQDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVMZWFkc1N0YXR1c1dpdGhMb2dnaW5nKHVzZXJJZCwgdXNlck5hbWUsIGhhc0xlYWRzVGFnLCBzb3VyY2UgPSAndW5rbm93bicpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5pu05paw55WZ5a6i6LWE54q25oCB57yT5a2YDQogICAgICAgICAgICAgICAgaWYgKExlYWRzU3RhdHVzTWFuYWdlciAmJiBMZWFkc1N0YXR1c01hbmFnZXIudXBkYXRlTGVhZHNTdGF0dXMpIHsNCiAgICAgICAgICAgICAgICAgICAgTGVhZHNTdGF0dXNNYW5hZ2VyLnVwZGF0ZUxlYWRzU3RhdHVzKHVzZXJJZCwgaGFzTGVhZHNUYWcsIHNvdXJjZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c55So5oi35bey6I635b6X55WZ5a6i6LWE77yM5pu05paw6L+957KJ6K6w5b2V54q25oCBDQogICAgICAgICAgICAgICAgaWYgKGhhc0xlYWRzVGFnICYmIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5oYXModXNlcklkKSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCByZWNvcmQgPSBGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkQ2FjaGUuZ2V0KHVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHdhc05vdExlYWRzID0gcmVjb3JkLnN0YXR1cyAhPT0gJ2xlYWRzX2FjcXVpcmVkJzsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAod2FzTm90TGVhZHMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlY29y",
        "ZC5zdGF0dXMgPSAnbGVhZHNfYWNxdWlyZWQnOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3JkLmxlYWRzQWNxdWlyZWRUaW1lID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5zZXQodXNlcklkLCByZWNvcmQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnN5bmNUb1N0b3JhZ2VJZk5lZWRlZCgpOw0KDQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+OryDov73nsonnrqHnkIblmajvvJrnlKjmiLfnirbmgIHlt7Lmm7TmlrDkuLrlt7LojrflvpfnlZnlrqLotYQnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91c1N0YXR1czogcmVjb3JkLnN0YXR1cywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWFkc0FjcXVpcmVkVGltZTogbmV3IERhdGUocmVjb3JkLmxlYWRzQWNxdWlyZWRUaW1lKS50b0xvY2FsZVN0cmluZygpDQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOiusOW9leeKtuaAgeWPmOabtOaXpeW/lw0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ566h55CG5Zmo77ya5a6i6LWE54q25oCB5pu05paw5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBoYXNMZWFkc1RhZywNCiAgICAgICAgICAgICAgICAgICAgc291cmNlLA0KICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoKQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo77ya5a6i6LWE54q25oCB5pu05paw5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8gQUnlm57lpI3nlJ/miJDlmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09",
        "PT09PQ0KICAgIGNvbnN0IEFJUmVwbHlHZW5lcmF0b3IgPSB7DQogICAgICAgIC8qKg0KICAgICAgICAgKiDnlJ/miJBBSeWbnuWkjQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlck1lc3NhZ2Ug55So5oi35raI5oGvDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTmFtZSDnlKjmiLflkI0NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGNvbnRleHQg5LiK5LiL5paH5L+h5oGvICjljIXlkKtjb252ZXJzYXRpb25JZCwgbGVhZHNTdGF0dXPnrYkpDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHN0cmluZz59DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBnZW5lcmF0ZVJlcGx5KHVzZXJNZXNzYWdlLCB1c2VyTmFtZSA9ICcnLCBjb250ZXh0ID0ge30pIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W8gOWni+eUn+aIkEFJ5Zue5aSNJywgew0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUxlbmd0aDogdXNlck1lc3NhZ2UubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICBoYXNDb252ZXJzYXRpb25JZDogISFjb250ZXh0LmNvbnZlcnNhdGlvbklkDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDojrflj5bmiJbliJvlu7rkvJror50NCiAgICAgICAgICAgICAgICBsZXQgY2hhdElkID0gbnVsbDsNCiAgICAgICAgICAgICAgICBpZiAoY29udGV4dC5jb252ZXJzYXRpb25JZCAmJiBDb25maWdNYW5hZ2VyLmdldCgnc2Vzc2lvbk1lbW9yeUVuYWJsZWQnLCB0cnVlKSkgew0KICAgICAgICAgICAgICAgICAgICBjaGF0SWQgPSBDaGF0U2Vzc2lvbk1hbmFnZXIuZ2V0T3JDcmVhdGVTZXNzaW9uKGNvbnRleHQuY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+S8muivneiusOW/hu+8muiOt+WPlmNoYXRJZCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnZlcnNhdGlvbklkOiBjb250ZXh0LmNvbnZlcnNhdGlvbklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgIGNoYXRJZDogY2hhdElkLnN1YnN0cmluZygwLCAyMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmnoTlu7ror7fmsYLlj4LmlbANCiAgICAgICAgICAgICAgICBjb25zdCByZXF1ZXN0RGF0YSA9IHRoaXMuYnVpbGRSZXF1ZXN0RGF0YSh1c2VyTWVzc2FnZSwgdXNlck5hbWUsIGNvbnRleHQsIGNoYXRJZCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmt7vliqDnlZnlrqLotYTnirbmgIHosIPor5Xml6Xlv5cNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+Pt++4jyDnlZnlrqLotYTnirbmgIHkvKDpgJLosIPor5UnLCB7DQogICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lLA0KICAgICAgICAgICAgICAgICAgICBsZWFk",
        "c1N0YXR1czogY29udGV4dC5sZWFkc1N0YXR1cywNCiAgICAgICAgICAgICAgICAgICAgaGFzQ2hhdElkOiAhIWNoYXRJZCwNCiAgICAgICAgICAgICAgICAgICAg5Lyg6YCS5pa55byPOiBjaGF0SWQgPyAndmFyaWFibGVzLmxlYWRzU3RhdHVzJyA6ICfns7vnu5/mj5DnpLror40nLA0KICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHJlcXVlc3REYXRhLnZhcmlhYmxlcywNCiAgICAgICAgICAgICAgICAgICAgc3lzdGVtUHJvbXB0OiByZXF1ZXN0RGF0YS5tZXNzYWdlc1swXT8uY29udGVudD8uc3Vic3RyaW5nKDAsIDIwMCkgKyAnLi4uJw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g6LCD55SoRmFzdEdQVCBBUEkNCiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuY2FsbEZhc3RHUFRBUEkocmVxdWVzdERhdGEpOw0KDQogICAgICAgICAgICAgICAgLy8g6Kej5p6Q5ZON5bqUDQogICAgICAgICAgICAgICAgY29uc3QgcmVwbHkgPSB0aGlzLnBhcnNlUmVzcG9uc2UocmVzcG9uc2UpOw0KDQogICAgICAgICAgICAgICAgaWYgKCFyZXBseSkgew0KICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FJ5Zue5aSN5Li656m6Jyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw5Lya6K+d5raI5oGv6K6h5pWwDQogICAgICAgICAgICAgICAgaWYgKGNvbnRleHQuY29udmVyc2F0aW9uSWQgJiYgY2hhdElkKSB7DQogICAgICAgICAgICAgICAgICAgIENoYXRTZXNzaW9uTWFuYWdlci51cGRhdGVTZXNzaW9uTWVzc2FnZUNvdW50KGNvbnRleHQuY29udmVyc2F0aW9uSWQpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCdBSeWbnuWkjeeUn+aIkOaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgcmVwbHlMZW5ndGg6IHJlcGx5Lmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgcHJldmlldzogcmVwbHkuc3Vic3RyaW5nKDAsIDUwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICB1c2VkQ2hhdElkOiAhIWNoYXRJZA0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgcmV0dXJuIHJlcGx5Ow0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign55Sf5oiQQUnlm57lpI3lpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgdXNlck1lc3NhZ2U6IHVzZXJNZXNzYWdlLnN1YnN0cmluZygwLCAxMDApDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDov5Tlm57pu5jorqTlm57lpI0NCiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nZXREZWZhdWx0UmVwbHkoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAg",
        "ICAvKioNCiAgICAgICAgICog5p6E5bu6QVBJ6K+35rGC5pWw5o2uDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyTWVzc2FnZSDnlKjmiLfmtojmga8NCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJOYW1lIOeUqOaIt+WQjQ0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gY29udGV4dCDkuIrkuIvmlocNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGNoYXRJZCDkvJror51JRA0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fQ0KICAgICAgICAgKi8NCiAgICAgICAgYnVpbGRSZXF1ZXN0RGF0YSh1c2VyTWVzc2FnZSwgdXNlck5hbWUsIGNvbnRleHQsIGNoYXRJZCA9IG51bGwpIHsNCiAgICAgICAgICAgIGNvbnN0IHN5c3RlbVByb21wdCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdhdXRvUmVwbHlQcm9tcHQnKSB8fA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmF1dG9SZXBseVByb21wdDsNCg0KICAgICAgICAgICAgLy8g5p6E5bu65raI5oGv5pWw57uEDQogICAgICAgICAgICBjb25zdCBtZXNzYWdlcyA9IFtdOw0KDQogICAgICAgICAgICAvLyDlpoLmnpzmnIljaGF0SWTvvIzlj6rpnIDopoHkvKDpgJLnlKjmiLfmtojmga/vvIxGYXN0R1BU5Lya6Ieq5Yqo5Yqg6L295Y6G5Y+yDQogICAgICAgICAgICBpZiAoY2hhdElkKSB7DQogICAgICAgICAgICAgICAgbWVzc2FnZXMucHVzaCh7DQogICAgICAgICAgICAgICAgICAgIHJvbGU6ICJ1c2VyIiwNCiAgICAgICAgICAgICAgICAgICAgY29udGVudDogdXNlck1lc3NhZ2UNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgLy8g5pegY2hhdElk5pe25L2/55So5Lyg57uf5pa55byP77yM5YyF5ZCr57O757uf5o+Q56S6DQogICAgICAgICAgICAgICAgbWVzc2FnZXMucHVzaCgNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgcm9sZTogInN5c3RlbSIsDQogICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBzeXN0ZW1Qcm9tcHQNCiAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgcm9sZTogInVzZXIiLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogdXNlck1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICAvLyDlpoLmnpzmnInnlKjmiLflkI3vvIzmt7vliqDliLDns7vnu5/mj5DnpLrkuK0NCiAgICAgICAgICAgICAgICBpZiAodXNlck5hbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZXNbMF0uY29udGVudCArPSBgXG5cbuW9k+WJjeeUqOaIt+WQje+8miR7dXNlck5hbWV9YDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmt7vliqDnlZnlrqLotYTnirbmgIHkv6Hmga8NCiAgICAgICAgICAgICAgICBp",
        "ZiAoY29udGV4dCAmJiB0eXBlb2YgY29udGV4dC5sZWFkc1N0YXR1cyA9PT0gJ2Jvb2xlYW4nKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1c1RleHQgPSBjb250ZXh0LmxlYWRzU3RhdHVzID8gJ+W3suagh+iusOS4uueVmeWuoui1hOeUqOaItycgOiAn5pmu6YCa55So5oi3JzsNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZXNbMF0uY29udGVudCArPSBgXG5cbueUqOaIt+eVmeWuoui1hOeKtuaAge+8miR7c3RhdHVzVGV4dH1gOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5p6E5bu66K+35rGC5pWw5o2uDQogICAgICAgICAgICBjb25zdCByZXF1ZXN0RGF0YSA9IHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlczogbWVzc2FnZXMsDQogICAgICAgICAgICAgICAgdGVtcGVyYXR1cmU6IDAuNywNCiAgICAgICAgICAgICAgICBtYXhfdG9rZW5zOiA1MDAsDQogICAgICAgICAgICAgICAgc3RyZWFtOiBmYWxzZQ0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgLy8g5aaC5p6c5pyJY2hhdElk77yM5re75Yqg5Yiw6K+35rGC5Lit77yIRmFzdEdQVOS8muS9v+eUqGNoYXRJZOeuoeeQhuS4iuS4i+aWh++8iQ0KICAgICAgICAgICAgaWYgKGNoYXRJZCkgew0KICAgICAgICAgICAgICAgIHJlcXVlc3REYXRhLmNoYXRJZCA9IGNoYXRJZDsNCg0KICAgICAgICAgICAgICAgIC8vIOWvueS6juaciWNoYXRJZOeahOivt+axgu+8jOWPr+S7pemAmui/h3ZhcmlhYmxlc+S8oOmAkumineWkluS4iuS4i+aWhw0KICAgICAgICAgICAgICAgIGlmICh1c2VyTmFtZSB8fCAoY29udGV4dCAmJiB0eXBlb2YgY29udGV4dC5sZWFkc1N0YXR1cyA9PT0gJ2Jvb2xlYW4nKSkgew0KICAgICAgICAgICAgICAgICAgICByZXF1ZXN0RGF0YS52YXJpYWJsZXMgPSB7fTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAodXNlck5hbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3REYXRhLnZhcmlhYmxlcy51c2VyTmFtZSA9IHVzZXJOYW1lOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRleHQgJiYgdHlwZW9mIGNvbnRleHQubGVhZHNTdGF0dXMgPT09ICdib29sZWFuJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdERhdGEudmFyaWFibGVzLmxlYWRzU3RhdHVzID0gY29udGV4dC5sZWFkc1N0YXR1cyA/ICflt7LmoIforrDkuLrnlZnlrqLotYTnlKjmiLcnIDogJ+aZrumAmueUqOaItyc7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIC8vIOaXoGNoYXRJZOaXtuS/neaMgeWOn+acieeahG1vZGVs5Y+C5pWw77yI5YW85a655oCn77yJDQogICAgICAgICAgICAgICAgcmVxdWVzdERhdGEubW9kZWwgPSAiZ3B0LTMuNS10dXJibyI7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiByZXF1ZXN0RGF0",
        "YTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6LCD55SoRmFzdEdQVCBBUEkgLSDlop7lvLrniYgNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHJlcXVlc3REYXRhIOivt+axguaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxPYmplY3Q+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgY2FsbEZhc3RHUFRBUEkocmVxdWVzdERhdGEpIHsNCiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7DQogICAgICAgICAgICAgICAgY29uc3QgYXBpS2V5ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FwaUtleScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFwaVVybCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdhcGlVcmwnKSB8fCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5hcGlVcmw7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWFwaUtleSkgew0KICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCdBUEnlr4bpkqXmnKrphY3nva4nKSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDorrDlvZXor7fmsYLlvIDlp4vml7bpl7QNCiAgICAgICAgICAgICAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflj5HpgIFBUEnor7fmsYInLCB7DQogICAgICAgICAgICAgICAgICAgIHVybDogYXBpVXJsLA0KICAgICAgICAgICAgICAgICAgICBoYXNBcGlLZXk6ICEhYXBpS2V5LA0KICAgICAgICAgICAgICAgICAgICBtZXNzYWdlQ291bnQ6IHJlcXVlc3REYXRhLm1lc3NhZ2VzLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHJlcXVlc3REYXRhLm1vZGVsLA0KICAgICAgICAgICAgICAgICAgICB0ZW1wZXJhdHVyZTogcmVxdWVzdERhdGEudGVtcGVyYXR1cmUNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOWinuW8uueahOivt+axguWktA0KICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7DQogICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsDQogICAgICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke2FwaUtleX1gLA0KICAgICAgICAgICAgICAgICAgICAnVXNlci1BZ2VudCc6ICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTIwLjAuMC4wIFNhZmFyaS81MzcuMzYnLA0KICAgICAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLA0KICAgICAgICAgICAgICAgICAgICAnQWNjZXB0LUxhbmd1YWdlJzogJ3poLUNOLHpoO3E9MC45LGVuO3E9MC44JywNCiAgICAgICAgICAgICAgICAgICAgJ0NhY2hlLUNvbnRyb2wnOiAnbm8tY2FjaGUnLA0K",
        "ICAgICAgICAgICAgICAgICAgICAnUHJhZ21hJzogJ25vLWNhY2hlJw0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICBHTV94bWxodHRwUmVxdWVzdCh7DQogICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLA0KICAgICAgICAgICAgICAgICAgICB1cmw6IGFwaVVybCwNCiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogaGVhZGVycywNCiAgICAgICAgICAgICAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkocmVxdWVzdERhdGEpLA0KICAgICAgICAgICAgICAgICAgICB0aW1lb3V0OiA0NTAwMCwgLy8g5aKe5Yqg6LaF5pe25pe26Ze0DQogICAgICAgICAgICAgICAgICAgIG9ubG9hZDogZnVuY3Rpb24ocmVzcG9uc2UpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlVGltZSA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmlLbliLBBUEnlk43lupQnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVRpbWU6IHJlc3BvbnNlVGltZSArICdtcycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlTGVuZ3RoOiByZXNwb25zZS5yZXNwb25zZVRleHQubGVuZ3RoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UocmVzcG9uc2UucmVzcG9uc2VUZXh0KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDpqozor4Hlk43lupTmoLzlvI8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFkYXRhLmNob2ljZXMgfHwgIUFycmF5LmlzQXJyYXkoZGF0YS5jaG9pY2VzKSB8fCBkYXRhLmNob2ljZXMubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ0FQSeWTjeW6lOagvOW8j+mUmeivrycsIHsgZGF0YSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoJ0FQSeWTjeW6lOagvOW8j+mUmeivr++8mue8uuWwkWNob2ljZXPlrZfmrrUnKSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygnQVBJ6K+35rGC5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXMsDQogICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVRpbWU6IHJlc3BvbnNlVGltZSArICdtcycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaG9pY2VzQ291bnQ6IGRhdGEuY2hvaWNlcy5sZW5ndGgsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2FnZTogZGF0YS51c2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDorrDlvZXmgKfog73mlbDmja4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5YSFNBdXRvUmVwbHkgJiYgd2luZG93LlhIU0F1dG9SZXBseS5wZXJmb3JtYW5jZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LlhIU0F1dG9SZXBseS5wZXJmb3JtYW5jZS5yZWNvcmRBUElDYWxsKHRydWUsIHJlc3BvbnNlVGltZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGRhdGEpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOivpue7hueahOmUmeivr+WkhOeQhg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgZXJyb3JNZXNzYWdlID0gYEFQSeivt+axguWksei0pTogJHtyZXNwb25zZS5zdGF0dXN9YDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGVycm9yRGV0YWlscyA9IHt9Ow0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBlcnJvckRhdGEgPSBKU09OLnBhcnNlKHJlc3BvbnNlLnJlc3BvbnNlVGV4dCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvckRldGFpbHMgPSBlcnJvckRhdGE7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZXJyb3JEYXRhLmVycm9yICYmIGVycm9yRGF0YS5lcnJvci5tZXNzYWdlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlICs9IGAgLSAke2Vycm9yRGF0YS5lcnJvci5tZXNzYWdlfWA7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yRGV0YWlscy5yYXdSZXNwb25zZSA9IHJlc3BvbnNlLnJlc3BvbnNlVGV4dDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcignQVBJ6K+35rGC5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Rh",
        "dHVzOiByZXNwb25zZS5zdGF0dXMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiByZXNwb25zZS5zdGF0dXNUZXh0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUaW1lOiByZXNwb25zZVRpbWUgKyAnbXMnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JEZXRhaWxzDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOiusOW9leWksei0peeahOaAp+iDveaVsOaNrg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAod2luZG93LlhIU0F1dG9SZXBseSAmJiB3aW5kb3cuWEhTQXV0b1JlcGx5LnBlcmZvcm1hbmNlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuWEhTQXV0b1JlcGx5LnBlcmZvcm1hbmNlLnJlY29yZEFQSUNhbGwoZmFsc2UsIHJlc3BvbnNlVGltZSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGVycm9yTWVzc2FnZSkpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfop6PmnpBBUEnlk43lupTlpLHotKUnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVRleHQ6IHJlc3BvbnNlLnJlc3BvbnNlVGV4dC5zdWJzdHJpbmcoMCwgNTAwKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoJ+ino+aekEFQSeWTjeW6lOWksei0pTogJyArIGVycm9yLm1lc3NhZ2UpKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgb25lcnJvcjogZnVuY3Rpb24oZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlVGltZSA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ0FQSeivt+axgue9kee7nOmUmeivrycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvciwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVRpbWU6IHJlc3BvbnNlVGltZSArICdtcycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBhcGlVcmwNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDorrDlvZXlpLHotKXnmoTmgKfog73mlbDmja4NCiAgICAgICAg",
        "ICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuWEhTQXV0b1JlcGx5ICYmIHdpbmRvdy5YSFNBdXRvUmVwbHkucGVyZm9ybWFuY2UpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuWEhTQXV0b1JlcGx5LnBlcmZvcm1hbmNlLnJlY29yZEFQSUNhbGwoZmFsc2UsIHJlc3BvbnNlVGltZSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoJ+e9kee7nOivt+axguWksei0pe+8jOivt+ajgOafpee9kee7nOi/nuaOpeWSjEFQSeWcsOWdgCcpKTsNCiAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgb250aW1lb3V0OiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlVGltZSA9IERhdGUubm93KCkgLSBzdGFydFRpbWU7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ0FQSeivt+axgui2heaXticsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lb3V0OiA0NTAwMCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVRpbWU6IHJlc3BvbnNlVGltZSArICdtcycNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAvLyDorrDlvZXlpLHotKXnmoTmgKfog73mlbDmja4NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuWEhTQXV0b1JlcGx5ICYmIHdpbmRvdy5YSFNBdXRvUmVwbHkucGVyZm9ybWFuY2UpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuWEhTQXV0b1JlcGx5LnBlcmZvcm1hbmNlLnJlY29yZEFQSUNhbGwoZmFsc2UsIHJlc3BvbnNlVGltZSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoJ+ivt+axgui2heaXtu+8jOivt+ajgOafpee9kee7nOi/nuaOpScpKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOino+aekEFQSeWTjeW6lA0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gcmVzcG9uc2UgQVBJ5ZON5bqUDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd8bnVsbH0NCiAgICAgICAgICovDQogICAgICAgIHBhcnNlUmVzcG9uc2UocmVzcG9uc2UpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZSB8fCAhcmVzcG9uc2UuY2hvaWNlcyB8fCByZXNwb25zZS5jaG9pY2VzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ0FQSeWTjeW6lOagvOW8j+mUmeivrycsIHsgcmVzcG9uc2UgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0",
        "IGNob2ljZSA9IHJlc3BvbnNlLmNob2ljZXNbMF07DQogICAgICAgICAgICAgICAgaWYgKCFjaG9pY2UubWVzc2FnZSB8fCAhY2hvaWNlLm1lc3NhZ2UuY29udGVudCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WTjeW6lOa2iOaBr+agvOW8j+mUmeivrycsIHsgY2hvaWNlIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gY2hvaWNlLm1lc3NhZ2UuY29udGVudC50cmltKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDln7rmnKzlhoXlrrnpqozor4ENCiAgICAgICAgICAgICAgICBpZiAoY29udGVudC5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ0FJ5Zue5aSN5YaF5a655Li656m6Jyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChjb250ZW50Lmxlbmd0aCA+IDEwMDApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ0FJ5Zue5aSN6L+H6ZW/77yM6L+b6KGM5oiq5patJywgeyBvcmlnaW5hbExlbmd0aDogY29udGVudC5sZW5ndGggfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBjb250ZW50LnN1YnN0cmluZygwLCAxMDAwKSArICcuLi4nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiBjb250ZW50Ow0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6Kej5p6Q5ZON5bqU5pe25Y+R55Sf6ZSZ6K+vJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W6buY6K6k5Zue5aSNDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBnZXREZWZhdWx0UmVwbHkoKSB7DQogICAgICAgICAgICBjb25zdCBkZWZhdWx0UmVwbGllcyA9IFsNCiAgICAgICAgICAgICAgICAn5oSf6LCi5oKo55qE5raI5oGv77yM5oiR5Lya5bC95b+r5Zue5aSN5oKo44CCJywNCiAgICAgICAgICAgICAgICAn5oKo5aW977yM5oiR5bey5pS25Yiw5oKo55qE5raI5oGv77yM56iN5ZCO5Lya6K+m57uG5Zue5aSN44CCJywNCiAgICAgICAgICAgICAgICAn6LCi6LCi5oKo55qE5YWz5rOo77yM5oiR5Lya6K6k55yf6ICD6JmR5oKo55qE5bu66K6u44CCJywNCiAgICAgICAgICAgICAgICAn5pS25Yiw5oKo55qE5raI5oGv5LqG77yM6K6p5oiR5Li65oKo5p+l55yL5LiA5LiL44CCJw0KICAgICAgICAgICAgXTsNCg0KICAgICAgICAgICAgY29uc3QgcmFuZG9tSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBkZWZhdWx0UmVwbGllcy5sZW5ndGgpOw0KICAgICAgICAgICAg",
        "cmV0dXJuIGRlZmF1bHRSZXBsaWVzW3JhbmRvbUluZGV4XTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5rWL6K+VQVBJ6L+e5o6lDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgdGVzdEFQSUNvbm5lY3Rpb24oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmtYvor5VBUEnov57mjqUuLi4nKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRlc3RNZXNzYWdlID0gIuS9oOWlvSI7DQogICAgICAgICAgICAgICAgY29uc3QgcmVwbHkgPSBhd2FpdCB0aGlzLmdlbmVyYXRlUmVwbHkodGVzdE1lc3NhZ2UsICLmtYvor5XnlKjmiLciKTsNCg0KICAgICAgICAgICAgICAgIGlmIChyZXBseSAmJiByZXBseSAhPT0gdGhpcy5nZXREZWZhdWx0UmVwbHkoKSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygnQVBJ6L+e5o6l5rWL6K+V5oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdBUEnov57mjqXmtYvor5XlpLHotKXvvJrov5Tlm57pu5jorqTlm57lpI0nKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdBUEnov57mjqXmtYvor5XlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOaZuuiDvemHjeivleeuoeeQhuWZqCAtIOS4k+mXqOWkhOeQhuiZmuaLn+a7muWKqOeOr+Wig+S4i+eahOmHjeivlemAu+i+kQ0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgU21hcnRSZXRyeU1hbmFnZXIgPSB7DQogICAgICAgIC8vIOmHjeivlemFjee9rg0KICAgICAgICBtYXhSZXRyaWVzOiA1LA0KICAgICAgICBiYXNlRGVsYXk6IDUwMCwNCiAgICAgICAgbWF4RGVsYXk6IDUwMDAsDQogICAgICAgIGJhY2tvZmZNdWx0aXBsaWVyOiAxLjUsDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOW4puaZuuiDvemHjeivleeahOWFg+e0oOaTjeS9nCAtIOS8mOWMlueJiO+8jOmBv+WFjemHjeWkjea/gOa0uw0KICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBvcGVyYXRpb24g6KaB5omn6KGM55qE5pON5L2cDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudCDnm67moIflhYPntKANCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IG9wZXJhdGlvbk5hbWUg5pON5L2c5ZCN56ewDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBv",
        "cHRpb25zIOmAiemhuQ0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgZXhlY3V0ZVdpdGhSZXRyeShvcGVyYXRpb24sIGVsZW1lbnQsIG9wZXJhdGlvbk5hbWUsIG9wdGlvbnMgPSB7fSkgew0KICAgICAgICAgICAgY29uc3QgbWF4UmV0cmllcyA9IG9wdGlvbnMubWF4UmV0cmllcyB8fCB0aGlzLm1heFJldHJpZXM7DQogICAgICAgICAgICBjb25zdCBza2lwRWxlbWVudEFjdGl2YXRpb24gPSBvcHRpb25zLnNraXBFbGVtZW50QWN0aXZhdGlvbiB8fCBmYWxzZTsNCiAgICAgICAgICAgIGxldCBsYXN0RXJyb3IgPSBudWxsOw0KICAgICAgICAgICAgbGV0IGVsZW1lbnRBY3RpdmF0ZWQgPSBmYWxzZTsgLy8g6Lef6Liq5YWD57Sg5piv5ZCm5bey57uP6KKr5r+A5rS76L+HDQoNCiAgICAgICAgICAgIGZvciAobGV0IGF0dGVtcHQgPSAwOyBhdHRlbXB0IDwgbWF4UmV0cmllczsgYXR0ZW1wdCsrKSB7DQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDmiafooYzmk43kvZw6ICR7b3BlcmF0aW9uTmFtZX0gKOWwneivlSAke2F0dGVtcHQgKyAxfS8ke21heFJldHJpZXN9KWAsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHNraXBFbGVtZW50QWN0aXZhdGlvbiwNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRBY3RpdmF0ZWQNCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5pm66IO95YWD57Sg5r+A5rS777ya5Y+q5Zyo6ZyA6KaB5pe25r+A5rS777yM6YG/5YWN6YeN5aSNDQogICAgICAgICAgICAgICAgICAgIGlmICghc2tpcEVsZW1lbnRBY3RpdmF0aW9uICYmIGVsZW1lbnQgJiYgIWVsZW1lbnRBY3RpdmF0ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IEVsZW1lbnRNYW5hZ2VyLmlzRWxlbWVudFZpc2libGUoZWxlbWVudCk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzVmlzaWJsZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6aaW5qyh5qOA5rWL5Yiw5YWD57Sg5LiN5Y+v6KeB77yM5bCd6K+V5r+A5rS7Jyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYWN0aXZhdGVkID0gYXdhaXQgRWxlbWVudE1hbmFnZXIuZmluZEFuZEFjdGl2YXRlRWxlbWVudChlbGVtZW50LCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdhaXRGb3JTdGFiaWxpdHk6IGZhbHNlLCAvLyDot7Pov4fnqLPlrprmgKfnrYnlvoXvvIjlt7LlnKjlpJblsYLlpITnkIbvvIkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF4UmV0cmllczogMiAvLyDlh4/lsJHlhoXpg6jph43or5XmrKHmlbANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghYWN0aXZhdGVkKSB7DQogICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcign5peg5rOV5r+A5rS75YWD57SgJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudEFjdGl2YXRlZCA9IHRydWU7IC8vIOagh+iusOW3sua/gOa0uw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5YWD57Sg5r+A5rS75oiQ5Yqf77yM5ZCO57ut6YeN6K+V5bCG6Lez6L+H5r+A5rS7Jyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRBY3RpdmF0ZWQgPSB0cnVlOyAvLyDlhYPntKDlt7Llj6/op4HvvIzmoIforrDkuLrlt7Lmv4DmtLsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WFg+e0oOW3suWPr+inge+8jOi3s+i/h+a/gOa0uycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5omn6KGM5pON5L2cDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG9wZXJhdGlvbigpOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgIT09IGZhbHNlICYmIHJlc3VsdCAhPT0gbnVsbCAmJiByZXN1bHQgIT09IHVuZGVmaW5lZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGDmk43kvZzmiJDlip86ICR7b3BlcmF0aW9uTmFtZX0gKOWwneivlSAke2F0dGVtcHQgKyAxfSlgKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+aTjeS9nOi/lOWbnuWksei0pee7k+aenCcpOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICBsYXN0RXJyb3IgPSBlcnJvcjsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oYOaTjeS9nOWksei0pTogJHtvcGVyYXRpb25OYW1lfSAo5bCd6K+VICR7YXR0ZW1wdCArIDF9LyR7bWF4UmV0cmllc30pYCwgew0KICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50QWN0aXZhdGVkDQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr+WFg+e0oOa/gOa0u+ebuOWFs+eahOmUmeivr++8jOmHjee9rua/gOa0u+eKtuaAgQ0KICAgICAgICAgICAgICAgICAgICBpZiAoZXJyb3IubWVzc2FnZS5pbmNsdWRlcygn5r+A5rS7JykgfHwgZXJyb3IubWVzc2FnZS5pbmNsdWRlcygn5Y+v6KeBJykgfHwgZXJyb3IubWVzc2FnZS5pbmNsdWRlcygn5YWD57SgJykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAg",
        "IGVsZW1lbnRBY3RpdmF0ZWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5qOA5rWL5Yiw5YWD57Sg55u45YWz6ZSZ6K+v77yM6YeN572u5r+A5rS754q25oCBJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzkuI3mmK/mnIDlkI7kuIDmrKHlsJ3or5XvvIznrYnlvoXlkI7ph43or5UNCiAgICAgICAgICAgICAgICAgICAgaWYgKGF0dGVtcHQgPCBtYXhSZXRyaWVzIC0gMSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVsYXkgPSBNYXRoLm1pbigNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJhc2VEZWxheSAqIE1hdGgucG93KHRoaXMuYmFja29mZk11bHRpcGxpZXIsIGF0dGVtcHQpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWF4RGVsYXkNCiAgICAgICAgICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zyhg562J5b6FICR7ZGVsYXl9bXMg5ZCO6YeN6K+VYCk7DQogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheShkZWxheSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWPquWcqOWFg+e0oOebuOWFs+mUmeivr+aXtuWIt+aWsOWuueWZqA0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFlbGVtZW50QWN0aXZhdGVkICYmIGVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WIt+aWsOWuueWZqOS7peWHhuWkh+mHjeivlScpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVsZW1lbnRNYW5hZ2VyLnJlZnJlc2goKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgxMDApOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuZXJyb3IoYOaTjeS9nOacgOe7iOWksei0pTogJHtvcGVyYXRpb25OYW1lfWAsIHsNCiAgICAgICAgICAgICAgICBtYXhSZXRyaWVzLA0KICAgICAgICAgICAgICAgIGVsZW1lbnRBY3RpdmF0ZWQsDQogICAgICAgICAgICAgICAgbGFzdEVycm9yOiBsYXN0RXJyb3I/Lm1lc3NhZ2UNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgdGhyb3cgbGFzdEVycm9yIHx8IG5ldyBFcnJvcihg5pON5L2c5aSx6LSlOiAke29wZXJhdGlvbk5hbWV9YCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOW4pumHjeivleeahOeCueWHu+aTjeS9nA0KICAgICAgICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQg6KaB54K55Ye755qE5YWD57SgDQogICAgICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fQ0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgY2xpY2tXaXRoUmV0cnkoZWxlbWVudCkgew0KICAgICAgICAgICAg",
        "cmV0dXJuIHRoaXMuZXhlY3V0ZVdpdGhSZXRyeSgNCiAgICAgICAgICAgICAgICAoKSA9PiBVdGlscy5zaW11bGF0ZUNsaWNrKGVsZW1lbnQpLA0KICAgICAgICAgICAgICAgIGVsZW1lbnQsDQogICAgICAgICAgICAgICAgJ+eCueWHu+WFg+e0oCcNCiAgICAgICAgICAgICk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOW4pumHjeivleeahOWFg+e0oOafpeaJvg0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3Ig6YCJ5oup5ZmoDQogICAgICAgICAqIEBwYXJhbSB7RWxlbWVudH0gcGFyZW50IOeItuWFg+e0oA0KICAgICAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxFbGVtZW50Pn0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGZpbmRFbGVtZW50V2l0aFJldHJ5KHNlbGVjdG9yLCBwYXJlbnQgPSBkb2N1bWVudCkgew0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuZXhlY3V0ZVdpdGhSZXRyeSgNCiAgICAgICAgICAgICAgICAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBVdGlscy5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yLCBwYXJlbnQpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoIWVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihg5YWD57Sg5pyq5om+5YiwOiAke3NlbGVjdG9yfWApOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBlbGVtZW50Ow0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgbnVsbCwNCiAgICAgICAgICAgICAgICBg5p+l5om+5YWD57SgOiAke3NlbGVjdG9yfWANCiAgICAgICAgICAgICk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyBBUEnph43or5XnrqHnkIblmagNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IEFQSVJldHJ5TWFuYWdlciA9IHsNCiAgICAgICAgbWF4UmV0cmllczogMywNCiAgICAgICAgcmV0cnlEZWxheTogMTAwMCwNCiAgICAgICAgYmFja29mZk11bHRpcGxpZXI6IDIsDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOW4pumHjeivleeahEFQSeiwg+eUqA0KICAgICAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBhcGlDYWxsIEFQSeiwg+eUqOWHveaVsA0KICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBhcmdzIOWPguaVsA0KICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gcmV0cnlDb3VudCDlvZPliY3ph43or5XmrKHmlbANCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2V9DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBjYWxsV2l0aFJldHJ5KGFwaUNhbGwsIGFyZ3MgPSBbXSwgcmV0cnlDb3VudCA9IDApIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGFwaUNhbGwuYXBwbHkoQUlSZXBseUdlbmVyYXRvciwgYXJncyk7DQogICAg",
        "ICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIGlmIChyZXRyeUNvdW50IDwgdGhpcy5tYXhSZXRyaWVzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlbGF5ID0gdGhpcy5yZXRyeURlbGF5ICogTWF0aC5wb3codGhpcy5iYWNrb2ZmTXVsdGlwbGllciwgcmV0cnlDb3VudCk7DQoNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oYEFQSeiwg+eUqOWksei0pe+8jCR7ZGVsYXl9bXPlkI7ph43or5VgLCB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXRyeUNvdW50OiByZXRyeUNvdW50ICsgMSwNCiAgICAgICAgICAgICAgICAgICAgICAgIG1heFJldHJpZXM6IHRoaXMubWF4UmV0cmllcywNCiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlDQogICAgICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgICAgIGF3YWl0IFV0aWxzLmRlbGF5KGRlbGF5KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2FsbFdpdGhSZXRyeShhcGlDYWxsLCBhcmdzLCByZXRyeUNvdW50ICsgMSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdBUEnosIPnlKjph43or5XmrKHmlbDlt7Lovr7kuIrpmZAnLCB7DQogICAgICAgICAgICAgICAgICAgICAgICBtYXhSZXRyaWVzOiB0aGlzLm1heFJldHJpZXMsDQogICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g55So5oi355WM6Z2i566h55CG5ZmoDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjb25zdCBVSU1hbmFnZXIgPSB7DQogICAgICAgIHBhbmVsOiBudWxsLA0KICAgICAgICBtaW5pRmxvYXQ6IG51bGwsDQogICAgICAgIGlzVmlzaWJsZTogZmFsc2UsDQogICAgICAgIGlzTWluaW1pemVkOiBmYWxzZSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yid5aeL5YyW55So5oi355WM6Z2iDQogICAgICAgICAqLw0KICAgICAgICBpbml0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZUNvbnRyb2xQYW5lbCgpOw0KICAgICAgICAgICAgICAgIHRoaXMuYXR0YWNoRXZlbnRMaXN0ZW5lcnMoKTsNCiAgICAgICAgICAgICAgICB0aGlzLmxvYWRDb25maWcoKTsgLy8g5Yqg6L295omA5pyJ6YWN572u5YyF5ous5pm66IO96I635a6i6K6+572uDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVVSSgpOw0KICAgICAgICAgICAgICAgIHRoaXMuc3RhcnRTdGF0c1VwZGF0ZVRpbWVyKCk7IC8vIOWQr+WKqOe7n+iuoeS/oeaBr+Wumuacn+abtOaW",
        "sA0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfnlKjmiLfnlYzpnaLliJ3lp4vljJblrozmiJAnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfnlKjmiLfnlYzpnaLliJ3lp4vljJblpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlkK/liqjnu5/orqHkv6Hmga/lrprmnJ/mm7TmlrDlrprml7blmagNCiAgICAgICAgICovDQogICAgICAgIHN0YXJ0U3RhdHNVcGRhdGVUaW1lcigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5riF6Zmk546w5pyJ5a6a5pe25ZmoDQogICAgICAgICAgICAgICAgaWYgKHRoaXMuc3RhdHNVcGRhdGVUaW1lcikgew0KICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuc3RhdHNVcGRhdGVUaW1lcik7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5q+PMzDnp5Lmm7TmlrDkuIDmrKHnu5/orqHkv6Hmga8NCiAgICAgICAgICAgICAgICB0aGlzLnN0YXRzVXBkYXRlVGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUZvbGxvd1VwU3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5a6a5pyf5pu05paw57uf6K6h5L+h5oGv5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0sIDMwMDAwKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1ZygnVUnnrqHnkIblmajvvJrnu5/orqHkv6Hmga/lrprmnJ/mm7TmlrDlrprml7blmajlt7LlkK/liqgnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdVSeeuoeeQhuWZqO+8muWQr+WKqOe7n+iuoeabtOaWsOWumuaXtuWZqOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWBnOatoue7n+iuoeS/oeaBr+Wumuacn+abtOaWsOWumuaXtuWZqA0KICAgICAgICAgKi8NCiAgICAgICAgc3RvcFN0YXRzVXBkYXRlVGltZXIoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnN0YXRzVXBkYXRlVGltZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnN0YXRzVXBkYXRlVGltZXIpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRzVXBkYXRlVGltZXIgPSBudWxsOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ1VJ566h55CG5Zmo77ya57uf6K6h5L+h",
        "5oGv5a6a5pyf5pu05paw5a6a5pe25Zmo5bey5YGc5q2iJyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ1VJ566h55CG5Zmo77ya5YGc5q2i57uf6K6h5pu05paw5a6a5pe25Zmo5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yib5bu65o6n5Yi26Z2i5p2/DQogICAgICAgICAqLw0KICAgICAgICBjcmVhdGVDb250cm9sUGFuZWwoKSB7DQogICAgICAgICAgICAvLyDmt7vliqBDU1PmoLflvI8NCiAgICAgICAgICAgIHRoaXMuYWRkU3R5bGVzKCk7DQoNCiAgICAgICAgICAgIC8vIOWIm+W7uumdouadv+WuueWZqA0KICAgICAgICAgICAgdGhpcy5wYW5lbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOw0KICAgICAgICAgICAgdGhpcy5wYW5lbC5pZCA9ICd4aHMtYWktY29udHJvbC1wYW5lbCc7DQogICAgICAgICAgICB0aGlzLnBhbmVsLmlubmVySFRNTCA9IHRoaXMuZ2V0Q29udHJvbFBhbmVsSFRNTCgpOw0KDQogICAgICAgICAgICAvLyDmt7vliqDliLDpobXpnaINCiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5wYW5lbCk7DQoNCiAgICAgICAgICAgIC8vIOiuvue9ruWIneWni+S9jee9rg0KICAgICAgICAgICAgdGhpcy5zZXRJbml0aWFsUG9zaXRpb24oKTsNCg0KICAgICAgICAgICAgLy8g5qOA5p+l5piv5ZCm5bqU6K+l5Lul5pyA5bCP5YyW54q25oCB5ZCv5YqoDQogICAgICAgICAgICBjb25zdCBzYXZlZFBvc2l0aW9uID0gdGhpcy5sb2FkUGFuZWxQb3NpdGlvbigpOw0KICAgICAgICAgICAgaWYgKHNhdmVkUG9zaXRpb24gJiYgc2F2ZWRQb3NpdGlvbi5pc01pbmltaXplZCkgew0KICAgICAgICAgICAgICAgIC8vIOW7tui/n+acgOWwj+WMlu+8jOehruS/nemdouadv+WujOWFqOWIneWni+WMlg0KICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICB0aGlzLm1pbmltaXplVG9GbG9hdCgpOw0KICAgICAgICAgICAgICAgIH0sIDEwMCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5o6n5Yi26Z2i5p2/5bey5Yib5bu6Jyk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa3u+WKoENTU+agt+W8jw0KICAgICAgICAgKi8NCiAgICAgICAgYWRkU3R5bGVzKCkgew0KICAgICAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd4aHMtYWktc3R5bGVzJykpIHJldHVybjsNCg0KICAgICAgICAgICAgY29uc3Qgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpOw0KICAgICAgICAgICAgc3R5bGUuaWQgPSAneGhzLWFpLXN0eWxlcyc7DQogICAgICAgICAgICBzdHlsZS50ZXh0Q29udGVudCA9IGANCiAgICAgICAgICAgICAgICAvKiDkuLvpnaLm",
        "nb/moLflvI8gKi8NCiAgICAgICAgICAgICAgICAjeGhzLWFpLWNvbnRyb2wtcGFuZWwgew0KICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBSb2JvdG8sIHNhbnMtc2VyaWY7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICM2NjdlZWEgMCUsICM3NjRiYTIgMTAwJSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEycHg7DQogICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMTBweCAzMHB4IHJnYmEoMCwgMCwgMCwgMC4zKTsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7DQogICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7DQogICAgICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47DQogICAgICAgICAgICAgICAgICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cigxMHB4KTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOmdouadv+WktOmDqCAqLw0KICAgICAgICAgICAgICAgIC54aHMtYWktcGFuZWwtaGVhZGVyIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMnB4IDE2cHg7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1wYW5lbC10aXRsZSB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIGdhcDogOHB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE2cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1pY29uIHsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktdmVyc2lvbiB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4y",
        "KTsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMnB4IDZweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDExcHg7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1wYW5lbC1jb250cm9scyB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGdhcDogNHB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOmdouadv+WGheWuuSAqLw0KICAgICAgICAgICAgICAgIC54aHMtYWktcGFuZWwtY29udGVudCB7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE2cHg7DQogICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDcwdmg7DQogICAgICAgICAgICAgICAgICAgIG92ZXJmbG93LXk6IGF1dG87DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLyog54q25oCB5Yy65Z+fICovDQogICAgICAgICAgICAgICAgLnhocy1haS1zdGF0dXMtc2VjdGlvbiB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4Ow0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNnB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3RhdHVzLWl0ZW0gew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDhweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXN0YXR1cy1pdGVtOmxhc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3RhdHVzLWxhYmVsIHsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDsNCiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC45Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3RhdHVzLXZhbHVlIHsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1zdGF0dXMtaW5kaWNhdG9yIHsNCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDhweDsNCiAgICAgICAg",
        "ICAgICAgICAgICAgaGVpZ2h0OiA4cHg7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmNDc1NzsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDhweDsNCiAgICAgICAgICAgICAgICAgICAgYW5pbWF0aW9uOiBwdWxzZSAycyBpbmZpbml0ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXN0YXR1cy1pbmRpY2F0b3IucnVubmluZyB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMyZWQ1NzM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgQGtleWZyYW1lcyBwdWxzZSB7DQogICAgICAgICAgICAgICAgICAgIDAlLCAxMDAlIHsgb3BhY2l0eTogMTsgfQ0KICAgICAgICAgICAgICAgICAgICA1MCUgeyBvcGFjaXR5OiAwLjU7IH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDmjqfliLbljLrln58gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLWNvbnRyb2wtc2VjdGlvbiB7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1tYWluLWNvbnRyb2xzIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAgZ2FwOiA4cHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1xdWljay1hY3Rpb25zIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAgZ2FwOiA4cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLyog5oyJ6ZKu5qC35byPICovDQogICAgICAgICAgICAgICAgLnhocy1haS1idG4gew0KICAgICAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogOHB4IDE2cHg7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDsNCiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlOw0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgICAgICAgICAgICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDVweCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1idG46aG92ZXIgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5k",
        "OiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7DQogICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJ0bjphY3RpdmUgew0KICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1idG4tcHJpbWFyeSB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICNmZjZiNmIsICNlZTVhMjQpOw0KICAgICAgICAgICAgICAgICAgICBmbGV4OiAxOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYnRuLXByaW1hcnk6aG92ZXIgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjZmY1MjUyLCAjZTU1MTAwKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJ0bi1zZWNvbmRhcnkgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpOw0KICAgICAgICAgICAgICAgICAgICBmbGV4OiAxOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYnRuLXNtYWxsIHsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNnB4IDEycHg7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJ0bi1taW5pbWl6ZSB7DQogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAyNHB4Ow0KICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI0cHg7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE2cHg7DQogICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOWwj+aCrOa1ruahhuagt+W8jyAqLw0KICAgICAgICAgICAgICAgICN4aHMtYWktbWluaS1mbG9hdCB7DQogICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDsNCiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAyMHB4Ow0KICAgICAgICAgICAgICAgICAgICByaWdodDogMjBweDsNCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDYwcHg7DQogICAgICAgICAgICAgICAgICAgIGhlaWdodDogNjBweDsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzY2N2VlYSAwJSwgIzc2NGJhMiAxMDAl",
        "KTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlOw0KICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwIDRweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4zKTsNCiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICAgICAgICAgICAgICAgICB6LWluZGV4OiA5OTk5OTk7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDsNCiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTsNCiAgICAgICAgICAgICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTsNCiAgICAgICAgICAgICAgICAgICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICN4aHMtYWktbWluaS1mbG9hdDpob3ZlciB7DQogICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTsNCiAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMCA2cHggMjVweCByZ2JhKDAsIDAsIDAsIDAuNCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgI3hocy1haS1taW5pLWZsb2F0OmFjdGl2ZSB7DQogICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLyog5bCP5oKs5rWu5qGG5ouW5ou95pe255qE5qC35byPICovDQogICAgICAgICAgICAgICAgI3hocy1haS1taW5pLWZsb2F0LmRyYWdnaW5nIHsNCiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogbm9uZTsNCiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTsNCiAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMCA4cHggMzBweCByZ2JhKDAsIDAsIDAsIDAuNSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1idG4tY2xvc2U6aG92ZXIgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmY0NzU3Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOmFjee9ruWMuuWfnyAqLw0KICAgICAgICAgICAgICAgIC54aHMtYWktY29uZmlnLXNlY3Rpb24gew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRv",
        "bTogMTZweDsNCiAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWNvbmZpZy1oZWFkZXIgew0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMnB4IDE2cHg7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTsNCiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICAgICAgICAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWNvbmZpZy1jb250ZW50IHsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTZweDsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWNvbmZpZy1jb250ZW50LmV4cGFuZGVkIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb3JtLWdyb3VwIHsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvcm0tZ3JvdXAgbGFiZWwgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwOw0KICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb3JtLWdyb3VwIGlucHV0LA0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9ybS1ncm91cCB0ZXh0YXJlYSwNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvcm0tZ3JvdXAgc2VsZWN0IHsNCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDhweCAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDsNCiAgICAgICAgICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgICAg",
        "ICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvcm0tZ3JvdXAgaW5wdXQ6OnBsYWNlaG9sZGVyLA0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9ybS1ncm91cCB0ZXh0YXJlYTo6cGxhY2Vob2xkZXIgew0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9ybS1ncm91cCBpbnB1dDpmb2N1cywNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvcm0tZ3JvdXAgdGV4dGFyZWE6Zm9jdXMsDQogICAgICAgICAgICAgICAgLnhocy1haS1mb3JtLWdyb3VwIHNlbGVjdDpmb2N1cyB7DQogICAgICAgICAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpOw0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMTUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9ybS1hY3Rpb25zIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAgZ2FwOiA4cHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDE2cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLyog5pel5b+X5Yy65Z+fICovDQogICAgICAgICAgICAgICAgLnhocy1haS1sb2ctc2VjdGlvbiB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4Ow0KICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWhlYWRlciB7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEycHggMTZweDsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWNvbnRyb2xzIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAgZ2FwOiA4cHg7DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1sb2ct",
        "Y29udHJvbHMgc2VsZWN0IHsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNHB4IDhweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1sb2ctY29udGVudCB7DQogICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDIwMHB4Ow0KICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdy15OiBhdXRvOw0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ0NvdXJpZXIgTmV3JywgbW9ub3NwYWNlOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7DQogICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1sb2ctZW1wdHkgew0KICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNjsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWVudHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA0cHggOHB4Ow0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1sb2ctZW50cnkuaW5mbyB7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgIzJlZDU3MzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWxvZy1lbnRyeS53YXJuIHsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjZmZhNTAyOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWVudHJ5LmVycm9yIHsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjZmY0NzU3Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWVudHJ5LmRlYnVnIHsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjNTM1MmVkOw0KICAgICAgICAgICAg",
        "ICAgICAgICBvcGFjaXR5OiAwLjg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1sb2ctdGltZSB7DQogICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNzsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1sb2ctbGV2ZWwgew0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwOw0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDhweDsNCiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMXB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOa7muWKqOadoeagt+W8jyAqLw0KICAgICAgICAgICAgICAgIC54aHMtYWktcGFuZWwtY29udGVudDo6LXdlYmtpdC1zY3JvbGxiYXIsDQogICAgICAgICAgICAgICAgLnhocy1haS1sb2ctY29udGVudDo6LXdlYmtpdC1zY3JvbGxiYXIgew0KICAgICAgICAgICAgICAgICAgICB3aWR0aDogNnB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktcGFuZWwtY29udGVudDo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2ssDQogICAgICAgICAgICAgICAgLnhocy1haS1sb2ctY29udGVudDo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXBhbmVsLWNvbnRlbnQ6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iLA0KICAgICAgICAgICAgICAgIC54aHMtYWktbG9nLWNvbnRlbnQ6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1wYW5lbC1jb250ZW50Ojotd2Via2l0LXNjcm9sbGJhci10aHVtYjpob3ZlciwNCiAgICAgICAgICAgICAgICAueGhzLWFpLWxvZy1jb250ZW50Ojotd2Via2l0LXNjcm9sbGJhci10aHVtYjpob3ZlciB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDlk43lupTlvI/orr7orqEgKi8NCiAgICAgICAgICAgICAgICBAbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHsNCiAgICAgICAgICAgICAgICAgICAgI3hocy1haS1jb250cm9sLXBhbmVsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBjYWxjKDEwMHZ3",
        "IC0gNDBweCkgIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDIwcHggIWltcG9ydGFudDsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAyMHB4ICFpbXBvcnRhbnQ7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAueGhzLWFpLW1haW4tY29udHJvbHMgew0KICAgICAgICAgICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIC54aHMtYWktZm9ybS1hY3Rpb25zIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDpu5HlkI3ljZXmoLflvI8gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLWJsYWNrbGlzdC1saXN0IHsNCiAgICAgICAgICAgICAgICAgICAgbWF4LWhlaWdodDogMTUwcHg7DQogICAgICAgICAgICAgICAgICAgIG92ZXJmbG93LXk6IGF1dG87DQogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNXB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJsYWNrbGlzdC1pdGVtIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJsYWNrbGlzdC1pdGVtOmxhc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYmxhY2tsaXN0LWluZm8gew0KICAgICAgICAgICAgICAgICAgICBmbGV4OiAxOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYmxhY2tsaXN0LW5hbWUgew0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgICAgICAgICAgbWFy",
        "Z2luLWJvdHRvbTogMnB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYmxhY2tsaXN0LW1ldGEgew0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOGVtOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYmxhY2tsaXN0LXJlbW92ZSB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCA4NywgODcsIDAuMik7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMnB4IDVweDsNCiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOGVtOw0KICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMnM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1ibGFja2xpc3QtcmVtb3ZlOmhvdmVyIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDg3LCA4NywgMC41KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJsYWNrbGlzdC1lbXB0eSB7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7DQogICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOS8muivneiusOW/hueuoeeQhuagt+W8jyAqLw0KICAgICAgICAgICAgICAgIC54aHMtYWktc2Vzc2lvbi1zdGF0cyB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1zdGF0LWl0ZW0gew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDNweCAwOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90",
        "dG9tOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3RhdC1pdGVtOmxhc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3RhdC1pdGVtIHNwYW46Zmlyc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOWVtOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3RhdC1pdGVtIHNwYW46bGFzdC1jaGlsZCB7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmOw0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJ0bi1kYW5nZXIgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgODcsIDg3LCAwLjIpOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDg3LCA4NywgMC4zKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJ0bi1kYW5nZXI6aG92ZXIgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgODcsIDg3LCAwLjQpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHJnYmEoMjU1LCA4NywgODcsIDAuNSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1pbnB1dC1ncm91cCB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWlucHV0LWdyb3VwIGlucHV0IHsNCiAgICAgICAgICAgICAgICAgICAgZmxleDogMTsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLyog6YWN572u566h55CG5qC35byPICovDQogICAgICAgICAgICAgICAgLnhocy1haS1idXR0b24tZ3JvdXAgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBnYXA6IDhweDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYnV0dG9uLWdyb3VwIC54aHMtYWktYnRuIHsNCiAgICAgICAgICAgICAgICAgICAgZmxleDogMTsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4Ow0KICAgICAg",
        "ICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktY29uZmlnLXN0YXRzIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXN0YXQtaXRlbSB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3RhdC1pdGVtOmxhc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3RhdC1sYWJlbCB7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsNCiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC44Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3RhdC12YWx1ZSB7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjNENBRjUwOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOiBmuWFiei/m+e6v+iuvue9ruagt+W8jyAqLw0KICAgICAgICAgICAgICAgIC54aHMtYWktc3BvdGxpZ2h0LXN0YXRzIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDlg7XlsLjmnKror7vlpITnkIbmoLflvI8gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLXpvbWJpZS1zdGF0cyB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1zcG90bGlnaHQtc3RhdHMgLnhocy1haS1zdGF0LWl0ZW0g",
        "ew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXNwb3RsaWdodC1zdGF0cyAueGhzLWFpLXN0YXQtaXRlbTpsYXN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXNwb3RsaWdodC1zdGF0cyAueGhzLWFpLXN0YXQtbGFiZWwgew0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc3BvdGxpZ2h0LXN0YXRzIC54aHMtYWktc3RhdC12YWx1ZSB7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmOw0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAjeGhzLWFpLXNwb3RsaWdodC10ZW1wbGF0ZSB7DQogICAgICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEyMHB4Ow0KICAgICAgICAgICAgICAgICAgICByZXNpemU6IHZlcnRpY2FsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOi/veeyieWKn+iDveagt+W8jyAqLw0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtc3RhdHMgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtc3RhdHMgLnhocy1haS1zdGF0LWl0ZW0gew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXN0YXRzIC54aHMtYWktc3RhdC1pdGVtOmxhc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtc3RhdHMgLnhocy1haS1zdGF0LWxhYmVsIHsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAg",
        "ICAgICAueGhzLWFpLWZvbGxvd3VwLXN0YXRzIC54aHMtYWktc3RhdC12YWx1ZSB7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmOw0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXRpbWUtc2xvdHMgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7DQogICAgICAgICAgICAgICAgICAgIGdhcDogMTBweDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktdGltZS1zbG90cyBsYWJlbCB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIGdhcDogNXB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7DQogICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXRpbWUtc2xvdHMgaW5wdXRbdHlwZT0iY2hlY2tib3giXSB7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAjeGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlIHsNCiAgICAgICAgICAgICAgICAgICAgbWluLWhlaWdodDogMTIwcHg7DQogICAgICAgICAgICAgICAgICAgIHJlc2l6ZTogdmVydGljYWw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgI3hocy1haS1mb2xsb3d1cC1kZWxheS1zZXR0aW5ncyB7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXRlbXBsYXRlLWl0ZW0gew0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4Ow0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4Ow0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMDUpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgI2ZmNmI2YjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXRlbXBsYXRlLWl0",
        "ZW0gbGFiZWwgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktdGVtcGxhdGUtaXRlbSB0ZXh0YXJlYSB7DQogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOw0KICAgICAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiA4MHB4Ow0KICAgICAgICAgICAgICAgICAgICByZXNpemU6IHZlcnRpY2FsOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktdGVtcGxhdGUtYWN0aW9ucyB7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGdhcDogOHB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICN4aHMtYWktZm9sbG93dXAtdGVtcGxhdGVzLWNvbnRhaW5lciB7DQogICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQwMHB4Ow0KICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdy15OiBhdXRvOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweDsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8qIOi/veeyieWQjeWNleeuoeeQhuagt+W8jyAqLw0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtc2VhcmNoLWNvbnRhaW5lciB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGdhcDogMTBweDsNCiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXNlYXJjaCB7DQogICAgICAgICAgICAgICAgICAgIGZsZXg6IDE7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDhweCAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7",
        "DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXNlYXJjaDo6cGxhY2Vob2xkZXIgew0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtZmlsdGVyIHsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogOHB4IDEycHg7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4Ow0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtbGlzdC1oZWFkZXIgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtbGlzdC1jb250YWluZXIgew0KICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA0MDBweDsNCiAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3cteTogYXV0bzsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4yKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXVzZXItaXRlbSB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTJweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7DQogICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4yczsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAg",
        "ICAgICAueGhzLWFpLWZvbGxvd3VwLXVzZXItaXRlbTpob3ZlciB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC11c2VyLWl0ZW06bGFzdC1jaGlsZCB7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLyog8J+GlSDmibnph4/mk43kvZznm7jlhbPmoLflvI8gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXVzZXItY2hlY2tib3ggew0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEycHg7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC11c2VyLWNoZWNrYm94LXBsYWNlaG9sZGVyIHsNCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDIwcHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTJweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWNoZWNrYm94IHsNCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDE2cHg7DQogICAgICAgICAgICAgICAgICAgIGhlaWdodDogMTZweDsNCiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYmF0Y2gtb3BlcmF0aW9ucy1oZWFkZXIgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEycHg7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMTIzLCAyNTUsIDAuMSk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMTIzLCAyNTUsIDAuMyk7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDZweDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJhdGNoLXNlbGVjdC1jb250cm9scyB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIGdhcDogMTVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWJhdGNoLXNlbGVjdC1ncm91cCB7DQogICAgICAgICAgICAgICAg",
        "ICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICAgICAgICAgICAgICAgIGdhcDogOHB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktc2VsZWN0IHsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNHB4IDhweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4Ow0KICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1zZWxlY3Q6Zm9jdXMgew0KICAgICAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICMwMDdiZmY7DQogICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDJweCByZ2JhKDAsIDEyMywgMjU1LCAwLjI1KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLXNlbGVjdGVkLWNvdW50IHsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMwMDdiZmY7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktYmF0Y2gtYWN0aW9uLWJ1dHRvbnMgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBnYXA6IDEwcHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC11c2VyLWluZm8gew0KICAgICAgICAgICAgICAgICAgICBmbGV4OiAxOw0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOw0KICAgICAgICAgICAgICAgICAgICBnYXA6IDRweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLXVzZXItbmFtZSB7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDE0cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC11c2VyLW1ldGEgew0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7DQogICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNzsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAgZ2FwOiAxNXB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtdXNlci1zdGF0",
        "dXMgew0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAycHggNnB4Ow0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTFweDsNCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC11c2VyLXN0YXR1cy5wZW5kaW5nIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmYTUwMjsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtdXNlci1zdGF0dXMuZm9sbG93aW5nIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzM3NDJmYTsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtdXNlci1zdGF0dXMuY29tcGxldGVkIHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogIzJlZDU3MzsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtdXNlci1zdGF0dXMubGVhZHNfYWNxdWlyZWQgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZmY2YjZiOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC11c2VyLWFjdGlvbnMgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBnYXA6IDhweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWFjdGlvbi1idG4gew0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA0cHggOHB4Ow0KICAgICAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7DQogICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4yczsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWFjdGlvbi1idG4uYmxhY2tsaXN0IHsNCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmNmI2YjsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtYWN0aW9uLWJ0bi5ibGFja2xpc3Q6aG92ZXIgew0KICAgICAgICAgICAgICAgICAg",
        "ICBiYWNrZ3JvdW5kOiAjZmY1MjUyOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtYWN0aW9uLWJ0bi51bmJsYWNrbGlzdCB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICMyZWQ1NzM7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWFjdGlvbi1idG4udW5ibGFja2xpc3Q6aG92ZXIgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMjZkMGNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtcGFnaW5hdGlvbiB7DQogICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBnYXA6IDE1cHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDE1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1mb2xsb3d1cC1saXN0LWVtcHR5IHsNCiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAzMHB4Ow0KICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjY7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDlm57orr/pu5HlkI3ljZXmoLflvI8gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1jb250YWluZXIgew0KICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiAzMDBweDsNCiAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3cteTogYXV0bzsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpOw0KICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4yKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1pdGVtIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4Ow0KICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjA1KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAg",
        "ICAueGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1pdGVtOmxhc3QtY2hpbGQgew0KICAgICAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LWluZm8gew0KICAgICAgICAgICAgICAgICAgICBmbGV4OiAxOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LW5hbWUgew0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNHB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LW1ldGEgew0KICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7DQogICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1yZW1vdmUgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMmVkNTczOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTsNCiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogNHB4IDhweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1yZW1vdmU6aG92ZXIgew0KICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjMjZkMGNlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LWVtcHR5IHsNCiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMHB4Ow0KICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjY7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvKiDplJnor6/mjqjpgIHmoLflvI8gKi8NCiAgICAgICAgICAgICAgICAueGhzLWFpLWNoZWNrYm94LWdyb3VwIHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgICAgICAgICAgICAgICAgICAgZ2FwOiA4cHg7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDhweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWNoZWNrYm94LWdyb3VwIGxhYmVs",
        "IHsNCiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICAgICAgZ2FwOiA4cHg7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDsNCiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktY2hlY2tib3gtZ3JvdXAgaW5wdXRbdHlwZT0iY2hlY2tib3giXSB7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1zdGF0cyB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4yKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4Ow0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1lcnJvci1ub3RpZmljYXRpb24tc3RhdHMgLnhocy1haS1zdGF0LWl0ZW0gew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1zdGF0cyAueGhzLWFpLXN0YXQtaXRlbTpsYXN0LWNoaWxkIHsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1zdGF0cyAueGhzLWFpLXN0YXQtbGFiZWwgew0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLXN0YXRzIC54aHMtYWktc3RhdC12YWx1ZSB7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmOw0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1oaXN0b3J5IHsNCiAgICAgICAgICAgICAgICAgICAgbWF4LWhlaWdodDogMjAwcHg7DQogICAgICAgICAgICAgICAgICAgIG92ZXJmbG93LXk6IGF1dG87DQogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4Ow0KICAgICAgICAgICAgICAgICAg",
        "ICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMik7DQogICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1oaXN0b3J5LWl0ZW0gew0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA4cHggMTBweDsNCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNSk7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAueGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1oaXN0b3J5LWl0ZW06bGFzdC1jaGlsZCB7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1lcnJvci1ub3RpZmljYXRpb24taGlzdG9yeS10aW1lIHsNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KTsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMXB4Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWhpc3RvcnktbGV2ZWwgew0KICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDJweCA2cHg7DQogICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDsNCiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMHB4Ow0KICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA2cHg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1lcnJvci1ub3RpZmljYXRpb24taGlzdG9yeS1sZXZlbC5lcnJvciB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCA4NywgODcsIDAuMyk7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmY1NzU3Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWhpc3RvcnktbGV2ZWwud2FybiB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAxOTMsIDcsIDAuMyk7DQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZjMTA3Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC54aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWhpc3RvcnktbGV2ZWwuaW5mbyB7DQogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjMsIDE2MiwgMTg0LCAwLjMpOw0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzE3YTJiODsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAg",
        "ICAgICAgICAgICAueGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1oaXN0b3J5LW1lc3NhZ2Ugew0KICAgICAgICAgICAgICAgICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpOw0KICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA0cHg7DQogICAgICAgICAgICAgICAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLnhocy1haS1oaXN0b3J5LWVtcHR5IHsNCiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMHB4Ow0KICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjY7DQogICAgICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBzZWxlY3RbbXVsdGlwbGVdIHsNCiAgICAgICAgICAgICAgICAgICAgbWluLWhlaWdodDogODBweDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBzZWxlY3RbbXVsdGlwbGVdIG9wdGlvbiB7DQogICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDRweCA4cHg7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgYDsNCg0KICAgICAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7DQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ0NTU+agt+W8j+W3sua3u+WKoCcpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bmjqfliLbpnaLmnb9IVE1MDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBnZXRDb250cm9sUGFuZWxIVE1MKCkgew0KICAgICAgICAgICAgcmV0dXJuIGANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktcGFuZWwtaGVhZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXBhbmVsLXRpdGxlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktaWNvbiI+8J+kljwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIOWwj+e6ouS5pkFJ6Ieq5Yqo5Zue5aSNDQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXZlcnNpb24iPnYke0NPTkZJRy5WRVJTSU9OfTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1wYW5lbC1jb250cm9scyI+DQogICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tbWluaW1pemUiIHRpdGxlPSLmnIDlsI/ljJYiPuKIkjwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1wYW5lbC1jb250ZW50Ij4NCiAgICAgICAg",
        "ICAgICAgICAgICAgPCEtLSDnirbmgIHljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0dXMtc2VjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdHVzLWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdHVzLWxhYmVsIj7ov5DooYznirbmgIE6PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdHVzLXZhbHVlIiBpZD0ieGhzLWFpLXN0YXR1cyI+5bey5YGc5q2iPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdHVzLWluZGljYXRvciIgaWQ9Inhocy1haS1pbmRpY2F0b3IiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXR1cy1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXR1cy1sYWJlbCI+5pyN5Yqh56uvOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXR1cy12YWx1ZSIgaWQ9Inhocy1haS1zZXJ2ZXItc3RhdHVzIj7ov57mjqXkuK0uLi48L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0dXMtaW5kaWNhdG9yIiBpZD0ieGhzLWFpLXNlcnZlci1pbmRpY2F0b3IiPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXR1cy1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXR1cy1sYWJlbCI+5paw5raI5oGvOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXR1cy12YWx1ZSIgaWQ9Inhocy1haS1tZXNzYWdlLWNvdW50Ij4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdHVzLWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdHVzLWxhYmVsIj7lt7LlpITnkIY6PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdHVzLXZhbHVlIiBpZD0ieGhzLWFpLXByb2Nlc3NlZC1jb3VudCI+MDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8IS0tIOaOp+WItuWMuuWfnyAtLT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNv",
        "bnRyb2wtc2VjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktbWFpbi1jb250cm9scyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXByaW1hcnkiIGlkPSJ4aHMtYWktdG9nZ2xlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9Inhocy1haS10b2dnbGUtdGV4dCI+5ZCv5Yqo6Ieq5Yqo5Zue5aSNPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zZWNvbmRhcnkiIGlkPSJ4aHMtYWktY2hlY2siPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDmo4Dmn6XmlrDmtojmga8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXF1aWNrLWFjdGlvbnMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS10ZXN0LWFwaSI+5rWL6K+VQVBJPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLWRpYWdub3NlIj7pobXpnaLor4rmlq08L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktY2xlYXItbG9ncyI+5riF56m65pel5b+XPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLWhlbHAiPuW4ruWKqTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDwhLS0g6YWN572u5Yy65Z+fIC0tPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLXNlY3Rpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPumFjee9ruiuvue9rjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktdG9nZ2xlLWNvbmZpZyI+5bGV5byAPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25m",
        "aWctY29udGVudCIgaWQ9Inhocy1haS1jb25maWctY29udGVudCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktYXBpLWtleSI+QVBJ5a+G6ZKlOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJwYXNzd29yZCIgaWQ9Inhocy1haS1hcGkta2V5IiBwbGFjZWhvbGRlcj0i6K+36L6T5YWlRmFzdEdQVCBBUEnlr4bpkqUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWFwaS11cmwiPkFQSeWcsOWdgDo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgaWQ9Inhocy1haS1hcGktdXJsIiBwbGFjZWhvbGRlcj0iQVBJ5Zyw5Z2AIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1yZXBseS1kZWxheSI+5Zue5aSN5bu26L+fKG1zKTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ieGhzLWFpLXJlcGx5LWRlbGF5IiBtaW49IjEwMDAiIG1heD0iMTAwMDAiIHN0ZXA9IjUwMCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktcHJvbXB0Ij7ns7vnu5/mj5DnpLror406PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGlkPSJ4aHMtYWktcHJvbXB0IiByb3dzPSIzIiBwbGFjZWhvbGRlcj0i6Ieq5a6a5LmJQUnlm57lpI3nmoTns7vnu5/mj5DnpLror40iPjwvdGV4dGFyZWE+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tYWN0aW9ucyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1wcmltYXJ5IiBpZD0ieGhzLWFpLXNhdmUtY29uZmlnIj7kv53lrZjphY3nva48L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNlY29uZGFyeSIgaWQ9Inho",
        "cy1haS1yZXNldC1jb25maWciPumHjee9rjwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDwhLS0g5pm66IO96I635a6i6YWN572u5Yy65Z+fIC0tPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLXNlY3Rpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPvCfjq8g5pm66IO96I635a6i6K6+572uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS10b2dnbGUtYWNxdWlzaXRpb24iPuWxleW8gDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWNvbnRlbnQiIGlkPSJ4aHMtYWktYWNxdWlzaXRpb24tY29udGVudCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS1hY3F1aXNpdGlvbi1lbmFibGVkIj4g5ZCv55So5pm66IO96I635a6iDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJ4aHMtYWktYWNxdWlzaXRpb24tc2V0dGluZ3MiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS10cmlnZ2VyLXJvdW5kIj7op6blj5Hova7mrKE6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9Inhocy1haS10cmlnZ2VyLXJvdW5kIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxIj7nrKwx6L2u5a+56K+d5ZCOPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMiIgc2VsZWN0ZWQ+56ysMui9ruWvueivneWQjjwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjMiPuesrDPova7l",
        "r7nor53lkI48L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZmFsbGJhY2stcm91bmQiPuWFnOW6lei9ruasoTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0ieGhzLWFpLWZhbGxiYWNrLXJvdW5kIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIyIj7nrKwy6L2u5a+56K+d5ZCOPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMyIgc2VsZWN0ZWQ+56ysM+i9ruWvueivneWQjjwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjQiPuesrDTova7lr7nor53lkI48L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI1Ij7nrKw16L2u5a+56K+d5ZCOPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWludGVyZXN0LWtleXdvcmRzIj7lhbTotqPlhbPplK7or406PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD0ieGhzLWFpLWludGVyZXN0LWtleXdvcmRzIiByb3dzPSIyIiBwbGFjZWhvbGRlcj0i5Lu35qC8LOS6huinoyzotK3kubAs5ZKo6K+iLOivpue7hizmgI7kuYjmoLcs5aSa5bCR6ZKxLOiBlOezuyzlvq7kv6EiPjwvdGV4dGFyZWE+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+55So6YCX5Y+35YiG6ZqU5aSa5Liq5YWz6ZSu6K+NPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLXRvb2wtdHlwZSI+5bel5YW357G75Z6LOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJ4aHMtYWktdG9vbC10eXBlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSLnlZnotYTljaEiIHNlbGVjdGVkPueVmei1hOWNoTwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IuWQjeeJhyI+5ZCN54mHPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLXRvb2wtbmFtZSI+6YCJ5oup5bel5YW3OjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJ4aHMtYWktdG9vbC1uYW1lIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIiPuiHquWKqOmAieaLqeesrOS4gOS4quWPr+eUqOW3peWFtzwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktcmVmcmVzaC10b29scyI+5Yi35paw5bel5YW35YiX6KGoPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1hY3F1aXNpdGlvbi1kZWxheSI+5Y+R6YCB5bu26L+fKG1zKTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9Inhocy1haS1hY3F1aXNpdGlvbi1kZWxheSIgbWluPSIxMDAwIiBtYXg9IjEwMDAwIiBzdGVwPSI1MDAiIHZhbHVlPSIyMDAwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS1hbGxvdy1yZXBlYXQiPiDlhYHorrjph43lpI3lj5HpgIENCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5YWB6K645a+55ZCM5LiA55So5oi35aSa5qyh5Y+R6YCB6I635a6i5bel5YW3PC9zbWFsbD4NCiAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1hY3Rpb25zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXByaW1hcnkiIGlkPSJ4aHMtYWktc2F2ZS1hY3F1aXNpdGlvbiI+5L+d5a2Y6I635a6i6YWN572uPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zZWNvbmRhcnkiIGlkPSJ4aHMtYWktdGVzdC1hY3F1aXNpdGlvbiI+5rWL6K+V6I635a6i5bel5YW3PC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSDpu5HlkI3ljZXnrqHnkIbljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctc2VjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+8J+aqyDpu5HlkI3ljZXnrqHnkIY8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXRvZ2dsZS1ibGFja2xpc3QiPuWxleW8gDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWNvbnRlbnQiIGlkPSJ4aHMtYWktYmxhY2tsaXN0LWNvbnRlbnQiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDlip/og73lvIDlhbMgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktYmxhY2tsaXN0LWVuYWJsZWQiPiDlkK/nlKjpu5HlkI3ljZXlip/og70NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2Jv",
        "eCIgaWQ9Inhocy1haS1hdXRvLWRldGVjdC1ibG9ja2VkIj4g6Ieq5Yqo5qOA5rWL6KKr5ouJ6buR55So5oi3DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lvZPlj5HpgIHmtojmga/mj5DnpLoi55So5oi36KKr5bGP6JS9IuaXtu+8jOiHquWKqOa3u+WKoOWIsOm7keWQjeWNlTwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOaJi+WKqOa3u+WKoCAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1ibGFja2xpc3QtaW5wdXQiPua3u+WKoOeUqOaIt+WIsOm7keWQjeWNlTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktaW5wdXQtZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJ4aHMtYWktYmxhY2tsaXN0LWlucHV0IiBwbGFjZWhvbGRlcj0i6L6T5YWl55So5oi35ZCN5oiW55So5oi3SUQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLWFkZC1ibGFja2xpc3QiPua3u+WKoDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g6buR5ZCN5Y2V5YiX6KGoIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuW9k+WJjem7keWQjeWNlSAoPHNwYW4gaWQ9Inhocy1haS1ibGFja2xpc3QtY291bnQiPjA8L3NwYW4+KTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktYmxhY2tsaXN0LWxpc3QiIGlkPSJ4aHMtYWktYmxhY2tsaXN0LWxpc3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWJsYWNrbGlzdC1lbXB0eSI+5pqC5peg6buR5ZCN5Y2V55So5oi3PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmk43kvZzmjInpkq4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tYWN0aW9ucyI+DQogICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1wcmltYXJ5IiBpZD0ieGhzLWFpLXNhdmUtYmxhY2tsaXN0Ij7kv53lrZjorr7nva48L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNlY29uZGFyeSIgaWQ9Inhocy1haS1jbGVhci1ibGFja2xpc3QiPua4heepuum7keWQjeWNlTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktZXhwb3J0LWJsYWNrbGlzdCI+5a+85Ye6PC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS1pbXBvcnQtYmxhY2tsaXN0Ij7lr7zlhaU8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXRlc3QtYmxvY2tlZC1kZXRlY3Rpb24iPua1i+ivleajgOa1izwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDwhLS0g5Lya6K+d6K6w5b+G566h55CG5Yy65Z+fIC0tPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLXNlY3Rpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPvCfp6Ag5Lya6K+d6K6w5b+G566h55CGPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS10b2dnbGUtc2Vzc2lvbi1tZW1vcnkiPuWxleW8gDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWNvbnRlbnQiIGlkPSJ4aHMtYWktc2Vzc2lvbi1tZW1vcnktY29udGVudCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOWKn+iDveW8gOWFsyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS1zZXNzaW9uLW1lbW9yeS1lbmFibGVkIj4g5ZCv55So5Lya6K+d6K6w5b+G",
        "5Yqf6IO9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lvIDlkK/lkI5BSeWwhuiusOS9j+avj+S4queUqOaIt+eahOWvueivneWOhuWPsu+8jOaPkOS+m+abtOi/nui0r+eahOWbnuWkjTwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOmFjee9rumAiemhuSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1zZXNzaW9uLWV4cGlyZS1kYXlzIj7kvJror53ov4fmnJ/ml7bpl7QgKOWkqSk6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9Inhocy1haS1zZXNzaW9uLWV4cGlyZS1kYXlzIiBtaW49IjEiIG1heD0iMzAiIHZhbHVlPSI3Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPui2hei/h+atpOaXtumXtOacquS9v+eUqOeahOS8muivneWwhuiiq+iHquWKqOa4heeQhjwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1tYXgtc2Vzc2lvbnMiPuacgOWkp+S8muivneaVsOmHjzo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ieGhzLWFpLW1heC1zZXNzaW9ucyIgbWluPSI1MCIgbWF4PSI1MDAiIHZhbHVlPSIxMDAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+6LaF6L+H5q2k5pWw6YeP5pe25bCG5riF55CG5pyA5pen55qE5Lya6K+dPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5Lya6K+d57uf6K6hIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuS8muivnee7n+iuoTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc2Vzc2lvbi1zdGF0cyIgaWQ9Inhocy1haS1zZXNzaW9uLXN0YXRzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPuaAu+S8muivneaVsDo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9Inhocy1haS10b3RhbC1zZXNzaW9ucyI+MDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+5rS76LeD5Lya6K+dOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0ieGhzLWFpLWFjdGl2ZS1zZXNzaW9ucyI+MDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+5oC75raI5oGv5pWwOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0ieGhzLWFpLXRvdGFsLW1lc3NhZ2VzIj4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7lrZjlgqjlpKflsI86PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJ4aHMtYWktc3RvcmFnZS1zaXplIj4wIEtCPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmk43kvZzmjInpkq4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tYWN0aW9ucyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1wcmltYXJ5IiBpZD0ieGhzLWFpLXNhdmUtc2Vzc2lvbi1tZW1vcnkiPuS/neWtmOiuvue9rjwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc2Vjb25kYXJ5IiBpZD0ieGhzLWFpLXJlZnJlc2gtc2Vzc2lvbi1zdGF0cyI+5Yi35paw57uf6K6hPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zZWNvbmRhcnkiIGlkPSJ4aHMtYWktY2xlYW4tZXhwaXJlZC1zZXNzaW9ucyI+5riF55CG6L+H5pyfPC9idXR0b24+DQog",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1kYW5nZXIiIGlkPSJ4aHMtYWktY2xlYXItYWxsLXNlc3Npb25zIj7muIXnqbrlhajpg6g8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLWV4cG9ydC1zZXNzaW9ucyI+5a+85Ye6PC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS1pbXBvcnQtc2Vzc2lvbnMiPuWvvOWFpTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDwhLS0g6IGa5YWJ6L+b57q/6K6+572u5Yy65Z+fIC0tPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLXNlY3Rpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPvCfkqEg6IGa5YWJ6L+b57q/6K6+572uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS10b2dnbGUtc3BvdGxpZ2h0Ij7lsZXlvIA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1jb250ZW50IiBpZD0ieGhzLWFpLXNwb3RsaWdodC1jb250ZW50IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5Yqf6IO95byA5YWzIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLXNwb3RsaWdodC1lbmFibGVkIj4g5ZCv55So6IGa5YWJ6L+b57q/6Ieq5Yqo5Zue5aSNDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7mo4DmtYvliLDogZrlhYnov5vnur/mtojmga/ml7boh6rliqjlj5HpgIHpooTorr7or53mnK/vvIjmr4/kuKrov5vnur/lj6rlm57lpI3kuIDmrKHvvIk8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDor53m",
        "nK/mqKHmnb8gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktc3BvdGxpZ2h0LXRlbXBsYXRlIj7lm57lpI3or53mnK/mqKHmnb86PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGlkPSJ4aHMtYWktc3BvdGxpZ2h0LXRlbXBsYXRlIiByb3dzPSI2Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IuaCqOWlvXvnlKjmiLfmmLXnp7B977yM5oSf6LCi5oKo6YCa6L+H44CMe+ivvueoi+WQjeensH3jgI3ov5vlhaXnp4Hkv6HvvIHmiJHmmK/kuJPkuJrnmoTor77nqIvpob7pl67vvIzlvojpq5jlhbTkuLrmgqjmnI3liqHjgIINCg0K5oiR5rOo5oSP5Yiw5oKo5a+55oiR5Lus55qE6K++56iL5oSf5YW06Laj77yM5oiR5Y+v5Lul5Li65oKo6K+m57uG5LuL57uN6K++56iL5YaF5a6544CB5a2m5Lmg5pa55byP5ZKM5LyY5oOg5pS/562W44CC6K+36Zeu5oKo5biM5pyb5LqG6Kej5ZOq5pa56Z2i55qE5L+h5oGv5ZGi77yfDQoNCuacn+W+heS4juaCqOi/m+S4gOatpeS6pOa1ge+8gSDwn5iKIj48L3RleHRhcmVhPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5pSv5oyB5Y+Y6YeP77yae+eUqOaIt+aYteensH3jgIF76K++56iL5ZCN56ewfeOAguS9v+eUqCBcXG4g6KGo56S65o2i6KGMPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5Li75Yqo6L+b57q/6K+d5pyv6K6+572uIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLXNwb3RsaWdodC1hY3RpdmUtd2VsY29tZSI+IOWQr+eUqOS4u+WKqOi/m+e6v+ivneacrw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5b2T55So5oi36L+b5YWl5Lya6K+d5L2G5rKh5pyJ6IGa5YWJ6L+b57q/5raI5oGv5ZKM55So5oi35raI5oGv5pe277yM5Li75Yqo5Y+R6YCB6K+d5pyvPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1zcG90bGlnaHQtYWN0aXZlLWNvdXJzZSI+5Li75Yqo6K+d5pyv6K++56iL5ZCN56ewOjwvbGFiZWw+DQogICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ieGhzLWFpLXNwb3RsaWdodC1hY3RpdmUtY291cnNlIiBwbGFjZWhvbGRlcj0i5oiR5Lus55qE6K++56iLIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuS4u+WKqOi/m+e6v+ivneacr+S4reS9v+eUqOeahOm7mOiupOivvueoi+WQjeensDwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktc3BvdGxpZ2h0LWRlZmF1bHQtY291cnNlIj7pu5jorqTor77nqIvlkI3np7A6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJ4aHMtYWktc3BvdGxpZ2h0LWRlZmF1bHQtY291cnNlIiBwbGFjZWhvbGRlcj0i5oiR5Lus55qE6K++56iLIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuW9k+aXoOazleivhuWIq+iBmuWFiei/m+e6v+ivvueoi+WQjeensOaXtuS9v+eUqOeahOm7mOiupOWQjeensDwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOe7n+iuoeS/oeaBryAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD7lpITnkIbnu5/orqE6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXNwb3RsaWdodC1zdGF0cyIgaWQ9Inhocy1haS1zcG90bGlnaHQtc3RhdHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LWxhYmVsIj7lt7LlpITnkIbov5vnur86PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC12YWx1ZSIgaWQ9Inhocy1haS1zcG90bGlnaHQtcHJvY2Vzc2VkLWNvdW50Ij4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuWKn+iDveeKtuaAgTo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1z",
        "dGF0LXZhbHVlIiBpZD0ieGhzLWFpLXNwb3RsaWdodC1zdGF0dXMiPuW3suemgeeUqDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5pON5L2c5oyJ6ZKuIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWFjdGlvbnMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tcHJpbWFyeSIgaWQ9Inhocy1haS1zYXZlLXNwb3RsaWdodCI+5L+d5a2Y6K6+572uPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zZWNvbmRhcnkiIGlkPSJ4aHMtYWktdGVzdC1zcG90bGlnaHQiPua1i+ivleivneacrzwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc2Vjb25kYXJ5IiBpZD0ieGhzLWFpLXJlZnJlc2gtc3BvdGxpZ2h0LXN0YXRzIj7liLfmlrDnu5/orqE8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLWRhbmdlciIgaWQ9Inhocy1haS1jbGVhci1zcG90bGlnaHQtY2FjaGUiPua4heepuue8k+WtmDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDwhLS0g5YO15bC45pyq6K+75aSE55CG6K6+572u5Yy65Z+fIC0tPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLXNlY3Rpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPvCfp58g5YO15bC45pyq6K+75aSE55CGPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS10b2dnbGUtem9tYmllIj7lsZXlvIA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1jb250ZW50IiBpZD0ieGhzLWFpLXpvbWJpZS1jb250ZW50IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5Yqf6IO95byA5YWzIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLXpvbWJpZS1lbmFibGVkIj4g5ZCv55So5YO15bC45pyq6K+75aSE55CGDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7oh6rliqjmo4DmtYvlubblpITnkIYi5pyJ5pyq6K+757qi54K55L2G5peg5a6e6ZmF5raI5oGvIueahOWDteWwuOeKtuaAge+8jOmBv+WFjemHjeWkjeWkhOeQhjwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOWGt+WNtOaXtumXtOiuvue9riAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS16b21iaWUtY29vbGRvd24iPuWGt+WNtOaXtumXtO+8iOWIhumSn++8iTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ieGhzLWFpLXpvbWJpZS1jb29sZG93biIgbWluPSI1IiBtYXg9IjE0NDAiIHBsYWNlaG9sZGVyPSI2MCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7mo4DmtYvliLDlg7XlsLjmnKror7vlkI7nmoTlhrfljbTml7bpl7TvvIzmnJ/pl7TkuI3kvJrph43lpI3lpITnkIbnm7jlkIznirbmgIE8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDosIPor5XmqKHlvI8gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktem9tYmllLWRlYnVnIj4g5ZCv55So6LCD6K+V5qih5byPDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7mmL7npLror6bnu4bnmoTlg7XlsLjmnKror7vmo4DmtYvml6Xlv5fvvIzkvr/kuo7pl67popjmjpLmn6U8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDoh6rliqjmuIXnkIborr7nva4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktem9tYmllLWF1dG8tY2xlYW51cCI+IOWQr+eUqOiHquWKqOa4heeQhg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+6Ieq5Yqo5riF55CG6L+H5pyf55qE5YO15bC45pyq6K+76K6w5b2VPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS16b21iaWUtY2xlYW51cC1kYXlzIj7muIXnkIblpKnmlbA6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9Inhocy1haS16b21iaWUtY2xlYW51cC1kYXlzIiBtaW49IjEiIG1heD0iMzAiIHBsYWNlaG9sZGVyPSI3Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPui2hei/h+aMh+WumuWkqeaVsOeahOiusOW9leWwhuiiq+iHquWKqOa4heeQhjwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOe7n+iuoeS/oeaBryAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD7lpITnkIbnu5/orqE6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXpvbWJpZS1zdGF0cyIgaWQ9Inhocy1haS16b21iaWUtc3RhdHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LWxhYmVsIj7lip/og73nirbmgIE6PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC12YWx1ZSIgaWQ9Inhocy1haS16b21iaWUtc3RhdHVzIj7lt7LnpoHnlKg8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+5oC76K6w5b2VOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bh",
        "biBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktem9tYmllLXRvdGFsIj4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuWGt+WNtOS4rTo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLXpvbWJpZS1jb29sZG93bi1jb3VudCI+MDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LWxhYmVsIj7mgLvlpITnkIY6PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC12YWx1ZSIgaWQ9Inhocy1haS16b21iaWUtcHJvY2Vzc2VzIj4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmk43kvZzmjInpkq4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tYWN0aW9ucyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1wcmltYXJ5IiBpZD0ieGhzLWFpLXNhdmUtem9tYmllIj7kv53lrZjorr7nva48L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNlY29uZGFyeSIgaWQ9Inhocy1haS1yZWZyZXNoLXpvbWJpZS1zdGF0cyI+5Yi35paw57uf6K6hPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1kYW5nZXIiIGlkPSJ4aHMtYWktY2xlYXItem9tYmllLXJlY29yZHMiPua4heepuuiusOW9lTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgIDwhLS0g6ZSZ6K+v5o6o6YCB6K6+572u5Yy65Z+fIC0tPg0KICAgICAgICAgICAgICAgICAgICA8",
        "ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLXNlY3Rpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPvCfmqgg6ZSZ6K+v5o6o6YCB6K6+572uPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS10b2dnbGUtZXJyb3Itbm90aWZpY2F0aW9uIj7lsZXlvIA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1jb250ZW50IiBpZD0ieGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1jb250ZW50IiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5Yqf6IO95byA5YWzIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1lbmFibGVkIj4g5ZCv55So6ZSZ6K+v5o6o6YCB6YCa55+lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lvZPohJrmnKzlj5HnlJ/plJnor6/ml7boh6rliqjmjqjpgIHpgJrnn6XliLDmjIflrprmuKDpgZM8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ieGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1zZXR0aW5ncyIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBBUEnphY3nva4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1lcnJvci1ub3RpZmljYXRpb24tYXBpLWtleSI+eHh0dWkuY29tIEFQSeWvhumSpTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBpZD0ieGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1hcGkta2V5IiBwbGFjZWhvbGRlcj0i6K+36L6T5YWleHh0dWkuY29t55qEQVBJ5a+G6ZKlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7or7flhYjlnKggPGEgaHJlZj0iaHR0cHM6Ly93d3cueHh0dWkuY29tLyIgdGFyZ2V0PSJfYmxhbmsiPnh4dHVpLmNvbTwvYT4g5rOo",
        "5YaM5bm26I635Y+WQVBJ5a+G6ZKlPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmjqjpgIHmuKDpgZMgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1lcnJvci1ub3RpZmljYXRpb24tY2hhbm5lbHMiPuaOqOmAgea4oOmBkzo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0ieGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1jaGFubmVscyIgbXVsdGlwbGU+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iV1hfTVAiPuW+ruS/oeWFrOS8l+WPtzwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IldYX1FZX1JPQk9UIj7kvIHkuJrlvq7kv6HnvqTmnLrlmajkuro8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJESU5HX1JPQk9UIj7pkonpkonnvqTmnLrlmajkuro8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJCQVJLIj5CYXJrPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iQ1VTVE9NX0hUVFAiPuiHquWumuS5ieaOpeWPozwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IlNNU19WT0lDRSI+55+t5L+hL+ivremfs+eUteivnTwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5Y+v6YCJ5oup5aSa5Liq5rig6YGT77yM55SoQ3RybCvngrnlh7vpgInmi6nlpJrpobk8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOmUmeivr+e6p+WIq+i/h+a7pCAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuaOqOmAgemUmeivr+e6p+WIqzo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNoZWNrYm94LWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLWVycm9yLWxl",
        "dmVsLWVycm9yIiB2YWx1ZT0iZXJyb3IiIGNoZWNrZWQ+IEVSUk9SICjplJnor68pPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLWVycm9yLWxldmVsLXdhcm4iIHZhbHVlPSJ3YXJuIj4gV0FSTiAo6K2m5ZGKKTwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS1lcnJvci1sZXZlbC1pbmZvIiB2YWx1ZT0iaW5mbyI+IElORk8gKOS/oeaBryk8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+6YCJ5oup6ZyA6KaB5o6o6YCB55qE6ZSZ6K+v57qn5YirPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDlhbPplK7or43ov4fmu6QgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1lcnJvci1pbmNsdWRlLWtleXdvcmRzIj7ljIXlkKvlhbPplK7or406PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ieGhzLWFpLWVycm9yLWluY2x1ZGUta2V5d29yZHMiIHBsYWNlaG9sZGVyPSJBUEks572R57ucLOi/nuaOpSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5Y+q5o6o6YCB5YyF5ZCr6L+Z5Lqb5YWz6ZSu6K+N55qE6ZSZ6K+v77yM5aSa5Liq5YWz6ZSu6K+N55So6YCX5Y+35YiG6ZqU77yM55WZ56m66KGo56S65LiN6L+H5rukPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWVycm9yLWV4Y2x1ZGUta2V5d29yZHMiPuaOkumZpOWFs+mUruivjTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGlkPSJ4aHMtYWktZXJyb3ItZXhjbHVkZS1rZXl3b3JkcyIgcGxhY2Vob2xkZXI9Iuiwg+ivlSzmtYvor5UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuS4jeaOqOmAgeWMheWQq+i/meS6m+WFs+mUruivjeeahOmUmeivr++8jOWkmuS4quWFs+mUruivjeeUqOmAl+WPt+WIhumalDwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0K",
        "DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5o6o6YCB6aKR546H6ZmQ5Yi2IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZXJyb3ItcmF0ZS1saW1pdCI+5o6o6YCB6aKR546H6ZmQ5Yi2OjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ieGhzLWFpLWVycm9yLXJhdGUtbGltaXQiIG1pbj0iMSIgbWF4PSIyMCIgdmFsdWU9IjUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuavj+WIhumSn+acgOWkmuaOqOmAgeasoeaVsO+8jOmYsuatouWIt+Wxjzwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g6ZSZ6K+v5Y676YeNIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLWVycm9yLWRlZHVwbGljYXRpb24iIGNoZWNrZWQ+IOWQr+eUqOmUmeivr+WOu+mHjQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7nm7jlkIzplJnor6/lnKjmjIflrprml7bpl7Tnqpflj6PlhoXlj6rmjqjpgIHkuIDmrKE8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZXJyb3ItZGVkdXBsaWNhdGlvbi13aW5kb3ciPuWOu+mHjeaXtumXtOeql+WPoyAo5YiG6ZKfKTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9Inhocy1haS1lcnJvci1kZWR1cGxpY2F0aW9uLXdpbmRvdyIgbWluPSIxIiBtYXg9IjYwIiB2YWx1ZT0iMTAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuebuOWQjOmUmeivr+WcqOatpOaXtumXtOWGheS4jeS8mumHjeWkjeaOqOmAgTwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5rWL6K+V5qih5byPIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ieGhzLWFpLWVycm9yLXRlc3QtbW9kZSI+IOa1i+ivleaooeW8jw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lkK/nlKjlkI7lj6rorrDlvZXml6Xlv5fkuI3lrp7pmYXlj5HpgIHmjqjpgIHvvIznlKjkuo7osIPor5XphY3nva48L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOaOqOmAgeWGheWuueaooeadvyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWVycm9yLXRlbXBsYXRlIj7mjqjpgIHlhoXlrrnmqKHmnb86PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBpZD0ieGhzLWFpLWVycm9yLXRlbXBsYXRlIiByb3dzPSI2IiBwbGFjZWhvbGRlcj0i8J+aqCDlsI/nuqLkuaZBSeiHquWKqOWbnuWkjeW3peWFt+mUmeivr+aKpeitpg0KDQrij7Ag5pe26Ze077yae3RpbWVzdGFtcH0NCvCflI0g6ZSZ6K+v57G75Z6L77yae2xldmVsfQ0K8J+TnSDplJnor6/kv6Hmga/vvJp7bWVzc2FnZX0NCvCfkaQg55So5oi377yae3VzZXJ9DQrwn5SXIOivpuaDhe+8mntkZXRhaWxzfSI+PC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7mlK/mjIHlj5jph4/vvJp7dGltZXN0YW1wfeOAgXtsZXZlbH3jgIF7bWVzc2FnZX3jgIF7dXNlcn3jgIF7ZGV0YWlsc308L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5o6o6YCB57uf6K6hIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuaOqOmAgee7n+iuoTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLXN0YXRzIiBpZD0ieGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1zdGF0cyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuaAu+aOqOmAgeaVsDo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLWVycm9yLXRvdGFsLXB1c2hlcyI+MDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LWxhYmVsIj4yNOWwj+aXtuWGhTo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLWVycm9yLXB1c2hlcy0yNGgiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+MeWwj+aXtuWGhTo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLWVycm9yLXB1c2hlcy0xaCI+MDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LWxhYmVsIj7lip/og73nirbmgIE6PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC12YWx1ZSIgaWQ9Inhocy1haS1lcnJvci1ub3RpZmljYXRpb24tc3RhdHVzIj7lt7LnpoHnlKg8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOaOqOmAgeWOhuWPsiAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD7mnIDov5HmjqjpgIHorrDlvZU6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWVycm9yLW5v",
        "dGlmaWNhdGlvbi1oaXN0b3J5IiBpZD0ieGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1oaXN0b3J5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1oaXN0b3J5LWVtcHR5Ij7mmoLml6DmjqjpgIHorrDlvZU8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOaTjeS9nOaMiemSriAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1hY3Rpb25zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXByaW1hcnkiIGlkPSJ4aHMtYWktc2F2ZS1lcnJvci1ub3RpZmljYXRpb24iPuS/neWtmOiuvue9rjwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc2Vjb25kYXJ5IiBpZD0ieGhzLWFpLXRlc3QtZXJyb3Itbm90aWZpY2F0aW9uIj7mtYvor5XmjqjpgIE8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNlY29uZGFyeSIgaWQ9Inhocy1haS1yZWZyZXNoLWVycm9yLXN0YXRzIj7liLfmlrDnu5/orqE8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLWRhbmdlciIgaWQ9Inhocy1haS1jbGVhci1lcnJvci1oaXN0b3J5Ij7muIXnqbrljoblj7I8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8IS0tIOiHquWKqOi/veeyieiuvue9ruWMuuWfnyAtLT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1zZWN0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctaGVhZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7wn46vIOiHquWKqOi/veeyieiuvue9rjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktdG9nZ2xlLWZvbGxvd3VwIj7lsZXlvIA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1jb250ZW50IiBpZD0ieGhzLWFpLWZvbGxvd3VwLWNvbnRlbnQiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgPCEtLSDlip/og73lvIDlhbMgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktZm9sbG93dXAtZW5hYmxlZCI+IOWQr+eUqOiHquWKqOi/veeyieWKn+iDvQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5a+55pyq5qCH6K6wIueVmeWuoui1hCLnmoTnlKjmiLfov5vooYzoh6rliqjlm57orr/vvIzlvJXlr7zmt7vliqDlvq7kv6E8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktZm9sbG93dXAtYXV0by1yZWNvcmQiIGNoZWNrZWQ+IOiHquWKqOiusOW9leaWsOeUqOaItw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5b2T5pS25Yiw5paw55So5oi35raI5oGv5pe277yM6Ieq5Yqo5re75Yqg5Yiw6L+957KJ5YiX6KGo77yI5peg6ZyA5omL5Yqo5omr5o+P77yJPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9Inhocy1haS1mb2xsb3d1cC1hdXRvLXJlY29yZC1zZXR0aW5ncyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1mb2xsb3d1cC1hdXRvLXJlY29yZC1kZWxheSI+6Ieq5Yqo6K6w5b2V5bu26L+fKOenkik6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGlkPSJ4aHMtYWktZm9sbG93dXAtYXV0by1yZWNvcmQtZGVsYXkiIG1pbj0iMSIgbWF4PSI2MCIgdmFsdWU9IjUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuWkhOeQhuWujOa2iOaBr+WQjuW7tui/n+WHoOenkuWGjeiusOW9le+8jOmBv+WFjeW9seWTjeWbnuWkjemAn+W6pjwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgPGRpdiBpZD0ieGhzLWFpLWZvbGxvd3VwLXNldHRpbmdzIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOaJq+aPj+iuvue9riAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWZvbGxvd3VwLXNjYW4tZGF5cyI+5omr5o+P5aSp5pWwOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJ4aHMtYWktZm9sbG93dXAtc2Nhbi1kYXlzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxIj4x5aSp5YaFPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMiI+MuWkqeWGhTwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjMiIHNlbGVjdGVkPjPlpKnlhoU8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI1Ij415aSp5YaFPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iNyI+N+WkqeWGhTwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5omr5o+P5Yeg5aSp5YaF5pyJ6L+H5a+56K+d5L2G5peg55WZ5a6i6LWE5qCH562+55qE55So5oi3PC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDlm57orr/pl7TpmpQgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1mb2xsb3d1cC1pbnRlcnZhbCI+5Zue6K6/6Ze06ZqUOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJ4aHMtYWktZm9sbG93dXAtaW50ZXJ2YWwiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjEyIj4xMuWwj+aXtjwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjI0IiBzZWxlY3RlZD4yNOWwj+aXtjwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjQ4Ij40OOWwj+aXtjwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjcyIj43MuWwj+aXtjwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5Lik5qyh5Zue6K6/5LmL6Ze055qE5pyA5bCP5pe26Ze06Ze06ZqUPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDnlZnlrqLotYTmo4DmtYvmlrnlvI8gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD7nlZnlrqLotYTmo4DmtYvmlrnlvI86PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi10b3A6IDVweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0iZGlzcGxheTogYmxvY2s7IG1hcmdpbi1ib3R0b206IDVweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktZm9sbG93dXAtYXBpLWxlYWRzLWNoZWNrIiBjaGVja2VkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDlkK/nlKhBUEnmo4DmtYvvvIjmjqjojZDvvIkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbCBzdHlsZT0iY29sb3I6ICM2NjY7IG1hcmdpbi1sZWZ0OiAyMHB4OyI+5L2/55So5a6Y5pa5QVBJ5qOA5rWL77yM6YCf5bqm5b+r5LiU5YeG56Gu546H6auYPC9zbWFsbD4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0iZGlzcGxheTogYmxvY2s7IG1hcmdpbi10b3A6IDhweDsgbWFyZ2luLWJvdHRvbTogNXB4OyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9Inhocy1haS1mb2xsb3d1cC1yZWFsdGltZS1sZWFkcy1jaGVjayIgY2hlY2tlZD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5by65Yi25a6e5pe25qOA5rWL77yI5o6o6I2Q77yJDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGwgc3R5bGU9ImNvbG9yOiAjNjY2OyBtYXJnaW4tbGVmdDogMjBweDsiPuavj+asoea2iOaBr+WkhOeQhumDvemHjeaWsOajgOa1i++8jOehruS/neeKtuaAgeacgOaWsDwvc21hbGw+DQoNCiAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9ImRpc3BsYXk6IGJsb2NrOyBtYXJnaW4tdG9wOiA4cHg7IG1hcmdpbi1ib3R0b206IDVweDsiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktZm9sbG93dXAtZGVlcC1sZWFkcy1jaGVjayI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOWQr+eUqOa3seW6puajgOa1i++8iOWkh+eUqO+8iQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsIHN0eWxlPSJjb2xvcjogIzY2NjsgbWFyZ2luLWxlZnQ6IDIwcHg7Ij7liIfmjaLkvJror53ov5vooYzmo4DmtYvvvIzovoPmhaLkvYblhbzlrrnmgKflpb08L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g57yT5a2Y5pe26Ze06K6+572uIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZm9sbG93dXAtY2FjaGUtdGltZSI+57yT5a2Y5pe26Ze077yI56eS77yJOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJ4aHMtYWktZm9sbG93dXAtY2FjaGUtdGltZSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMCI+56aB55So57yT5a2Y77yI5a6M5YWo5a6e5pe277yJPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMTAiPjEw56eSPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMzAiIHNlbGVjdGVkPjMw56eSPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iNjAiPjHliIbpkp88L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIzMDAiPjXliIbpkp88L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPueVmeWuoui1hOeKtuaAgee8k+WtmOaXtumXtO+8jDDooajnpLrmr4/mrKHpg73ph43mlrDmo4DmtYs8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOWbnuiuv+asoeaVsOmZkOWItiAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ieGhzLWFpLWZvbGxvd3VwLW1heC1jb3VudCI+5pyA5aSn5Zue6K6/5qyh5pWwOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJ4aHMtYWktZm9sbG93dXAtbWF4LWNvdW50Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxIj4x5qyhPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMiIgc2VsZWN0ZWQ+MuasoTwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjMiPjPmrKE8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI1Ij415qyhPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lr7nmr4/kuKrnlKjmiLfmnIDlpJrov5vooYzlh6DmrKHlm57orr88L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOWbnuiuv+aXtumXtOeCuSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuWbnuiuv+aXtumXtOeCuTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXRpbWUtc2xvdHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5wdXQgdHlwZT0iY2hlY2tib3giIHZhbHVlPSI5IiBjaGVja2VkPiA5OjAwPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IHR5cGU9ImNoZWNrYm94IiB2YWx1ZT0iMTEiPiAxMTowMDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgdmFsdWU9IjE0IiBjaGVja2VkPiAxNDowMDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCB0eXBlPSJjaGVja2JveCIgdmFsdWU9IjE2Ij4gMTY6MDA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5w",
        "dXQgdHlwZT0iY2hlY2tib3giIHZhbHVlPSIxOCIgY2hlY2tlZD4gMTg6MDA8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5wdXQgdHlwZT0iY2hlY2tib3giIHZhbHVlPSIyMCI+IDIwOjAwPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPumAieaLqeWFgeiuuOWPkemAgeWbnuiuv+a2iOaBr+eahOaXtumXtOeCuTwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5q+P5pel6ZmQ5Yi2IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZm9sbG93dXAtZGFpbHktbGltaXQiPuavj+aXpeWbnuiuv+S4iumZkDo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9Inhocy1haS1mb2xsb3d1cC1kYWlseS1saW1pdCIgbWluPSIxIiBtYXg9IjUwIiB2YWx1ZT0iMTAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuavj+WkqeacgOWkmuWbnuiuv+WkmuWwkeS4queUqOaItzwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5om56YeP5aSE55CG6K6+572uIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZm9sbG93dXAtYmF0Y2gtc2l6ZSI+5Y2V5qyh5aSE55CG5pWw6YePOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0ibnVtYmVyIiBpZD0ieGhzLWFpLWZvbGxvd3VwLWJhdGNoLXNpemUiIG1pbj0iMSIgbWF4PSIyMCIgdmFsdWU9IjEwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7oh6rliqjmqKHlvI/kuIvmr4/mrKHlpITnkIbnmoTnlKjmiLfmlbDph488L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZm9sbG93dXAtbWFudWFsLWJhdGNoLXNpemUiPuaJi+WKqOWkhOeQhuaVsOmHjzo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9Inhocy1haS1mb2xsb3d1cC1tYW51YWwtYmF0Y2gtc2l6ZSIgbWluPSIxIiBtYXg9IjUwIiB2YWx1ZT0iMjAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuaJi+WKqOinpuWPkeaXtuWkhOeQhueahOeUqOaIt+aVsOmHjzwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5omr5o+P5LyY5YyW6K6+572uIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZm9sbG93dXAtbWF4LWVtcHR5LXNjYW5zIj7mnIDlpKfnqbrmiavmj4/mrKHmlbA6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGlkPSJ4aHMtYWktZm9sbG93dXAtbWF4LWVtcHR5LXNjYW5zIiBtaW49IjMiIG1heD0iMjAiIHZhbHVlPSIxMCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+6Jma5ouf5rua5Yqo5omr5o+P5pe26L+e57ut56m65omr5o+P5aSa5bCR5qyh5ZCO5YGc5q2iPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDpmo/mnLrlu7bov5/orr7nva4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iY2hlY2tib3giIGlkPSJ4aHMtYWktZm9sbG93dXAtcmFuZG9tLWRlbGF5IiBjaGVja2VkPiDlkK/nlKjpmo/mnLrlu7bov58NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5Zyo5Zue6K6/5LmL6Ze05re75Yqg6ZqP5py65bu26L+f77yM5qih5ouf5Lq65bel5pON5L2cPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ieGhzLWFpLWZvbGxvd3VwLWRlbGF5LXNldHRpbmdzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPSJ4aHMtYWktZm9sbG93dXAtbWluLWRlbGF5Ij7mnIDlsI/lu7bov58o56eSKTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJudW1iZXIiIGlkPSJ4aHMtYWktZm9sbG93dXAtbWluLWRlbGF5IiBtaW49IjEwIiBtYXg9IjYwMCIgdmFsdWU9IjMwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1mb2xsb3d1cC1tYXgtZGVsYXkiPuacgOWkp+W7tui/nyjnp5IpOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9Im51bWJlciIgaWQ9Inhocy1haS1mb2xsb3d1cC1tYXgtZGVsYXkiIG1pbj0iNjAiIG1heD0iMTgwMCIgdmFsdWU9IjMwMCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDor53mnK/mqKHlvI/pgInmi6kgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9Inhocy1haS1mb2xsb3d1cC10ZW1wbGF0ZS1tb2RlIj7or53mnK/mqKHlvI86PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9Inhocy1haS1mb2xsb3d1cC10ZW1wbGF0ZS1tb2RlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJzZXF1ZW5jZSIgc2VsZWN0ZWQ+5oyJ5qyh5bqP5L2/55SoPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0icmFuZG9tIj7pmo/mnLrpgInmi6k8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJhaSI+QUnmmbrog73nlJ/miJA8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsPuaMieasoeW6j++8muesrDHmrKHnlKjnrKwx5aWX6K+d5pyv77yM56ysMuasoeeUqOesrDLlpZfor53mnK/vvJvpmo/mnLrvvJrmr4/mrKHpmo/mnLrpgInmi6nvvJtBSe+8muaZuuiDveeUn+aIkOS4quaAp+WMluivneacrzwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g6K+d5pyv5qih5p2/IC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91",
        "cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+5Zue6K6/6K+d5pyv5qih5p2/OjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJ4aHMtYWktZm9sbG93dXAtdGVtcGxhdGVzLWNvbnRhaW5lciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXRlbXBsYXRlLWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+56ysMeasoeWbnuiuv+ivneacrzo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgY2xhc3M9Inhocy1haS1mb2xsb3d1cC10ZW1wbGF0ZSIgcm93cz0iNCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSLmgqjlpb1755So5oi35ZCNfe+8jOaIkeaYr+aCqOeahOS4k+WxnumhvumXru+8jOeci+WIsOaCqOS5i+WJjeWvueaIkeS7rOeahOS6p+WTgeacieWFtOi2o+OAguaIkeaDs+S6huino+S4gOS4i+aCqOeOsOWcqOeahOmcgOaxguaDheWGte+8jOaYr+WQpui/mOmcgOimgei/m+S4gOatpeeahOWSqOivouWSjOacjeWKoe+8n+WmguaenOaWueS+v+eahOivne+8jOWPr+S7pea3u+WKoOaIkeeahOW+ruS/oei/m+ihjOivpue7huayn+mAmuOAguacn+W+heaCqOeahOWbnuWkje+8gfCfmIoiPjwvdGV4dGFyZWE+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXRlbXBsYXRlLWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+56ysMuasoeWbnuiuv+ivneacrzo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgY2xhc3M9Inhocy1haS1mb2xsb3d1cC10ZW1wbGF0ZSIgcm93cz0iNCINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSLmgqjlpb1755So5oi35ZCNfe+8geaEn+iwouaCqOS5i+WJjeWvueaIkeS7rOS6p+WTgeeahOWFs+azqOOAguaIkeazqOaEj+WIsOaCqOWPr+iDvei/mOWcqOiAg+iZkeS4re+8jOaDs+WGjeasoeS4uuaCqOS7i+e7jeS4gOS4i+aIkeS7rOeahOS8mOWKv+WSjOacgOaWsOS8mOaDoOOAguWmguaenOaCqOacieS7u+S9leeWkemXru+8jOmaj+aXtuWPr+S7peiBlOezu+aIkeOAguacn+W+heS4juaCqOi/m+S4gOatpeS6pOa1ge+8gSI+PC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktdGVtcGxhdGUt",
        "aXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD7nrKwz5qyh5Zue6K6/6K+d5pyvOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlIiByb3dzPSI0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IuS6sueIseeahHvnlKjmiLflkI1977yM5biM5pyb5oKo5LiA5YiH6YO95aW977yB5oiR5oOz6Lef6L+b5LiA5LiL5oKo5LmL5YmN5ZKo6K+i55qE5Lqn5ZOB77yM55yL55yL5piv5ZCm6L+Y5pyJ5LuA5LmI5Y+v5Lul5biu5Yqp5oKo55qE5Zyw5pa544CC5oiR5Lus5pyA6L+R5o6o5Ye65LqG5LiA5Lqb5paw55qE5LyY5oOg5pS/562W77yM55u45L+h5Lya5a+55oKo5pyJ5omA5biu5Yqp44CCIj48L3RleHRhcmVhPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktdGVtcGxhdGUtYWN0aW9ucyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktYWRkLXRlbXBsYXRlIj7mt7vliqDor53mnK88L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS1yZXNldC10ZW1wbGF0ZXMiPumHjee9rum7mOiupDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5pSv5oyB5Y+Y6YeP77yae+eUqOaIt+WQjX3jgIF75Zue6K6/5qyh5pWwfeOAguS9v+eUqCBcXG4g6KGo56S65o2i6KGM44CCQUnmqKHlvI/kuIvov5nkupvmqKHmnb/kvZzkuLrlj4LogIM8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g57uf6K6h5L+h5oGvIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPui/veeyiee7n+iuoTo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtc3RhdHMiIGlkPSJ4aHMtYWktZm9sbG93dXAtc3RhdHMiPg0KICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LWxhYmVsIj7lvoXlm57orr/nlKjmiLc6PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC12YWx1ZSIgaWQ9Inhocy1haS1mb2xsb3d1cC1wZW5kaW5nLWNvdW50Ij4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuS7iuaXpeW3suWbnuiuvzo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLWZvbGxvd3VwLXRvZGF5LWNvdW50Ij4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuaAu+Wbnuiuv+asoeaVsDo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLWZvbGxvd3VwLXRvdGFsLWNvdW50Ij4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuW3suiOt+eVmeWuoui1hDo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLWZvbGxvd3VwLWxlYWRzLWNvdW50Ij4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuWKn+iDveeKtuaAgTo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNw",
        "YW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLWZvbGxvd3VwLXN0YXR1cyI+5bey56aB55SoPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDmk43kvZzmjInpkq4gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tYWN0aW9ucyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1wcmltYXJ5IiBpZD0ieGhzLWFpLXNhdmUtZm9sbG93dXAiPuS/neWtmOiuvue9rjwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc2Vjb25kYXJ5IiBpZD0ieGhzLWFpLXNjYW4tdXNlcnMiIHRpdGxlPSLkvb/nlKjkvJjljJbnmoTmu5rliqjmiavmj4/mlrnms5Xojrflj5bmiYDmnInkvJror53mlbDmja4iPuaZuuiDveaJq+aPj+eUqOaItzwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc2Vjb25kYXJ5IiBpZD0ieGhzLWFpLXRyaWdnZXItZm9sbG93dXAiIHRpdGxlPSLlr7nnjrDmnInlvoXlm57orr/nlKjmiLfnq4vljbPmiafooYzlm57orr/vvIzkuI3ov5vooYzmlrDnlKjmiLfmiavmj48iPueri+WNs+WbnuiuvzwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc2Vjb25kYXJ5IiBpZD0ieGhzLWFpLXJlZnJlc2gtZm9sbG93dXAtc3RhdHMiPuWIt+aWsOe7n+iuoTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4taW5mbyIgaWQ9Inhocy1haS1kaWFnbm9zZS1mb2xsb3d1cCI+6YWN572u6K+K5patPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1kYW5nZXIiIGlkPSJ4aHMtYWktY2xlYXItZm9sbG93dXAtcmVjb3JkcyI+5riF56m66K6w5b2VPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSDov73nsonlkI3ljZXnrqHnkIbljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctc2VjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWkt",
        "Y29uZmlnLWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+8J+TiyDov73nsonlkI3ljZXnrqHnkIY8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXRvZ2dsZS1mb2xsb3d1cC1saXN0Ij7lsZXlvIA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1jb250ZW50IiBpZD0ieGhzLWFpLWZvbGxvd3VwLWxpc3QtY29udGVudCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOaQnOe0ouWSjOetm+mAiSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1zZWFyY2gtY29udGFpbmVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0ieGhzLWFpLWZvbGxvd3VwLXNlYXJjaCIgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1zZWFyY2giDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IuaQnOe0oueUqOaIt+WQjS4uLiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgaWQ9Inhocy1haS1mb2xsb3d1cC1maWx0ZXIiIGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtZmlsdGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJhbGwiPuWFqOmDqOeUqOaItzwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9InBlbmRpbmciPuW+heWbnuiuvzwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9ImZvbGxvd2luZyI+5Zue6K6/5LitPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iY29tcGxldGVkIj7lt7LlrozmiJA8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJsZWFkc19hY3F1aXJlZCI+5bey6I6355WZ5a6i6LWEPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS1yZWZyZXNoLWZvbGxvd3VwLWxpc3QiPuWIt+aWsDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rp",
        "dj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g8J+GlSDmibnph4/mk43kvZzmjqfliLbljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiIGlkPSJ4aHMtYWktYmF0Y2gtb3BlcmF0aW9ucy1ncm91cCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWJhdGNoLW9wZXJhdGlvbnMtaGVhZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1iYXRjaC1zZWxlY3QtY29udHJvbHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1iYXRjaC1zZWxlY3QtZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJ4aHMtYWktc2VsZWN0LW1vZGUiIGNsYXNzPSJ4aHMtYWktc2VsZWN0Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9InBhZ2UiPumAieaLqeacrOmhtTwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iYWxsIj7pgInmi6nlhajpg6g8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS1leGVjdXRlLXNlbGVjdCI+5omn6KGMPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zZWxlY3RlZC1jb3VudCI+5bey6YCJ5oupIDxzcGFuIGlkPSJ4aHMtYWktc2VsZWN0ZWQtY291bnQiPjA8L3NwYW4+IOS6ujwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWJhdGNoLWFjdGlvbi1idXR0b25zIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tcHJpbWFyeSIgaWQ9Inhocy1haS1iYXRjaC1tYXJrLXZpc2l0ZWQiIGRpc2FibGVkPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDmoIforrDlt7Llm57orr8NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4NCiAgICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tZGFuZ2VyIiBpZD0ieGhzLWFpLWJhdGNoLWRlbGV0ZSIgZGlzYWJsZWQ+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOaJuemHj+WIoOmZpA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zZWNvbmRhcnkiIGlkPSJ4aHMtYWktY2FuY2VsLWJhdGNoLXNlbGVjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIOWPlua2iOmAieaLqQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDnlKjmiLfliJfooaggLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtbGlzdC1oZWFkZXIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+55So5oi35YiX6KGoICjlhbEgPHNwYW4gaWQ9Inhocy1haS1mb2xsb3d1cC1saXN0LWNvdW50Ij4wPC9zcGFuPiDkuropPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXRvZ2dsZS1iYXRjaC1tb2RlIj7mibnph4/mk43kvZw8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1saXN0LWNvbnRhaW5lciIgaWQ9Inhocy1haS1mb2xsb3d1cC1saXN0LWNvbnRhaW5lciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtbGlzdC1lbXB0eSI+5pqC5peg55So5oi35pWw5o2uPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDliIbpobXmjqfliLYgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNs",
        "YXNzPSJ4aHMtYWktZm9sbG93dXAtcGFnaW5hdGlvbiIgaWQ9Inhocy1haS1mb2xsb3d1cC1wYWdpbmF0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS1mb2xsb3d1cC1wcmV2LXBhZ2UiIGRpc2FibGVkPuS4iuS4gOmhtTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9Inhocy1haS1mb2xsb3d1cC1wYWdlLWluZm8iPuesrCAxIOmhte+8jOWFsSAxIOmhtTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS1mb2xsb3d1cC1uZXh0LXBhZ2UiIGRpc2FibGVkPuS4i+S4gOmhtTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICA8IS0tIOWbnuiuv+m7keWQjeWNleeuoeeQhuWMuuWfnyAtLT4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1zZWN0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctaGVhZGVyIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7wn5qrIOWbnuiuv+m7keWQjeWNleeuoeeQhjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktdG9nZ2xlLWZvbGxvd3VwLWJsYWNrbGlzdCI+5bGV5byAPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctY29udGVudCIgaWQ9Inhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtY29udGVudCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOm7keWQjeWNlee7n+iuoSAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1ibGFja2xpc3Qtc3RhdHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+6buR5ZCN5Y2V55So5oi35pWwOiA8c3Ryb25nIGlkPSJ4aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LWNvdW50Ij4wPC9zdHJvbmc+PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNt",
        "YWxsIiBpZD0ieGhzLWFpLXJlZnJlc2gtZm9sbG93dXAtYmxhY2tsaXN0Ij7liLfmlrA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1kYW5nZXIgeGhzLWFpLWJ0bi1zbWFsbCIgaWQ9Inhocy1haS1jbGVhci1mb2xsb3d1cC1ibGFja2xpc3QiPua4heepuum7keWQjeWNlTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g6buR5ZCN5Y2V5YiX6KGoIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1jb250YWluZXIiIGlkPSJ4aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LWNvbnRhaW5lciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LWVtcHR5Ij7mmoLml6Dpu5HlkI3ljZXnlKjmiLc8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSDphY3nva7nrqHnkIbljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctc2VjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktY29uZmlnLWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+4pqZ77iPIOmFjee9rueuoeeQhjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc21hbGwiIGlkPSJ4aHMtYWktdG9nZ2xlLWNvbmZpZy1tZ210Ij7lsZXlvIA8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWNvbmZpZy1jb250ZW50IiBpZD0ieGhzLWFpLWNvbmZpZy1tZ210LWNvbnRlbnQiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDlr7zlh7rljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+5a+85Ye66YWN572uOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9",
        "Inhocy1haS1idXR0b24tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNlY29uZGFyeSIgaWQ9Inhocy1haS1leHBvcnQtY29uZmlnIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDwn5OEIOWvvOWHuumFjee9rg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYnRuIHhocy1haS1idG4tc2Vjb25kYXJ5IiBpZD0ieGhzLWFpLWV4cG9ydC1mdWxsIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDwn5OmIOWvvOWHuuWFqOmDqA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+6YWN572u5a+85Ye65LuF5YyF5ZCr6K6+572u6aG577yM5YWo6YOo5a+85Ye65YyF5ZCr55So5oi35pWw5o2uPC9zbWFsbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0g5a+85YWl5Yy65Z+fIC0tPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb3JtLWdyb3VwIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuWvvOWFpemFjee9rjo8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktaW5wdXQtZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXByaW1hcnkiIGlkPSJ4aHMtYWktaW1wb3J0LWNvbmZpZyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg8J+TgSDpgInmi6nmlofku7blr7zlhaUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImZpbGUiIGlkPSJ4aHMtYWktaW1wb3J0LWZpbGUiIGFjY2VwdD0iLmpzb24iIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+5pSv5oyB5a+85YWl5LmL5YmN5a+85Ye655qESlNPTumFjee9ruaWh+S7tjwvc21hbGw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIOWNsemZqeaTjeS9nOWMuuWfnyAtLT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMt",
        "YWktZm9ybS1ncm91cCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD7ljbHpmanmk43kvZw6PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLWRhbmdlciIgaWQ9Inhocy1haS1yZXNldC1hbGwiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg8J+UhCDph43nva7miYDmnInphY3nva4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD7lsIbmiYDmnInphY3nva7mgaLlpI3kuLrpu5jorqTlgLzvvIzmraTmk43kvZzkuI3lj6/mkqTplIA8L3NtYWxsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSDphY3nva7nu5/orqEgLS0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvcm0tZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+6YWN572u57uf6K6hOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1jb25maWctc3RhdHMiIGlkPSJ4aHMtYWktY29uZmlnLXN0YXRzIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1zdGF0LWl0ZW0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+6YWN572u6aG55pWw6YePOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtdmFsdWUiIGlkPSJ4aHMtYWktY29uZmlnLWNvdW50Ij4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPum7keWQjeWNleeUqOaItzo8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLWJsYWNrbGlzdC1zdGF0Ij4wPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLXN0YXQtbGFiZWwiPuS8muivneiusOW/hjo8L3NwYW4+DQogICAgICAgICAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLXNlc3Npb25zLXN0YXQiPjA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQoNCiAgICAgICAgICAgICAgICAgICAgPCEtLSDml6Xlv5fljLrln58gLS0+DQogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1sb2ctc2VjdGlvbiI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktbG9nLWhlYWRlciI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+6L+Q6KGM5pel5b+XPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1sb2ctY29udHJvbHMiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VsZWN0IGlkPSJ4aHMtYWktbG9nLWxldmVsIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9ImFsbCI+5YWo6YOoPC9vcHRpb24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJpbmZvIj7kv6Hmga88L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9Indhcm4iPuitpuWRijwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iZXJyb3IiPumUmeivrzwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWJ0biB4aHMtYWktYnRuLXNtYWxsIiBpZD0ieGhzLWFpLXJlZnJlc2gtbG9ncyI+5Yi35pawPC9idXR0b24+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1sb2ctY29udGVudCIgaWQ9Inhocy1haS1sb2ctY29udGVudCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWxvZy1lbXB0eSI+5pqC5peg5pel5b+XPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICBgOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorr7nva7liJ3lp4vkvY3nva4NCiAgICAgICAgICovDQogICAgICAgIHNldEluaXRpYWxQb3NpdGlvbigp",
        "IHsNCiAgICAgICAgICAgIGlmICghdGhpcy5wYW5lbCkgcmV0dXJuOw0KDQogICAgICAgICAgICAvLyDku45sb2NhbFN0b3JhZ2XmgaLlpI3kvY3nva7vvIzmiJbkvb/nlKjpu5jorqTkvY3nva4NCiAgICAgICAgICAgIGNvbnN0IHNhdmVkUG9zaXRpb24gPSB0aGlzLmxvYWRQYW5lbFBvc2l0aW9uKCk7DQoNCiAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUucG9zaXRpb24gPSAnZml4ZWQnOw0KICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS56SW5kZXggPSAnOTk5OTk5JzsNCiAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUud2lkdGggPSAnMzUwcHgnOw0KICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS5tYXhIZWlnaHQgPSAnODB2aCc7DQogICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLnRyYW5zaXRpb24gPSAnYWxsIDAuM3MgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKSc7DQoNCiAgICAgICAgICAgIGlmIChzYXZlZFBvc2l0aW9uICYmICFzYXZlZFBvc2l0aW9uLmlzTWluaW1pemVkKSB7DQogICAgICAgICAgICAgICAgLy8g5oGi5aSN5L+d5a2Y55qE5L2N572uDQogICAgICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS5sZWZ0ID0gc2F2ZWRQb3NpdGlvbi5sZWZ0ICsgJ3B4JzsNCiAgICAgICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLnRvcCA9IHNhdmVkUG9zaXRpb24udG9wICsgJ3B4JzsNCiAgICAgICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLnJpZ2h0ID0gJ2F1dG8nOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAvLyDpu5jorqTkvY3nva7vvJrlj7PkuIrop5INCiAgICAgICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLnRvcCA9ICcyMHB4JzsNCiAgICAgICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLnJpZ2h0ID0gJzIwcHgnOw0KICAgICAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUubGVmdCA9ICdhdXRvJzsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yqg6L296Z2i5p2/5L2N572uDQogICAgICAgICAqLw0KICAgICAgICBsb2FkUGFuZWxQb3NpdGlvbigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc2F2ZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgneGhzLWFpLXBhbmVsLXBvc2l0aW9uJyk7DQogICAgICAgICAgICAgICAgaWYgKHNhdmVkKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHBvc2l0aW9uID0gSlNPTi5wYXJzZShzYXZlZCk7DQogICAgICAgICAgICAgICAgICAgIC8vIOmqjOivgeS9jee9ruaVsOaNrueahOacieaViOaApw0KICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHBvc2l0aW9uLmxlZnQgPT09ICdudW1iZXInICYmIHR5cGVvZiBwb3NpdGlvbi50b3AgPT09ICdudW1iZXInKSB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcG9zaXRpb247DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQog",
        "ICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfliqDovb3pnaLmnb/kvY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS/neWtmOmdouadv+S9jee9rg0KICAgICAgICAgKi8NCiAgICAgICAgc2F2ZVBhbmVsUG9zaXRpb24oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICghdGhpcy5wYW5lbCkgcmV0dXJuOw0KDQogICAgICAgICAgICAgICAgbGV0IHBvc2l0aW9uOw0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzTWluaW1pemVkKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr+acgOWwj+WMlueKtuaAge+8jOS/neWtmOacgOWwj+WMluagh+iusA0KICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbiA9IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDAsDQogICAgICAgICAgICAgICAgICAgICAgICB0b3A6IDAsDQogICAgICAgICAgICAgICAgICAgICAgICBpc01pbmltaXplZDogdHJ1ZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKQ0KICAgICAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOS/neWtmOWunumZheS9jee9rg0KICAgICAgICAgICAgICAgICAgICBjb25zdCByZWN0ID0gdGhpcy5wYW5lbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb24gPSB7DQogICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiByZWN0LmxlZnQsDQogICAgICAgICAgICAgICAgICAgICAgICB0b3A6IHJlY3QudG9wLA0KICAgICAgICAgICAgICAgICAgICAgICAgaXNNaW5pbWl6ZWQ6IGZhbHNlLA0KICAgICAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpDQogICAgICAgICAgICAgICAgICAgIH07DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3hocy1haS1wYW5lbC1wb3NpdGlvbicsIEpTT04uc3RyaW5naWZ5KHBvc2l0aW9uKSk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpnaLmnb/kvY3nva7lt7Lkv53lrZgnLCBwb3NpdGlvbik7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfkv53lrZjpnaLmnb/kvY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpmZDliLbpnaLmnb/kvY3nva7lnKjlj6/op4bljLrln5/lhoUNCiAgICAgICAgICovDQogICAgICAgIGNvbnN0cmFpblBhbmVsUG9zaXRpb24obGVmdCwgdG9wKSB7DQogICAgICAg",
        "ICAgICBjb25zdCBwYW5lbFdpZHRoID0gMzUwOyAvLyDpnaLmnb/lrr3luqYNCiAgICAgICAgICAgIGNvbnN0IHBhbmVsSGVpZ2h0ID0gTWF0aC5taW4od2luZG93LmlubmVySGVpZ2h0ICogMC44LCA2MDApOyAvLyDpnaLmnb/pq5jluqYNCiAgICAgICAgICAgIGNvbnN0IG1hcmdpbiA9IDEwOyAvLyDovrnot50NCg0KICAgICAgICAgICAgLy8g6ZmQ5Yi25rC05bmz5L2N572uDQogICAgICAgICAgICBsZWZ0ID0gTWF0aC5tYXgobWFyZ2luLCBNYXRoLm1pbihsZWZ0LCB3aW5kb3cuaW5uZXJXaWR0aCAtIHBhbmVsV2lkdGggLSBtYXJnaW4pKTsNCg0KICAgICAgICAgICAgLy8g6ZmQ5Yi25Z6C55u05L2N572uDQogICAgICAgICAgICB0b3AgPSBNYXRoLm1heChtYXJnaW4sIE1hdGgubWluKHRvcCwgd2luZG93LmlubmVySGVpZ2h0IC0gcGFuZWxIZWlnaHQgLSBtYXJnaW4pKTsNCg0KICAgICAgICAgICAgcmV0dXJuIHsgbGVmdCwgdG9wIH07DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmZhOWKoOS6i+S7tuebkeWQrOWZqA0KICAgICAgICAgKi8NCiAgICAgICAgYXR0YWNoRXZlbnRMaXN0ZW5lcnMoKSB7DQogICAgICAgICAgICBpZiAoIXRoaXMucGFuZWwpIHJldHVybjsNCg0KICAgICAgICAgICAgLy8g5Li76KaB5o6n5Yi25oyJ6ZKuDQogICAgICAgICAgICBjb25zdCB0b2dnbGVCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlJyk7DQogICAgICAgICAgICBjb25zdCBjaGVja0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1jaGVjaycpOw0KICAgICAgICAgICAgY29uc3QgdGVzdEFwaUJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10ZXN0LWFwaScpOw0KICAgICAgICAgICAgY29uc3QgZGlhZ25vc2VCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZGlhZ25vc2UnKTsNCiAgICAgICAgICAgIGNvbnN0IGNsZWFyTG9nc0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1jbGVhci1sb2dzJyk7DQogICAgICAgICAgICBjb25zdCBoZWxwQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWhlbHAnKTsNCg0KICAgICAgICAgICAgLy8g6YWN572u55u45YWz5oyJ6ZKuDQogICAgICAgICAgICBjb25zdCB0b2dnbGVDb25maWdCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWNvbmZpZycpOw0KICAgICAgICAgICAgY29uc3Qgc2F2ZUNvbmZpZ0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zYXZlLWNvbmZpZycpOw0KICAgICAgICAgICAgY29uc3QgcmVzZXRDb25maWdCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcmVzZXQtY29uZmlnJyk7DQoNCiAgICAgICAgICAgIC8vIOiOt+WuouW3peWFt+ebuOWFs+aMiemSrg0KICAgICAgICAgICAgY29uc3QgdG9nZ2xlQWNxdWlzaXRpb25CdG4gPSB0",
        "aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWFjcXVpc2l0aW9uJyk7DQogICAgICAgICAgICBjb25zdCBhY3F1aXNpdGlvbkVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hY3F1aXNpdGlvbi1lbmFibGVkJyk7DQogICAgICAgICAgICBjb25zdCBzYXZlQWNxdWlzaXRpb25CdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2F2ZS1hY3F1aXNpdGlvbicpOw0KICAgICAgICAgICAgY29uc3QgdGVzdEFjcXVpc2l0aW9uQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRlc3QtYWNxdWlzaXRpb24nKTsNCiAgICAgICAgICAgIGNvbnN0IHJlZnJlc2hUb29sc0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1yZWZyZXNoLXRvb2xzJyk7DQogICAgICAgICAgICBjb25zdCB0b29sVHlwZVNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b29sLXR5cGUnKTsNCg0KICAgICAgICAgICAgLy8g6Z2i5p2/5o6n5Yi25oyJ6ZKuDQogICAgICAgICAgICBjb25zdCBtaW5pbWl6ZUJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignLnhocy1haS1idG4tbWluaW1pemUnKTsNCg0KICAgICAgICAgICAgLy8g5pel5b+X5o6n5Yi2DQogICAgICAgICAgICBjb25zdCBsb2dMZXZlbFNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1sb2ctbGV2ZWwnKTsNCiAgICAgICAgICAgIGNvbnN0IHJlZnJlc2hMb2dzQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXJlZnJlc2gtbG9ncycpOw0KDQogICAgICAgICAgICAvLyDnu5Hlrprkuovku7YNCiAgICAgICAgICAgIGlmICh0b2dnbGVCdG4pIHRvZ2dsZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVG9nZ2xlKCkpOw0KICAgICAgICAgICAgaWYgKGNoZWNrQnRuKSBjaGVja0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlQ2hlY2tNZXNzYWdlcygpKTsNCiAgICAgICAgICAgIGlmICh0ZXN0QXBpQnRuKSB0ZXN0QXBpQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVUZXN0QVBJKCkpOw0KICAgICAgICAgICAgaWYgKGRpYWdub3NlQnRuKSBkaWFnbm9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlRGlhZ25vc2UoKSk7DQogICAgICAgICAgICBpZiAoY2xlYXJMb2dzQnRuKSBjbGVhckxvZ3NCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZUNsZWFyTG9ncygpKTsNCiAgICAgICAgICAgIGlmIChoZWxwQnRuKSBoZWxwQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5zaG93SGVscCgpKTsNCg0KICAgICAgICAgICAgaWYgKHRvZ2dsZUNvbmZpZ0J0bikgdG9nZ2xlQ29uZmlnQnRuLmFkZEV2ZW50TGlz",
        "dGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVUb2dnbGVDb25maWcoKSk7DQogICAgICAgICAgICBpZiAoc2F2ZUNvbmZpZ0J0bikgc2F2ZUNvbmZpZ0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlU2F2ZUNvbmZpZygpKTsNCiAgICAgICAgICAgIGlmIChyZXNldENvbmZpZ0J0bikgcmVzZXRDb25maWdCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVJlc2V0Q29uZmlnKCkpOw0KDQogICAgICAgICAgICAvLyDojrflrqLlt6Xlhbfkuovku7bnu5HlrpoNCiAgICAgICAgICAgIGlmICh0b2dnbGVBY3F1aXNpdGlvbkJ0bikgdG9nZ2xlQWNxdWlzaXRpb25CdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRvZ2dsZUFjcXVpc2l0aW9uKCkpOw0KICAgICAgICAgICAgaWYgKGFjcXVpc2l0aW9uRW5hYmxlZENoZWNrYm94KSBhY3F1aXNpdGlvbkVuYWJsZWRDaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB0aGlzLmhhbmRsZUFjcXVpc2l0aW9uRW5hYmxlZENoYW5nZSgpKTsNCiAgICAgICAgICAgIGlmIChzYXZlQWNxdWlzaXRpb25CdG4pIHNhdmVBY3F1aXNpdGlvbkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlU2F2ZUFjcXVpc2l0aW9uKCkpOw0KICAgICAgICAgICAgaWYgKHRlc3RBY3F1aXNpdGlvbkJ0bikgdGVzdEFjcXVpc2l0aW9uQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVUZXN0QWNxdWlzaXRpb24oKSk7DQogICAgICAgICAgICBpZiAocmVmcmVzaFRvb2xzQnRuKSByZWZyZXNoVG9vbHNCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVJlZnJlc2hUb29scygpKTsNCiAgICAgICAgICAgIGlmICh0b29sVHlwZVNlbGVjdCkgdG9vbFR5cGVTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4gdGhpcy5oYW5kbGVUb29sVHlwZUNoYW5nZSgpKTsNCg0KICAgICAgICAgICAgaWYgKG1pbmltaXplQnRuKSBtaW5pbWl6ZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlTWluaW1pemUoKSk7DQoNCiAgICAgICAgICAgIGlmIChsb2dMZXZlbFNlbGVjdCkgbG9nTGV2ZWxTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4gdGhpcy51cGRhdGVMb2dzKCkpOw0KICAgICAgICAgICAgaWYgKHJlZnJlc2hMb2dzQnRuKSByZWZyZXNoTG9nc0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMudXBkYXRlTG9ncygpKTsNCg0KICAgICAgICAgICAgLy8g6buR5ZCN5Y2V55u45YWz5LqL5Lu2DQogICAgICAgICAgICBjb25zdCB0b2dnbGVCbGFja2xpc3RCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWJsYWNrbGlzdCcpOw0KICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0RW5h",
        "YmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJsYWNrbGlzdC1lbmFibGVkJyk7DQogICAgICAgICAgICBjb25zdCBhdXRvRGV0ZWN0QmxvY2tlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWF1dG8tZGV0ZWN0LWJsb2NrZWQnKTsNCiAgICAgICAgICAgIGNvbnN0IGFkZEJsYWNrbGlzdEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hZGQtYmxhY2tsaXN0Jyk7DQogICAgICAgICAgICBjb25zdCBzYXZlQmxhY2tsaXN0QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNhdmUtYmxhY2tsaXN0Jyk7DQogICAgICAgICAgICBjb25zdCBjbGVhckJsYWNrbGlzdEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1jbGVhci1ibGFja2xpc3QnKTsNCiAgICAgICAgICAgIGNvbnN0IGV4cG9ydEJsYWNrbGlzdEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1leHBvcnQtYmxhY2tsaXN0Jyk7DQogICAgICAgICAgICBjb25zdCBpbXBvcnRCbGFja2xpc3RCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktaW1wb3J0LWJsYWNrbGlzdCcpOw0KICAgICAgICAgICAgY29uc3QgdGVzdEJsb2NrZWREZXRlY3Rpb25CdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdGVzdC1ibG9ja2VkLWRldGVjdGlvbicpOw0KDQogICAgICAgICAgICBpZiAodG9nZ2xlQmxhY2tsaXN0QnRuKSB0b2dnbGVCbGFja2xpc3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRvZ2dsZUJsYWNrbGlzdCgpKTsNCiAgICAgICAgICAgIGlmIChibGFja2xpc3RFbmFibGVkQ2hlY2tib3gpIGJsYWNrbGlzdEVuYWJsZWRDaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB0aGlzLmhhbmRsZUJsYWNrbGlzdEVuYWJsZWRDaGFuZ2UoKSk7DQogICAgICAgICAgICBpZiAoYXV0b0RldGVjdEJsb2NrZWRDaGVja2JveCkgYXV0b0RldGVjdEJsb2NrZWRDaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB0aGlzLmhhbmRsZUF1dG9EZXRlY3RDaGFuZ2UoKSk7DQogICAgICAgICAgICBpZiAoYWRkQmxhY2tsaXN0QnRuKSBhZGRCbGFja2xpc3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZUFkZEJsYWNrbGlzdCgpKTsNCiAgICAgICAgICAgIGlmIChzYXZlQmxhY2tsaXN0QnRuKSBzYXZlQmxhY2tsaXN0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVTYXZlQmxhY2tsaXN0KCkpOw0KICAgICAgICAgICAgaWYgKGNsZWFyQmxhY2tsaXN0QnRuKSBjbGVhckJsYWNrbGlzdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlQ2xlYXJCbGFja2xpc3QoKSk7DQogICAgICAgICAgICBpZiAoZXhwb3J0QmxhY2ts",
        "aXN0QnRuKSBleHBvcnRCbGFja2xpc3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZUV4cG9ydEJsYWNrbGlzdCgpKTsNCiAgICAgICAgICAgIGlmIChpbXBvcnRCbGFja2xpc3RCdG4pIGltcG9ydEJsYWNrbGlzdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlSW1wb3J0QmxhY2tsaXN0KCkpOw0KICAgICAgICAgICAgaWYgKHRlc3RCbG9ja2VkRGV0ZWN0aW9uQnRuKSB0ZXN0QmxvY2tlZERldGVjdGlvbkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVGVzdEJsb2NrZWREZXRlY3Rpb24oKSk7DQoNCiAgICAgICAgICAgIC8vIOS8muivneiusOW/hueuoeeQhuebuOWFs+S6i+S7tg0KICAgICAgICAgICAgY29uc3QgdG9nZ2xlU2Vzc2lvbk1lbW9yeUJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtc2Vzc2lvbi1tZW1vcnknKTsNCiAgICAgICAgICAgIGNvbnN0IHNlc3Npb25NZW1vcnlFbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2Vzc2lvbi1tZW1vcnktZW5hYmxlZCcpOw0KICAgICAgICAgICAgY29uc3Qgc2F2ZVNlc3Npb25NZW1vcnlCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2F2ZS1zZXNzaW9uLW1lbW9yeScpOw0KICAgICAgICAgICAgY29uc3QgcmVmcmVzaFNlc3Npb25TdGF0c0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1yZWZyZXNoLXNlc3Npb24tc3RhdHMnKTsNCiAgICAgICAgICAgIGNvbnN0IGNsZWFuRXhwaXJlZFNlc3Npb25zQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWNsZWFuLWV4cGlyZWQtc2Vzc2lvbnMnKTsNCiAgICAgICAgICAgIGNvbnN0IGNsZWFyQWxsU2Vzc2lvbnNCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktY2xlYXItYWxsLXNlc3Npb25zJyk7DQogICAgICAgICAgICBjb25zdCBleHBvcnRTZXNzaW9uc0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1leHBvcnQtc2Vzc2lvbnMnKTsNCiAgICAgICAgICAgIGNvbnN0IGltcG9ydFNlc3Npb25zQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWltcG9ydC1zZXNzaW9ucycpOw0KDQogICAgICAgICAgICBpZiAodG9nZ2xlU2Vzc2lvbk1lbW9yeUJ0bikgdG9nZ2xlU2Vzc2lvbk1lbW9yeUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVG9nZ2xlU2Vzc2lvbk1lbW9yeSgpKTsNCiAgICAgICAgICAgIGlmIChzZXNzaW9uTWVtb3J5RW5hYmxlZENoZWNrYm94KSBzZXNzaW9uTWVtb3J5RW5hYmxlZENoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHRoaXMuaGFuZGxlU2Vzc2lvbk1lbW9yeUVuYWJsZWRDaGFuZ2UoKSk7DQogICAgICAgICAgICBpZiAoc2F2ZVNl",
        "c3Npb25NZW1vcnlCdG4pIHNhdmVTZXNzaW9uTWVtb3J5QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVTYXZlU2Vzc2lvbk1lbW9yeSgpKTsNCiAgICAgICAgICAgIGlmIChyZWZyZXNoU2Vzc2lvblN0YXRzQnRuKSByZWZyZXNoU2Vzc2lvblN0YXRzQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVSZWZyZXNoU2Vzc2lvblN0YXRzKCkpOw0KICAgICAgICAgICAgaWYgKGNsZWFuRXhwaXJlZFNlc3Npb25zQnRuKSBjbGVhbkV4cGlyZWRTZXNzaW9uc0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlQ2xlYW5FeHBpcmVkU2Vzc2lvbnMoKSk7DQogICAgICAgICAgICBpZiAoY2xlYXJBbGxTZXNzaW9uc0J0bikgY2xlYXJBbGxTZXNzaW9uc0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlQ2xlYXJBbGxTZXNzaW9ucygpKTsNCiAgICAgICAgICAgIGlmIChleHBvcnRTZXNzaW9uc0J0bikgZXhwb3J0U2Vzc2lvbnNCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZUV4cG9ydFNlc3Npb25zKCkpOw0KICAgICAgICAgICAgaWYgKGltcG9ydFNlc3Npb25zQnRuKSBpbXBvcnRTZXNzaW9uc0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlSW1wb3J0U2Vzc2lvbnMoKSk7DQoNCiAgICAgICAgICAgIC8vIOiBmuWFiei/m+e6v+ebuOWFs+S6i+S7tg0KICAgICAgICAgICAgY29uc3QgdG9nZ2xlU3BvdGxpZ2h0QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS1zcG90bGlnaHQnKTsNCiAgICAgICAgICAgIGNvbnN0IHNwb3RsaWdodEVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtZW5hYmxlZCcpOw0KICAgICAgICAgICAgY29uc3Qgc2F2ZVNwb3RsaWdodEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zYXZlLXNwb3RsaWdodCcpOw0KICAgICAgICAgICAgY29uc3QgdGVzdFNwb3RsaWdodEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10ZXN0LXNwb3RsaWdodCcpOw0KICAgICAgICAgICAgY29uc3QgcmVmcmVzaFNwb3RsaWdodFN0YXRzQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXJlZnJlc2gtc3BvdGxpZ2h0LXN0YXRzJyk7DQogICAgICAgICAgICBjb25zdCBjbGVhclNwb3RsaWdodENhY2hlQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWNsZWFyLXNwb3RsaWdodC1jYWNoZScpOw0KDQogICAgICAgICAgICBpZiAodG9nZ2xlU3BvdGxpZ2h0QnRuKSB0b2dnbGVTcG90bGlnaHRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRvZ2dsZVNwb3RsaWdodCgpKTsNCiAgICAgICAgICAgIGlmIChzcG90bGlnaHRFbmFi",
        "bGVkQ2hlY2tib3gpIHNwb3RsaWdodEVuYWJsZWRDaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB0aGlzLmhhbmRsZVNwb3RsaWdodEVuYWJsZWRDaGFuZ2UoKSk7DQogICAgICAgICAgICBpZiAoc2F2ZVNwb3RsaWdodEJ0bikgc2F2ZVNwb3RsaWdodEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlU2F2ZVNwb3RsaWdodCgpKTsNCiAgICAgICAgICAgIGlmICh0ZXN0U3BvdGxpZ2h0QnRuKSB0ZXN0U3BvdGxpZ2h0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVUZXN0U3BvdGxpZ2h0KCkpOw0KICAgICAgICAgICAgaWYgKHJlZnJlc2hTcG90bGlnaHRTdGF0c0J0bikgcmVmcmVzaFNwb3RsaWdodFN0YXRzQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVSZWZyZXNoU3BvdGxpZ2h0U3RhdHMoKSk7DQogICAgICAgICAgICBpZiAoY2xlYXJTcG90bGlnaHRDYWNoZUJ0bikgY2xlYXJTcG90bGlnaHRDYWNoZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlQ2xlYXJTcG90bGlnaHRDYWNoZSgpKTsNCg0KICAgICAgICAgICAgLy8g5YO15bC45pyq6K+75aSE55CG55u45YWz5LqL5Lu2DQogICAgICAgICAgICBjb25zdCB0b2dnbGVab21iaWVCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLXpvbWJpZScpOw0KICAgICAgICAgICAgY29uc3Qgem9tYmllRW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXpvbWJpZS1lbmFibGVkJyk7DQogICAgICAgICAgICBjb25zdCBzYXZlWm9tYmllQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNhdmUtem9tYmllJyk7DQogICAgICAgICAgICBjb25zdCByZWZyZXNoWm9tYmllU3RhdHNCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcmVmcmVzaC16b21iaWUtc3RhdHMnKTsNCiAgICAgICAgICAgIGNvbnN0IGNsZWFyWm9tYmllUmVjb3Jkc0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1jbGVhci16b21iaWUtcmVjb3JkcycpOw0KDQogICAgICAgICAgICBpZiAodG9nZ2xlWm9tYmllQnRuKSB0b2dnbGVab21iaWVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRvZ2dsZVpvbWJpZSgpKTsNCiAgICAgICAgICAgIGlmICh6b21iaWVFbmFibGVkQ2hlY2tib3gpIHpvbWJpZUVuYWJsZWRDaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB0aGlzLmhhbmRsZVpvbWJpZUVuYWJsZWRDaGFuZ2UoKSk7DQogICAgICAgICAgICBpZiAoc2F2ZVpvbWJpZUJ0bikgc2F2ZVpvbWJpZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlU2F2ZVpvbWJpZSgpKTsNCiAgICAgICAgICAgIGlmIChyZWZyZXNoWm9tYmllU3Rh",
        "dHNCdG4pIHJlZnJlc2hab21iaWVTdGF0c0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlUmVmcmVzaFpvbWJpZVN0YXRzKCkpOw0KICAgICAgICAgICAgaWYgKGNsZWFyWm9tYmllUmVjb3Jkc0J0bikgY2xlYXJab21iaWVSZWNvcmRzQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVDbGVhclpvbWJpZVJlY29yZHMoKSk7DQoNCiAgICAgICAgICAgIC8vIOi/veeyieWKn+iDveebuOWFs+S6i+S7tg0KICAgICAgICAgICAgY29uc3QgdG9nZ2xlRm9sbG93VXBCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWZvbGxvd3VwJyk7DQogICAgICAgICAgICBjb25zdCBmb2xsb3dVcEVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1lbmFibGVkJyk7DQogICAgICAgICAgICBjb25zdCBzYXZlRm9sbG93VXBCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2F2ZS1mb2xsb3d1cCcpOw0KICAgICAgICAgICAgY29uc3Qgc2NhblVzZXJzQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNjYW4tdXNlcnMnKTsNCiAgICAgICAgICAgIGNvbnN0IHRyaWdnZXJGb2xsb3dVcEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10cmlnZ2VyLWZvbGxvd3VwJyk7DQogICAgICAgICAgICBjb25zdCByZWZyZXNoRm9sbG93VXBTdGF0c0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1yZWZyZXNoLWZvbGxvd3VwLXN0YXRzJyk7DQogICAgICAgICAgICBjb25zdCBkaWFnbm9zZUZvbGxvd1VwQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWRpYWdub3NlLWZvbGxvd3VwJyk7DQogICAgICAgICAgICBjb25zdCBjbGVhckZvbGxvd1VwUmVjb3Jkc0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1jbGVhci1mb2xsb3d1cC1yZWNvcmRzJyk7DQogICAgICAgICAgICBjb25zdCBmb2xsb3dVcFJhbmRvbURlbGF5Q2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtcmFuZG9tLWRlbGF5Jyk7DQogICAgICAgICAgICBjb25zdCBmb2xsb3dVcEF1dG9SZWNvcmRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1hdXRvLXJlY29yZCcpOw0KICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVNb2RlU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlLW1vZGUnKTsNCiAgICAgICAgICAgIGNvbnN0IGFkZFRlbXBsYXRlQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWFkZC10ZW1wbGF0ZScpOw0KICAgICAgICAgICAgY29uc3QgcmVzZXRUZW1wbGF0ZXNCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWkt",
        "cmVzZXQtdGVtcGxhdGVzJyk7DQoNCiAgICAgICAgICAgIGlmICh0b2dnbGVGb2xsb3dVcEJ0bikgdG9nZ2xlRm9sbG93VXBCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRvZ2dsZUZvbGxvd1VwKCkpOw0KICAgICAgICAgICAgaWYgKGZvbGxvd1VwRW5hYmxlZENoZWNrYm94KSBmb2xsb3dVcEVuYWJsZWRDaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB0aGlzLmhhbmRsZUZvbGxvd1VwRW5hYmxlZENoYW5nZSgpKTsNCiAgICAgICAgICAgIGlmIChzYXZlRm9sbG93VXBCdG4pIHNhdmVGb2xsb3dVcEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlU2F2ZUZvbGxvd1VwKCkpOw0KICAgICAgICAgICAgaWYgKHNjYW5Vc2Vyc0J0bikgc2NhblVzZXJzQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVTY2FuVXNlcnMoKSk7DQogICAgICAgICAgICBpZiAodHJpZ2dlckZvbGxvd1VwQnRuKSB0cmlnZ2VyRm9sbG93VXBCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRyaWdnZXJGb2xsb3dVcCgpKTsNCiAgICAgICAgICAgIGlmIChyZWZyZXNoRm9sbG93VXBTdGF0c0J0bikgcmVmcmVzaEZvbGxvd1VwU3RhdHNCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVJlZnJlc2hGb2xsb3dVcFN0YXRzKCkpOw0KICAgICAgICAgICAgaWYgKGRpYWdub3NlRm9sbG93VXBCdG4pIGRpYWdub3NlRm9sbG93VXBCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZURpYWdub3NlRm9sbG93VXAoKSk7DQogICAgICAgICAgICBpZiAoY2xlYXJGb2xsb3dVcFJlY29yZHNCdG4pIGNsZWFyRm9sbG93VXBSZWNvcmRzQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVDbGVhckZvbGxvd1VwUmVjb3JkcygpKTsNCiAgICAgICAgICAgIGlmIChmb2xsb3dVcFJhbmRvbURlbGF5Q2hlY2tib3gpIGZvbGxvd1VwUmFuZG9tRGVsYXlDaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB0aGlzLmhhbmRsZUZvbGxvd1VwUmFuZG9tRGVsYXlDaGFuZ2UoKSk7DQogICAgICAgICAgICBpZiAoZm9sbG93VXBBdXRvUmVjb3JkQ2hlY2tib3gpIGZvbGxvd1VwQXV0b1JlY29yZENoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHRoaXMuaGFuZGxlRm9sbG93VXBBdXRvUmVjb3JkQ2hhbmdlKCkpOw0KICAgICAgICAgICAgaWYgKHRlbXBsYXRlTW9kZVNlbGVjdCkgdGVtcGxhdGVNb2RlU2VsZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHRoaXMuaGFuZGxlVGVtcGxhdGVNb2RlQ2hhbmdlKCkpOw0KICAgICAgICAgICAgaWYgKGFkZFRlbXBsYXRlQnRuKSBhZGRUZW1wbGF0ZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxl",
        "QWRkVGVtcGxhdGUoKSk7DQogICAgICAgICAgICBpZiAocmVzZXRUZW1wbGF0ZXNCdG4pIHJlc2V0VGVtcGxhdGVzQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVSZXNldFRlbXBsYXRlcygpKTsNCg0KICAgICAgICAgICAgLy8g6L+957KJ5ZCN5Y2V566h55CG55u45YWz5LqL5Lu2DQogICAgICAgICAgICBjb25zdCB0b2dnbGVGb2xsb3dVcExpc3RCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWZvbGxvd3VwLWxpc3QnKTsNCiAgICAgICAgICAgIGNvbnN0IGZvbGxvd1VwU2VhcmNoSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtc2VhcmNoJyk7DQogICAgICAgICAgICBjb25zdCBmb2xsb3dVcEZpbHRlclNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1maWx0ZXInKTsNCiAgICAgICAgICAgIGNvbnN0IHJlZnJlc2hGb2xsb3dVcExpc3RCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcmVmcmVzaC1mb2xsb3d1cC1saXN0Jyk7DQogICAgICAgICAgICBjb25zdCBmb2xsb3dVcFByZXZQYWdlQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXByZXYtcGFnZScpOw0KICAgICAgICAgICAgY29uc3QgZm9sbG93VXBOZXh0UGFnZUJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1uZXh0LXBhZ2UnKTsNCg0KICAgICAgICAgICAgLy8g8J+GlSDmibnph4/mk43kvZznm7jlhbPkuovku7YNCiAgICAgICAgICAgIGNvbnN0IHRvZ2dsZUJhdGNoTW9kZUJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtYmF0Y2gtbW9kZScpOw0KICAgICAgICAgICAgY29uc3QgZXhlY3V0ZVNlbGVjdEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1leGVjdXRlLXNlbGVjdCcpOw0KICAgICAgICAgICAgY29uc3QgYmF0Y2hNYXJrVmlzaXRlZEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1iYXRjaC1tYXJrLXZpc2l0ZWQnKTsNCiAgICAgICAgICAgIGNvbnN0IGJhdGNoRGVsZXRlQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJhdGNoLWRlbGV0ZScpOw0KICAgICAgICAgICAgY29uc3QgY2FuY2VsQmF0Y2hTZWxlY3Rpb25CdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktY2FuY2VsLWJhdGNoLXNlbGVjdGlvbicpOw0KDQogICAgICAgICAgICBpZiAodG9nZ2xlRm9sbG93VXBMaXN0QnRuKSB0b2dnbGVGb2xsb3dVcExpc3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRvZ2dsZUZvbGxvd1VwTGlzdCgpKTsNCiAgICAgICAgICAgIGlmIChmb2xsb3dVcFNlYXJjaElucHV0KSBmb2xsb3dVcFNlYXJjaElucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0",
        "JywgKCkgPT4gdGhpcy5oYW5kbGVGb2xsb3dVcFNlYXJjaCgpKTsNCiAgICAgICAgICAgIGlmIChmb2xsb3dVcEZpbHRlclNlbGVjdCkgZm9sbG93VXBGaWx0ZXJTZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4gdGhpcy5oYW5kbGVGb2xsb3dVcEZpbHRlcigpKTsNCiAgICAgICAgICAgIGlmIChyZWZyZXNoRm9sbG93VXBMaXN0QnRuKSByZWZyZXNoRm9sbG93VXBMaXN0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVSZWZyZXNoRm9sbG93VXBMaXN0KCkpOw0KICAgICAgICAgICAgaWYgKGZvbGxvd1VwUHJldlBhZ2VCdG4pIGZvbGxvd1VwUHJldlBhZ2VCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZUZvbGxvd1VwUHJldlBhZ2UoKSk7DQogICAgICAgICAgICBpZiAoZm9sbG93VXBOZXh0UGFnZUJ0bikgZm9sbG93VXBOZXh0UGFnZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlRm9sbG93VXBOZXh0UGFnZSgpKTsNCg0KICAgICAgICAgICAgLy8g8J+GlSDmibnph4/mk43kvZzkuovku7bnu5HlrpoNCiAgICAgICAgICAgIGlmICh0b2dnbGVCYXRjaE1vZGVCdG4pIHRvZ2dsZUJhdGNoTW9kZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVG9nZ2xlQmF0Y2hNb2RlKCkpOw0KICAgICAgICAgICAgaWYgKGV4ZWN1dGVTZWxlY3RCdG4pIGV4ZWN1dGVTZWxlY3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZUV4ZWN1dGVTZWxlY3QoKSk7DQogICAgICAgICAgICBpZiAoYmF0Y2hNYXJrVmlzaXRlZEJ0bikgYmF0Y2hNYXJrVmlzaXRlZEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlQmF0Y2hNYXJrVmlzaXRlZCgpKTsNCiAgICAgICAgICAgIGlmIChiYXRjaERlbGV0ZUJ0bikgYmF0Y2hEZWxldGVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZUJhdGNoRGVsZXRlKCkpOw0KICAgICAgICAgICAgaWYgKGNhbmNlbEJhdGNoU2VsZWN0aW9uQnRuKSBjYW5jZWxCYXRjaFNlbGVjdGlvbkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlQ2FuY2VsQmF0Y2hTZWxlY3Rpb24oKSk7DQoNCiAgICAgICAgICAgIC8vIOWbnuiuv+m7keWQjeWNleeuoeeQhuebuOWFs+S6i+S7tg0KICAgICAgICAgICAgY29uc3QgdG9nZ2xlRm9sbG93VXBCbGFja2xpc3RCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWZvbGxvd3VwLWJsYWNrbGlzdCcpOw0KICAgICAgICAgICAgY29uc3QgcmVmcmVzaEZvbGxvd1VwQmxhY2tsaXN0QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXJlZnJlc2gtZm9sbG93dXAtYmxhY2tsaXN0Jyk7DQogICAgICAgICAgICBjb25zdCBjbGVhckZvbGxvd1VwQmxhY2tsaXN0QnRu",
        "ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWNsZWFyLWZvbGxvd3VwLWJsYWNrbGlzdCcpOw0KDQogICAgICAgICAgICBpZiAodG9nZ2xlRm9sbG93VXBCbGFja2xpc3RCdG4pIHRvZ2dsZUZvbGxvd1VwQmxhY2tsaXN0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVUb2dnbGVGb2xsb3dVcEJsYWNrbGlzdCgpKTsNCiAgICAgICAgICAgIGlmIChyZWZyZXNoRm9sbG93VXBCbGFja2xpc3RCdG4pIHJlZnJlc2hGb2xsb3dVcEJsYWNrbGlzdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlUmVmcmVzaEZvbGxvd1VwQmxhY2tsaXN0KCkpOw0KICAgICAgICAgICAgaWYgKGNsZWFyRm9sbG93VXBCbGFja2xpc3RCdG4pIGNsZWFyRm9sbG93VXBCbGFja2xpc3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZUNsZWFyRm9sbG93VXBCbGFja2xpc3QoKSk7DQoNCiAgICAgICAgICAgIC8vIOmFjee9rueuoeeQhuebuOWFs+S6i+S7tg0KICAgICAgICAgICAgY29uc3QgdG9nZ2xlQ29uZmlnTWdtdEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtY29uZmlnLW1nbXQnKTsNCiAgICAgICAgICAgIGNvbnN0IGV4cG9ydENvbmZpZ0J0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1leHBvcnQtY29uZmlnJyk7DQogICAgICAgICAgICBjb25zdCBleHBvcnRGdWxsQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWV4cG9ydC1mdWxsJyk7DQogICAgICAgICAgICBjb25zdCBpbXBvcnRDb25maWdCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktaW1wb3J0LWNvbmZpZycpOw0KICAgICAgICAgICAgY29uc3QgaW1wb3J0RmlsZUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWltcG9ydC1maWxlJyk7DQogICAgICAgICAgICBjb25zdCByZXNldEFsbEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1yZXNldC1hbGwnKTsNCg0KICAgICAgICAgICAgaWYgKHRvZ2dsZUNvbmZpZ01nbXRCdG4pIHRvZ2dsZUNvbmZpZ01nbXRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRvZ2dsZUNvbmZpZ01nbXQoKSk7DQogICAgICAgICAgICBpZiAoZXhwb3J0Q29uZmlnQnRuKSBleHBvcnRDb25maWdCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiBDb25maWdFeHBvcnRNYW5hZ2VyLmV4cG9ydENvbmZpZ09ubHkoKSk7DQogICAgICAgICAgICBpZiAoZXhwb3J0RnVsbEJ0bikgZXhwb3J0RnVsbEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IENvbmZpZ0V4cG9ydE1hbmFnZXIuZXhwb3J0RnVsbERhdGEoKSk7DQogICAgICAgICAgICBpZiAoaW1wb3J0Q29uZmlnQnRuKSBpbXBvcnRDb25maWdCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2sn",
        "LCAoKSA9PiBpbXBvcnRGaWxlSW5wdXQuY2xpY2soKSk7DQogICAgICAgICAgICBpZiAoaW1wb3J0RmlsZUlucHV0KSBpbXBvcnRGaWxlSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IENvbmZpZ0ltcG9ydE1hbmFnZXIuaGFuZGxlRmlsZVNlbGVjdChlKSk7DQogICAgICAgICAgICBpZiAocmVzZXRBbGxCdG4pIHJlc2V0QWxsQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVSZXNldEFsbCgpKTsNCg0KICAgICAgICAgICAgLy8g6ZSZ6K+v5o6o6YCB55u45YWz5LqL5Lu2DQogICAgICAgICAgICBjb25zdCB0b2dnbGVFcnJvck5vdGlmaWNhdGlvbkJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtZXJyb3Itbm90aWZpY2F0aW9uJyk7DQogICAgICAgICAgICBjb25zdCBlcnJvck5vdGlmaWNhdGlvbkVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1ub3RpZmljYXRpb24tZW5hYmxlZCcpOw0KICAgICAgICAgICAgY29uc3Qgc2F2ZUVycm9yTm90aWZpY2F0aW9uQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNhdmUtZXJyb3Itbm90aWZpY2F0aW9uJyk7DQogICAgICAgICAgICBjb25zdCB0ZXN0RXJyb3JOb3RpZmljYXRpb25CdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdGVzdC1lcnJvci1ub3RpZmljYXRpb24nKTsNCiAgICAgICAgICAgIGNvbnN0IHJlZnJlc2hFcnJvclN0YXRzQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXJlZnJlc2gtZXJyb3Itc3RhdHMnKTsNCiAgICAgICAgICAgIGNvbnN0IGNsZWFyRXJyb3JIaXN0b3J5QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWNsZWFyLWVycm9yLWhpc3RvcnknKTsNCg0KICAgICAgICAgICAgaWYgKHRvZ2dsZUVycm9yTm90aWZpY2F0aW9uQnRuKSB0b2dnbGVFcnJvck5vdGlmaWNhdGlvbkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlVG9nZ2xlRXJyb3JOb3RpZmljYXRpb24oKSk7DQogICAgICAgICAgICBpZiAoZXJyb3JOb3RpZmljYXRpb25FbmFibGVkQ2hlY2tib3gpIGVycm9yTm90aWZpY2F0aW9uRW5hYmxlZENoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHRoaXMuaGFuZGxlRXJyb3JOb3RpZmljYXRpb25FbmFibGVkQ2hhbmdlKCkpOw0KICAgICAgICAgICAgaWYgKHNhdmVFcnJvck5vdGlmaWNhdGlvbkJ0bikgc2F2ZUVycm9yTm90aWZpY2F0aW9uQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5oYW5kbGVTYXZlRXJyb3JOb3RpZmljYXRpb24oKSk7DQogICAgICAgICAgICBpZiAodGVzdEVycm9yTm90aWZpY2F0aW9uQnRuKSB0ZXN0RXJyb3JOb3RpZmljYXRpb25CdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVRl",
        "c3RFcnJvck5vdGlmaWNhdGlvbigpKTsNCiAgICAgICAgICAgIGlmIChyZWZyZXNoRXJyb3JTdGF0c0J0bikgcmVmcmVzaEVycm9yU3RhdHNCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLmhhbmRsZVJlZnJlc2hFcnJvclN0YXRzKCkpOw0KICAgICAgICAgICAgaWYgKGNsZWFyRXJyb3JIaXN0b3J5QnRuKSBjbGVhckVycm9ySGlzdG9yeUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHRoaXMuaGFuZGxlQ2xlYXJFcnJvckhpc3RvcnkoKSk7DQoNCiAgICAgICAgICAgIC8vIOaLluaLveWKn+iDvQ0KICAgICAgICAgICAgdGhpcy5tYWtlRHJhZ2dhYmxlKCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOS9v+mdouadv+WPr+aLluaLvQ0KICAgICAgICAgKi8NCiAgICAgICAgbWFrZURyYWdnYWJsZSgpIHsNCiAgICAgICAgICAgIGNvbnN0IGhlYWRlciA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignLnhocy1haS1wYW5lbC1oZWFkZXInKTsNCiAgICAgICAgICAgIGlmICghaGVhZGVyKSByZXR1cm47DQoNCiAgICAgICAgICAgIGxldCBpc0RyYWdnaW5nID0gZmFsc2U7DQogICAgICAgICAgICBsZXQgc3RhcnRYLCBzdGFydFksIGluaXRpYWxMZWZ0LCBpbml0aWFsVG9wOw0KICAgICAgICAgICAgbGV0IGRyYWdTdGFydFRpbWUgPSAwOw0KDQogICAgICAgICAgICBoZWFkZXIuc3R5bGUuY3Vyc29yID0gJ21vdmUnOw0KICAgICAgICAgICAgaGVhZGVyLnN0eWxlLnVzZXJTZWxlY3QgPSAnbm9uZSc7DQoNCiAgICAgICAgICAgIGNvbnN0IGhhbmRsZU1vdXNlRG93biA9IChlKSA9PiB7DQogICAgICAgICAgICAgICAgLy8g6YG/5YWN5Zyo5oyJ6ZKu5LiK6Kem5Y+R5ouW5ou9DQogICAgICAgICAgICAgICAgaWYgKGUudGFyZ2V0LmNsb3Nlc3QoJy54aHMtYWktYnRuJykpIHJldHVybjsNCg0KICAgICAgICAgICAgICAgIGlzRHJhZ2dpbmcgPSB0cnVlOw0KICAgICAgICAgICAgICAgIGRyYWdTdGFydFRpbWUgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgIHN0YXJ0WCA9IGUuY2xpZW50WDsNCiAgICAgICAgICAgICAgICBzdGFydFkgPSBlLmNsaWVudFk7DQoNCiAgICAgICAgICAgICAgICAvLyDojrflj5blvZPliY3pnaLmnb/nmoTlrp7pmYXkvY3nva4NCiAgICAgICAgICAgICAgICBjb25zdCByZWN0ID0gdGhpcy5wYW5lbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsNCiAgICAgICAgICAgICAgICBpbml0aWFsTGVmdCA9IHJlY3QubGVmdDsNCiAgICAgICAgICAgICAgICBpbml0aWFsVG9wID0gcmVjdC50b3A7DQoNCiAgICAgICAgICAgICAgICAvLyDnpoHnlKjov4fmuKHliqjnlLvvvIzpgb/lhY3mi5bmi73ml7bnmoTlu7bov58NCiAgICAgICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLnRyYW5zaXRpb24gPSAnbm9uZSc7DQogICAgICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS5yaWdodCA9ICdhdXRvJzsgLy8g56Gu5L+d5L2/55SobGVmdOWumuS9jQ0KDQog",
        "ICAgICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgaGFuZGxlTW91c2VNb3ZlKTsNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgaGFuZGxlTW91c2VVcCk7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS51c2VyU2VsZWN0ID0gJ25vbmUnOyAvLyDpmLLmraLpgInkuK3mlofmnKwNCiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7DQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICBjb25zdCBoYW5kbGVNb3VzZU1vdmUgPSAoZSkgPT4gew0KICAgICAgICAgICAgICAgIGlmICghaXNEcmFnZ2luZykgcmV0dXJuOw0KDQogICAgICAgICAgICAgICAgY29uc3QgZGVsdGFYID0gZS5jbGllbnRYIC0gc3RhcnRYOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlbHRhWSA9IGUuY2xpZW50WSAtIHN0YXJ0WTsNCg0KICAgICAgICAgICAgICAgIC8vIOiuoeeul+aWsOS9jee9rg0KICAgICAgICAgICAgICAgIGxldCBuZXdMZWZ0ID0gaW5pdGlhbExlZnQgKyBkZWx0YVg7DQogICAgICAgICAgICAgICAgbGV0IG5ld1RvcCA9IGluaXRpYWxUb3AgKyBkZWx0YVk7DQoNCiAgICAgICAgICAgICAgICAvLyDlupTnlKjovrnnlYzpmZDliLYNCiAgICAgICAgICAgICAgICBjb25zdCBjb25zdHJhaW5lZCA9IHRoaXMuY29uc3RyYWluUGFuZWxQb3NpdGlvbihuZXdMZWZ0LCBuZXdUb3ApOw0KDQogICAgICAgICAgICAgICAgLy8g5bmz5ruR5pu05paw5L2N572uDQogICAgICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS5sZWZ0ID0gY29uc3RyYWluZWQubGVmdCArICdweCc7DQogICAgICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS50b3AgPSBjb25zdHJhaW5lZC50b3AgKyAncHgnOw0KICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgY29uc3QgaGFuZGxlTW91c2VVcCA9ICgpID0+IHsNCiAgICAgICAgICAgICAgICBpZiAoIWlzRHJhZ2dpbmcpIHJldHVybjsNCg0KICAgICAgICAgICAgICAgIGlzRHJhZ2dpbmcgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICBjb25zdCBkcmFnRHVyYXRpb24gPSBEYXRlLm5vdygpIC0gZHJhZ1N0YXJ0VGltZTsNCg0KICAgICAgICAgICAgICAgIC8vIOaBouWkjei/h+a4oeWKqOeUuw0KICAgICAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUudHJhbnNpdGlvbiA9ICdhbGwgMC4zcyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpJzsNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLnVzZXJTZWxlY3QgPSAnJzsNCg0KICAgICAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGhhbmRsZU1vdXNlTW92ZSk7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGhhbmRsZU1vdXNlVXApOw0KDQogICAgICAgICAgICAgICAgLy8g5L+d5a2Y5paw5L2N572u77yI5bu26L+f5L+d",
        "5a2Y77yM6YG/5YWN6aKR57mB5YaZ5YWl77yJDQogICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2F2ZVBhbmVsUG9zaXRpb24oKTsNCiAgICAgICAgICAgICAgICB9LCAxMDApOw0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5ouW5ou95pe26Ze05b6I55+t77yM5Y+v6IO95piv6K+v6Kem77yM6K6w5b2V5pel5b+XDQogICAgICAgICAgICAgICAgaWYgKGRyYWdEdXJhdGlvbiA8IDE1MCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+ajgOa1i+WIsOefreaXtumXtOaLluaLve+8jOWPr+iDveaYr+ivr+inpicsIHsgZHVyYXRpb246IGRyYWdEdXJhdGlvbiB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICBoZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgaGFuZGxlTW91c2VEb3duKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5ZCv5YqoL+WBnOatouWIh+aNog0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlVG9nZ2xlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAod2luZG93LlhIU0F1dG9SZXBseS5pc1J1bm5pbmcpIHsNCiAgICAgICAgICAgICAgICAgICAgd2luZG93LlhIU0F1dG9SZXBseS5zdG9wKCk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5Zyo5ZCv5Yqo5YmN5qOA5p+l5pyN5Yqh56uv54q25oCBDQogICAgICAgICAgICAgICAgICAgIGlmICghU2VydmVyTWFuYWdlci5pc1NjcmlwdEFsbG93ZWQoKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ/Cfmqsg6ISa5pys5bey6KKr5pyN5Yqh56uv56aB55So77yM5peg5rOV5ZCv5YqoJyk7DQogICAgICAgICAgICAgICAgICAgICAgICBHTV9ub3RpZmljYXRpb24oew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBDT05GSUcuQVBQX05BTUUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogJ+iEmuacrOW3suiiq+W8gOWPkeiAheemgeeUqO+8jOaXoOazleWQr+WKqCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZW91dDogNTAwMA0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgd2luZG93LlhIU0F1dG9SZXBseS5zdGFydCgpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVVJKCk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5YiH5o2i6L+Q6KGM54q25oCB5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioN",
        "CiAgICAgICAgICog5aSE55CG5qOA5p+l5paw5raI5oGvDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVDaGVja01lc3NhZ2VzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktY2hlY2snKTsNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfmo4Dmn6XkuK0uLi4nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGF3YWl0IHdpbmRvdy5YSFNBdXRvUmVwbHkuY2hlY2tGb3JOZXdNZXNzYWdlcygpOw0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlVUkoKTsNCg0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfmo4Dmn6XmlrDmtojmga8nOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmo4Dmn6XmlrDmtojmga/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIZBUEnmtYvor5UNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGhhbmRsZVRlc3RBUEkoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10ZXN0LWFwaScpOw0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+a1i+ivleS4rS4uLic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3Qgc3VjY2VzcyA9IGF3YWl0IEFJUmVwbHlHZW5lcmF0b3IudGVzdEFQSUNvbm5lY3Rpb24oKTsNCg0KICAgICAgICAgICAgICAgIGlmIChzdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbignQVBJ6L+e5o6l5rWL6K+V5oiQ5Yqf77yBJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ0FQSei/nuaOpea1i+ivleWksei0pe+8jOivt+ajgOafpemFjee9ricsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfmtYvor5VBUEkn",
        "Ow0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCdBUEnmtYvor5XlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbignQVBJ5rWL6K+V5aSx6LSl77yaJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbnvZHnu5zor4rmlq0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGhhbmRsZURpYWdub3NlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZGlhZ25vc2UnKTsNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfor4rmlq3kuK0uLi4nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaJp+ihjOe9kee7nOiviuaWrQ0KICAgICAgICAgICAgICAgIGNvbnN0IG5ldHdvcmtEaWFnbm9zaXMgPSBOZXR3b3JrTW9uaXRvci5kaWFnbm9zZSgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yU3RhdHMgPSBHbG9iYWxFcnJvckhhbmRsZXIuZ2V0RXJyb3JTdGF0cygpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHBlcmZvcm1hbmNlUmVwb3J0ID0gUGVyZm9ybWFuY2VNb25pdG9yLmdldFJlcG9ydCgpOw0KDQogICAgICAgICAgICAgICAgLy8g5pi+56S66K+K5pat57uT5p6cDQogICAgICAgICAgICAgICAgY29uc3QgZGlhZ25vc2lzTWVzc2FnZSA9IHRoaXMuZm9ybWF0RGlhZ25vc2lzUmVzdWx0KHsNCiAgICAgICAgICAgICAgICAgICAgbmV0d29yazogbmV0d29ya0RpYWdub3NpcywNCiAgICAgICAgICAgICAgICAgICAgZXJyb3JzOiBlcnJvclN0YXRzLA0KICAgICAgICAgICAgICAgICAgICBwZXJmb3JtYW5jZTogcGVyZm9ybWFuY2VSZXBvcnQNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfns7vnu5/or4rmlq3lrozmiJAnLCB7DQogICAgICAgICAgICAgICAgICAgIG5ldHdvcms6IG5ldHdvcmtEaWFnbm9zaXMsDQogICAgICAgICAgICAgICAgICAgIGVycm9yczogZXJyb3JTdGF0cywNCiAgICAgICAgICAgICAgICAgICAgcGVyZm9ybWFuY2U6IHBlcmZvcm1hbmNlUmVwb3J0DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmoLnmja7or4rmlq3nu5PmnpzmmL7npLrkuI3lkIznsbvlnovnmoTpgJrnn6UNCiAgICAgICAgICAgICAgICBpZiAobmV0d29ya0RpYWdub3Npcy5zdGF0dXMgPT09ICdoZWFsdGh5JyAmJiBwZXJmb3JtYW5jZVJlcG9ydC5oZWFsdGhTY29yZSA+IDgwKSB7DQogICAgICAgICAg",
        "ICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign57O757uf54q25oCB6Imv5aW977yBJyArIGRpYWdub3Npc01lc3NhZ2UsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChuZXR3b3JrRGlhZ25vc2lzLnN0YXR1cyA9PT0gJ3dhcm5pbmcnIHx8IHBlcmZvcm1hbmNlUmVwb3J0LmhlYWx0aFNjb3JlIDwgNjApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCflj5HnjrDpl67popjvvJonICsgZGlhZ25vc2lzTWVzc2FnZSwgJ3dhcm5pbmcnKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDor6Lpl67mmK/lkKboh6rliqjkv67lpI0NCiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbmZpcm0oJ+ajgOa1i+WIsOezu+e7n+mXrumimO+8jOaYr+WQpuWwneivleiHquWKqOS/ruWkje+8nycpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBhd2FpdCBBdXRvUmVwYWlyU3lzdGVtLmRldGVjdEFuZFJlcGFpcigpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfoh6rliqjkv67lpI3lt7LmiafooYzvvIzor7fmn6XnnIvml6Xlv5fkuobop6Por6bmg4UnLCAnaW5mbycpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfns7vnu5/lrZjlnKjkuKXph43pl67popjvvJonICsgZGlhZ25vc2lzTWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+mhtemdouiviuaWrSc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+ezu+e7n+iviuaWreWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfor4rmlq3lpLHotKXvvJonICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZGlhZ25vc2UnKTsNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn6aG16Z2i6K+K5patJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOagvOW8j+WMluiviuaWree7k+aenA0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gZGlhZ25vc2lzIOiviuaWreaVsOaNrg0KICAgICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfQ0K",
        "ICAgICAgICAgKi8NCiAgICAgICAgZm9ybWF0RGlhZ25vc2lzUmVzdWx0KGRpYWdub3Npcykgew0KICAgICAgICAgICAgY29uc3QgeyBuZXR3b3JrLCBlcnJvcnMsIHBlcmZvcm1hbmNlIH0gPSBkaWFnbm9zaXM7DQogICAgICAgICAgICBjb25zdCBtZXNzYWdlcyA9IFtdOw0KDQogICAgICAgICAgICAvLyDnvZHnu5znirbmgIENCiAgICAgICAgICAgIGlmIChuZXR3b3JrLnN0YXRzLmZhaWxlZCA+IDApIHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlcy5wdXNoKGDnvZHnu5zlpLHotKXor7fmsYI6ICR7bmV0d29yay5zdGF0cy5mYWlsZWR95LiqYCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOmUmeivr+e7n+iuoQ0KICAgICAgICAgICAgaWYgKGVycm9ycy50b3RhbEVycm9ycyA+IDApIHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlcy5wdXNoKGDns7vnu5/plJnor686ICR7ZXJyb3JzLnRvdGFsRXJyb3JzfeS4qmApOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmgKfog73liIbmlbANCiAgICAgICAgICAgIG1lc3NhZ2VzLnB1c2goYOWBpeW6t+WIhuaVsDogJHtwZXJmb3JtYW5jZS5oZWFsdGhTY29yZX0vMTAwYCk7DQoNCiAgICAgICAgICAgIC8vIOS/ruWkjeW7uuiurg0KICAgICAgICAgICAgaWYgKG5ldHdvcmsucmVjb21tZW5kYXRpb25zICYmIG5ldHdvcmsucmVjb21tZW5kYXRpb25zLmxlbmd0aCA+IDApIHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlcy5wdXNoKGDlu7rorq46ICR7bmV0d29yay5yZWNvbW1lbmRhdGlvbnNbMF19YCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBtZXNzYWdlcy5qb2luKCcsICcpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmuIXnqbrml6Xlv5cNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUNsZWFyTG9ncygpIHsNCiAgICAgICAgICAgIExvZ2dlci5jbGVhcigpOw0KICAgICAgICAgICAgdGhpcy51cGRhdGVMb2dzKCk7DQogICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+aXpeW/l+W3sua4heepuicsICdpbmZvJyk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhumFjee9ruWxleW8gC/mipjlj6ANCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRvZ2dsZUNvbmZpZygpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktY29uZmlnLWNvbnRlbnQnKTsNCiAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtY29uZmlnJyk7DQoNCiAgICAgICAgICAgIGlmIChjb250ZW50ICYmIGJ0bikgew0KICAgICAgICAgICAgICAgIGlmIChjb250ZW50LmNsYXNzTGlzdC5jb250YWlucygnZXhwYW5kZWQnKSkgew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2V4cGFuZGVkJyk7DQogICAgICAg",
        "ICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICflsZXlvIAnOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuY2xhc3NMaXN0LmFkZCgnZXhwYW5kZWQnKTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+aKmOWPoCc7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZENvbmZpZygpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5L+d5a2Y6YWN572uDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVTYXZlQ29uZmlnKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDlronlhajojrflj5bphY3nva7ovpPlhaXlhYPntKANCiAgICAgICAgICAgICAgICBjb25zdCBhcGlLZXlFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWFwaS1rZXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhcGlVcmxFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWFwaS11cmwnKTsNCiAgICAgICAgICAgICAgICBjb25zdCByZXBseURlbGF5RWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1yZXBseS1kZWxheScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHByb21wdEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcHJvbXB0Jyk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6Xlv4XopoHlhYPntKDmmK/lkKblrZjlnKgNCiAgICAgICAgICAgICAgICBpZiAoIWFwaUtleUVsZW1lbnQgfHwgIWFwaVVybEVsZW1lbnQgfHwgIXJlcGx5RGVsYXlFbGVtZW50IHx8ICFwcm9tcHRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6YWN572u6KGo5Y2V5YWD57Sg5pyq5om+5Yiw77yM6K+35Yi35paw6aG16Z2i6YeN6K+VJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6YWN572u6KGo5Y2V5YWD57Sg57y65aSxJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBhcGlLZXkgPSBhcGlLZXlFbGVtZW50LnZhbHVlLnRyaW0oKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhcGlVcmwgPSBhcGlVcmxFbGVtZW50LnZhbHVlLnRyaW0oKTsNCiAgICAgICAgICAgICAgICBjb25zdCByZXBseURlbGF5ID0gcGFyc2VJbnQocmVwbHlEZWxheUVsZW1lbnQudmFsdWUpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHByb21wdCA9IHByb21wdEVsZW1lbnQudmFsdWUudHJpbSgpOw0KDQogICAgICAgICAgICAgICAgLy8g6aqM6K+B6YWN572uDQogICAgICAgICAgICAgICAgaWYgKCFhcGlLZXkpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfor7fovpPl",
        "haVBUEnlr4bpkqUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICghYXBpVXJsKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6K+36L6T5YWlQVBJ5Zyw5Z2AJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoaXNOYU4ocmVwbHlEZWxheSkgfHwgcmVwbHlEZWxheSA8IDEwMDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCflm57lpI3lu7bov5/lv4XpobvlpKfkuo4xMDAwbXMnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOS/neWtmOmFjee9rg0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdhcGlLZXknLCBhcGlLZXkpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdhcGlVcmwnLCBhcGlVcmwpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdyZXBseURlbGF5JywgcmVwbHlEZWxheSk7DQogICAgICAgICAgICAgICAgaWYgKHByb21wdCkgew0KICAgICAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnYXV0b1JlcGx5UHJvbXB0JywgcHJvbXB0KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+mFjee9ruW3suS/neWtmCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+eUqOaIt+mFjee9ruW3suabtOaWsCcpOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5L+d5a2Y6YWN572u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+S/neWtmOmFjee9ruWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbph43nva7phY3nva4NCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVJlc2V0Q29uZmlnKCkgew0KICAgICAgICAgICAgaWYgKGNvbmZpcm0oJ+ehruWumuimgemHjee9ruaJgOaciemFjee9ruWQl++8nycpKSB7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5yZXNldCgpOw0KICAgICAgICAgICAgICAgIHRoaXMubG9hZENvbmZpZygpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6YWN572u5bey6YeN572uJywgJ2luZm8nKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6YWN572u5bey6YeN572u5Li66buY6K6k5YC8Jyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAq",
        "IOWkhOeQhuiOt+WuouW3peWFt+mFjee9ruWxleW8gC/mlLbotbcNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRvZ2dsZUFjcXVpc2l0aW9uKCkgew0KICAgICAgICAgICAgY29uc3QgY29udGVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hY3F1aXNpdGlvbi1jb250ZW50Jyk7DQogICAgICAgICAgICBjb25zdCBidXR0b24gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWFjcXVpc2l0aW9uJyk7DQoNCiAgICAgICAgICAgIGlmIChjb250ZW50ICYmIGJ1dHRvbikgew0KICAgICAgICAgICAgICAgIGlmIChjb250ZW50LnN0eWxlLmRpc3BsYXkgPT09ICdub25lJykgew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOw0KICAgICAgICAgICAgICAgICAgICBidXR0b24udGV4dENvbnRlbnQgPSAn5pS26LW3JzsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7DQogICAgICAgICAgICAgICAgICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9ICflsZXlvIAnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6I635a6i5Yqf6IO95ZCv55So54q25oCB5Y+Y5YyWDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVBY3F1aXNpdGlvbkVuYWJsZWRDaGFuZ2UoKSB7DQogICAgICAgICAgICBjb25zdCBjaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hY3F1aXNpdGlvbi1lbmFibGVkJyk7DQogICAgICAgICAgICBjb25zdCBzZXR0aW5ncyA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hY3F1aXNpdGlvbi1zZXR0aW5ncycpOw0KDQogICAgICAgICAgICBpZiAoY2hlY2tib3ggJiYgc2V0dGluZ3MpIHsNCiAgICAgICAgICAgICAgICBzZXR0aW5ncy5zdHlsZS5kaXNwbGF5ID0gY2hlY2tib3guY2hlY2tlZCA/ICdibG9jaycgOiAnbm9uZSc7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuS/neWtmOiOt+WuoumFjee9rg0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlU2F2ZUFjcXVpc2l0aW9uKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDojrflj5bphY3nva7lhYPntKANCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYWNxdWlzaXRpb24tZW5hYmxlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRyaWdnZXJSb3VuZFNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10cmlnZ2VyLXJvdW5kJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZmFsbGJhY2tSb3VuZFNlbGVjdCA9IHRoaXMucGFuZWwucXVl",
        "cnlTZWxlY3RvcignI3hocy1haS1mYWxsYmFjay1yb3VuZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGtleXdvcmRzVGV4dGFyZWEgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktaW50ZXJlc3Qta2V5d29yZHMnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0b29sVHlwZVNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b29sLXR5cGUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0b29sTmFtZVNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b29sLW5hbWUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkZWxheUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWFjcXVpc2l0aW9uLWRlbGF5Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgYWxsb3dSZXBlYXRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hbGxvdy1yZXBlYXQnKTsNCg0KICAgICAgICAgICAgICAgIGlmICghZW5hYmxlZENoZWNrYm94IHx8ICF0cmlnZ2VyUm91bmRTZWxlY3QgfHwgIWZhbGxiYWNrUm91bmRTZWxlY3QgfHwNCiAgICAgICAgICAgICAgICAgICAgIWtleXdvcmRzVGV4dGFyZWEgfHwgIXRvb2xUeXBlU2VsZWN0IHx8ICF0b29sTmFtZVNlbGVjdCB8fA0KICAgICAgICAgICAgICAgICAgICAhZGVsYXlJbnB1dCB8fCAhYWxsb3dSZXBlYXRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+iOt+WuoumFjee9ruWFg+e0oOacquaJvuWIsCcsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6aqM6K+B6YWN572uDQogICAgICAgICAgICAgICAgY29uc3QgdHJpZ2dlclJvdW5kID0gcGFyc2VJbnQodHJpZ2dlclJvdW5kU2VsZWN0LnZhbHVlKTsNCiAgICAgICAgICAgICAgICBjb25zdCBmYWxsYmFja1JvdW5kID0gcGFyc2VJbnQoZmFsbGJhY2tSb3VuZFNlbGVjdC52YWx1ZSk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVsYXkgPSBwYXJzZUludChkZWxheUlucHV0LnZhbHVlKTsNCg0KICAgICAgICAgICAgICAgIGlmICh0cmlnZ2VyUm91bmQgPj0gZmFsbGJhY2tSb3VuZCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+inpuWPkei9ruasoeW/hemhu+Wwj+S6juWFnOW6lei9ruasoScsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGlzTmFOKGRlbGF5KSB8fCBkZWxheSA8IDEwMDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCflj5HpgIHlu7bov5/lv4XpobvlpKfkuo4xMDAwbXMnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAg",
        "ICAgICAgIC8vIOS/neWtmOmFjee9rg0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdhY3F1aXNpdGlvbkVuYWJsZWQnLCBlbmFibGVkQ2hlY2tib3guY2hlY2tlZCk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2FjcXVpc2l0aW9uVHJpZ2dlclJvdW5kJywgdHJpZ2dlclJvdW5kKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnYWNxdWlzaXRpb25GYWxsYmFja1JvdW5kJywgZmFsbGJhY2tSb3VuZCk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2FjcXVpc2l0aW9uS2V5d29yZHMnLCBrZXl3b3Jkc1RleHRhcmVhLnZhbHVlLnRyaW0oKSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2FjcXVpc2l0aW9uVG9vbFR5cGUnLCB0b29sVHlwZVNlbGVjdC52YWx1ZSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2FjcXVpc2l0aW9uVG9vbE5hbWUnLCB0b29sTmFtZVNlbGVjdC52YWx1ZSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2FjcXVpc2l0aW9uRGVsYXknLCBkZWxheSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2FjcXVpc2l0aW9uQWxsb3dSZXBlYXQnLCBhbGxvd1JlcGVhdENoZWNrYm94LmNoZWNrZWQpOw0KDQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfojrflrqLphY3nva7lt7Lkv53lrZgnLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfojrflrqLphY3nva7lt7Lmm7TmlrAnKTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S/neWtmOiOt+WuoumFjee9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfkv53lrZjojrflrqLphY3nva7lpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5rWL6K+V6I635a6i5bel5YW3DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVUZXN0QWNxdWlzaXRpb24oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5q2j5Zyo5rWL6K+V6I635a6i5bel5YW3Li4uJywgJ2luZm8nKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xUeXBlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uVG9vbFR5cGUnLCAn55WZ6LWE5Y2hJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdG9vbE5hbWUgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25Ub29sTmFtZScsICcnKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IEN1c3RvbWVyQWNxdWlzaXRpb25TZW5kZXIuc2VuZEFjcXVpc2l0aW9uVG9vbCh0b29sVHlwZSwgdG9vbE5h",
        "bWUpOw0KDQogICAgICAgICAgICAgICAgaWYgKHJlc3VsdCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+iOt+WuouW3peWFt+a1i+ivleaIkOWKnycsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfojrflrqLlt6XlhbfmtYvor5XmiJDlip8nLCB7IHRvb2xUeXBlLCB0b29sTmFtZSB9KTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+iOt+WuouW3peWFt+a1i+ivleWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+iOt+WuouW3peWFt+a1i+ivleWksei0pScpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+a1i+ivleiOt+WuouW3peWFt+aXtuWPkeeUn+mUmeivrycsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmtYvor5XojrflrqLlt6XlhbflpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5Yi35paw5bel5YW35YiX6KGoDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVSZWZyZXNoVG9vbHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xUeXBlU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvb2wtdHlwZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xOYW1lU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvb2wtbmFtZScpOw0KDQogICAgICAgICAgICAgICAgaWYgKCF0b29sVHlwZVNlbGVjdCB8fCAhdG9vbE5hbWVTZWxlY3QpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRvb2xUeXBlID0gdG9vbFR5cGVTZWxlY3QudmFsdWU7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmraPlnKjliLfmlrDlt6XlhbfliJfooaguLi4nLCAnaW5mbycpOw0KDQogICAgICAgICAgICAgICAgY29uc3QgdG9vbHMgPSBhd2FpdCBDdXN0b21lckFjcXVpc2l0aW9uU2VuZGVyLmdldEF2YWlsYWJsZVRvb2xzKHRvb2xUeXBlKTsNCg0KICAgICAgICAgICAgICAgIC8vIOa4heepuueOsOaciemAiemhuQ0KICAgICAgICAgICAgICAgIHRvb2xOYW1lU2VsZWN0LmlubmVySFRNTCA9ICc8b3B0aW9uIHZhbHVlPSIiPuiHquWKqOmAieaLqeesrOS4gOS4quWPr+eUqOW3peWFtzwvb3B0aW9uPic7DQoNCiAgICAgICAgICAgICAgICAvLyDmt7vliqDlt6XlhbfpgInpobkNCiAgICAgICAgICAgICAgICB0b29scy5mb3JFYWNoKHRvb2wgPT4gew0KICAgICAg",
        "ICAgICAgICAgICAgICBjb25zdCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTsNCiAgICAgICAgICAgICAgICAgICAgb3B0aW9uLnZhbHVlID0gdG9vbC5uYW1lOw0KICAgICAgICAgICAgICAgICAgICBvcHRpb24udGV4dENvbnRlbnQgPSBgJHt0b29sLm5hbWV9JHt0b29sLmRlc2NyaXB0aW9uID8gJyAtICcgKyB0b29sLmRlc2NyaXB0aW9uIDogJyd9YDsNCiAgICAgICAgICAgICAgICAgICAgdG9vbE5hbWVTZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOaBouWkjeS5i+WJjemAieaLqeeahOW3peWFtw0KICAgICAgICAgICAgICAgIGNvbnN0IHNhdmVkVG9vbE5hbWUgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25Ub29sTmFtZScsICcnKTsNCiAgICAgICAgICAgICAgICBpZiAoc2F2ZWRUb29sTmFtZSkgew0KICAgICAgICAgICAgICAgICAgICB0b29sTmFtZVNlbGVjdC52YWx1ZSA9IHNhdmVkVG9vbE5hbWU7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKGDlt7LliLfmlrAke3Rvb2xzLmxlbmd0aH3kuKoke3Rvb2xUeXBlfeW3peWFt2AsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W3peWFt+WIl+ihqOW3suWIt+aWsCcsIHsgdG9vbFR5cGUsIGNvdW50OiB0b29scy5sZW5ndGggfSk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliLfmlrDlt6XlhbfliJfooajlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Yi35paw5bel5YW35YiX6KGo5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuW3peWFt+exu+Wei+WPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlVG9vbFR5cGVDaGFuZ2UoKSB7DQogICAgICAgICAgICAvLyDlt6Xlhbfnsbvlnovlj5jljJbml7boh6rliqjliLfmlrDlt6XlhbfliJfooagNCiAgICAgICAgICAgIGF3YWl0IHRoaXMuaGFuZGxlUmVmcmVzaFRvb2xzKCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuacgOWwj+WMlg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlTWluaW1pemUoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzTWluaW1pemVkKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOS7juacgOWwj+WMlueKtuaAgeaBouWkjQ0KICAgICAgICAgICAgICAgICAgICB0aGlzLnJlc3RvcmVGcm9tTWluaW1pemVkKCk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5pyA5bCP5YyW5Yiw5bCP5oKs5rWu",
        "5qGGDQogICAgICAgICAgICAgICAgICAgIHRoaXMubWluaW1pemVUb0Zsb2F0KCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+acgOWwj+WMluaTjeS9nOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOacgOWwj+WMluWIsOWwj+aCrOa1ruahhg0KICAgICAgICAgKi8NCiAgICAgICAgbWluaW1pemVUb0Zsb2F0KCkgew0KICAgICAgICAgICAgLy8g5L+d5a2Y5b2T5YmN5L2N572uDQogICAgICAgICAgICB0aGlzLnNhdmVQYW5lbFBvc2l0aW9uKCk7DQoNCiAgICAgICAgICAgIC8vIOmakOiXj+S4u+mdouadvw0KICAgICAgICAgICAgdGhpcy5wYW5lbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOw0KICAgICAgICAgICAgdGhpcy5pc01pbmltaXplZCA9IHRydWU7DQoNCiAgICAgICAgICAgIC8vIOWIm+W7uuWwj+aCrOa1ruahhg0KICAgICAgICAgICAgdGhpcy5jcmVhdGVNaW5pRmxvYXQoKTsNCg0KICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpnaLmnb/lt7LmnIDlsI/ljJbliLDmgqzmta7moYYnKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5LuO5pyA5bCP5YyW54q25oCB5oGi5aSNDQogICAgICAgICAqLw0KICAgICAgICByZXN0b3JlRnJvbU1pbmltaXplZCgpIHsNCiAgICAgICAgICAgIC8vIOenu+mZpOWwj+aCrOa1ruahhg0KICAgICAgICAgICAgdGhpcy5yZW1vdmVNaW5pRmxvYXQoKTsNCg0KICAgICAgICAgICAgLy8g5pi+56S65Li76Z2i5p2/DQogICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOw0KICAgICAgICAgICAgdGhpcy5pc01pbmltaXplZCA9IGZhbHNlOw0KICAgICAgICAgICAgdGhpcy5pc1Zpc2libGUgPSB0cnVlOw0KDQogICAgICAgICAgICAvLyDmgaLlpI3kvY3nva4NCiAgICAgICAgICAgIGNvbnN0IHNhdmVkUG9zaXRpb24gPSB0aGlzLmxvYWRQYW5lbFBvc2l0aW9uKCk7DQogICAgICAgICAgICBpZiAoc2F2ZWRQb3NpdGlvbiAmJiAhc2F2ZWRQb3NpdGlvbi5pc01pbmltaXplZCkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnN0cmFpbmVkID0gdGhpcy5jb25zdHJhaW5QYW5lbFBvc2l0aW9uKHNhdmVkUG9zaXRpb24ubGVmdCwgc2F2ZWRQb3NpdGlvbi50b3ApOw0KICAgICAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUubGVmdCA9IGNvbnN0cmFpbmVkLmxlZnQgKyAncHgnOw0KICAgICAgICAgICAgICAgIHRoaXMucGFuZWwuc3R5bGUudG9wID0gY29uc3RyYWluZWQudG9wICsgJ3B4JzsNCiAgICAgICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLnJpZ2h0ID0gJ2F1dG8nOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mdouadv+W3suS7juaCrOa1ruahhuaBouWkjScpOw0KICAgICAgICB9",
        "LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliJvlu7rlsI/mgqzmta7moYYNCiAgICAgICAgICovDQogICAgICAgIGNyZWF0ZU1pbmlGbG9hdCgpIHsNCiAgICAgICAgICAgIC8vIOWmguaenOW3suWtmOWcqO+8jOWFiOenu+mZpA0KICAgICAgICAgICAgdGhpcy5yZW1vdmVNaW5pRmxvYXQoKTsNCg0KICAgICAgICAgICAgdGhpcy5taW5pRmxvYXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsNCiAgICAgICAgICAgIHRoaXMubWluaUZsb2F0LmlkID0gJ3hocy1haS1taW5pLWZsb2F0JzsNCiAgICAgICAgICAgIHRoaXMubWluaUZsb2F0LmlubmVySFRNTCA9ICfwn6SWJzsNCiAgICAgICAgICAgIHRoaXMubWluaUZsb2F0LnRpdGxlID0gJ+eCueWHu+WxleW8gOWwj+e6ouS5pkFJ6Ieq5Yqo5Zue5aSN5bel5YW3JzsNCg0KICAgICAgICAgICAgLy8g5re75Yqg5Yiw6aG16Z2iDQogICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMubWluaUZsb2F0KTsNCg0KICAgICAgICAgICAgLy8g5L2/5bCP5oKs5rWu5qGG5Y+v5ouW5ou977yI5YyF5ZCr54K55Ye75aSE55CG77yJDQogICAgICAgICAgICB0aGlzLm1ha2VNaW5pRmxvYXREcmFnZ2FibGUoKTsNCg0KICAgICAgICAgICAgLy8g5oGi5aSN5bCP5oKs5rWu5qGG5L2N572uDQogICAgICAgICAgICB0aGlzLnJlc3RvcmVNaW5pRmxvYXRQb3NpdGlvbigpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnp7vpmaTlsI/mgqzmta7moYYNCiAgICAgICAgICovDQogICAgICAgIHJlbW92ZU1pbmlGbG9hdCgpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLm1pbmlGbG9hdCAmJiB0aGlzLm1pbmlGbG9hdC5wYXJlbnROb2RlKSB7DQogICAgICAgICAgICAgICAgdGhpcy5taW5pRmxvYXQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLm1pbmlGbG9hdCk7DQogICAgICAgICAgICAgICAgdGhpcy5taW5pRmxvYXQgPSBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDkvb/lsI/mgqzmta7moYblj6/mi5bmi70NCiAgICAgICAgICovDQogICAgICAgIG1ha2VNaW5pRmxvYXREcmFnZ2FibGUoKSB7DQogICAgICAgICAgICBpZiAoIXRoaXMubWluaUZsb2F0KSByZXR1cm47DQoNCiAgICAgICAgICAgIGxldCBpc0RyYWdnaW5nID0gZmFsc2U7DQogICAgICAgICAgICBsZXQgaGFzTW92ZWQgPSBmYWxzZTsNCiAgICAgICAgICAgIGxldCBzdGFydFgsIHN0YXJ0WSwgaW5pdGlhbExlZnQsIGluaXRpYWxUb3A7DQogICAgICAgICAgICBsZXQgZHJhZ1N0YXJ0VGltZSA9IDA7DQoNCiAgICAgICAgICAgIGNvbnN0IGhhbmRsZU1vdXNlRG93biA9IChlKSA9PiB7DQogICAgICAgICAgICAgICAgaXNEcmFnZ2luZyA9IHRydWU7DQogICAgICAgICAgICAgICAgaGFzTW92ZWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICBkcmFnU3RhcnRUaW1lID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAg",
        "ICBzdGFydFggPSBlLmNsaWVudFg7DQogICAgICAgICAgICAgICAgc3RhcnRZID0gZS5jbGllbnRZOw0KDQogICAgICAgICAgICAgICAgY29uc3QgcmVjdCA9IHRoaXMubWluaUZsb2F0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOw0KICAgICAgICAgICAgICAgIGluaXRpYWxMZWZ0ID0gcmVjdC5sZWZ0Ow0KICAgICAgICAgICAgICAgIGluaXRpYWxUb3AgPSByZWN0LnRvcDsNCg0KICAgICAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIGhhbmRsZU1vdXNlTW92ZSk7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGhhbmRsZU1vdXNlVXApOw0KICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUudXNlclNlbGVjdCA9ICdub25lJzsNCiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7DQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICBjb25zdCBoYW5kbGVNb3VzZU1vdmUgPSAoZSkgPT4gew0KICAgICAgICAgICAgICAgIGlmICghaXNEcmFnZ2luZykgcmV0dXJuOw0KDQogICAgICAgICAgICAgICAgY29uc3QgZGVsdGFYID0gZS5jbGllbnRYIC0gc3RhcnRYOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlbHRhWSA9IGUuY2xpZW50WSAtIHN0YXJ0WTsNCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenOenu+WKqOi3neemu+i2hei/h+mYiOWAvO+8jOagh+iusOS4uuaLluaLvQ0KICAgICAgICAgICAgICAgIGlmIChNYXRoLmFicyhkZWx0YVgpID4gMyB8fCBNYXRoLmFicyhkZWx0YVkpID4gMykgew0KICAgICAgICAgICAgICAgICAgICBpZiAoIWhhc01vdmVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBoYXNNb3ZlZCA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1pbmlGbG9hdC5jbGFzc0xpc3QuYWRkKCdkcmFnZ2luZycpOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgbGV0IG5ld0xlZnQgPSBpbml0aWFsTGVmdCArIGRlbHRhWDsNCiAgICAgICAgICAgICAgICAgICAgbGV0IG5ld1RvcCA9IGluaXRpYWxUb3AgKyBkZWx0YVk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g6ZmQ5Yi25Zyo5Y+v6KeG5Yy65Z+f5YaFDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGZsb2F0U2l6ZSA9IDYwOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBtYXJnaW4gPSAxMDsNCiAgICAgICAgICAgICAgICAgICAgbmV3TGVmdCA9IE1hdGgubWF4KG1hcmdpbiwgTWF0aC5taW4obmV3TGVmdCwgd2luZG93LmlubmVyV2lkdGggLSBmbG9hdFNpemUgLSBtYXJnaW4pKTsNCiAgICAgICAgICAgICAgICAgICAgbmV3VG9wID0gTWF0aC5tYXgobWFyZ2luLCBNYXRoLm1pbihuZXdUb3AsIHdpbmRvdy5pbm5lckhlaWdodCAtIGZsb2F0U2l6ZSAtIG1hcmdpbikpOw0KDQogICAgICAgICAgICAgICAgICAgIHRoaXMubWluaUZsb2F0LnN0eWxlLmxlZnQgPSBuZXdMZWZ0ICsg",
        "J3B4JzsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5taW5pRmxvYXQuc3R5bGUudG9wID0gbmV3VG9wICsgJ3B4JzsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5taW5pRmxvYXQuc3R5bGUucmlnaHQgPSAnYXV0byc7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubWluaUZsb2F0LnN0eWxlLmJvdHRvbSA9ICdhdXRvJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICBjb25zdCBoYW5kbGVNb3VzZVVwID0gKGUpID0+IHsNCiAgICAgICAgICAgICAgICBpZiAoIWlzRHJhZ2dpbmcpIHJldHVybjsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IGRyYWdEdXJhdGlvbiA9IERhdGUubm93KCkgLSBkcmFnU3RhcnRUaW1lOw0KICAgICAgICAgICAgICAgIGlzRHJhZ2dpbmcgPSBmYWxzZTsNCg0KICAgICAgICAgICAgICAgIHRoaXMubWluaUZsb2F0LmNsYXNzTGlzdC5yZW1vdmUoJ2RyYWdnaW5nJyk7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgaGFuZGxlTW91c2VNb3ZlKTsNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgaGFuZGxlTW91c2VVcCk7DQogICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS51c2VyU2VsZWN0ID0gJyc7DQoNCiAgICAgICAgICAgICAgICBpZiAoaGFzTW92ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5Y+R55Sf5LqG5ouW5ou977yM5L+d5a2Y5L2N572uDQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2F2ZU1pbmlGbG9hdFBvc2l0aW9uKCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5bCP5oKs5rWu5qGG5ouW5ou95a6M5oiQJyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkcmFnRHVyYXRpb24gPCAzMDApIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5rKh5pyJ5ouW5ou95LiU5pe26Ze05b6I55+t77yM6Kem5Y+R54K55Ye75LqL5Lu2DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5bCP5oKs5rWu5qGG54K55Ye75LqL5Lu26Kem5Y+RJyk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVzdG9yZUZyb21NaW5pbWl6ZWQoKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICB0aGlzLm1pbmlGbG9hdC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBoYW5kbGVNb3VzZURvd24pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDkv53lrZjlsI/mgqzmta7moYbkvY3nva4NCiAgICAgICAgICovDQogICAgICAgIHNhdmVNaW5pRmxvYXRQb3NpdGlvbigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCF0aGlzLm1pbmlGbG9hdCkgcmV0dXJuOw0KDQogICAgICAgICAgICAgICAgY29uc3QgcmVjdCA9IHRoaXMubWluaUZsb2F0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgp",
        "Ow0KICAgICAgICAgICAgICAgIGNvbnN0IHBvc2l0aW9uID0gew0KICAgICAgICAgICAgICAgICAgICBsZWZ0OiByZWN0LmxlZnQsDQogICAgICAgICAgICAgICAgICAgIHRvcDogcmVjdC50b3AsDQogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKQ0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgneGhzLWFpLW1pbmktZmxvYXQtcG9zaXRpb24nLCBKU09OLnN0cmluZ2lmeShwb3NpdGlvbikpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5L+d5a2Y5bCP5oKs5rWu5qGG5L2N572u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5oGi5aSN5bCP5oKs5rWu5qGG5L2N572uDQogICAgICAgICAqLw0KICAgICAgICByZXN0b3JlTWluaUZsb2F0UG9zaXRpb24oKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHNhdmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3hocy1haS1taW5pLWZsb2F0LXBvc2l0aW9uJyk7DQogICAgICAgICAgICAgICAgaWYgKHNhdmVkICYmIHRoaXMubWluaUZsb2F0KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHBvc2l0aW9uID0gSlNPTi5wYXJzZShzYXZlZCk7DQogICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcG9zaXRpb24ubGVmdCA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHBvc2l0aW9uLnRvcCA9PT0gJ251bWJlcicpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOehruS/neS9jee9ruWcqOWPr+inhuWMuuWfn+WGhQ0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmxvYXRTaXplID0gNjA7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtYXJnaW4gPSAxMDsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxlZnQgPSBNYXRoLm1heChtYXJnaW4sIE1hdGgubWluKHBvc2l0aW9uLmxlZnQsIHdpbmRvdy5pbm5lcldpZHRoIC0gZmxvYXRTaXplIC0gbWFyZ2luKSk7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0b3AgPSBNYXRoLm1heChtYXJnaW4sIE1hdGgubWluKHBvc2l0aW9uLnRvcCwgd2luZG93LmlubmVySGVpZ2h0IC0gZmxvYXRTaXplIC0gbWFyZ2luKSk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWluaUZsb2F0LnN0eWxlLmxlZnQgPSBsZWZ0ICsgJ3B4JzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWluaUZsb2F0LnN0eWxlLnRvcCA9IHRvcCArICdweCc7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1pbmlGbG9hdC5zdHlsZS5yaWdodCA9ICdhdXRvJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWluaUZsb2F0LnN0eWxlLmJvdHRvbSA9ICdhdXRvJzsNCiAgICAgICAgICAgICAgICAgICAgfQ0K",
        "ICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+aBouWkjeWwj+aCrOa1ruahhuS9jee9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWKoOi9vemFjee9ruWIsOihqOWNlQ0KICAgICAgICAgKi8NCiAgICAgICAgbG9hZENvbmZpZygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYXBpS2V5SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYXBpLWtleScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFwaVVybElucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWFwaS11cmwnKTsNCiAgICAgICAgICAgICAgICBjb25zdCByZXBseURlbGF5SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcmVwbHktZGVsYXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCBwcm9tcHRJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1wcm9tcHQnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChhcGlLZXlJbnB1dCkgYXBpS2V5SW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnYXBpS2V5JywgJycpOw0KICAgICAgICAgICAgICAgIGlmIChhcGlVcmxJbnB1dCkgYXBpVXJsSW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnYXBpVXJsJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuYXBpVXJsKTsNCiAgICAgICAgICAgICAgICBpZiAocmVwbHlEZWxheUlucHV0KSByZXBseURlbGF5SW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgncmVwbHlEZWxheScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLnJlcGx5RGVsYXkpOw0KICAgICAgICAgICAgICAgIGlmIChwcm9tcHRJbnB1dCkgcHJvbXB0SW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnYXV0b1JlcGx5UHJvbXB0JywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuYXV0b1JlcGx5UHJvbXB0KTsNCg0KICAgICAgICAgICAgICAgIC8vIOWKoOi9veiOt+WuouW3peWFt+mFjee9rg0KICAgICAgICAgICAgICAgIGNvbnN0IGFjcXVpc2l0aW9uRW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWFjcXVpc2l0aW9uLWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0cmlnZ2VyUm91bmRTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdHJpZ2dlci1yb3VuZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGZhbGxiYWNrUm91bmRTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZmFsbGJhY2stcm91bmQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBrZXl3b3Jkc1RleHRhcmVhID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWlu",
        "dGVyZXN0LWtleXdvcmRzJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdG9vbFR5cGVTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9vbC10eXBlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdG9vbE5hbWVTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9vbC1uYW1lJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVsYXlJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hY3F1aXNpdGlvbi1kZWxheScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFsbG93UmVwZWF0Q2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYWxsb3ctcmVwZWF0Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgYWNxdWlzaXRpb25TZXR0aW5ncyA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hY3F1aXNpdGlvbi1zZXR0aW5ncycpOw0KDQogICAgICAgICAgICAgICAgaWYgKGFjcXVpc2l0aW9uRW5hYmxlZENoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIGFjcXVpc2l0aW9uRW5hYmxlZENoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25FbmFibGVkJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuYWNxdWlzaXRpb25FbmFibGVkKTsNCiAgICAgICAgICAgICAgICAgICAgLy8g5qC55o2u5ZCv55So54q25oCB5pi+56S6L+makOiXj+iuvue9ruWMuuWfnw0KICAgICAgICAgICAgICAgICAgICBpZiAoYWNxdWlzaXRpb25TZXR0aW5ncykgew0KICAgICAgICAgICAgICAgICAgICAgICAgYWNxdWlzaXRpb25TZXR0aW5ncy5zdHlsZS5kaXNwbGF5ID0gYWNxdWlzaXRpb25FbmFibGVkQ2hlY2tib3guY2hlY2tlZCA/ICdibG9jaycgOiAnbm9uZSc7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAodHJpZ2dlclJvdW5kU2VsZWN0KSB0cmlnZ2VyUm91bmRTZWxlY3QudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25UcmlnZ2VyUm91bmQnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5hY3F1aXNpdGlvblRyaWdnZXJSb3VuZCk7DQogICAgICAgICAgICAgICAgaWYgKGZhbGxiYWNrUm91bmRTZWxlY3QpIGZhbGxiYWNrUm91bmRTZWxlY3QudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25GYWxsYmFja1JvdW5kJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuYWNxdWlzaXRpb25GYWxsYmFja1JvdW5kKTsNCiAgICAgICAgICAgICAgICBpZiAoa2V5d29yZHNUZXh0YXJlYSkga2V5d29yZHNUZXh0YXJlYS52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdhY3F1aXNpdGlvbktleXdvcmRzJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuYWNxdWlzaXRpb25LZXl3b3Jkcyk7DQogICAgICAgICAgICAgICAgaWYgKHRvb2xUeXBlU2VsZWN0KSB0b29sVHlwZVNlbGVjdC52YWx1ZSA9IENvbmZp",
        "Z01hbmFnZXIuZ2V0KCdhY3F1aXNpdGlvblRvb2xUeXBlJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuYWNxdWlzaXRpb25Ub29sVHlwZSk7DQogICAgICAgICAgICAgICAgaWYgKGRlbGF5SW5wdXQpIGRlbGF5SW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25EZWxheScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmFjcXVpc2l0aW9uRGVsYXkpOw0KICAgICAgICAgICAgICAgIGlmIChhbGxvd1JlcGVhdENoZWNrYm94KSBhbGxvd1JlcGVhdENoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnYWNxdWlzaXRpb25BbGxvd1JlcGVhdCcsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmFjcXVpc2l0aW9uQWxsb3dSZXBlYXQpOw0KDQogICAgICAgICAgICAgICAgLy8g5byC5q2l5Yqg6L295bel5YW35YiX6KGoDQogICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGlmICh0b29sVHlwZVNlbGVjdCAmJiB0b29sVHlwZVNlbGVjdC52YWx1ZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVSZWZyZXNoVG9vbHMoKS50aGVuKCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDliqDovb3lrozlt6XlhbfliJfooajlkI7orr7nva7pgInkuK3nmoTlt6XlhbcNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzYXZlZFRvb2xOYW1lID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FjcXVpc2l0aW9uVG9vbE5hbWUnLCAnJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNhdmVkVG9vbE5hbWUgJiYgdG9vbE5hbWVTZWxlY3QpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9vbE5hbWVTZWxlY3QudmFsdWUgPSBzYXZlZFRvb2xOYW1lOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSwgMTAwMCk7DQoNCiAgICAgICAgICAgICAgICAvLyDliqDovb3pu5HlkI3ljZXphY3nva4NCiAgICAgICAgICAgICAgICBjb25zdCBibGFja2xpc3RFbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmxhY2tsaXN0LWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhdXRvRGV0ZWN0QmxvY2tlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWF1dG8tZGV0ZWN0LWJsb2NrZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBibGFja2xpc3RDb250ZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJsYWNrbGlzdC1jb250ZW50Jyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoYmxhY2tsaXN0RW5hYmxlZENoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIGJsYWNrbGlzdEVuYWJsZWRDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Js",
        "YWNrbGlzdEVuYWJsZWQnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5ibGFja2xpc3RFbmFibGVkKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoYXV0b0RldGVjdEJsb2NrZWRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBhdXRvRGV0ZWN0QmxvY2tlZENoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnYXV0b0RldGVjdEJsb2NrZWQnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5hdXRvRGV0ZWN0QmxvY2tlZCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5riy5p+T6buR5ZCN5Y2V5YiX6KGoDQogICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJCbGFja2xpc3RJdGVtcygpOw0KDQogICAgICAgICAgICAgICAgLy8g5Yqg6L295Lya6K+d6K6w5b+G6YWN572uDQogICAgICAgICAgICAgICAgY29uc3Qgc2Vzc2lvbk1lbW9yeUVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zZXNzaW9uLW1lbW9yeS1lbmFibGVkJyk7DQogICAgICAgICAgICAgICAgY29uc3Qgc2Vzc2lvbkV4cGlyZURheXNJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zZXNzaW9uLWV4cGlyZS1kYXlzJyk7DQogICAgICAgICAgICAgICAgY29uc3QgbWF4U2Vzc2lvbnNJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1tYXgtc2Vzc2lvbnMnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChzZXNzaW9uTWVtb3J5RW5hYmxlZENoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIHNlc3Npb25NZW1vcnlFbmFibGVkQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzZXNzaW9uTWVtb3J5RW5hYmxlZCcsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLnNlc3Npb25NZW1vcnlFbmFibGVkKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoc2Vzc2lvbkV4cGlyZURheXNJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBzZXNzaW9uRXhwaXJlRGF5c0lucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ3Nlc3Npb25FeHBpcmVEYXlzJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1Muc2Vzc2lvbkV4cGlyZURheXMpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChtYXhTZXNzaW9uc0lucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIG1heFNlc3Npb25zSW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnbWF4U2Vzc2lvbnMnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5tYXhTZXNzaW9ucyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw5Lya6K+d57uf6K6hDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZXNzaW9uU3RhdHMoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWKoOi9veiBmuWFiei/m+e6v+mFjee9rg0KICAgICAgICAgICAgICAgIGNvbnN0IHNw",
        "b3RsaWdodEVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtZW5hYmxlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNwb3RsaWdodFRlbXBsYXRlVGV4dGFyZWEgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc3BvdGxpZ2h0LXRlbXBsYXRlJyk7DQogICAgICAgICAgICAgICAgY29uc3Qgc3BvdGxpZ2h0RGVmYXVsdENvdXJzZUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC1kZWZhdWx0LWNvdXJzZScpOw0KDQogICAgICAgICAgICAgICAgaWYgKHNwb3RsaWdodEVuYWJsZWRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBzcG90bGlnaHRFbmFibGVkQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGlnaHRMZWFkRW5hYmxlZCcsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLnNwb3RsaWdodExlYWRFbmFibGVkKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoc3BvdGxpZ2h0VGVtcGxhdGVUZXh0YXJlYSkgew0KICAgICAgICAgICAgICAgICAgICBzcG90bGlnaHRUZW1wbGF0ZVRleHRhcmVhLnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ3Nwb3RsaWdodExlYWRUZW1wbGF0ZScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLnNwb3RsaWdodExlYWRUZW1wbGF0ZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHNwb3RsaWdodERlZmF1bHRDb3Vyc2VJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBzcG90bGlnaHREZWZhdWx0Q291cnNlSW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnc3BvdGxpZ2h0RGVmYXVsdENvdXJzZU5hbWUnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5zcG90bGlnaHREZWZhdWx0Q291cnNlTmFtZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw6IGa5YWJ6L+b57q/57uf6K6hDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTcG90bGlnaHRTdGF0cygpOw0KDQogICAgICAgICAgICAgICAgLy8g5Yqg6L295YO15bC45pyq6K+75aSE55CG6YWN572uDQogICAgICAgICAgICAgICAgdGhpcy5sb2FkWm9tYmllQ29uZmlnKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDliqDovb3ov73nsonphY3nva4NCiAgICAgICAgICAgICAgICB0aGlzLmxvYWRGb2xsb3dVcENvbmZpZygpOw0KDQogICAgICAgICAgICAgICAgLy8g5Yqg6L296ZSZ6K+v5o6o6YCB6YWN572uDQogICAgICAgICAgICAgICAgdGhpcy5sb2FkRXJyb3JOb3RpZmljYXRpb25Db25maWcoKTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WKoOi9vemFjee9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAg",
        "ICAqIOWkhOeQhum7keWQjeWNleWxleW8gC/mlLbotbcNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRvZ2dsZUJsYWNrbGlzdCgpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmxhY2tsaXN0LWNvbnRlbnQnKTsNCiAgICAgICAgICAgIGNvbnN0IGJ1dHRvbiA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtYmxhY2tsaXN0Jyk7DQoNCiAgICAgICAgICAgIGlmIChjb250ZW50ICYmIGJ1dHRvbikgew0KICAgICAgICAgICAgICAgIGlmIChjb250ZW50LnN0eWxlLmRpc3BsYXkgPT09ICdub25lJykgew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOw0KICAgICAgICAgICAgICAgICAgICBidXR0b24udGV4dENvbnRlbnQgPSAn5pS26LW3JzsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJCbGFja2xpc3RJdGVtcygpOyAvLyDlsZXlvIDml7bmuLLmn5Ppu5HlkI3ljZXliJfooagNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7DQogICAgICAgICAgICAgICAgICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9ICflsZXlvIAnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6buR5ZCN5Y2V5Yqf6IO95ZCv55So54q25oCB5Y+Y5YyWDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVCbGFja2xpc3RFbmFibGVkQ2hhbmdlKCkgew0KICAgICAgICAgICAgY29uc3QgY2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmxhY2tsaXN0LWVuYWJsZWQnKTsNCiAgICAgICAgICAgIGlmIChjaGVja2JveCkgew0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdibGFja2xpc3RFbmFibGVkJywgY2hlY2tib3guY2hlY2tlZCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpu5HlkI3ljZXlip/og73nirbmgIHlt7Lmm7TmlLknLCB7IGVuYWJsZWQ6IGNoZWNrYm94LmNoZWNrZWQgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuiHquWKqOajgOa1i+iiq+aLiem7keWKn+iDveeKtuaAgeWPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQXV0b0RldGVjdENoYW5nZSgpIHsNCiAgICAgICAgICAgIGNvbnN0IGNoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWF1dG8tZGV0ZWN0LWJsb2NrZWQnKTsNCiAgICAgICAgICAgIGlmIChjaGVja2JveCkgew0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdhdXRvRGV0ZWN0QmxvY2tlZCcsIGNoZWNrYm94LmNoZWNrZWQpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6Ieq5Yqo5qOA5rWL",
        "6KKr5ouJ6buR5Yqf6IO954q25oCB5bey5pu05pS5JywgeyBlbmFibGVkOiBjaGVja2JveC5jaGVja2VkIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmt7vliqDpu5HlkI3ljZUNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUFkZEJsYWNrbGlzdCgpIHsNCiAgICAgICAgICAgIGNvbnN0IGlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJsYWNrbGlzdC1pbnB1dCcpOw0KICAgICAgICAgICAgaWYgKCFpbnB1dCB8fCAhaW5wdXQudmFsdWUudHJpbSgpKSB7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfor7fovpPlhaXnlKjmiLflkI3miJbnlKjmiLdJRCcsICd3YXJuaW5nJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBjb25zdCB1c2VySWRlbnRpZmllciA9IGlucHV0LnZhbHVlLnRyaW0oKTsNCiAgICAgICAgICAgIGNvbnN0IGFkZGVkID0gQmxhY2tsaXN0TWFuYWdlci5hZGQodXNlcklkZW50aWZpZXIsIHVzZXJJZGVudGlmaWVyLCAnbWFudWFsJywgJ+aJi+WKqOa3u+WKoCcpOw0KDQogICAgICAgICAgICBpZiAoYWRkZWQpIHsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oYOW3sua3u+WKoCAiJHt1c2VySWRlbnRpZmllcn0iIOWIsOm7keWQjeWNlWAsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgaW5wdXQudmFsdWUgPSAnJzsgLy8g5riF56m66L6T5YWl5qGGDQogICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJCbGFja2xpc3RJdGVtcygpOyAvLyDph43mlrDmuLLmn5Ppu5HlkI3ljZXliJfooagNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmt7vliqDpu5HlkI3ljZXlpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5L+d5a2Y6buR5ZCN5Y2V6K6+572uDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVTYXZlQmxhY2tsaXN0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBibGFja2xpc3RFbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmxhY2tsaXN0LWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhdXRvRGV0ZWN0QmxvY2tlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWF1dG8tZGV0ZWN0LWJsb2NrZWQnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChibGFja2xpc3RFbmFibGVkQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2JsYWNrbGlzdEVuYWJsZWQnLCBibGFja2xpc3RFbmFibGVkQ2hlY2tib3guY2hlY2tlZCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAg",
        "aWYgKGF1dG9EZXRlY3RCbG9ja2VkQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2F1dG9EZXRlY3RCbG9ja2VkJywgYXV0b0RldGVjdEJsb2NrZWRDaGVja2JveC5jaGVja2VkKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+m7keWQjeWNleiuvue9ruW3suS/neWtmCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5L+d5a2Y6buR5ZCN5Y2V6K6+572u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+S/neWtmOm7keWQjeWNleiuvue9ruWksei0pTogJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmuIXnqbrpu5HlkI3ljZUNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUNsZWFyQmxhY2tsaXN0KCkgew0KICAgICAgICAgICAgaWYgKGNvbmZpcm0oJ+ehruWumuimgea4heepuum7keWQjeWNleWQl++8n+atpOaTjeS9nOS4jeWPr+aSpOmUgOOAgicpKSB7DQogICAgICAgICAgICAgICAgY29uc3QgY2xlYXJlZCA9IEJsYWNrbGlzdE1hbmFnZXIuY2xlYXIoKTsNCiAgICAgICAgICAgICAgICBpZiAoY2xlYXJlZCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+m7keWQjeWNleW3sua4heepuicsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyQmxhY2tsaXN0SXRlbXMoKTsgLy8g6YeN5paw5riy5p+T6buR5ZCN5Y2V5YiX6KGoDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmuIXnqbrpu5HlkI3ljZXlpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWvvOWHuum7keWQjeWNlQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlRXhwb3J0QmxhY2tsaXN0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBibGFja2xpc3QgPSBCbGFja2xpc3RNYW5hZ2VyLmV4cG9ydCgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGpzb25TdHIgPSBKU09OLnN0cmluZ2lmeShibGFja2xpc3QsIG51bGwsIDIpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbanNvblN0cl0sIHsgdHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nIH0pOw0KICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpOw0KICAg",
        "ICAgICAgICAgICAgIGEuaHJlZiA9IHVybDsNCiAgICAgICAgICAgICAgICBhLmRvd25sb2FkID0gYHhocy1ibGFja2xpc3QtJHtuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc2xpY2UoMCwgMTApfS5qc29uYDsNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOw0KICAgICAgICAgICAgICAgIGEuY2xpY2soKTsNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGEpOw0KICAgICAgICAgICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwodXJsKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6buR5ZCN5Y2V5a+85Ye65oiQ5YqfJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflr7zlh7rpu5HlkI3ljZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5a+85Ye66buR5ZCN5Y2V5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWvvOWFpem7keWQjeWNlQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlSW1wb3J0QmxhY2tsaXN0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7DQogICAgICAgICAgICAgICAgaW5wdXQudHlwZSA9ICdmaWxlJzsNCiAgICAgICAgICAgICAgICBpbnB1dC5hY2NlcHQgPSAnLmpzb24nOw0KDQogICAgICAgICAgICAgICAgaW5wdXQub25jaGFuZ2UgPSAoZSkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWxlID0gZS50YXJnZXQuZmlsZXNbMF07DQogICAgICAgICAgICAgICAgICAgIGlmICghZmlsZSkgcmV0dXJuOw0KDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7DQogICAgICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSAoZXZlbnQpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZXZlbnQudGFyZ2V0LnJlc3VsdCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaW1wb3J0ZWQgPSBCbGFja2xpc3RNYW5hZ2VyLmltcG9ydChkYXRhKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbXBvcnRlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oYOaIkOWKn+WvvOWFpSAke2RhdGEubGVuZ3RofSDmnaHpu5HlkI3ljZXorrDlvZVgLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckJsYWNrbGlzdEl0",
        "ZW1zKCk7IC8vIOmHjeaWsOa4suafk+m7keWQjeWNleWIl+ihqA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5a+85YWl6buR5ZCN5Y2V5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+ino+aekOm7keWQjeWNleaWh+S7tuWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfop6PmnpDpu5HlkI3ljZXmlofku7blpLHotKU6ICcgKyBlcnJvci5tZXNzYWdlLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKTsNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgaW5wdXQuY2xpY2soKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflr7zlhaXpu5HlkI3ljZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5a+85YWl6buR5ZCN5Y2V5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4suafk+m7keWQjeWNleWIl+ihqOmhuQ0KICAgICAgICAgKi8NCiAgICAgICAgcmVuZGVyQmxhY2tsaXN0SXRlbXMoKSB7DQogICAgICAgICAgICBjb25zdCBsaXN0Q29udGFpbmVyID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJsYWNrbGlzdC1saXN0Jyk7DQogICAgICAgICAgICBjb25zdCBjb3VudEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmxhY2tsaXN0LWNvdW50Jyk7DQoNCiAgICAgICAgICAgIGlmICghbGlzdENvbnRhaW5lcikgcmV0dXJuOw0KDQogICAgICAgICAgICAvLyDojrflj5bpu5HlkI3ljZXmlbDmja4NCiAgICAgICAgICAgIGNvbnN0IGJsYWNrbGlzdCA9IEJsYWNrbGlzdE1hbmFnZXIuZ2V0QWxsKCk7DQoNCiAgICAgICAgICAgIC8vIOabtOaWsOiuoeaVsA0KICAgICAgICAgICAgaWYgKGNvdW50RWxlbWVudCkgew0KICAgICAgICAgICAgICAgIGNvdW50RWxlbWVudC50ZXh0Q29udGVudCA9IGJsYWNrbGlzdC5sZW5ndGg7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOa4heepuuWIl+ihqA0KICAgICAgICAgICAgbGlzdENvbnRhaW5lci5pbm5lckhUTUwgPSAnJzsNCg0KICAgICAgICAgICAgLy8g5aaC5p6c6buR5ZCN5Y2V5Li6",
        "56m677yM5pi+56S65o+Q56S6DQogICAgICAgICAgICBpZiAoYmxhY2tsaXN0Lmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgIGxpc3RDb250YWluZXIuaW5uZXJIVE1MID0gJzxkaXYgY2xhc3M9Inhocy1haS1ibGFja2xpc3QtZW1wdHkiPuaaguaXoOm7keWQjeWNleeUqOaItzwvZGl2Pic7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmuLLmn5PliJfooajpobkNCiAgICAgICAgICAgIGJsYWNrbGlzdC5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7DQogICAgICAgICAgICAgICAgaXRlbUVsZW1lbnQuY2xhc3NOYW1lID0gJ3hocy1haS1ibGFja2xpc3QtaXRlbSc7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBkYXRlU3RyID0gbmV3IERhdGUoaXRlbS5hZGRlZEF0KS50b0xvY2FsZVN0cmluZygpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHJlYXNvblRleHQgPSBpdGVtLnJlYXNvbiA9PT0gJ21hbnVhbCcgPyAn5omL5Yqo5re75YqgJyA6ICfoh6rliqjmo4DmtYsnOw0KDQogICAgICAgICAgICAgICAgaXRlbUVsZW1lbnQuaW5uZXJIVE1MID0gYA0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktYmxhY2tsaXN0LWluZm8iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWJsYWNrbGlzdC1uYW1lIj4ke2l0ZW0udXNlck5hbWV9PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktYmxhY2tsaXN0LW1ldGEiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7ZGF0ZVN0cn0gwrcgJHtyZWFzb25UZXh0fQ0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJ4aHMtYWktYmxhY2tsaXN0LXJlbW92ZSIgZGF0YS11c2VyLWlkPSIke2l0ZW0udXNlcklkfSI+56e76ZmkPC9idXR0b24+DQogICAgICAgICAgICAgICAgYDsNCg0KICAgICAgICAgICAgICAgIGxpc3RDb250YWluZXIuYXBwZW5kQ2hpbGQoaXRlbUVsZW1lbnQpOw0KDQogICAgICAgICAgICAgICAgLy8g5re75Yqg56e76Zmk5oyJ6ZKu5LqL5Lu2DQogICAgICAgICAgICAgICAgY29uc3QgcmVtb3ZlQnRuID0gaXRlbUVsZW1lbnQucXVlcnlTZWxlY3RvcignLnhocy1haS1ibGFja2xpc3QtcmVtb3ZlJyk7DQogICAgICAgICAgICAgICAgaWYgKHJlbW92ZUJ0bikgew0KICAgICAgICAgICAgICAgICAgICByZW1vdmVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gZS50YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLXVzZXItaWQnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh1c2VySWQpIHsNCiAg",
        "ICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZW1vdmVkID0gQmxhY2tsaXN0TWFuYWdlci5yZW1vdmUodXNlcklkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVtb3ZlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+W3suS7jum7keWQjeWNleenu+mZpCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyQmxhY2tsaXN0SXRlbXMoKTsgLy8g6YeN5paw5riy5p+T5YiX6KGoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfnp7vpmaTpu5HlkI3ljZXlpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmm7TmlrBVSeeKtuaAgQ0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlVUkoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU3RhdHVzKCk7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZXJ2ZXJTdGF0dXMoKTsgLy8g5pu05paw5pyN5Yqh56uv54q25oCBDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTdGF0cygpOw0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlTG9ncygpOw0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlQmxhY2tsaXN0VUkoKTsgLy8g5pu05paw6buR5ZCN5Y2VVUkNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmm7TmlrBVSeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOm7keWQjeWNlVVJ54q25oCBDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVCbGFja2xpc3RVSSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5pu05paw6buR5ZCN5Y2V5Yqf6IO95byA5YWz54q25oCBDQogICAgICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0RW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJsYWNrbGlzdC1lbmFibGVkJyk7DQogICAgICAgICAgICAgICAgaWYgKGJsYWNrbGlzdEVuYWJsZWRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBibGFja2xpc3RFbmFibGVkQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdibGFja2xpc3RFbmFibGVkJywgdHJ1ZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw6Ieq",
        "5Yqo5qOA5rWL5byA5YWz54q25oCBDQogICAgICAgICAgICAgICAgY29uc3QgYXV0b0RldGVjdEJsb2NrZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1hdXRvLWRldGVjdC1ibG9ja2VkJyk7DQogICAgICAgICAgICAgICAgaWYgKGF1dG9EZXRlY3RCbG9ja2VkQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgYXV0b0RldGVjdEJsb2NrZWRDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2F1dG9EZXRlY3RCbG9ja2VkJywgdHJ1ZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw6buR5ZCN5Y2V5YiX6KGoDQogICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJCbGFja2xpc3RJdGVtcygpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOm7keWQjeWNlVVJ5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5rWL6K+V6KKr5ouJ6buR5qOA5rWLDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVUZXN0QmxvY2tlZERldGVjdGlvbigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmraPlnKjmtYvor5Xooqvmi4npu5Hmo4DmtYvlip/og70uLi4nLCAnaW5mbycpOw0KICAgICAgICAgICAgICAgIEJsb2NrZWRVc2VyRGV0ZWN0b3IudGVzdEJsb2NrZWREZXRlY3Rpb24oKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmtYvor5Xooqvmi4npu5Hmo4DmtYvlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5rWL6K+V6KKr5ouJ6buR5qOA5rWL5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuS8muivneiusOW/huWMuuWfn+WxleW8gC/mlLbotbcNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRvZ2dsZVNlc3Npb25NZW1vcnkoKSB7DQogICAgICAgICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNlc3Npb24tbWVtb3J5LWNvbnRlbnQnKTsNCiAgICAgICAgICAgIGNvbnN0IGJ1dHRvbiA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtc2Vzc2lvbi1tZW1vcnknKTsNCg0KICAgICAgICAgICAgaWYgKGNvbnRlbnQgJiYgYnV0dG9uKSB7DQogICAgICAgICAgICAgICAgY29uc3QgaXNWaXNpYmxlID0gY29udGVudC5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZSc7DQogICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gaXNW",
        "aXNpYmxlID8gJ25vbmUnIDogJ2Jsb2NrJzsNCiAgICAgICAgICAgICAgICBidXR0b24udGV4dENvbnRlbnQgPSBpc1Zpc2libGUgPyAn5bGV5byAJyA6ICfmlLbotbcnOw0KDQogICAgICAgICAgICAgICAgLy8g5aaC5p6c5bGV5byA77yM5Yi35paw57uf6K6h5L+h5oGvDQogICAgICAgICAgICAgICAgaWYgKCFpc1Zpc2libGUpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZXNzaW9uU3RhdHMoKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuS8muivneiusOW/huWKn+iDveW8gOWFs+WPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlU2Vzc2lvbk1lbW9yeUVuYWJsZWRDaGFuZ2UoKSB7DQogICAgICAgICAgICBjb25zdCBjaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zZXNzaW9uLW1lbW9yeS1lbmFibGVkJyk7DQogICAgICAgICAgICBpZiAoY2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkID0gY2hlY2tib3guY2hlY2tlZDsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnc2Vzc2lvbk1lbW9yeUVuYWJsZWQnLCBlbmFibGVkKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbigNCiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZCA/ICfkvJror53orrDlv4blip/og73lt7LlkK/nlKgnIDogJ+S8muivneiusOW/huWKn+iDveW3suemgeeUqCcsDQogICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJw0KICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Lya6K+d6K6w5b+G5Yqf6IO954q25oCB5Y+Y5pu0JywgeyBlbmFibGVkIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbkv53lrZjkvJror53orrDlv4borr7nva4NCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVNhdmVTZXNzaW9uTWVtb3J5KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBleHBpcmVEYXlzSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2Vzc2lvbi1leHBpcmUtZGF5cycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IG1heFNlc3Npb25zSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktbWF4LXNlc3Npb25zJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoZXhwaXJlRGF5c0lucHV0ICYmIG1heFNlc3Npb25zSW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXhwaXJlRGF5cyA9IHBhcnNlSW50KGV4cGlyZURheXNJbnB1dC52YWx1ZSk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG1heFNlc3Npb25zID0gcGFyc2VJbnQobWF4U2Vzc2lvbnNJbnB1dC52YWx1ZSk7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGV4cGlyZURh",
        "eXMgPCAxIHx8IGV4cGlyZURheXMgPiAzMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfkvJror53ov4fmnJ/ml7bpl7Tlv4XpobvlnKgxLTMw5aSp5LmL6Ze0JywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBpZiAobWF4U2Vzc2lvbnMgPCA1MCB8fCBtYXhTZXNzaW9ucyA+IDUwMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmnIDlpKfkvJror53mlbDph4/lv4XpobvlnKg1MC01MDDkuYvpl7QnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdzZXNzaW9uRXhwaXJlRGF5cycsIGV4cGlyZURheXMpOw0KICAgICAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnbWF4U2Vzc2lvbnMnLCBtYXhTZXNzaW9ucyk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5pu05pawQ2hhdFNlc3Npb25NYW5hZ2Vy55qE6YWN572uDQogICAgICAgICAgICAgICAgICAgIENoYXRTZXNzaW9uTWFuYWdlci5TRVNTSU9OX0VYUElSRV9USU1FID0gZXhwaXJlRGF5cyAqIDI0ICogNjAgKiA2MCAqIDEwMDA7DQogICAgICAgICAgICAgICAgICAgIENoYXRTZXNzaW9uTWFuYWdlci5NQVhfU0VTU0lPTlMgPSBtYXhTZXNzaW9uczsNCg0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+S8muivneiusOW/huiuvue9ruW3suS/neWtmCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfkvJror53orrDlv4borr7nva7lt7Lmm7TmlrAnLCB7IGV4cGlyZURheXMsIG1heFNlc3Npb25zIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfkv53lrZjkvJror53orrDlv4borr7nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5L+d5a2Y6K6+572u5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWIt+aWsOS8muivnee7n+iuoQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlUmVmcmVzaFNlc3Npb25TdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZXNzaW9uU3RhdHMoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+S8muivnee7n+iuoeW3suWIt+aWsCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAg",
        "ICAgICAgIExvZ2dlci5lcnJvcign5Yi35paw5Lya6K+d57uf6K6h5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WIt+aWsOe7n+iuoeWksei0pTogJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmuIXnkIbov4fmnJ/kvJror50NCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUNsZWFuRXhwaXJlZFNlc3Npb25zKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjbGVhbmVkQ291bnQgPSBDaGF0U2Vzc2lvbk1hbmFnZXIuY2xlYW5FeHBpcmVkU2Vzc2lvbnMoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNlc3Npb25TdGF0cygpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbihg5bey5riF55CGICR7Y2xlYW5lZENvdW50fSDkuKrov4fmnJ/kvJror51gLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfmiYvliqjmuIXnkIbov4fmnJ/kvJror53lrozmiJAnLCB7IGNsZWFuZWRDb3VudCB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmuIXnkIbov4fmnJ/kvJror53lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5riF55CG6L+H5pyf5Lya6K+d5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhua4heepuuaJgOacieS8muivnQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQ2xlYXJBbGxTZXNzaW9ucygpIHsNCiAgICAgICAgICAgIGlmIChjb25maXJtKCfnoa7lrpropoHmuIXnqbrmiYDmnInkvJror53orrDlv4blkJfvvJ/mraTmk43kvZzkuI3lj6/mgaLlpI3vvIEnKSkgew0KICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGNsZWFyZWRDb3VudCA9IENoYXRTZXNzaW9uTWFuYWdlci5jbGVhckFsbFNlc3Npb25zKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU2Vzc2lvblN0YXRzKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbihg5bey5riF56m6ICR7Y2xlYXJlZENvdW50fSDkuKrkvJror51gLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5omL5Yqo5riF56m65omA5pyJ5Lya6K+d5a6M5oiQJywgeyBjbGVhcmVkQ291bnQgfSk7DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmuIXnqbrmiYDmnInkvJror53lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNz",
        "YWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+a4heepuuS8muivneWksei0pTogJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5a+85Ye65Lya6K+d5pWw5o2uDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVFeHBvcnRTZXNzaW9ucygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IENoYXRTZXNzaW9uTWFuYWdlci5leHBvcnRTZXNzaW9ucygpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbZGF0YV0sIHsgdHlwZTogJ2FwcGxpY2F0aW9uL2pzb24nIH0pOw0KICAgICAgICAgICAgICAgIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpOw0KICAgICAgICAgICAgICAgIGEuaHJlZiA9IHVybDsNCiAgICAgICAgICAgICAgICBhLmRvd25sb2FkID0gYHhocy1zZXNzaW9ucy0ke25ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdfS5qc29uYDsNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOw0KICAgICAgICAgICAgICAgIGEuY2xpY2soKTsNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGEpOw0KICAgICAgICAgICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwodXJsKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Lya6K+d5pWw5o2u5a+85Ye65oiQ5YqfJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Lya6K+d5pWw5o2u5a+85Ye65a6M5oiQJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5a+85Ye65Lya6K+d5pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WvvOWHuuWksei0pTogJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIblr7zlhaXkvJror53mlbDmja4NCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUltcG9ydFNlc3Npb25zKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7DQogICAgICAgICAgICAgICAgaW5wdXQudHlwZSA9ICdmaWxlJzsNCiAgICAgICAgICAgICAgICBpbnB1dC5hY2NlcHQgPSAnLmpzb24nOw0KDQogICAgICAgICAgICAgICAgaW5wdXQub25jaGFuZ2UgPSAoZSkgPT4gew0KICAgICAgICAgICAgICAg",
        "ICAgICBjb25zdCBmaWxlID0gZS50YXJnZXQuZmlsZXNbMF07DQogICAgICAgICAgICAgICAgICAgIGlmICghZmlsZSkgcmV0dXJuOw0KDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7DQogICAgICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdWNjZXNzID0gQ2hhdFNlc3Npb25NYW5hZ2VyLmltcG9ydFNlc3Npb25zKGUudGFyZ2V0LnJlc3VsdCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZXNzaW9uU3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfkvJror53mlbDmja7lr7zlhaXmiJDlip8nLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5Lya6K+d5pWw5o2u5a+85YWl5a6M5oiQJyk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCflr7zlhaXlpLHotKXvvJrmlbDmja7moLzlvI/ml6DmlYgnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5a+85YWl5Lya6K+d5pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WvvOWFpeWksei0pTogJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgICAgICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKTsNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgaW5wdXQuY2xpY2soKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflr7zlhaXkvJror53mlbDmja7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5a+85YWl5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOS8muivnee7n+iuoeS/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlU2Vzc2lvblN0YXRzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25z",
        "dCBzdGF0cyA9IENoYXRTZXNzaW9uTWFuYWdlci5nZXRTZXNzaW9uU3RhdHMoKTsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsU2Vzc2lvbnNFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvdGFsLXNlc3Npb25zJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYWN0aXZlU2Vzc2lvbnNFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWFjdGl2ZS1zZXNzaW9ucycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsTWVzc2FnZXNFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvdGFsLW1lc3NhZ2VzJyk7DQogICAgICAgICAgICAgICAgY29uc3Qgc3RvcmFnZVNpemVFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXN0b3JhZ2Utc2l6ZScpOw0KDQogICAgICAgICAgICAgICAgaWYgKHRvdGFsU2Vzc2lvbnNFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsU2Vzc2lvbnNFbGVtZW50LnRleHRDb250ZW50ID0gc3RhdHMudG90YWxTZXNzaW9uczsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoYWN0aXZlU2Vzc2lvbnNFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGFjdGl2ZVNlc3Npb25zRWxlbWVudC50ZXh0Q29udGVudCA9IHN0YXRzLmFjdGl2ZVNlc3Npb25zOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICh0b3RhbE1lc3NhZ2VzRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICB0b3RhbE1lc3NhZ2VzRWxlbWVudC50ZXh0Q29udGVudCA9IHN0YXRzLnRvdGFsTWVzc2FnZXM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHN0b3JhZ2VTaXplRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzaXplS0IgPSBNYXRoLnJvdW5kKHN0YXRzLnN0b3JhZ2VTaXplIC8gMTAyNCAqIDEwMCkgLyAxMDA7DQogICAgICAgICAgICAgICAgICAgIHN0b3JhZ2VTaXplRWxlbWVudC50ZXh0Q29udGVudCA9IGAke3NpemVLQn0gS0JgOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5Lya6K+d57uf6K6h5L+h5oGv5bey5pu05pawJywgc3RhdHMpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOS8muivnee7n+iuoeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOi/kOihjOeKtuaAgQ0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlU3RhdHVzKCkgew0KICAgICAgICAgICAgY29uc3Qgc3RhdHVzRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zdGF0dXMnKTsNCiAgICAgICAgICAgIGNvbnN0IGluZGljYXRvckVs",
        "ZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktaW5kaWNhdG9yJyk7DQogICAgICAgICAgICBjb25zdCB0b2dnbGVCdG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlJyk7DQogICAgICAgICAgICBjb25zdCB0b2dnbGVUZXh0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS10ZXh0Jyk7DQoNCiAgICAgICAgICAgIGlmICh3aW5kb3cuWEhTQXV0b1JlcGx5ICYmIHdpbmRvdy5YSFNBdXRvUmVwbHkuaXNSdW5uaW5nKSB7DQogICAgICAgICAgICAgICAgaWYgKHN0YXR1c0VsZW1lbnQpIHN0YXR1c0VsZW1lbnQudGV4dENvbnRlbnQgPSAn6L+Q6KGM5LitJzsNCiAgICAgICAgICAgICAgICBpZiAoaW5kaWNhdG9yRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBpbmRpY2F0b3JFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3J1bm5pbmcnKTsNCiAgICAgICAgICAgICAgICAgICAgaW5kaWNhdG9yRWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kID0gJyMyZWQ1NzMnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAodG9nZ2xlVGV4dCkgdG9nZ2xlVGV4dC50ZXh0Q29udGVudCA9ICflgZzmraLoh6rliqjlm57lpI0nOw0KICAgICAgICAgICAgICAgIGlmICh0b2dnbGVCdG4pIHRvZ2dsZUJ0bi5zdHlsZS5iYWNrZ3JvdW5kID0gJ2xpbmVhci1ncmFkaWVudCgxMzVkZWcsICNmZjQ3NTcsICNjNDQ1NjkpJzsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgaWYgKHN0YXR1c0VsZW1lbnQpIHN0YXR1c0VsZW1lbnQudGV4dENvbnRlbnQgPSAn5bey5YGc5q2iJzsNCiAgICAgICAgICAgICAgICBpZiAoaW5kaWNhdG9yRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBpbmRpY2F0b3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ3J1bm5pbmcnKTsNCiAgICAgICAgICAgICAgICAgICAgaW5kaWNhdG9yRWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kID0gJyNmZjQ3NTcnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAodG9nZ2xlVGV4dCkgdG9nZ2xlVGV4dC50ZXh0Q29udGVudCA9ICflkK/liqjoh6rliqjlm57lpI0nOw0KICAgICAgICAgICAgICAgIGlmICh0b2dnbGVCdG4pIHRvZ2dsZUJ0bi5zdHlsZS5iYWNrZ3JvdW5kID0gJ2xpbmVhci1ncmFkaWVudCgxMzVkZWcsICNmZjZiNmIsICNlZTVhMjQpJzsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw5pyN5Yqh56uv54q25oCBDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVTZXJ2ZXJTdGF0dXMoKSB7DQogICAgICAgICAgICBjb25zdCBzZXJ2ZXJTdGF0dXNFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNlcnZlci1zdGF0dXMnKTsNCiAgICAgICAgICAgIGNvbnN0IHNlcnZlckluZGljYXRvckVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0",
        "b3IoJyN4aHMtYWktc2VydmVyLWluZGljYXRvcicpOw0KDQogICAgICAgICAgICBpZiAoIUNPTkZJRy5TRVJWRVIuZW5hYmxlZCkgew0KICAgICAgICAgICAgICAgIGlmIChzZXJ2ZXJTdGF0dXNFbGVtZW50KSBzZXJ2ZXJTdGF0dXNFbGVtZW50LnRleHRDb250ZW50ID0gJ+W3suemgeeUqCc7DQogICAgICAgICAgICAgICAgaWYgKHNlcnZlckluZGljYXRvckVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgc2VydmVySW5kaWNhdG9yRWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kID0gJyM5NWE1YTYnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOajgOafpeiEmuacrOaYr+WQpuiiq+acjeWKoeerr+emgeeUqA0KICAgICAgICAgICAgaWYgKCFTZXJ2ZXJNYW5hZ2VyLnNlcnZlckVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICBpZiAoc2VydmVyU3RhdHVzRWxlbWVudCkgc2VydmVyU3RhdHVzRWxlbWVudC50ZXh0Q29udGVudCA9ICfohJrmnKzooqvnpoHnlKgnOw0KICAgICAgICAgICAgICAgIGlmIChzZXJ2ZXJJbmRpY2F0b3JFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHNlcnZlckluZGljYXRvckVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZCA9ICcjZTc0YzNjJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoU2VydmVyTWFuYWdlci5pc0Nvbm5lY3RlZCkgew0KICAgICAgICAgICAgICAgIGlmIChzZXJ2ZXJTdGF0dXNFbGVtZW50KSBzZXJ2ZXJTdGF0dXNFbGVtZW50LnRleHRDb250ZW50ID0gJ+W3sui/nuaOpSc7DQogICAgICAgICAgICAgICAgaWYgKHNlcnZlckluZGljYXRvckVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgc2VydmVySW5kaWNhdG9yRWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kID0gJyMyZWQ1NzMnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgY29uc3QgcmV0cnlDb3VudCA9IFNlcnZlck1hbmFnZXIucmV0cnlDb3VudDsNCiAgICAgICAgICAgICAgICBpZiAocmV0cnlDb3VudCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHNlcnZlclN0YXR1c0VsZW1lbnQpIHNlcnZlclN0YXR1c0VsZW1lbnQudGV4dENvbnRlbnQgPSBg6YeN6K+V5LitKCR7cmV0cnlDb3VudH0pYDsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHNlcnZlckluZGljYXRvckVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZlckluZGljYXRvckVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZCA9ICcjZmZhNTAyJzsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGlmIChzZXJ2ZXJTdGF0dXNFbGVtZW50KSBzZXJ2ZXJTdGF0dXNFbGVtZW50LnRleHRDb250ZW50ID0gJ+i/nuaOpeS4",
        "rS4uLic7DQogICAgICAgICAgICAgICAgICAgIGlmIChzZXJ2ZXJJbmRpY2F0b3JFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICBzZXJ2ZXJJbmRpY2F0b3JFbGVtZW50LnN0eWxlLmJhY2tncm91bmQgPSAnIzcwYTFmZic7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOe7n+iuoeS/oeaBrw0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlU3RhdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHBhZ2VTdGF0dXMgPSB3aW5kb3cuWEhTQXV0b1JlcGx5ID8gd2luZG93LlhIU0F1dG9SZXBseS5nZXRQYWdlU3RhdHVzKCkgOiBudWxsOw0KICAgICAgICAgICAgICAgIGNvbnN0IHByb2Nlc3NvclN0YXRzID0gTWVzc2FnZVByb2Nlc3Nvci5nZXRTdGF0cygpOw0KDQogICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZUNvdW50RWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1tZXNzYWdlLWNvdW50Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgcHJvY2Vzc2VkQ291bnRFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXByb2Nlc3NlZC1jb3VudCcpOw0KDQogICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2VDb3VudEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZUNvdW50RWxlbWVudC50ZXh0Q29udGVudCA9IHBhZ2VTdGF0dXMgPyBwYWdlU3RhdHVzLm5ld01lc3NhZ2VDb3VudCA6IDA7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHByb2Nlc3NlZENvdW50RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBwcm9jZXNzZWRDb3VudEVsZW1lbnQudGV4dENvbnRlbnQgPSBwcm9jZXNzb3JTdGF0cy5kZWR1cGxpY2F0b3JTdGF0cy50b3RhbFByb2Nlc3NlZDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDpmJ/liJfnirbmgIHmmL7npLoNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVF1ZXVlU3RhdHVzKHByb2Nlc3NvclN0YXRzKTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOe7n+iuoeS/oeaBr+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOmYn+WIl+eKtuaAgeaYvuekug0KICAgICAgICAgKiBAcGFyYW0ge09iamVjdH0gcHJvY2Vzc29yU3RhdHMg5aSE55CG5Zmo57uf6K6h5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVRdWV1ZVN0YXR1cyhwcm9jZXNzb3JTdGF0cykgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDmn6Xmib7miJbliJvlu7rpmJ/liJfn",
        "irbmgIHmmL7npLrlhYPntKANCiAgICAgICAgICAgICAgICBsZXQgcXVldWVTdGF0dXNFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXF1ZXVlLXN0YXR1cycpOw0KICAgICAgICAgICAgICAgIGlmICghcXVldWVTdGF0dXNFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWcqOe7n+iuoeS/oeaBr+WMuuWfn+a3u+WKoOmYn+WIl+eKtuaAgQ0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0c0NvbnRhaW5lciA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignLnhocy1haS1zdGF0cycpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdHNDb250YWluZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHF1ZXVlU3RhdHVzSFRNTCA9IGANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktc3RhdC1pdGVtIiBpZD0ieGhzLWFpLXF1ZXVlLXN0YXR1cyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+6Zif5YiX54q25oCBOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLXF1ZXVlLWluZm8iPi08L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICBgOw0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHNDb250YWluZXIuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCBxdWV1ZVN0YXR1c0hUTUwpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcXVldWVTdGF0dXNFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXF1ZXVlLXN0YXR1cycpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHF1ZXVlU3RhdHVzRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBxdWV1ZUluZm9FbGVtZW50ID0gcXVldWVTdGF0dXNFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcXVldWUtaW5mbycpOw0KICAgICAgICAgICAgICAgICAgICBpZiAocXVldWVJbmZvRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcXVldWVUZXh0ID0gYCR7cHJvY2Vzc29yU3RhdHMucXVldWVMZW5ndGh9LyR7cHJvY2Vzc29yU3RhdHMubWF4UXVldWVTaXplfSAoJHtwcm9jZXNzb3JTdGF0cy5xdWV1ZVVzYWdlfSlgOw0KICAgICAgICAgICAgICAgICAgICAgICAgcXVldWVJbmZvRWxlbWVudC50ZXh0Q29udGVudCA9IHF1ZXVlVGV4dDsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5qC55o2u6Zif5YiX5L2/55So546H6K6+572u6aKc6ImyDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2FnZSA9IHBhcnNlRmxvYXQocHJvY2Vzc29yU3RhdHMucXVldWVVc2FnZSk7DQog",
        "ICAgICAgICAgICAgICAgICAgICAgICBpZiAodXNhZ2UgPj0gODApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWV1ZUluZm9FbGVtZW50LnN0eWxlLmNvbG9yID0gJyNmZjQ3NTcnOyAvLyDnuqLoibLorablkYoNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodXNhZ2UgPj0gNTApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWV1ZUluZm9FbGVtZW50LnN0eWxlLmNvbG9yID0gJyNmZmE1MDInOyAvLyDmqZnoibLmj5DphpINCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVldWVJbmZvRWxlbWVudC5zdHlsZS5jb2xvciA9ICcjMmVkNTczJzsgLy8g57u/6Imy5q2j5bi4DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDlpITnkIbnirbmgIENCiAgICAgICAgICAgICAgICBsZXQgcHJvY2Vzc2luZ1N0YXR1c0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktcHJvY2Vzc2luZy1zdGF0dXMnKTsNCiAgICAgICAgICAgICAgICBpZiAoIXByb2Nlc3NpbmdTdGF0dXNFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzQ29udGFpbmVyID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcueGhzLWFpLXN0YXRzJyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChzdGF0c0NvbnRhaW5lcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJvY2Vzc2luZ1N0YXR1c0hUTUwgPSBgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLXN0YXQtaXRlbSIgaWQ9Inhocy1haS1wcm9jZXNzaW5nLXN0YXR1cyI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktc3RhdC1sYWJlbCI+5aSE55CG54q25oCBOjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1zdGF0LXZhbHVlIiBpZD0ieGhzLWFpLXByb2Nlc3NpbmctaW5mbyI+LTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIGA7DQogICAgICAgICAgICAgICAgICAgICAgICBzdGF0c0NvbnRhaW5lci5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIHByb2Nlc3NpbmdTdGF0dXNIVE1MKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHByb2Nlc3NpbmdTdGF0dXNFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXByb2Nlc3Npbmctc3RhdHVzJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAocHJvY2Vzc2luZ1N0YXR1c0VsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJv",
        "Y2Vzc2luZ0luZm9FbGVtZW50ID0gcHJvY2Vzc2luZ1N0YXR1c0VsZW1lbnQucXVlcnlTZWxlY3RvcignI3hocy1haS1wcm9jZXNzaW5nLWluZm8nKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHByb2Nlc3NpbmdJbmZvRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzVGV4dCA9IHByb2Nlc3NvclN0YXRzLmlzUHJvY2Vzc2luZyA/ICflpITnkIbkuK0nIDogJ+epuumXsic7DQogICAgICAgICAgICAgICAgICAgICAgICBwcm9jZXNzaW5nSW5mb0VsZW1lbnQudGV4dENvbnRlbnQgPSBzdGF0dXNUZXh0Ow0KICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc2luZ0luZm9FbGVtZW50LnN0eWxlLmNvbG9yID0gcHJvY2Vzc29yU3RhdHMuaXNQcm9jZXNzaW5nID8gJyNmZmE1MDInIDogJyMyZWQ1NzMnOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw6Zif5YiX54q25oCB5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw5pel5b+X5pi+56S6DQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVMb2dzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDpppblhYjmo4Dmn6XpnaLmnb/mmK/lkKblrZjlnKgNCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMucGFuZWwpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfpnaLmnb/mnKrliJ3lp4vljJbvvIzot7Pov4fml6Xlv5fmm7TmlrAnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGxvZ0NvbnRlbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktbG9nLWNvbnRlbnQnKTsNCiAgICAgICAgICAgICAgICBpZiAoIWxvZ0NvbnRlbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfml6Xlv5flhoXlrrnlrrnlmajmnKrmib7liLDvvIzot7Pov4fml6Xlv5fmm7TmlrAnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWuieWFqOiOt+WPluaXpeW/l+e6p+WIq++8jOaPkOS+m+m7mOiupOWAvA0KICAgICAgICAgICAgICAgIGNvbnN0IGxvZ0xldmVsRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1sb2ctbGV2ZWwnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBsb2dMZXZlbCA9IGxvZ0xldmVsRWxlbWVudCA/IGxvZ0xldmVsRWxlbWVudC52YWx1ZSA6ICdhbGwnOw0KDQogICAgICAgICAgICAgICAgY29uc3QgbG9ncyA9IExvZ2dlci5nZXRSZWNlbnRMb2dzKDUwKTsNCiAgICAgICAgICAgICAgICBjb25zdCBm",
        "aWx0ZXJlZExvZ3MgPSBsb2dMZXZlbCA9PT0gJ2FsbCcgPyBsb2dzIDogbG9ncy5maWx0ZXIobG9nID0+IGxvZy5sZXZlbCA9PT0gbG9nTGV2ZWwpOw0KDQogICAgICAgICAgICAgICAgaWYgKGZpbHRlcmVkTG9ncy5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgbG9nQ29udGVudC5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz0ieGhzLWFpLWxvZy1lbXB0eSI+5pqC5peg5pel5b+XPC9kaXY+JzsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGxvZ0hUTUwgPSBmaWx0ZXJlZExvZ3MubWFwKGxvZyA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpbWUgPSBVdGlscy5mb3JtYXRUaW1lKGxvZy50aW1lc3RhbXApOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gYA0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWxvZy1lbnRyeSAke2xvZy5sZXZlbH0iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktbG9nLXRpbWUiPiR7dGltZX08L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Inhocy1haS1sb2ctbGV2ZWwiPiR7bG9nLmxldmVsfTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ieGhzLWFpLWxvZy1tZXNzYWdlIj4ke2xvZy5tZXNzYWdlfTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICBgOw0KICAgICAgICAgICAgICAgIH0pLmpvaW4oJycpOw0KDQogICAgICAgICAgICAgICAgbG9nQ29udGVudC5pbm5lckhUTUwgPSBsb2dIVE1MOw0KICAgICAgICAgICAgICAgIGxvZ0NvbnRlbnQuc2Nyb2xsVG9wID0gbG9nQ29udGVudC5zY3JvbGxIZWlnaHQ7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmm7TmlrDml6Xlv5fmmL7npLrlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbphY3nva7nrqHnkIbljLrln5/lsZXlvIAv5pS26LW3DQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVUb2dnbGVDb25maWdNZ210KCkgew0KICAgICAgICAgICAgY29uc3QgY29udGVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1jb25maWctbWdtdC1jb250ZW50Jyk7DQogICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWNvbmZpZy1tZ210Jyk7DQoNCiAgICAgICAgICAgIGlmIChjb250ZW50ICYmIGJ0bikgew0KICAgICAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IGNvbnRlbnQuc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnOw0KICAgICAgICAgICAgICAgIGNv",
        "bnRlbnQuc3R5bGUuZGlzcGxheSA9IGlzVmlzaWJsZSA/ICdub25lJyA6ICdibG9jayc7DQogICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gaXNWaXNpYmxlID8gJ+WxleW8gCcgOiAn5pS26LW3JzsNCg0KICAgICAgICAgICAgICAgIC8vIOWmguaenOWxleW8gO+8jOabtOaWsOmFjee9rue7n+iuoQ0KICAgICAgICAgICAgICAgIGlmICghaXNWaXNpYmxlKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlQ29uZmlnU3RhdHMoKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhumHjee9ruaJgOaciemFjee9rg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlUmVzZXRBbGwoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpcm1Nc2cgPSAn4pqg77iPIOWNsemZqeaTjeS9nOehruiupFxuXG4nICsNCiAgICAgICAgICAgICAgICAgICAgJ+atpOaTjeS9nOWwhumHjee9ruaJgOaciemFjee9ruWIsOm7mOiupOWAvO+8jOWMheaLrO+8mlxuJyArDQogICAgICAgICAgICAgICAgICAgICfigKIgQVBJ6YWN572uXG4nICsNCiAgICAgICAgICAgICAgICAgICAgJ+KAoiDmmbrog73ojrflrqLorr7nva5cbicgKw0KICAgICAgICAgICAgICAgICAgICAn4oCiIOm7keWQjeWNleWIl+ihqFxuJyArDQogICAgICAgICAgICAgICAgICAgICfigKIg5Lya6K+d6K6w5b+G5pWw5o2uXG4nICsNCiAgICAgICAgICAgICAgICAgICAgJ+KAoiDogZrlhYnov5vnur/orr7nva5cbicgKw0KICAgICAgICAgICAgICAgICAgICAn4oCiIOWDteWwuOacquivu+WkhOeQhuiuvue9rlxuXG4nICsNCiAgICAgICAgICAgICAgICAgICAgJ+atpOaTjeS9nOS4jeWPr+aSpOmUgO+8jOehruWumuimgee7p+e7reWQl++8nyc7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWNvbmZpcm0oY29uZmlybU1zZykpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOS6jOasoeehruiupA0KICAgICAgICAgICAgICAgIGlmICghY29uZmlybSgn5pyA5ZCO56Gu6K6k77ya55yf55qE6KaB6YeN572u5omA5pyJ6YWN572u5ZCX77yfJykpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOmHjee9rumFjee9rg0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIucmVzZXQoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOa4heepuueUqOaIt+aVsOaNrg0KICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCdzZXNzaW9uTWVtb3J5Jywge30pOw0KICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCdzcG90bGlnaHRQcm9jZXNzZWRVc2VycycsIHt9KTsNCiAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgnYWNxdWlzaXRpb25TZW50VXNlcnMnLCB7fSk7DQoNCiAgICAgICAgICAgICAg",
        "ICAvLyDliLfmlrBVSQ0KICAgICAgICAgICAgICAgIHRoaXMubG9hZENvbmZpZygpOw0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlVUkoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUNvbmZpZ1N0YXRzKCk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+aJgOaciemFjee9ruW3sumHjee9ruS4uum7mOiupOWAvCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+aJgOaciemFjee9ruW3sumHjee9ricpOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6YeN572u6YWN572u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+mHjee9rumFjee9ruWksei0pTogJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmm7TmlrDphY3nva7nu5/orqENCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZUNvbmZpZ1N0YXRzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb25maWdDb3VudEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktY29uZmlnLWNvdW50Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0U3RhdEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmxhY2tsaXN0LXN0YXQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzZXNzaW9uc1N0YXRFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNlc3Npb25zLXN0YXQnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChjb25maWdDb3VudEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29uZmlnQ291bnQgPSBPYmplY3Qua2V5cyhDT05GSUcuREVGQVVMVF9TRVRUSU5HUykubGVuZ3RoOw0KICAgICAgICAgICAgICAgICAgICBjb25maWdDb3VudEVsZW1lbnQudGV4dENvbnRlbnQgPSBjb25maWdDb3VudDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoYmxhY2tsaXN0U3RhdEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2JsYWNrbGlzdCcsIFtdKTsNCiAgICAgICAgICAgICAgICAgICAgYmxhY2tsaXN0U3RhdEVsZW1lbnQudGV4dENvbnRlbnQgPSBibGFja2xpc3QubGVuZ3RoOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChzZXNzaW9uc1N0YXRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlc3Npb25NZW1vcnkgPSBHTV9nZXRWYWx1ZSgnc2Vzc2lvbk1lbW9yeScsIHt9KTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2Vzc2lvbkNvdW50ID0gT2JqZWN0",
        "LmtleXMoc2Vzc2lvbk1lbW9yeSkubGVuZ3RoOw0KICAgICAgICAgICAgICAgICAgICBzZXNzaW9uc1N0YXRFbGVtZW50LnRleHRDb250ZW50ID0gc2Vzc2lvbkNvdW50Ow0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOmFjee9rue7n+iuoeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaYvuekuumAmuefpQ0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSDmtojmga/lhoXlrrkNCiAgICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHR5cGUg5raI5oGv57G75Z6LDQogICAgICAgICAqLw0KICAgICAgICBzaG93Tm90aWZpY2F0aW9uKG1lc3NhZ2UsIHR5cGUgPSAnaW5mbycpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5L2/55SoR01fbm90aWZpY2F0aW9u5aaC5p6c5Y+v55SoDQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBHTV9ub3RpZmljYXRpb24gIT09ICd1bmRlZmluZWQnKSB7DQogICAgICAgICAgICAgICAgICAgIEdNX25vdGlmaWNhdGlvbih7DQogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogQ09ORklHLkFQUF9OQU1FLA0KICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogbWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDMwMDANCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g6ZmN57qn5YiwY29uc29sZei+k+WHug0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgWyR7Q09ORklHLkFQUF9OQU1FfV0gJHttZXNzYWdlfWApOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOiusOW9leWIsOaXpeW/lyAtIOS/ruWkjUxvZ2dlcuiwg+eUqOmUmeivrw0KICAgICAgICAgICAgICAgIC8vIOWwhidzdWNjZXNzJ+exu+Wei+aYoOWwhOWIsCdpbmZvJ++8jOehruS/nUxvZ2dlcuaWueazleWtmOWcqA0KICAgICAgICAgICAgICAgIGNvbnN0IGxvZ2dlclR5cGUgPSB0eXBlID09PSAnc3VjY2VzcycgPyAnaW5mbycgOiB0eXBlOw0KICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgTG9nZ2VyW2xvZ2dlclR5cGVdID09PSAnZnVuY3Rpb24nKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlcltsb2dnZXJUeXBlXShtZXNzYWdlKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpznsbvlnovkuI3lrZjlnKjvvIzpu5jorqTkvb/nlKhpbmZvDQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKGBbJHt0eXBlfV0gJHttZXNzYWdlfWApOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAg",
        "ICBMb2dnZXIuZXJyb3IoJ+aYvuekuumAmuefpeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaYvuekui/pmpDol4/pnaLmnb8NCiAgICAgICAgICovDQogICAgICAgIHRvZ2dsZSgpIHsNCiAgICAgICAgICAgIGlmICh0aGlzLnBhbmVsKSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuaXNNaW5pbWl6ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5piv5pyA5bCP5YyW54q25oCB77yM5oGi5aSN5pi+56S6DQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVzdG9yZUZyb21NaW5pbWl6ZWQoKTsNCiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuaXNWaXNpYmxlKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr+aYvuekuueKtuaAge+8jOacgOWwj+WMlg0KICAgICAgICAgICAgICAgICAgICB0aGlzLm1pbmltaXplVG9GbG9hdCgpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr+makOiXj+eKtuaAge+8jOaYvuekug0KICAgICAgICAgICAgICAgICAgICB0aGlzLnBhbmVsLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmlzVmlzaWJsZSA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZENvbmZpZygpOyAvLyDliqDovb3miYDmnInphY3nva7ljIXmi6zmmbrog73ojrflrqLorr7nva4NCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVVSSgpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pi+56S65biu5Yqp5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICBzaG93SGVscCgpIHsNCiAgICAgICAgICAgIGNvbnN0IGhlbHBDb250ZW50ID0gYA0K8J+TliDlsI/nuqLkuaZBSeiHquWKqOWbnuWkjeW3peWFt+S9v+eUqOivtOaYjg0KDQrwn5qAIOW/q+mAn+W8gOWni++8mg0KMS4g54K55Ye7IuWxleW8gCLphY3nva5BUEnlr4bpkqXlkozlnLDlnYANCjIuIOeCueWHuyLmtYvor5VBUEki56Gu6K6k6L+e5o6l5q2j5bi4DQozLiDngrnlh7si5ZCv5Yqo6Ieq5Yqo5Zue5aSNIuW8gOWni+W3peS9nA0KDQrimpnvuI8g6YWN572u6K+05piO77yaDQrigKIgQVBJ5a+G6ZKl77ya5LuORmFzdEdQVOiOt+WPlueahEFQSeWvhumSpQ0K4oCiIEFQSeWcsOWdgO+8mkZhc3RHUFTnmoRBUEnnq6/ngrnlnLDlnYANCuKAoiDlm57lpI3lu7bov5/vvJrmr4/mrKHlm57lpI3pl7TnmoTnrYnlvoXml7bpl7TvvIjlu7rorq4zLTXnp5LvvIkNCuKAoiDns7vnu5/mj5DnpLror43vvJroh6rlrprkuYlBSeWbnuWkjeeahOmjjuagvOWSjOWGheWuuQ0KDQrwn46uIOW/q+aNt+mUru+8mg0K4oCiIEN0cmwrU2hpZnQrWO+8muaYvuekui/pmpDol4/mjqfliLbpnaLmnb8NCuKAoiBDdHJsK1NoaWZ0K1Pv",
        "vJrlkK/liqgv5YGc5q2i6Ieq5Yqo5Zue5aSNDQrigKIgQ3RybCtTaGlmdCtS77ya6YeN5ZCv5bqU55SoDQrigKIgQ3RybCtTaGlmdCtE77ya5YiH5o2i6LCD6K+V5qih5byPDQoNCvCfk4og54q25oCB6K+05piO77yaDQrigKIg6L+Q6KGM54q25oCB77ya5pi+56S65b2T5YmN5piv5ZCm5Zyo6Ieq5Yqo5Zue5aSNDQrigKIg5paw5raI5oGv77ya5qOA5rWL5Yiw55qE5pyq5aSE55CG5raI5oGv5pWw6YePDQrigKIg5bey5aSE55CG77ya57Sv6K6h5aSE55CG55qE5raI5oGv5pWw6YePDQoNCvCflKcg5pWF6Zqc5o6S6Zmk77yaDQrigKIg5aaC5p6c5qOA5rWL5LiN5Yiw5paw5raI5oGv77yM6K+35Yi35paw6aG16Z2iDQrigKIg5aaC5p6cQVBJ6LCD55So5aSx6LSl77yM6K+35qOA5p+l572R57uc5ZKM5a+G6ZKlDQrigKIg5aaC5p6c5Y+R6YCB5aSx6LSl77yM6K+35qOA5p+l6aG16Z2i5YWD57Sg5piv5ZCm5q2j5bi4DQoNCuKaoO+4jyDms6jmhI/kuovpobnvvJoNCuKAoiDor7flkIjnkIborr7nva7lm57lpI3lu7bov5/vvIzpgb/lhY3ooqvpmZDliLYNCuKAoiDlu7rorq7lrprmnJ/mo4Dmn6Xlm57lpI3otKjph48NCuKAoiDor7fpgbXlrojlubPlj7Dkvb/nlKjop4TojIMNCg0K54mI5pys77yaJHtDT05GSUcuVkVSU0lPTn0NCuS9nOiAhe+8mkNsYXVkZSA0LjAgc29ubmV0DQogICAgICAgICAgICBgOw0KDQogICAgICAgICAgICBhbGVydChoZWxwQ29udGVudCk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAgICAgLy8g6IGa5YWJ6L+b57q/55u45YWz5aSE55CG5pa55rOVDQogICAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuiBmuWFiei/m+e6v+mFjee9ruWMuuWfn+WxleW8gC/mlLbotbcNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRvZ2dsZVNwb3RsaWdodCgpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc3BvdGxpZ2h0LWNvbnRlbnQnKTsNCiAgICAgICAgICAgIGNvbnN0IGJ1dHRvbiA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtc3BvdGxpZ2h0Jyk7DQoNCiAgICAgICAgICAgIGlmIChjb250ZW50ICYmIGJ1dHRvbikgew0KICAgICAgICAgICAgICAgIGlmIChjb250ZW50LnN0eWxlLmRpc3BsYXkgPT09ICdub25lJykgew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOw0KICAgICAgICAgICAgICAgICAgICBidXR0b24udGV4dENvbnRlbnQgPSAn5pS26LW3JzsNCiAgICAgICAgICAgICAgICAgICAgLy8g5Yqg6L296YWN572uDQogICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZFNwb3RsaWdodENvbmZpZygpOw0KICAgICAgICAgICAgICAgICAgICAvLyDmm7TmlrDnu5/orqENCiAgICAgICAgICAgICAgICAgICAgdGhp",
        "cy51cGRhdGVTcG90bGlnaHRTdGF0cygpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJzsNCiAgICAgICAgICAgICAgICAgICAgYnV0dG9uLnRleHRDb250ZW50ID0gJ+WxleW8gCc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbogZrlhYnov5vnur/lip/og73lkK/nlKjnirbmgIHlj5jljJYNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVNwb3RsaWdodEVuYWJsZWRDaGFuZ2UoKSB7DQogICAgICAgICAgICBjb25zdCBjaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtZW5hYmxlZCcpOw0KICAgICAgICAgICAgaWYgKGNoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgLy8g5a6e5pe25pu05paw54q25oCB5pi+56S6DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTcG90bGlnaHRTdGF0cygpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6IGa5YWJ6L+b57q/5Yqf6IO954q25oCB5Y+Y5pu0JywgeyBlbmFibGVkOiBjaGVja2JveC5jaGVja2VkIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbkv53lrZjogZrlhYnov5vnur/phY3nva4NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGhhbmRsZVNhdmVTcG90bGlnaHQoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtZW5hYmxlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlVGV4dGFyZWEgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc3BvdGxpZ2h0LXRlbXBsYXRlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYWN0aXZlV2VsY29tZUNoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC1hY3RpdmUtd2VsY29tZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2ZUNvdXJzZUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC1hY3RpdmUtY291cnNlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVmYXVsdENvdXJzZUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC1kZWZhdWx0LWNvdXJzZScpOw0KDQogICAgICAgICAgICAgICAgaWYgKCFlbmFibGVkQ2hlY2tib3ggfHwgIXRlbXBsYXRlVGV4dGFyZWEgfHwgIWFjdGl2ZVdlbGNvbWVDaGVja2JveCB8fCAhYWN0aXZlQ291cnNlSW5wdXQgfHwgIWRlZmF1bHRDb3Vyc2VJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+iBmuWFiei/m+e6v+mFjee9ruWFg+e0",
        "oOacquaJvuWIsCcsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZCA9IGVuYWJsZWRDaGVja2JveC5jaGVja2VkOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlID0gdGVtcGxhdGVUZXh0YXJlYS52YWx1ZS50cmltKCk7DQogICAgICAgICAgICAgICAgY29uc3QgYWN0aXZlV2VsY29tZUVuYWJsZWQgPSBhY3RpdmVXZWxjb21lQ2hlY2tib3guY2hlY2tlZDsNCiAgICAgICAgICAgICAgICBjb25zdCBhY3RpdmVDb3Vyc2VOYW1lID0gYWN0aXZlQ291cnNlSW5wdXQudmFsdWUudHJpbSgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlZmF1bHRDb3Vyc2VOYW1lID0gZGVmYXVsdENvdXJzZUlucHV0LnZhbHVlLnRyaW0oKTsNCg0KICAgICAgICAgICAgICAgIGlmIChlbmFibGVkICYmICF0ZW1wbGF0ZSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ivt+i+k+WFpeiBmuWFiei/m+e6v+ivneacr+aooeadvycsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGFjdGl2ZVdlbGNvbWVFbmFibGVkICYmICFhY3RpdmVDb3Vyc2VOYW1lKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6K+36L6T5YWl5Li75Yqo6K+d5pyv6K++56iL5ZCN56ewJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoZW5hYmxlZCAmJiAhZGVmYXVsdENvdXJzZU5hbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfor7fovpPlhaXpu5jorqTor77nqIvlkI3np7AnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOS/neWtmOmFjee9rg0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdzcG90bGlnaHRMZWFkRW5hYmxlZCcsIGVuYWJsZWQpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdzcG90bGlnaHRMZWFkVGVtcGxhdGUnLCB0ZW1wbGF0ZSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ3Nwb3RsaWdodEFjdGl2ZVdlbGNvbWVFbmFibGVkJywgYWN0aXZlV2VsY29tZUVuYWJsZWQpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdzcG90bGlnaHRBY3RpdmVXZWxjb21lQ291cnNlTmFtZScsIGFjdGl2ZUNvdXJzZU5hbWUpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdzcG90bGlnaHREZWZhdWx0Q291cnNlTmFtZScsIGRlZmF1bHRDb3Vyc2VOYW1lKTsNCg0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6IGa5YWJ6L+b57q/6YWN",
        "572u5bey5L+d5a2YJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNwb3RsaWdodFN0YXRzKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+iBmuWFiei/m+e6v+mFjee9ruW3suabtOaWsCcsIHsNCiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZCwNCiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVMZW5ndGg6IHRlbXBsYXRlLmxlbmd0aCwNCiAgICAgICAgICAgICAgICAgICAgYWN0aXZlV2VsY29tZUVuYWJsZWQsDQogICAgICAgICAgICAgICAgICAgIGFjdGl2ZUNvdXJzZU5hbWUsDQogICAgICAgICAgICAgICAgICAgIGRlZmF1bHRDb3Vyc2VOYW1lDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfkv53lrZjogZrlhYnov5vnur/phY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5L+d5a2Y6IGa5YWJ6L+b57q/6YWN572u5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhua1i+ivleiBmuWFiei/m+e6v+ivneacrw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlVGVzdFNwb3RsaWdodCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVUZXh0YXJlYSA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtdGVtcGxhdGUnKTsNCiAgICAgICAgICAgICAgICBpZiAoIXRlbXBsYXRlVGV4dGFyZWEpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfor53mnK/mqKHmnb/lhYPntKDmnKrmib7liLAnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlID0gdGVtcGxhdGVUZXh0YXJlYS52YWx1ZS50cmltKCk7DQogICAgICAgICAgICAgICAgaWYgKCF0ZW1wbGF0ZSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ivt+WFiOi+k+WFpeivneacr+aooeadvycsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g55Sf5oiQ5rWL6K+V5Zue5aSNDQogICAgICAgICAgICAgICAgY29uc3QgZGVmYXVsdENvdXJzZU5hbWUgPSBDb25maWdNYW5hZ2VyLmdldCgnc3BvdGxpZ2h0RGVmYXVsdENvdXJzZU5hbWUnLCAn5oiR5Lus55qE6K++56iLJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdGVzdFJlcGx5ID0gU3BvdGxpZ2h0TGVhZFByb2Nlc3Nvci5nZW5lcmF0ZVJlcGx5KCfmtYvor5XnlKjmiLcnLCBkZWZhdWx0Q291cnNlTmFtZSk7DQoNCiAgICAgICAgICAg",
        "ICAgICAvLyDmmL7npLrmtYvor5Xnu5PmnpwNCiAgICAgICAgICAgICAgICBjb25zdCB0ZXN0UmVzdWx0ID0gYA0K5rWL6K+V6K+d5pyv6aKE6KeI77yaDQoNCiR7dGVzdFJlcGx5fQ0KDQrlj5jph4/mm7/mjaLor7TmmI7vvJoNCuKAoiB755So5oi35pi156ewfSDihpIg5rWL6K+V55So5oi3DQrigKIge+ivvueoi+WQjeensH0g4oaSICR7ZGVmYXVsdENvdXJzZU5hbWV9ICjkvb/nlKjpu5jorqTor77nqIvlkI3np7ApDQogICAgICAgICAgICAgICAgYDsNCg0KICAgICAgICAgICAgICAgIGFsZXJ0KHRlc3RSZXN1bHQpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6K+d5pyv5rWL6K+V5a6M5oiQJywgJ3N1Y2Nlc3MnKTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+a1i+ivleiBmuWFiei/m+e6v+ivneacr+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmtYvor5XogZrlhYnov5vnur/or53mnK/lpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5Yi35paw6IGa5YWJ6L+b57q/57uf6K6hDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVSZWZyZXNoU3BvdGxpZ2h0U3RhdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU3BvdGxpZ2h0U3RhdHMoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+iBmuWFiei/m+e6v+e7n+iuoeW3suWIt+aWsCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Yi35paw6IGa5YWJ6L+b57q/57uf6K6h5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WIt+aWsOiBmuWFiei/m+e6v+e7n+iuoeWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmuIXnqbrogZrlhYnov5vnur/nvJPlrZgNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUNsZWFyU3BvdGxpZ2h0Q2FjaGUoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmIChjb25maXJtKCfnoa7lrpropoHmuIXnqbrogZrlhYnov5vnur/lpITnkIbnvJPlrZjlkJfvvJ/muIXnqbrlkI7lt7LlpITnkIbnmoTov5vnur/lj6/og73kvJrph43lpI3lm57lpI3jgIInKSkgew0KICAgICAgICAgICAgICAgICAgICBTcG90bGlnaHRMZWFkUHJvY2Vzc29yLnByb2Nlc3NlZExlYWRzLmNsZWFyKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU3BvdGxpZ2h0U3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5z",
        "aG93Tm90aWZpY2F0aW9uKCfogZrlhYnov5vnur/nvJPlrZjlt7LmuIXnqbonLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6IGa5YWJ6L+b57q/57yT5a2Y5bey5riF56m6Jyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+a4heepuuiBmuWFiei/m+e6v+e8k+WtmOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmuIXnqbrogZrlhYnov5vnur/nvJPlrZjlpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yqg6L296IGa5YWJ6L+b57q/6YWN572uDQogICAgICAgICAqLw0KICAgICAgICBsb2FkU3BvdGxpZ2h0Q29uZmlnKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc3BvdGxpZ2h0LWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZVRleHRhcmVhID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNwb3RsaWdodC10ZW1wbGF0ZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2ZVdlbGNvbWVDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtYWN0aXZlLXdlbGNvbWUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhY3RpdmVDb3Vyc2VJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtYWN0aXZlLWNvdXJzZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlZmF1bHRDb3Vyc2VJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zcG90bGlnaHQtZGVmYXVsdC1jb3Vyc2UnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChlbmFibGVkQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZENoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnc3BvdGxpZ2h0TGVhZEVuYWJsZWQnLCBmYWxzZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHRlbXBsYXRlVGV4dGFyZWEpIHsNCiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVUZXh0YXJlYS52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdzcG90bGlnaHRMZWFkVGVtcGxhdGUnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5zcG90bGlnaHRMZWFkVGVtcGxhdGUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChhY3RpdmVXZWxjb21lQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgYWN0aXZlV2VsY29tZUNoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnc3BvdGxpZ2h0QWN0aXZlV2Vs",
        "Y29tZUVuYWJsZWQnLCBmYWxzZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGFjdGl2ZUNvdXJzZUlucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIGFjdGl2ZUNvdXJzZUlucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ3Nwb3RsaWdodEFjdGl2ZVdlbGNvbWVDb3Vyc2VOYW1lJywgJ+aIkeS7rOeahOivvueoiycpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChkZWZhdWx0Q291cnNlSW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdENvdXJzZUlucHV0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ3Nwb3RsaWdodERlZmF1bHRDb3Vyc2VOYW1lJywgJ+aIkeS7rOeahOivvueoiycpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6IGa5YWJ6L+b57q/6YWN572u5bey5Yqg6L29Jyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Yqg6L296IGa5YWJ6L+b57q/6YWN572u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgICAgICAvLyDlg7XlsLjmnKror7vlpITnkIbnm7jlhbPmlrnms5UNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5YO15bC45pyq6K+76YWN572u5Yy65Z+f5bGV5byAL+aUtui1tw0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlVG9nZ2xlWm9tYmllKCkgew0KICAgICAgICAgICAgY29uc3QgY29udGVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS16b21iaWUtY29udGVudCcpOw0KICAgICAgICAgICAgY29uc3QgYnV0dG9uID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS16b21iaWUnKTsNCg0KICAgICAgICAgICAgaWYgKGNvbnRlbnQgJiYgYnV0dG9uKSB7DQogICAgICAgICAgICAgICAgY29uc3QgaXNWaXNpYmxlID0gY29udGVudC5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZSc7DQogICAgICAgICAgICAgICAgaWYgKGlzVmlzaWJsZSkgew0KICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7DQogICAgICAgICAgICAgICAgICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9ICflsZXlvIAnOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7DQogICAgICAgICAgICAgICAgICAgIGJ1dHRvbi50ZXh0Q29udGVudCA9ICfmlLbotbcnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5YO15bC45pyq6K+7",
        "5Yqf6IO95ZCv55So54q25oCB5Y+Y5YyWDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVab21iaWVFbmFibGVkQ2hhbmdlKCkgew0KICAgICAgICAgICAgY29uc3QgY2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktem9tYmllLWVuYWJsZWQnKTsNCiAgICAgICAgICAgIGlmIChjaGVja2JveCkgew0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlWm9tYmllU3RhdHMoKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WDteWwuOacquivu+WkhOeQhuWKn+iDveeKtuaAgeWPmOabtCcsIHsgZW5hYmxlZDogY2hlY2tib3guY2hlY2tlZCB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5L+d5a2Y5YO15bC45pyq6K+76YWN572uDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVTYXZlWm9tYmllKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktem9tYmllLWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBjb29sZG93bklucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXpvbWJpZS1jb29sZG93bicpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlYnVnQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktem9tYmllLWRlYnVnJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYXV0b0NsZWFudXBDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS16b21iaWUtYXV0by1jbGVhbnVwJyk7DQogICAgICAgICAgICAgICAgY29uc3QgY2xlYW51cERheXNJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS16b21iaWUtY2xlYW51cC1kYXlzJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWVuYWJsZWRDaGVja2JveCB8fCAhY29vbGRvd25JbnB1dCB8fCAhZGVidWdDaGVja2JveCB8fCAhYXV0b0NsZWFudXBDaGVja2JveCB8fCAhY2xlYW51cERheXNJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WDteWwuOacquivu+mFjee9ruWFg+e0oOacquaJvuWIsCcsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZCA9IGVuYWJsZWRDaGVja2JveC5jaGVja2VkOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvb2xkb3duTWludXRlcyA9IHBhcnNlSW50KGNvb2xkb3duSW5wdXQudmFsdWUpIHx8IDYwOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlYnVnTW9kZSA9IGRlYnVnQ2hlY2tib3guY2hlY2tlZDsNCiAgICAgICAgICAgICAgICBjb25zdCBhdXRvQ2xlYW51cCA9IGF1dG9DbGVhbnVwQ2hlY2tib3guY2hlY2tlZDsNCiAgICAgICAgICAgICAg",
        "ICBjb25zdCBjbGVhbnVwRGF5cyA9IHBhcnNlSW50KGNsZWFudXBEYXlzSW5wdXQudmFsdWUpIHx8IDc7DQoNCiAgICAgICAgICAgICAgICAvLyDpqozor4HovpPlhaUNCiAgICAgICAgICAgICAgICBpZiAoY29vbGRvd25NaW51dGVzIDwgNSB8fCBjb29sZG93bk1pbnV0ZXMgPiAxNDQwKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Ya35Y205pe26Ze05b+F6aG75ZyoNS0xNDQw5YiG6ZKf5LmL6Ze0JywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoY2xlYW51cERheXMgPCAxIHx8IGNsZWFudXBEYXlzID4gMzApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmuIXnkIblpKnmlbDlv4XpobvlnKgxLTMw5aSp5LmL6Ze0JywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkv53lrZjphY3nva4NCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnem9tYmllVW5yZWFkRW5hYmxlZCcsIGVuYWJsZWQpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCd6b21iaWVVbnJlYWRDb29sZG93bk1pbnV0ZXMnLCBjb29sZG93bk1pbnV0ZXMpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCd6b21iaWVVbnJlYWREZWJ1Z01vZGUnLCBkZWJ1Z01vZGUpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCd6b21iaWVVbnJlYWRBdXRvQ2xlYW51cCcsIGF1dG9DbGVhbnVwKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnem9tYmllVW5yZWFkQ2xlYW51cERheXMnLCBjbGVhbnVwRGF5cyk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WDteWwuOacquivu+mFjee9ruW3suS/neWtmCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVab21iaWVTdGF0cygpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflg7XlsLjmnKror7vphY3nva7lt7Lmm7TmlrAnLCB7DQogICAgICAgICAgICAgICAgICAgIGVuYWJsZWQsDQogICAgICAgICAgICAgICAgICAgIGNvb2xkb3duTWludXRlcywNCiAgICAgICAgICAgICAgICAgICAgZGVidWdNb2RlLA0KICAgICAgICAgICAgICAgICAgICBhdXRvQ2xlYW51cCwNCiAgICAgICAgICAgICAgICAgICAgY2xlYW51cERheXMNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S/neWtmOWDteWwuOacquivu+mFjee9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfkv53lrZjlg7XlsLjmnKror7vphY3nva7lpLHotKUnLCAnZXJy",
        "b3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5Yi35paw5YO15bC45pyq6K+757uf6K6hDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVSZWZyZXNoWm9tYmllU3RhdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlWm9tYmllU3RhdHMoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WDteWwuOacquivu+e7n+iuoeW3suWIt+aWsCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Yi35paw5YO15bC45pyq6K+757uf6K6h5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WIt+aWsOWDteWwuOacquivu+e7n+iuoeWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmuIXnqbrlg7XlsLjmnKror7vorrDlvZUNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUNsZWFyWm9tYmllUmVjb3JkcygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKGNvbmZpcm0oJ+ehruWumuimgea4heepuuaJgOacieWDteWwuOacquivu+iusOW9leWQl++8n+atpOaTjeS9nOS4jeWPr+aSpOmUgOOAgicpKSB7DQogICAgICAgICAgICAgICAgICAgIFpvbWJpZVVucmVhZE1hbmFnZXIucmVzZXQoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVab21iaWVTdGF0cygpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WDteWwuOacquivu+iusOW9leW3sua4heepuicsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflg7XlsLjmnKror7vorrDlvZXlt7LmuIXnqbonKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5riF56m65YO15bC45pyq6K+76K6w5b2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+a4heepuuWDteWwuOacquivu+iusOW9leWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliqDovb3lg7XlsLjmnKror7vphY3nva4NCiAgICAgICAgICovDQogICAgICAgIGxvYWRab21iaWVDb25maWcoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS16b21iaWUtZW5hYmxlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvb2xkb3duSW5wdXQgPSB0aGlz",
        "LnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktem9tYmllLWNvb2xkb3duJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVidWdDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS16b21iaWUtZGVidWcnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhdXRvQ2xlYW51cENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXpvbWJpZS1hdXRvLWNsZWFudXAnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBjbGVhbnVwRGF5c0lucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXpvbWJpZS1jbGVhbnVwLWRheXMnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChlbmFibGVkQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZENoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnem9tYmllVW5yZWFkRW5hYmxlZCcsIHRydWUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChjb29sZG93bklucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIGNvb2xkb3duSW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnem9tYmllVW5yZWFkQ29vbGRvd25NaW51dGVzJywgNjApOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChkZWJ1Z0NoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIGRlYnVnQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCd6b21iaWVVbnJlYWREZWJ1Z01vZGUnLCBmYWxzZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGF1dG9DbGVhbnVwQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgYXV0b0NsZWFudXBDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ3pvbWJpZVVucmVhZEF1dG9DbGVhbnVwJywgdHJ1ZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGNsZWFudXBEYXlzSW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgY2xlYW51cERheXNJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCd6b21iaWVVbnJlYWRDbGVhbnVwRGF5cycsIDcpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOe7n+iuoeS/oeaBrw0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlWm9tYmllU3RhdHMoKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5YO15bC45pyq6K+76YWN572u5bey5Yqg6L29Jyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Yqg6L295YO15bC45pyq6K+76YWN572u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw5YO15bC45pyq6K+757uf6K6h5L+h5oGvDQogICAgICAgICAqLw0K",
        "ICAgICAgICB1cGRhdGVab21iaWVTdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc3RhdHMgPSBab21iaWVVbnJlYWRNYW5hZ2VyLmdldFN0YXRzKCk7DQogICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCd6b21iaWVVbnJlYWRFbmFibGVkJywgdHJ1ZSk7DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDnirbmgIHmmL7npLoNCiAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXNFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXpvbWJpZS1zdGF0dXMnKTsNCiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBzdGF0dXNFbGVtZW50LnRleHRDb250ZW50ID0gZW5hYmxlZCA/ICflt7LlkK/nlKgnIDogJ+W3suemgeeUqCc7DQogICAgICAgICAgICAgICAgICAgIHN0YXR1c0VsZW1lbnQuc3R5bGUuY29sb3IgPSBlbmFibGVkID8gJyMyZWQ1NzMnIDogJyNmZjQ3NTcnOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOe7n+iuoeaVsOaNrg0KICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS16b21iaWUtdG90YWwnKTsNCiAgICAgICAgICAgICAgICBpZiAodG90YWxFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsRWxlbWVudC50ZXh0Q29udGVudCA9IHN0YXRzLnRvdGFsUmVjb3JkczsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBjb29sZG93bkNvdW50RWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS16b21iaWUtY29vbGRvd24tY291bnQnKTsNCiAgICAgICAgICAgICAgICBpZiAoY29vbGRvd25Db3VudEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29vbGRvd25Db3VudEVsZW1lbnQudGV4dENvbnRlbnQgPSBzdGF0cy5pbkNvb2xkb3duOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHByb2Nlc3Nlc0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktem9tYmllLXByb2Nlc3NlcycpOw0KICAgICAgICAgICAgICAgIGlmIChwcm9jZXNzZXNFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHByb2Nlc3Nlc0VsZW1lbnQudGV4dENvbnRlbnQgPSBzdGF0cy50b3RhbFByb2Nlc3NlczsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WDteWwuOacquivu+e7n+iuoeS/oeaBr+W3suabtOaWsCcsIHN0YXRzKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmm7TmlrDlg7XlsLjmnKror7vnu5/orqHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAg",
        "ICB9LA0KDQogICAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgICAgIC8vIOmUmeivr+aOqOmAgeWKn+iDveebuOWFs+WkhOeQhuaWueazlQ0KICAgICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbplJnor6/mjqjpgIHlip/og73lsZXlvIAv5pS26LW3DQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVUb2dnbGVFcnJvck5vdGlmaWNhdGlvbigpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgY29udGVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1ub3RpZmljYXRpb24tY29udGVudCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtZXJyb3Itbm90aWZpY2F0aW9uJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoY29udGVudCAmJiBidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNWaXNpYmxlID0gY29udGVudC5zdHlsZS5kaXNwbGF5ICE9PSAnbm9uZSc7DQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQuc3R5bGUuZGlzcGxheSA9IGlzVmlzaWJsZSA/ICdub25lJyA6ICdibG9jayc7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9IGlzVmlzaWJsZSA/ICflsZXlvIAnIDogJ+aUtui1tyc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WIh+aNoumUmeivr+aOqOmAgemFjee9ruaYvuekuuWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhumUmeivr+aOqOmAgeWKn+iDveWQr+eUqOeKtuaAgeWPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlRXJyb3JOb3RpZmljYXRpb25FbmFibGVkQ2hhbmdlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzZXR0aW5nc0RpdiA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1ub3RpZmljYXRpb24tc2V0dGluZ3MnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChlbmFibGVkQ2hlY2tib3ggJiYgc2V0dGluZ3NEaXYpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZCA9IGVuYWJsZWRDaGVja2JveC5jaGVja2VkOw0KICAgICAgICAgICAgICAgICAgICBzZXR0aW5nc0Rpdi5zdHlsZS5kaXNwbGF5ID0gZW5hYmxlZCA/ICdibG9jaycgOiAnbm9uZSc7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g6Ieq5Yqo5L+d",
        "5a2Y5ZCv55So54q25oCBDQogICAgICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdlcnJvck5vdGlmaWNhdGlvbkVuYWJsZWQnLCBlbmFibGVkKTsNCg0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUVycm9yTm90aWZpY2F0aW9uU3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfplJnor6/mjqjpgIHlip/og73nirbmgIHlt7Lmm7TmlLknLCB7IGVuYWJsZWQgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WkhOeQhumUmeivr+aOqOmAgeWQr+eUqOeKtuaAgeWPmOWMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuS/neWtmOmUmeivr+aOqOmAgemFjee9rg0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlU2F2ZUVycm9yTm90aWZpY2F0aW9uKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDojrflj5bphY3nva7lhYPntKANCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhcGlLZXlJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1ub3RpZmljYXRpb24tYXBpLWtleScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNoYW5uZWxzU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1jaGFubmVscycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHJhdGVMaW1pdElucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLXJhdGUtbGltaXQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkZWR1cGxpY2F0aW9uQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItZGVkdXBsaWNhdGlvbicpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlZHVwbGljYXRpb25XaW5kb3dJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1kZWR1cGxpY2F0aW9uLXdpbmRvdycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRlc3RNb2RlQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItdGVzdC1tb2RlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVUZXh0YXJlYSA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci10ZW1wbGF0ZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGluY2x1ZGVLZXl3b3Jkc0lucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLWluY2x1ZGUt",
        "a2V5d29yZHMnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBleGNsdWRlS2V5d29yZHNJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1leGNsdWRlLWtleXdvcmRzJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWVuYWJsZWRDaGVja2JveCB8fCAhYXBpS2V5SW5wdXQgfHwgIWNoYW5uZWxzU2VsZWN0IHx8ICFyYXRlTGltaXRJbnB1dCB8fA0KICAgICAgICAgICAgICAgICAgICAhZGVkdXBsaWNhdGlvbkNoZWNrYm94IHx8ICFkZWR1cGxpY2F0aW9uV2luZG93SW5wdXQgfHwgIXRlc3RNb2RlQ2hlY2tib3ggfHwNCiAgICAgICAgICAgICAgICAgICAgIXRlbXBsYXRlVGV4dGFyZWEgfHwgIWluY2x1ZGVLZXl3b3Jkc0lucHV0IHx8ICFleGNsdWRlS2V5d29yZHNJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+mUmeivr+aOqOmAgemFjee9ruWFg+e0oOacquaJvuWIsCcsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6I635Y+W6ZSZ6K+v57qn5YirDQogICAgICAgICAgICAgICAgY29uc3QgZXJyb3JMZXZlbHMgPSBbXTsNCiAgICAgICAgICAgICAgICBjb25zdCBlcnJvckNoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLWxldmVsLWVycm9yJyk7DQogICAgICAgICAgICAgICAgY29uc3Qgd2FybkNoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLWxldmVsLXdhcm4nKTsNCiAgICAgICAgICAgICAgICBjb25zdCBpbmZvQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItbGV2ZWwtaW5mbycpOw0KDQogICAgICAgICAgICAgICAgaWYgKGVycm9yQ2hlY2tib3ggJiYgZXJyb3JDaGVja2JveC5jaGVja2VkKSBlcnJvckxldmVscy5wdXNoKCdlcnJvcicpOw0KICAgICAgICAgICAgICAgIGlmICh3YXJuQ2hlY2tib3ggJiYgd2FybkNoZWNrYm94LmNoZWNrZWQpIGVycm9yTGV2ZWxzLnB1c2goJ3dhcm4nKTsNCiAgICAgICAgICAgICAgICBpZiAoaW5mb0NoZWNrYm94ICYmIGluZm9DaGVja2JveC5jaGVja2VkKSBlcnJvckxldmVscy5wdXNoKCdpbmZvJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDojrflj5bpgInkuK3nmoTmjqjpgIHmuKDpgZMNCiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RlZENoYW5uZWxzID0gQXJyYXkuZnJvbShjaGFubmVsc1NlbGVjdC5zZWxlY3RlZE9wdGlvbnMpLm1hcChvcHRpb24gPT4gb3B0aW9uLnZhbHVlKTsNCg0KICAgICAgICAgICAgICAgIC8vIOmqjOivgemFjee9rg0KICAgICAgICAgICAgICAgIGlmIChlbmFibGVkQ2hlY2tib3guY2hlY2tlZCkgew0KICAgICAgICAgICAgICAgICAgICBpZiAoIWFwaUtleUlucHV0LnZhbHVlLnRyaW0oKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90",
        "aWZpY2F0aW9uKCfor7fovpPlhaVBUEnlr4bpkqUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3RlZENoYW5uZWxzLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfor7foh7PlsJHpgInmi6nkuIDkuKrmjqjpgIHmuKDpgZMnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIGlmIChlcnJvckxldmVscy5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6K+36Iez5bCR6YCJ5oup5LiA5Liq6ZSZ6K+v57qn5YirJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBjb25zdCByYXRlTGltaXQgPSBwYXJzZUludChyYXRlTGltaXRJbnB1dC52YWx1ZSk7DQogICAgICAgICAgICAgICAgICAgIGlmIChpc05hTihyYXRlTGltaXQpIHx8IHJhdGVMaW1pdCA8IDEgfHwgcmF0ZUxpbWl0ID4gMjApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5o6o6YCB6aKR546H6ZmQ5Yi25b+F6aG75ZyoMS0yMOS5i+mXtCcsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVkdXBsaWNhdGlvbldpbmRvdyA9IHBhcnNlSW50KGRlZHVwbGljYXRpb25XaW5kb3dJbnB1dC52YWx1ZSk7DQogICAgICAgICAgICAgICAgICAgIGlmIChpc05hTihkZWR1cGxpY2F0aW9uV2luZG93KSB8fCBkZWR1cGxpY2F0aW9uV2luZG93IDwgMSB8fCBkZWR1cGxpY2F0aW9uV2luZG93ID4gNjApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Y676YeN5pe26Ze056qX5Y+j5b+F6aG75ZyoMS02MOWIhumSn+S5i+mXtCcsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5L+d5a2Y6YWN572uDQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2Vycm9yTm90aWZpY2F0aW9uRW5hYmxlZCcsIGVuYWJsZWRDaGVja2JveC5jaGVja2VkKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZXJyb3JOb3RpZmljYXRpb25BcGlLZXknLCBhcGlLZXlJbnB1dC52YWx1ZS50cmltKCkpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdlcnJvck5vdGlmaWNhdGlvbkNoYW5uZWxzJywgc2VsZWN0ZWRDaGFubmVscy5qb2lu",
        "KCcsJykpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdlcnJvck5vdGlmaWNhdGlvbkxldmVscycsIGVycm9yTGV2ZWxzLmpvaW4oJywnKSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2Vycm9yTm90aWZpY2F0aW9uUmF0ZUxpbWl0JywgcGFyc2VJbnQocmF0ZUxpbWl0SW5wdXQudmFsdWUpKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZXJyb3JOb3RpZmljYXRpb25EZWR1cGxpY2F0aW9uJywgZGVkdXBsaWNhdGlvbkNoZWNrYm94LmNoZWNrZWQpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdlcnJvck5vdGlmaWNhdGlvbkRlZHVwbGljYXRpb25XaW5kb3cnLCBwYXJzZUludChkZWR1cGxpY2F0aW9uV2luZG93SW5wdXQudmFsdWUpKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZXJyb3JOb3RpZmljYXRpb25UZXN0TW9kZScsIHRlc3RNb2RlQ2hlY2tib3guY2hlY2tlZCk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2Vycm9yTm90aWZpY2F0aW9uVGVtcGxhdGUnLCB0ZW1wbGF0ZVRleHRhcmVhLnZhbHVlLnRyaW0oKSk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2Vycm9yTm90aWZpY2F0aW9uS2V5d29yZHMnLCBpbmNsdWRlS2V5d29yZHNJbnB1dC52YWx1ZS50cmltKCkpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdlcnJvck5vdGlmaWNhdGlvbkV4Y2x1ZGVLZXl3b3JkcycsIGV4Y2x1ZGVLZXl3b3Jkc0lucHV0LnZhbHVlLnRyaW0oKSk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+mUmeivr+aOqOmAgemFjee9ruW3suS/neWtmCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVFcnJvck5vdGlmaWNhdGlvblN0YXRzKCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+mUmeivr+aOqOmAgemFjee9ruW3suabtOaWsCcpOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5L+d5a2Y6ZSZ6K+v5o6o6YCB6YWN572u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+S/neWtmOmUmeivr+aOqOmAgemFjee9ruWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmtYvor5XplJnor6/mjqjpgIENCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGhhbmRsZVRlc3RFcnJvck5vdGlmaWNhdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10ZXN0LWVycm9yLW5vdGlmaWNhdGlvbicpOw0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAg",
        "ICAgICAgYnRuLmRpc2FibGVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+a1i+ivleS4rS4uLic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmraPlnKjlj5HpgIHmtYvor5XmjqjpgIEuLi4nLCAnaW5mbycpOw0KDQogICAgICAgICAgICAgICAgLy8g55u05o6l6LCD55So5o6o6YCB77yM5LiN6YCa6L+HTG9nZ2Vy57O757uf77yI6YG/5YWN5b6q546v77yJDQogICAgICAgICAgICAgICAgY29uc3QgdGVzdENvbnRlbnQgPSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICfwn6eqIOi/meaYr+S4gOadoea1i+ivleaOqOmAgea2iOaBr++8jOeUqOS6jumqjOivgeaOqOmAgeWKn+iDveaYr+WQpuato+W4uOW3peS9nOOAglxuXG7ij7Ag5rWL6K+V5pe26Ze077yaJyArIG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoJ3poLUNOJykgKyAnXG7wn5OxIOWmguaenOaCqOaUtuWIsOatpOa2iOaBr++8jOivtOaYjuaOqOmAgeWKn+iDvemFjee9ruato+ehru+8gScsDQogICAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5o6o6YCB5Yqf6IO95rWL6K+VJywNCiAgICAgICAgICAgICAgICAgICAgZnJvbTogJ+Wwj+e6ouS5pkFJ6Ieq5Yqo5Zue5aSN5bel5YW3Jw0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAvLyDlhYjlsJ3or5VQT1NU5pa55byPDQogICAgICAgICAgICAgICAgbGV0IHN1Y2Nlc3MgPSBhd2FpdCBFcnJvck5vdGlmaWNhdGlvbk1hbmFnZXIuc2VuZFB1c2hSZXF1ZXN0KHRlc3RDb250ZW50KTsNCg0KICAgICAgICAgICAgICAgIGlmICghc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+UhCBQT1NU5rWL6K+V5aSx6LSl77yM5bCd6K+VR0VU5pa55byPJyk7DQogICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3MgPSBhd2FpdCBFcnJvck5vdGlmaWNhdGlvbk1hbmFnZXIuc2VuZFB1c2hSZXF1ZXN0VmlhR2V0KHRlc3RDb250ZW50KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+KchSDmtYvor5XmjqjpgIHlj5HpgIHmiJDlip/vvIHor7fmo4Dmn6XmgqjnmoTmjqXmlLborr7lpIcnLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUVycm9yTm90aWZpY2F0aW9uU3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ/Cfp6og5o6o6YCB5Yqf6IO95rWL6K+V5oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfinYwg5rWL6K+V5o6o6YCB5Y+R6YCB5aSx6LSl77yM6K+35qOA5p+l6YWN572uJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfwn6eqIOaOqOmAgeWKn+iD",
        "vea1i+ivleWksei0pScpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+a1i+ivlemUmeivr+aOqOmAgeW8guW4uCcsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfinYwg5rWL6K+V5o6o6YCB5byC5bi4OiAnICsgZXJyb3IubWVzc2FnZSwgJ2Vycm9yJyk7DQogICAgICAgICAgICB9IGZpbmFsbHkgew0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfmtYvor5XmjqjpgIEnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5Yi35paw6ZSZ6K+v5o6o6YCB57uf6K6hDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVSZWZyZXNoRXJyb3JTdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVFcnJvck5vdGlmaWNhdGlvblN0YXRzKCk7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVFcnJvck5vdGlmaWNhdGlvbkhpc3RvcnkoKTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+mUmeivr+aOqOmAgee7n+iuoeW3suWIt+aWsCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Yi35paw6ZSZ6K+v5o6o6YCB57uf6K6h5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WIt+aWsOe7n+iuoeWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmuIXnqbrplJnor6/mjqjpgIHljoblj7INCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUNsZWFyRXJyb3JIaXN0b3J5KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoY29uZmlybSgn56Gu5a6a6KaB5riF56m66ZSZ6K+v5o6o6YCB5Y6G5Y+y6K6w5b2V5ZCX77yf5q2k5pON5L2c5LiN5Y+v5pKk6ZSA44CCJykpIHsNCiAgICAgICAgICAgICAgICAgICAgRXJyb3JOb3RpZmljYXRpb25NYW5hZ2VyLmNsZWFyUHVzaEhpc3RvcnkoKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVFcnJvck5vdGlmaWNhdGlvblN0YXRzKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlRXJyb3JOb3RpZmljYXRpb25IaXN0b3J5KCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6ZSZ6K+v5o6o6YCB5Y6G5Y+y5bey5riF56m6JywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAg",
        "ICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5riF56m66ZSZ6K+v5o6o6YCB5Y6G5Y+y5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+a4heepuuWOhuWPsuWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgICAgIC8vIOi/veeyieWKn+iDveebuOWFs+WkhOeQhuaWueazlQ0KICAgICAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbov73nsonlip/og73lsZXlvIAv5pS26LW3DQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVUb2dnbGVGb2xsb3dVcCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgY29udGVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1jb250ZW50Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS1mb2xsb3d1cCcpOw0KDQogICAgICAgICAgICAgICAgaWYgKGNvbnRlbnQgJiYgYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzVmlzaWJsZSA9IGNvbnRlbnQuc3R5bGUuZGlzcGxheSAhPT0gJ25vbmUnOw0KICAgICAgICAgICAgICAgICAgICBjb250ZW50LnN0eWxlLmRpc3BsYXkgPSBpc1Zpc2libGUgPyAnbm9uZScgOiAnYmxvY2snOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSBpc1Zpc2libGUgPyAn5bGV5byAJyA6ICfmlLbotbcnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliIfmjaLov73nsonphY3nva7mmL7npLrlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbov73nsonlip/og73lkK/nlKjnirbmgIHlj5jljJYNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUZvbGxvd1VwRW5hYmxlZENoYW5nZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzZXR0aW5nc0RpdiA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1zZXR0aW5ncycpOw0KDQogICAgICAgICAgICAgICAgaWYgKGVuYWJsZWRDaGVja2JveCAmJiBzZXR0aW5nc0Rpdikgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkID0g",
        "ZW5hYmxlZENoZWNrYm94LmNoZWNrZWQ7DQogICAgICAgICAgICAgICAgICAgIHNldHRpbmdzRGl2LnN0eWxlLmRpc3BsYXkgPSBlbmFibGVkID8gJ2Jsb2NrJyA6ICdub25lJzsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDoh6rliqjkv53lrZjlkK/nlKjnirbmgIENCiAgICAgICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2ZvbGxvd1VwRW5hYmxlZCcsIGVuYWJsZWQpOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOabtOaWsOi/veeyieeuoeeQhuWZqOeKtuaAgQ0KICAgICAgICAgICAgICAgICAgICBpZiAoZW5hYmxlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgRm9sbG93VXBNYW5hZ2VyLnN0YXJ0KCk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcE1hbmFnZXIuc3RvcCgpOw0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVGb2xsb3dVcFN0YXRzKCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonlip/og73nirbmgIHlt7Lmm7TmlrAnLCB7IGVuYWJsZWQgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOi/veeyieWKn+iDveeKtuaAgeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhumaj+acuuW7tui/n+iuvue9ruWPmOWMlg0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlRm9sbG93VXBSYW5kb21EZWxheUNoYW5nZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgcmFuZG9tRGVsYXlDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1yYW5kb20tZGVsYXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkZWxheVNldHRpbmdzRGl2ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWRlbGF5LXNldHRpbmdzJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAocmFuZG9tRGVsYXlDaGVja2JveCAmJiBkZWxheVNldHRpbmdzRGl2KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGVuYWJsZWQgPSByYW5kb21EZWxheUNoZWNrYm94LmNoZWNrZWQ7DQogICAgICAgICAgICAgICAgICAgIGRlbGF5U2V0dGluZ3NEaXYuc3R5bGUuZGlzcGxheSA9IGVuYWJsZWQgPyAnYmxvY2snIDogJ25vbmUnOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmm7TmlrDpmo/mnLrlu7bov5/orr7nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0K",
        "ICAgICAgICAgKiDlpITnkIboh6rliqjorrDlvZXorr7nva7lj5jljJYNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUZvbGxvd1VwQXV0b1JlY29yZENoYW5nZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYXV0b1JlY29yZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWF1dG8tcmVjb3JkJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYXV0b1JlY29yZFNldHRpbmdzRGl2ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWF1dG8tcmVjb3JkLXNldHRpbmdzJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoYXV0b1JlY29yZENoZWNrYm94ICYmIGF1dG9SZWNvcmRTZXR0aW5nc0Rpdikgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkID0gYXV0b1JlY29yZENoZWNrYm94LmNoZWNrZWQ7DQogICAgICAgICAgICAgICAgICAgIGF1dG9SZWNvcmRTZXR0aW5nc0Rpdi5zdHlsZS5kaXNwbGF5ID0gZW5hYmxlZCA/ICdibG9jaycgOiAnbm9uZSc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOiHquWKqOiusOW9leiuvue9ruWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuS/neWtmOi/veeyiemFjee9rg0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlU2F2ZUZvbGxvd1VwKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDojrflj5bmiYDmnInphY3nva7lhYPntKANCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtZW5hYmxlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNjYW5EYXlzU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXNjYW4tZGF5cycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGludGVydmFsU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWludGVydmFsJyk7DQogICAgICAgICAgICAgICAgY29uc3QgbWF4Q291bnRTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtbWF4LWNvdW50Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGFpbHlMaW1pdElucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWRhaWx5LWxpbWl0Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgYmF0Y2hTaXplSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtYmF0Y2gtc2l6ZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IG1hbnVhbEJh",
        "dGNoU2l6ZUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLW1hbnVhbC1iYXRjaC1zaXplJyk7DQogICAgICAgICAgICAgICAgY29uc3QgbWF4RW1wdHlTY2Fuc0lucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLW1heC1lbXB0eS1zY2FucycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHJhbmRvbURlbGF5Q2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtcmFuZG9tLWRlbGF5Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgbWluRGVsYXlJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1taW4tZGVsYXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCBtYXhEZWxheUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLW1heC1kZWxheScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGF1dG9SZWNvcmRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1hdXRvLXJlY29yZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGF1dG9SZWNvcmREZWxheUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWF1dG8tcmVjb3JkLWRlbGF5Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVNb2RlU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlLW1vZGUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZVRleHRhcmVhcyA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvckFsbCgnLnhocy1haS1mb2xsb3d1cC10ZW1wbGF0ZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFwaUxlYWRzQ2hlY2tDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1hcGktbGVhZHMtY2hlY2snKTsNCiAgICAgICAgICAgICAgICBjb25zdCByZWFsdGltZUxlYWRzQ2hlY2tDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1yZWFsdGltZS1sZWFkcy1jaGVjaycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlZXBMZWFkc0NoZWNrQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtZGVlcC1sZWFkcy1jaGVjaycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNhY2hlVGltZVNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1jYWNoZS10aW1lJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWVuYWJsZWRDaGVja2JveCB8fCAhc2NhbkRheXNTZWxlY3QgfHwgIWludGVydmFsU2VsZWN0IHx8ICFtYXhDb3VudFNlbGVjdCB8fA0KICAgICAgICAgICAgICAgICAgICAhZGFpbHlMaW1pdElucHV0IHx8ICFiYXRjaFNpemVJbnB1dCB8fCAhbWFudWFs",
        "QmF0Y2hTaXplSW5wdXQgfHwgIW1heEVtcHR5U2NhbnNJbnB1dCB8fA0KICAgICAgICAgICAgICAgICAgICAhcmFuZG9tRGVsYXlDaGVja2JveCB8fCAhbWluRGVsYXlJbnB1dCB8fCAhbWF4RGVsYXlJbnB1dCB8fCAhdGVtcGxhdGVNb2RlU2VsZWN0KSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6L+957KJ6YWN572u5YWD57Sg5pyq5om+5YiwJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDojrflj5bml7bpl7Tngrnorr7nva4NCiAgICAgICAgICAgICAgICBjb25zdCB0aW1lU2xvdENoZWNrYm94ZXMgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy54aHMtYWktdGltZS1zbG90cyBpbnB1dFt0eXBlPSJjaGVja2JveCJdOmNoZWNrZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzY2hlZHVsZUhvdXJzID0gQXJyYXkuZnJvbSh0aW1lU2xvdENoZWNrYm94ZXMpLm1hcChjYiA9PiBwYXJzZUludChjYi52YWx1ZSkpOw0KDQogICAgICAgICAgICAgICAgLy8g6aqM6K+B6YWN572u5bm26L+b6KGM5Lil5qC855qE5pWw5YC85qOA5p+lDQogICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZCA9IGVuYWJsZWRDaGVja2JveC5jaGVja2VkOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNjYW5EYXlzID0gdGhpcy52YWxpZGF0ZUFuZFBhcnNlSW50KHNjYW5EYXlzU2VsZWN0LnZhbHVlLCAzLCAxLCAzMCwgJ+aJq+aPj+WkqeaVsCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGludGVydmFsID0gdGhpcy52YWxpZGF0ZUFuZFBhcnNlSW50KGludGVydmFsU2VsZWN0LnZhbHVlLCAyNCwgMSwgMTY4LCAn5Zue6K6/6Ze06ZqUJyk7DQogICAgICAgICAgICAgICAgY29uc3QgbWF4Q291bnQgPSB0aGlzLnZhbGlkYXRlQW5kUGFyc2VJbnQobWF4Q291bnRTZWxlY3QudmFsdWUsIDIsIDEsIDEwLCAn5pyA5aSn5Zue6K6/5qyh5pWwJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGFpbHlMaW1pdCA9IHRoaXMudmFsaWRhdGVBbmRQYXJzZUludChkYWlseUxpbWl0SW5wdXQudmFsdWUsIDEwLCAxLCA1MCwgJ+avj+aXpeWbnuiuv+S4iumZkCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGJhdGNoU2l6ZSA9IHRoaXMudmFsaWRhdGVBbmRQYXJzZUludChiYXRjaFNpemVJbnB1dC52YWx1ZSwgMywgMSwgMTAsICfmibnlpITnkIblpKflsI8nKTsNCiAgICAgICAgICAgICAgICBjb25zdCBtYW51YWxCYXRjaFNpemUgPSB0aGlzLnZhbGlkYXRlQW5kUGFyc2VJbnQobWFudWFsQmF0Y2hTaXplSW5wdXQudmFsdWUsIDUsIDEsIDIwLCAn5omL5Yqo5om55aSE55CG5aSn5bCPJyk7DQogICAgICAgICAgICAgICAgY29uc3QgbWF4RW1wdHlTY2FucyA9IHRoaXMudmFsaWRhdGVBbmRQYXJzZUludChtYXhFbXB0eVNjYW5zSW5wdXQudmFsdWUsIDMsIDEsIDEwLCAn5pyA5aSn56m65omr5o+P5qyh5pWwJyk7DQogICAgICAgICAg",
        "ICAgICAgY29uc3QgcmFuZG9tRGVsYXkgPSByYW5kb21EZWxheUNoZWNrYm94LmNoZWNrZWQ7DQogICAgICAgICAgICAgICAgY29uc3QgbWluRGVsYXkgPSB0aGlzLnZhbGlkYXRlQW5kUGFyc2VJbnQobWluRGVsYXlJbnB1dC52YWx1ZSwgMzAsIDEwLCAxODAwLCAn5pyA5bCP5bu26L+fJyk7DQogICAgICAgICAgICAgICAgY29uc3QgbWF4RGVsYXkgPSB0aGlzLnZhbGlkYXRlQW5kUGFyc2VJbnQobWF4RGVsYXlJbnB1dC52YWx1ZSwgMTIwLCAxMCwgMTgwMCwgJ+acgOWkp+W7tui/nycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGF1dG9SZWNvcmQgPSBhdXRvUmVjb3JkQ2hlY2tib3guY2hlY2tlZDsNCiAgICAgICAgICAgICAgICBjb25zdCBhdXRvUmVjb3JkRGVsYXkgPSB0aGlzLnZhbGlkYXRlQW5kUGFyc2VJbnQoYXV0b1JlY29yZERlbGF5SW5wdXQudmFsdWUsIDUsIDEsIDYwLCAn6Ieq5Yqo6K6w5b2V5bu26L+fJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVNb2RlID0gdGVtcGxhdGVNb2RlU2VsZWN0LnZhbHVlOw0KICAgICAgICAgICAgICAgIGNvbnN0IGFwaUxlYWRzQ2hlY2sgPSBhcGlMZWFkc0NoZWNrQ2hlY2tib3ggPyBhcGlMZWFkc0NoZWNrQ2hlY2tib3guY2hlY2tlZCA6IHRydWU7DQogICAgICAgICAgICAgICAgY29uc3QgcmVhbHRpbWVMZWFkc0NoZWNrID0gcmVhbHRpbWVMZWFkc0NoZWNrQ2hlY2tib3ggPyByZWFsdGltZUxlYWRzQ2hlY2tDaGVja2JveC5jaGVja2VkIDogdHJ1ZTsNCiAgICAgICAgICAgICAgICBjb25zdCBkZWVwTGVhZHNDaGVjayA9IGRlZXBMZWFkc0NoZWNrQ2hlY2tib3ggPyBkZWVwTGVhZHNDaGVja0NoZWNrYm94LmNoZWNrZWQgOiBmYWxzZTsNCiAgICAgICAgICAgICAgICBjb25zdCBjYWNoZVRpbWUgPSBjYWNoZVRpbWVTZWxlY3QgPyBwYXJzZUludChjYWNoZVRpbWVTZWxlY3QudmFsdWUpIDogMzA7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6Xpqozor4Hnu5PmnpwNCiAgICAgICAgICAgICAgICBpZiAoc2NhbkRheXMgPT09IG51bGwgfHwgaW50ZXJ2YWwgPT09IG51bGwgfHwgbWF4Q291bnQgPT09IG51bGwgfHwNCiAgICAgICAgICAgICAgICAgICAgZGFpbHlMaW1pdCA9PT0gbnVsbCB8fCBiYXRjaFNpemUgPT09IG51bGwgfHwgbWFudWFsQmF0Y2hTaXplID09PSBudWxsIHx8DQogICAgICAgICAgICAgICAgICAgIG1heEVtcHR5U2NhbnMgPT09IG51bGwgfHwgbWluRGVsYXkgPT09IG51bGwgfHwgbWF4RGVsYXkgPT09IG51bGwgfHwNCiAgICAgICAgICAgICAgICAgICAgYXV0b1JlY29yZERlbGF5ID09PSBudWxsKSB7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsgLy8g6aqM6K+B5aSx6LSl77yM6ZSZ6K+v5L+h5oGv5bey5ZyodmFsaWRhdGVBbmRQYXJzZUludOS4reaYvuekug0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOaUtumbhuaJgOacieivneacr+aooeadvw0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlcyA9IEFy",
        "cmF5LmZyb20odGVtcGxhdGVUZXh0YXJlYXMpLm1hcCh0ZXh0YXJlYSA9PiB0ZXh0YXJlYS52YWx1ZS50cmltKCkpLmZpbHRlcih0ID0+IHQpOw0KDQogICAgICAgICAgICAgICAgLy8g6aqM6K+B6L6T5YWlDQogICAgICAgICAgICAgICAgaWYgKGVuYWJsZWQgJiYgdGVtcGxhdGVNb2RlICE9PSAnYWknICYmIHRlbXBsYXRlcy5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfor7foh7PlsJHovpPlhaXkuIDlpZflm57orr/or53mnK/mqKHmnb8nLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChlbmFibGVkICYmIHNjaGVkdWxlSG91cnMubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6K+36Iez5bCR6YCJ5oup5LiA5Liq5Zue6K6/5pe26Ze054K5JywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDpop3lpJbnmoTpgLvovpHpqozor4ENCiAgICAgICAgICAgICAgICBpZiAocmFuZG9tRGVsYXkgJiYgbWluRGVsYXkgPj0gbWF4RGVsYXkpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmnIDlsI/lu7bov5/kuI3og73lpKfkuo7miJbnrYnkuo7mnIDlpKflu7bov58nLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWbnuiuv+mXtOmalOS4juiwg+W6puWZqOmXtOmalOeahOWFvOWuueaApw0KICAgICAgICAgICAgICAgIGNvbnN0IHNjaGVkdWxlckludGVydmFsID0gMzA7IC8vIOiwg+W6puWZqOajgOafpemXtOmalO+8iOWIhumSn++8iQ0KICAgICAgICAgICAgICAgIGlmIChpbnRlcnZhbCAqIDYwIDwgc2NoZWR1bGVySW50ZXJ2YWwpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+Wbnuiuv+mXtOmalOWwj+S6juiwg+W6puWZqOajgOafpemXtOmalCcsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJbnRlcnZhbDogaW50ZXJ2YWwgKyAn5bCP5pe2JywNCiAgICAgICAgICAgICAgICAgICAgICAgIHNjaGVkdWxlckludGVydmFsOiBzY2hlZHVsZXJJbnRlcnZhbCArICfliIbpkp8nLA0KICAgICAgICAgICAgICAgICAgICAgICAgcmVjb21tZW5kYXRpb246ICflu7rorq7orr7nva7kuI3lsI/kuo4wLjXlsI/ml7bnmoTpl7TpmpQnDQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOS/neWtmOmFjee9rg0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcEVuYWJsZWQnLCBlbmFibGVkKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBT",
        "Y2FuRGF5cycsIHNjYW5EYXlzKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBJbnRlcnZhbCcsIGludGVydmFsKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBNYXhDb3VudCcsIG1heENvdW50KTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBEYWlseUxpbWl0JywgZGFpbHlMaW1pdCk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2ZvbGxvd1VwQmF0Y2hTaXplJywgYmF0Y2hTaXplKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBNYW51YWxCYXRjaFNpemUnLCBtYW51YWxCYXRjaFNpemUpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcE1heEVtcHR5U2NhbnMnLCBtYXhFbXB0eVNjYW5zKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBSYW5kb21EZWxheScsIHJhbmRvbURlbGF5KTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBNaW5EZWxheScsIG1pbkRlbGF5KTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBNYXhEZWxheScsIG1heERlbGF5KTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBBdXRvUmVjb3JkJywgYXV0b1JlY29yZCk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2ZvbGxvd1VwQXV0b1JlY29yZERlbGF5JywgYXV0b1JlY29yZERlbGF5KTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBUZW1wbGF0ZU1vZGUnLCB0ZW1wbGF0ZU1vZGUpOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcFRlbXBsYXRlcycsIHRlbXBsYXRlcyk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2ZvbGxvd1VwVGVtcGxhdGUnLCB0ZW1wbGF0ZXNbMF0gfHwgJycpOyAvLyDkv53mjIHlkJHlkI7lhbzlrrkNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZm9sbG93VXBTY2hlZHVsZUhvdXJzJywgc2NoZWR1bGVIb3Vycyk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2ZvbGxvd1VwQXBpTGVhZHNDaGVjaycsIGFwaUxlYWRzQ2hlY2spOw0KICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KCdmb2xsb3dVcFJlYWx0aW1lTGVhZHNDaGVjaycsIHJlYWx0aW1lTGVhZHNDaGVjayk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2ZvbGxvd1VwRGVlcExlYWRzQ2hlY2snLCBkZWVwTGVhZHNDaGVjayk7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2ZvbGxvd1VwTGVhZHNDYWNoZVRpbWUnLCBjYWNoZVRpbWUpOw0KDQogICAgICAgICAgICAgICAgLy8g6aqM6K+B6YWN572u5piv5ZCm5q2j56Gu5L+d5a2YDQogICAgICAgICAgICAgICAg",
        "Y29uc3Qgc2F2ZWRJbnRlcnZhbCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEludGVydmFsJyk7DQogICAgICAgICAgICAgICAgaWYgKHNhdmVkSW50ZXJ2YWwgIT09IGludGVydmFsKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Zue6K6/6Ze06ZqU6YWN572u5L+d5a2Y6aqM6K+B5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0ZWQ6IGludGVydmFsLA0KICAgICAgICAgICAgICAgICAgICAgICAgYWN0dWFsOiBzYXZlZEludGVydmFsLA0KICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogdHlwZW9mIHNhdmVkSW50ZXJ2YWwNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6YWN572u5L+d5a2Y6aqM6K+B5aSx6LSl77yM6K+36YeN6K+VJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmm7TmlrDov73nsonnrqHnkIblmajnirbmgIENCiAgICAgICAgICAgICAgICBpZiAoZW5hYmxlZCkgew0KICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcE1hbmFnZXIuc3RhcnQoKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcE1hbmFnZXIuc3RvcCgpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlRm9sbG93VXBTdGF0cygpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6L+957KJ6YWN572u5bey5L+d5a2Y5bm26aqM6K+B5oiQ5YqfJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ6YWN572u5bey5L+d5a2YJywgew0KICAgICAgICAgICAgICAgICAgICBlbmFibGVkLA0KICAgICAgICAgICAgICAgICAgICBzY2FuRGF5cywNCiAgICAgICAgICAgICAgICAgICAgaW50ZXJ2YWwsDQogICAgICAgICAgICAgICAgICAgIG1heENvdW50LA0KICAgICAgICAgICAgICAgICAgICBkYWlseUxpbWl0LA0KICAgICAgICAgICAgICAgICAgICBiYXRjaFNpemUsDQogICAgICAgICAgICAgICAgICAgIG1hbnVhbEJhdGNoU2l6ZSwNCiAgICAgICAgICAgICAgICAgICAgbWF4RW1wdHlTY2FucywNCiAgICAgICAgICAgICAgICAgICAgcmFuZG9tRGVsYXksDQogICAgICAgICAgICAgICAgICAgIG1pbkRlbGF5LA0KICAgICAgICAgICAgICAgICAgICBtYXhEZWxheSwNCiAgICAgICAgICAgICAgICAgICAgYXV0b1JlY29yZCwNCiAgICAgICAgICAgICAgICAgICAgYXV0b1JlY29yZERlbGF5LA0KICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZU1vZGUsDQogICAgICAgICAgICAgICAgICAgIHNjaGVkdWxlSG91cnMsDQogICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlc0NvdW50OiB0ZW1wbGF0ZXMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICBhcGlMZWFkc0NoZWNr",
        "LA0KICAgICAgICAgICAgICAgICAgICByZWFsdGltZUxlYWRzQ2hlY2ssDQogICAgICAgICAgICAgICAgICAgIGRlZXBMZWFkc0NoZWNrLA0KICAgICAgICAgICAgICAgICAgICBjYWNoZVRpbWUsDQogICAgICAgICAgICAgICAgICAgIGNvbmZpZ1ZlcmlmaWVkOiB0cnVlDQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfkv53lrZjov73nsonphY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5L+d5a2Y6L+957KJ6YWN572u5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmqjOivgeW5tuino+aekOaVtOaVsOWAvA0KICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUg6KaB6aqM6K+B55qE5YC8DQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBkZWZhdWx0VmFsdWUg6buY6K6k5YC8DQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBtaW4g5pyA5bCP5YC8DQogICAgICAgICAqIEBwYXJhbSB7bnVtYmVyfSBtYXgg5pyA5aSn5YC8DQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBmaWVsZE5hbWUg5a2X5q615ZCN56ewDQogICAgICAgICAqIEByZXR1cm5zIHtudW1iZXJ8bnVsbH0g6Kej5p6Q5ZCO55qE5YC877yM6aqM6K+B5aSx6LSl6L+U5ZuebnVsbA0KICAgICAgICAgKi8NCiAgICAgICAgdmFsaWRhdGVBbmRQYXJzZUludCh2YWx1ZSwgZGVmYXVsdFZhbHVlLCBtaW4sIG1heCwgZmllbGROYW1lKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOWmguaenOWAvOS4uuepuuaIluacquWumuS5ie+8jOS9v+eUqOm7mOiupOWAvA0KICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSAnJykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoYCR7ZmllbGROYW1lfeS9v+eUqOm7mOiupOWAvGAsIHsgZGVmYXVsdFZhbHVlIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IHBhcnNlZCA9IHBhcnNlSW50KHZhbHVlLCAxMCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbkuLrmnInmlYjmlbDlrZcNCiAgICAgICAgICAgICAgICBpZiAoaXNOYU4ocGFyc2VkKSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oYCR7ZmllbGROYW1lfeW/hemhu+aYr+acieaViOeahOaVsOWtl2AsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoYCR7ZmllbGROYW1lfeino+aekOWksei0pWAsIHsgdmFsdWUsIHBhcnNlZCB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJu",
        "IG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l6IyD5Zu0DQogICAgICAgICAgICAgICAgaWYgKHBhcnNlZCA8IG1pbiB8fCBwYXJzZWQgPiBtYXgpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKGAke2ZpZWxkTmFtZX3lv4XpobvlnKgke21pbn0tJHttYXh95LmL6Ze0YCwgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcihgJHtmaWVsZE5hbWV96LaF5Ye66IyD5Zu0YCwgeyB2YWx1ZTogcGFyc2VkLCBtaW4sIG1heCB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKGAke2ZpZWxkTmFtZX3pqozor4HpgJrov4dgLCB7IHZhbHVlOiBwYXJzZWQsIG1pbiwgbWF4IH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZWQ7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKGAke2ZpZWxkTmFtZX3pqozor4HlvILluLhgLCB7IHZhbHVlLCBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oYCR7ZmllbGROYW1lfemqjOivgeWksei0pTogJHtlcnJvci5tZXNzYWdlfWAsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgIHJldHVybiBudWxsOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDor4rmlq3ov73nsonnu5/orqHmmL7npLrpl67popgNCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g6K+K5pat57uT5p6cDQogICAgICAgICAqLw0KICAgICAgICBkaWFnbm9zZUZvbGxvd1VwU3RhdHNEaXNwbGF5KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBkaWFnbm9zaXMgPSB7DQogICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygpLA0KICAgICAgICAgICAgICAgICAgICBkb21FbGVtZW50czoge30sDQogICAgICAgICAgICAgICAgICAgIGRhdGFTdGF0dXM6IHt9LA0KICAgICAgICAgICAgICAgICAgICBtYW5hZ2VyU3RhdHVzOiB7fSwNCiAgICAgICAgICAgICAgICAgICAgaXNzdWVzOiBbXSwNCiAgICAgICAgICAgICAgICAgICAgcmVjb21tZW5kYXRpb25zOiBbXQ0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6VET03lhYPntKANCiAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50U2VsZWN0b3JzID0gWw0KICAgICAgICAgICAgICAgICAgICAnI3hocy1haS1mb2xsb3d1cC1wZW5kaW5nLWNvdW50JywNCiAgICAgICAgICAgICAgICAgICAgJyN4aHMtYWktZm9sbG93dXAtdG9kYXktY291bnQnLA0KICAgICAgICAgICAgICAgICAgICAnI3hocy1haS1mb2xsb3d1cC10b3RhbC1jb3VudCcsDQogICAgICAgICAgICAgICAgICAg",
        "ICcjeGhzLWFpLWZvbGxvd3VwLWxlYWRzLWNvdW50JywNCiAgICAgICAgICAgICAgICAgICAgJyN4aHMtYWktZm9sbG93dXAtc3RhdHVzJw0KICAgICAgICAgICAgICAgIF07DQoNCiAgICAgICAgICAgICAgICBlbGVtZW50U2VsZWN0b3JzLmZvckVhY2goc2VsZWN0b3IgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmRvbUVsZW1lbnRzW3NlbGVjdG9yXSA9IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGV4aXN0czogISFlbGVtZW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgdGV4dENvbnRlbnQ6IGVsZW1lbnQgPyBlbGVtZW50LnRleHRDb250ZW50IDogbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgICAgIHZpc2libGU6IGVsZW1lbnQgPyBlbGVtZW50Lm9mZnNldFBhcmVudCAhPT0gbnVsbCA6IGZhbHNlDQogICAgICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFlbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuaXNzdWVzLnB1c2goYERPTeWFg+e0oOS4jeWtmOWcqDogJHtzZWxlY3Rvcn1gKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l566h55CG5Zmo54q25oCBDQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBGb2xsb3dVcFJlY29yZE1hbmFnZXIgIT09ICd1bmRlZmluZWQnKSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0cyA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5nZXRTdGF0cygpOw0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmRhdGFTdGF0dXMucmVjb3JkU3RhdHMgPSBzdGF0czsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5tYW5hZ2VyU3RhdHVzLnJlY29yZE1hbmFnZXIgPSAnYXZhaWxhYmxlJzsNCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5tYW5hZ2VyU3RhdHVzLnJlY29yZE1hbmFnZXIgPSAnZXJyb3I6ICcgKyBlcnJvci5tZXNzYWdlOw0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmlzc3Vlcy5wdXNoKCdGb2xsb3dVcFJlY29yZE1hbmFnZXIuZ2V0U3RhdHMoKeWksei0pScpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLm1hbmFnZXJTdGF0dXMucmVjb3JkTWFuYWdlciA9ICd1bmRlZmluZWQnOw0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuaXNzdWVzLnB1c2goJ0ZvbGxvd1VwUmVjb3JkTWFuYWdlcuacquWumuS5iScpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlm",
        "ICh0eXBlb2YgRm9sbG93VXBTY2hlZHVsZXIgIT09ICd1bmRlZmluZWQnKSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBGb2xsb3dVcFNjaGVkdWxlci5nZXRTdGF0dXMoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5kYXRhU3RhdHVzLnNjaGVkdWxlclN0YXR1cyA9IHN0YXR1czsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5tYW5hZ2VyU3RhdHVzLnNjaGVkdWxlciA9ICdhdmFpbGFibGUnOw0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLm1hbmFnZXJTdGF0dXMuc2NoZWR1bGVyID0gJ2Vycm9yOiAnICsgZXJyb3IubWVzc2FnZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5pc3N1ZXMucHVzaCgnRm9sbG93VXBTY2hlZHVsZXIuZ2V0U3RhdHVzKCnlpLHotKUnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5tYW5hZ2VyU3RhdHVzLnNjaGVkdWxlciA9ICd1bmRlZmluZWQnOw0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuaXNzdWVzLnB1c2goJ0ZvbGxvd1VwU2NoZWR1bGVy5pyq5a6a5LmJJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l5b6F5Zue6K6/55So5oi3DQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBGb2xsb3dVcFJlY29yZE1hbmFnZXIgIT09ICd1bmRlZmluZWQnICYmIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5nZXRQZW5kaW5nVXNlcnMpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHBlbmRpbmdVc2VycyA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5nZXRQZW5kaW5nVXNlcnMoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5kYXRhU3RhdHVzLnBlbmRpbmdVc2Vyc0NvdW50ID0gcGVuZGluZ1VzZXJzLmxlbmd0aDsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5tYW5hZ2VyU3RhdHVzLnBlbmRpbmdVc2VycyA9ICdhdmFpbGFibGUnOw0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLm1hbmFnZXJTdGF0dXMucGVuZGluZ1VzZXJzID0gJ2Vycm9yOiAnICsgZXJyb3IubWVzc2FnZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5pc3N1ZXMucHVzaCgnRm9sbG93VXBSZWNvcmRNYW5hZ2VyLmdldFBlbmRpbmdVc2Vycygp5aSx6LSlJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnlJ/miJDlu7rorq4NCiAgICAgICAgICAgICAgICBpZiAoZGlhZ25vc2lzLmlzc3Vlcy5sZW5ndGggPT09",
        "IDApIHsNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLnJlY29tbWVuZGF0aW9ucy5wdXNoKCfnu5/orqHmmL7npLrns7vnu5/mraPluLgnKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMucmVjb21tZW5kYXRpb25zLnB1c2goJ+WwneivleWIt+aWsOmhtemdoumHjeaWsOWKoOi9veiEmuacrCcpOw0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMucmVjb21tZW5kYXRpb25zLnB1c2goJ+ajgOafpea1j+iniOWZqOaOp+WItuWPsOaYr+WQpuaciUphdmFTY3JpcHTplJnor68nKTsNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLnJlY29tbWVuZGF0aW9ucy5wdXNoKCfnoa7kv53ohJrmnKzlrozlhajliqDovb3lrozmiJAnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICByZXR1cm4gZGlhZ25vc2lzOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6K+K5pat6L+957KJ57uf6K6h5pi+56S65aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoKSwNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgIGlzc3VlczogWyfor4rmlq3ov4fnqIvlj5HnlJ/lvILluLgnXSwNCiAgICAgICAgICAgICAgICAgICAgcmVjb21tZW5kYXRpb25zOiBbJ+ivt+ajgOafpea1j+iniOWZqOaOp+WItuWPsOmUmeivr+S/oeaBryddDQogICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K+K5pat6L+957KJ6YWN572u54q25oCBDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IOiviuaWree7k+aenA0KICAgICAgICAgKi8NCiAgICAgICAgZGlhZ25vc2VGb2xsb3dVcENvbmZpZygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgZGlhZ25vc2lzID0gew0KICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICdoZWFsdGh5JywNCiAgICAgICAgICAgICAgICAgICAgaXNzdWVzOiBbXSwNCiAgICAgICAgICAgICAgICAgICAgd2FybmluZ3M6IFtdLA0KICAgICAgICAgICAgICAgICAgICBjb25maWc6IHt9LA0KICAgICAgICAgICAgICAgICAgICByZWNvbW1lbmRhdGlvbnM6IFtdDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeWFs+mUrumFjee9rumhuQ0KICAgICAgICAgICAgICAgIGNvbnN0IGZvbGxvd1VwRW5hYmxlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEVuYWJsZWQnLCBmYWxzZSk7DQogICAgICAgICAgICAgICAgY29uc3QgZm9sbG93VXBJbnRlcnZhbCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcElu",
        "dGVydmFsJywgMjQpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGZvbGxvd1VwU2NhbkRheXMgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBTY2FuRGF5cycsIDMpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGZvbGxvd1VwTWF4Q291bnQgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBNYXhDb3VudCcsIDIpOw0KDQogICAgICAgICAgICAgICAgZGlhZ25vc2lzLmNvbmZpZyA9IHsNCiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogZm9sbG93VXBFbmFibGVkLA0KICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbDogZm9sbG93VXBJbnRlcnZhbCwNCiAgICAgICAgICAgICAgICAgICAgc2NhbkRheXM6IGZvbGxvd1VwU2NhbkRheXMsDQogICAgICAgICAgICAgICAgICAgIG1heENvdW50OiBmb2xsb3dVcE1heENvdW50LA0KICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbFR5cGU6IHR5cGVvZiBmb2xsb3dVcEludGVydmFsLA0KICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbFZhbGlkOiB0eXBlb2YgZm9sbG93VXBJbnRlcnZhbCA9PT0gJ251bWJlcicgJiYgIWlzTmFOKGZvbGxvd1VwSW50ZXJ2YWwpICYmIGZvbGxvd1VwSW50ZXJ2YWwgPiAwDQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpemXtOmalOmFjee9rg0KICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZm9sbG93VXBJbnRlcnZhbCAhPT0gJ251bWJlcicgfHwgaXNOYU4oZm9sbG93VXBJbnRlcnZhbCkgfHwgZm9sbG93VXBJbnRlcnZhbCA8PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy5pc3N1ZXMucHVzaCgn5Zue6K6/6Ze06ZqU6YWN572u5peg5pWI77yaJyArIGZvbGxvd1VwSW50ZXJ2YWwpOw0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuc3RhdHVzID0gJ2Vycm9yJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XosIPluqblmajlhbzlrrnmgKcNCiAgICAgICAgICAgICAgICBjb25zdCBzY2hlZHVsZXJJbnRlcnZhbCA9IDMwOyAvLyDliIbpkp8NCiAgICAgICAgICAgICAgICBpZiAoZm9sbG93VXBJbnRlcnZhbCAqIDYwIDwgc2NoZWR1bGVySW50ZXJ2YWwpIHsNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLndhcm5pbmdzLnB1c2goYOWbnuiuv+mXtOmalCgke2ZvbGxvd1VwSW50ZXJ2YWx95bCP5pe2KeWwj+S6juiwg+W6puWZqOajgOafpemXtOmalCgke3NjaGVkdWxlckludGVydmFsfeWIhumSnylgKTsNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLnJlY29tbWVuZGF0aW9ucy5wdXNoKCflu7rorq7orr7nva7kuI3lsI/kuo4wLjXlsI/ml7bnmoTlm57orr/pl7TpmpQnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6VVSeWFg+e0oA0KICAgICAgICAgICAgICAgIGNvbnN0IGludGVydmFsU2VsZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1pbnRlcnZhbCcp",
        "Ow0KICAgICAgICAgICAgICAgIGlmICghaW50ZXJ2YWxTZWxlY3QpIHsNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmlzc3Vlcy5wdXNoKCflm57orr/pl7TpmpRVSeWFg+e0oOacquaJvuWIsCcpOw0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuc3RhdHVzID0gJ2Vycm9yJzsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuY29uZmlnLnVpVmFsdWUgPSBpbnRlcnZhbFNlbGVjdC52YWx1ZTsNCiAgICAgICAgICAgICAgICAgICAgZGlhZ25vc2lzLmNvbmZpZy51aVZhbHVlVHlwZSA9IHR5cGVvZiBpbnRlcnZhbFNlbGVjdC52YWx1ZTsNCg0KICAgICAgICAgICAgICAgICAgICBpZiAocGFyc2VJbnQoaW50ZXJ2YWxTZWxlY3QudmFsdWUpICE9PSBmb2xsb3dVcEludGVydmFsKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMud2FybmluZ3MucHVzaCgnVUnmmL7npLrlgLzkuI7phY3nva7lgLzkuI3kuIDoh7QnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeiwg+W6puWZqOeKtuaAgQ0KICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgRm9sbG93VXBTY2hlZHVsZXIgIT09ICd1bmRlZmluZWQnKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjaGVkdWxlclN0YXR1cyA9IEZvbGxvd1VwU2NoZWR1bGVyLmdldFN0YXR1cygpOw0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuY29uZmlnLnNjaGVkdWxlclJ1bm5pbmcgPSBzY2hlZHVsZXJTdGF0dXMuaXNSdW5uaW5nOw0KICAgICAgICAgICAgICAgICAgICBkaWFnbm9zaXMuY29uZmlnLnNjaGVkdWxlclByb2Nlc3NpbmcgPSBzY2hlZHVsZXJTdGF0dXMuaXNQcm9jZXNzaW5nOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChmb2xsb3dVcEVuYWJsZWQgJiYgIXNjaGVkdWxlclN0YXR1cy5pc1J1bm5pbmcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGRpYWdub3Npcy53YXJuaW5ncy5wdXNoKCfov73nsonlip/og73lt7LlkK/nlKjkvYbosIPluqblmajmnKrov5DooYwnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonphY3nva7or4rmlq3lrozmiJAnLCBkaWFnbm9zaXMpOw0KICAgICAgICAgICAgICAgIHJldHVybiBkaWFnbm9zaXM7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfov73nsonphY3nva7or4rmlq3lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgICAgIHN0YXR1czogJ2Vycm9yJywNCiAgICAgICAgICAgICAgICAgICAgaXNzdWVzOiBbJ+iviuaWrei/h+eoi+WPkeeUn+W8guW4uDogJyArIGVycm9yLm1lc3NhZ2VdLA0KICAgICAg",
        "ICAgICAgICAgICAgICB3YXJuaW5nczogW10sDQogICAgICAgICAgICAgICAgICAgIGNvbmZpZzoge30sDQogICAgICAgICAgICAgICAgICAgIHJlY29tbWVuZGF0aW9uczogW10NCiAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbov73nsonphY3nva7or4rmlq0NCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGhhbmRsZURpYWdub3NlRm9sbG93VXAoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1kaWFnbm9zZS1mb2xsb3d1cCcpOw0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+iviuaWreS4rS4uLic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgY29uZmlnRGlhZ25vc2lzID0gdGhpcy5kaWFnbm9zZUZvbGxvd1VwQ29uZmlnKCk7DQogICAgICAgICAgICAgICAgY29uc3Qgc3RhdHNEaWFnbm9zaXMgPSB0aGlzLmRpYWdub3NlRm9sbG93VXBTdGF0c0Rpc3BsYXkoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaehOW7uuiviuaWreaKpeWRig0KICAgICAgICAgICAgICAgIGxldCByZXBvcnRIdG1sID0gJzxkaXYgc3R5bGU9Im1heC1oZWlnaHQ6IDUwMHB4OyBvdmVyZmxvdy15OiBhdXRvOyBwYWRkaW5nOiAxMHB4OyBiYWNrZ3JvdW5kOiAjZjVmNWY1OyBib3JkZXItcmFkaXVzOiA0cHg7IG1hcmdpbjogMTBweCAwOyI+JzsNCiAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8aDQ+8J+UjSDov73nsonns7vnu5/or4rmlq3miqXlkYo8L2g0Pic7DQoNCiAgICAgICAgICAgICAgICAvLyDphY3nva7nirbmgIHmpoLop4gNCiAgICAgICAgICAgICAgICBjb25zdCBjb25maWdTdGF0dXNJY29uID0gY29uZmlnRGlhZ25vc2lzLnN0YXR1cyA9PT0gJ2hlYWx0aHknID8gJ+KchScgOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZ0RpYWdub3Npcy5zdGF0dXMgPT09ICdlcnJvcicgPyAn4p2MJyA6ICfimqDvuI8nOw0KICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gYDxwPjxzdHJvbmc+6YWN572u54q25oCB77yaPC9zdHJvbmc+ICR7Y29uZmlnU3RhdHVzSWNvbn0gJHtjb25maWdEaWFnbm9zaXMuc3RhdHVzLnRvVXBwZXJDYXNlKCl9PC9wPmA7DQoNCiAgICAgICAgICAgICAgICAvLyDnu5/orqHmmL7npLrnirbmgIHmpoLop4gNCiAgICAgICAgICAgICAgICBjb25zdCBzdGF0c1N0YXR1c0ljb24gPSBzdGF0c0RpYWdub3Npcy5pc3N1ZXMubGVuZ3RoID09PSAwID8gJ+KchScgOiAn4p2MJzsNCiAgICAgICAgICAgICAgICBjb25zdCBzdGF0c1N0YXR1cyA9IHN0YXRzRGlhZ25vc2lzLmlzc3Vlcy5sZW5ndGggPT09IDAg",
        "PyAnSEVBTFRIWScgOiAnRVJST1InOw0KICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gYDxwPjxzdHJvbmc+57uf6K6h5pi+56S677yaPC9zdHJvbmc+ICR7c3RhdHNTdGF0dXNJY29ufSAke3N0YXRzU3RhdHVzfTwvcD5gOw0KDQogICAgICAgICAgICAgICAgLy8g6YWN572u5L+h5oGvDQogICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPGg1PvCfk4sg5b2T5YmN6YWN572uPC9oNT4nOw0KICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzx1bD4nOw0KICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gYDxsaT7lip/og73lkK/nlKjvvJoke2NvbmZpZ0RpYWdub3Npcy5jb25maWcuZW5hYmxlZCA/ICfinIUg5pivJyA6ICfinYwg5ZCmJ308L2xpPmA7DQogICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpPuWbnuiuv+mXtOmalO+8miR7Y29uZmlnRGlhZ25vc2lzLmNvbmZpZy5pbnRlcnZhbH3lsI/ml7YgKCR7Y29uZmlnRGlhZ25vc2lzLmNvbmZpZy5pbnRlcnZhbFR5cGV9KTwvbGk+YDsNCiAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGk+5omr5o+P5aSp5pWw77yaJHtjb25maWdEaWFnbm9zaXMuY29uZmlnLnNjYW5EYXlzfeWkqTwvbGk+YDsNCiAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGk+5pyA5aSn5Zue6K6/5qyh5pWw77yaJHtjb25maWdEaWFnbm9zaXMuY29uZmlnLm1heENvdW50feasoTwvbGk+YDsNCiAgICAgICAgICAgICAgICBpZiAoY29uZmlnRGlhZ25vc2lzLmNvbmZpZy51aVZhbHVlICE9PSB1bmRlZmluZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpPlVJ5pi+56S65YC877yaJHtjb25maWdEaWFnbm9zaXMuY29uZmlnLnVpVmFsdWV9ICgke2NvbmZpZ0RpYWdub3Npcy5jb25maWcudWlWYWx1ZVR5cGV9KTwvbGk+YDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgaWYgKGNvbmZpZ0RpYWdub3Npcy5jb25maWcuc2NoZWR1bGVyUnVubmluZyAhPT0gdW5kZWZpbmVkKSB7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gYDxsaT7osIPluqblmajov5DooYzvvJoke2NvbmZpZ0RpYWdub3Npcy5jb25maWcuc2NoZWR1bGVyUnVubmluZyA/ICfinIUg5pivJyA6ICfinYwg5ZCmJ308L2xpPmA7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzwvdWw+JzsNCg0KICAgICAgICAgICAgICAgIC8vIOe7n+iuoeaVsOaNruS/oeaBrw0KICAgICAgICAgICAgICAgIGlmIChzdGF0c0RpYWdub3Npcy5kYXRhU3RhdHVzLnJlY29yZFN0YXRzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzID0gc3RhdHNEaWFnbm9zaXMuZGF0YVN0YXR1cy5yZWNvcmRTdGF0czsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPGg1PvCfk4og5b2T5YmN57uf6K6h5pWw5o2uPC9oNT4nOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8dWw+",
        "JzsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpPuaAu+eUqOaIt+aVsO+8miR7c3RhdHMudG90YWxVc2Vyc308L2xpPmA7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gYDxsaT7lvoXlm57orr/nlKjmiLfvvJoke3N0YXRzLnBlbmRpbmdVc2Vyc308L2xpPmA7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gYDxsaT7mgLvlm57orr/mrKHmlbDvvJoke3N0YXRzLnRvdGFsRm9sbG93VXBzfTwvbGk+YDsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpPuW3suiOt+eVmeWuoui1hO+8miR7c3RhdHMubGVhZHNBY3F1aXJlZFVzZXJzfTwvbGk+YDsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPC91bD4nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChzdGF0c0RpYWdub3Npcy5kYXRhU3RhdHVzLnNjaGVkdWxlclN0YXR1cykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBzdGF0c0RpYWdub3Npcy5kYXRhU3RhdHVzLnNjaGVkdWxlclN0YXR1czsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPGg1PuKame+4jyDosIPluqblmajnirbmgIE8L2g1Pic7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzx1bD4nOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGk+6L+Q6KGM54q25oCB77yaJHtzdGF0dXMuaXNSdW5uaW5nID8gJ+KchSDov5DooYzkuK0nIDogJ+KdjCDlt7LlgZzmraInfTwvbGk+YDsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpPuWkhOeQhueKtuaAge+8miR7c3RhdHVzLmlzUHJvY2Vzc2luZyA/ICfwn5SEIOWkhOeQhuS4rScgOiAn4o+477iPIOepuumXsid9PC9saT5gOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGk+5LuK5pel5aSE55CG77yaJHtzdGF0dXMudG9kYXlQcm9jZXNzZWRDb3VudH3mrKE8L2xpPmA7DQogICAgICAgICAgICAgICAgICAgIGlmIChzdGF0dXMubGFzdFJlc2V0RGF0ZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpPuiuoeaVsOmHjee9ru+8miR7c3RhdHVzLmxhc3RSZXNldERhdGV9PC9saT5gOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzwvdWw+JzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyBET03lhYPntKDnirbmgIENCiAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8aDU+8J+Wpe+4jyDnlYzpnaLlhYPntKDnirbmgIE8L2g1Pic7DQogICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPHVsPic7DQogICAgICAgICAgICAgICAgT2JqZWN0LmVudHJpZXMoc3RhdHNEaWFnbm9zaXMuZG9tRWxlbWVudHMpLmZvckVhY2goKFtzZWxlY3RvciwgaW5mb10pID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29u",
        "c3Qgc3RhdHVzSWNvbiA9IGluZm8uZXhpc3RzID8gKGluZm8udmlzaWJsZSA/ICfinIUnIDogJ+KaoO+4jycpIDogJ+KdjCc7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1c1RleHQgPSBpbmZvLmV4aXN0cyA/IChpbmZvLnZpc2libGUgPyAn5q2j5bi4JyA6ICfpmpDol48nKSA6ICfkuI3lrZjlnKgnOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBkaXNwbGF5VmFsdWUgPSBpbmZvLnRleHRDb250ZW50ID8gYCAo5YC8OiAke2luZm8udGV4dENvbnRlbnR9KWAgOiAnJzsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpPiR7c2VsZWN0b3J9OiAke3N0YXR1c0ljb259ICR7c3RhdHVzVGV4dH0ke2Rpc3BsYXlWYWx1ZX08L2xpPmA7DQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPC91bD4nOw0KDQogICAgICAgICAgICAgICAgLy8g6YWN572u6Zeu6aKY5YiX6KGoDQogICAgICAgICAgICAgICAgaWYgKGNvbmZpZ0RpYWdub3Npcy5pc3N1ZXMubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8aDU+4p2MIOmFjee9rumXrumimDwvaDU+JzsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPHVsPic7DQogICAgICAgICAgICAgICAgICAgIGNvbmZpZ0RpYWdub3Npcy5pc3N1ZXMuZm9yRWFjaChpc3N1ZSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGkgc3R5bGU9ImNvbG9yOiAjZDMyZjJmOyI+JHtpc3N1ZX08L2xpPmA7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8L3VsPic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g57uf6K6h5pi+56S66Zeu6aKY5YiX6KGoDQogICAgICAgICAgICAgICAgaWYgKHN0YXRzRGlhZ25vc2lzLmlzc3Vlcy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzxoNT7inYwg57uf6K6h5pi+56S66Zeu6aKYPC9oNT4nOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8dWw+JzsNCiAgICAgICAgICAgICAgICAgICAgc3RhdHNEaWFnbm9zaXMuaXNzdWVzLmZvckVhY2goaXNzdWUgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpIHN0eWxlPSJjb2xvcjogI2QzMmYyZjsiPiR7aXNzdWV9PC9saT5gOw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPC91bD4nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOitpuWRiuWIl+ihqA0KICAgICAgICAgICAgICAgIGlmIChjb25maWdEaWFnbm9zaXMud2FybmluZ3MubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8aDU+4pqg77iPIOitpuWRiuS/oeaBrzwvaDU+JzsNCiAgICAg",
        "ICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPHVsPic7DQogICAgICAgICAgICAgICAgICAgIGNvbmZpZ0RpYWdub3Npcy53YXJuaW5ncy5mb3JFYWNoKHdhcm5pbmcgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSBgPGxpIHN0eWxlPSJjb2xvcjogI2Y1N2MwMDsiPiR7d2FybmluZ308L2xpPmA7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9ICc8L3VsPic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5bu66K6u5YiX6KGoDQogICAgICAgICAgICAgICAgY29uc3QgYWxsUmVjb21tZW5kYXRpb25zID0gWy4uLmNvbmZpZ0RpYWdub3Npcy5yZWNvbW1lbmRhdGlvbnMsIC4uLnN0YXRzRGlhZ25vc2lzLnJlY29tbWVuZGF0aW9uc107DQogICAgICAgICAgICAgICAgaWYgKGFsbFJlY29tbWVuZGF0aW9ucy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzxoNT7wn5KhIOW7uuiurjwvaDU+JzsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPHVsPic7DQogICAgICAgICAgICAgICAgICAgIGFsbFJlY29tbWVuZGF0aW9ucy5mb3JFYWNoKHJlYyA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICByZXBvcnRIdG1sICs9IGA8bGkgc3R5bGU9ImNvbG9yOiAjMTk3NmQyOyI+JHtyZWN9PC9saT5gOw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgcmVwb3J0SHRtbCArPSAnPC91bD4nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJlcG9ydEh0bWwgKz0gJzwvZGl2Pic7DQoNCiAgICAgICAgICAgICAgICAvLyDmmL7npLror4rmlq3nu5PmnpwNCiAgICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ1JlcG9ydCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI2ZvbGxvd3VwLWRpYWdub3Npcy1yZXBvcnQnKTsNCiAgICAgICAgICAgICAgICBpZiAoZXhpc3RpbmdSZXBvcnQpIHsNCiAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdSZXBvcnQucmVtb3ZlKCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgcmVwb3J0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7DQogICAgICAgICAgICAgICAgcmVwb3J0RGl2LmlkID0gJ2ZvbGxvd3VwLWRpYWdub3Npcy1yZXBvcnQnOw0KICAgICAgICAgICAgICAgIHJlcG9ydERpdi5pbm5lckhUTUwgPSByZXBvcnRIdG1sOw0KDQogICAgICAgICAgICAgICAgY29uc3QgZm9sbG93VXBDb250ZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWNvbnRlbnQnKTsNCiAgICAgICAgICAgICAgICBpZiAoZm9sbG93VXBDb250ZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGZvbGxvd1VwQ29udGVudC5hcHBlbmRDaGlsZChyZXBvcnREaXYpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAg",
        "ICAgICAgICAgICAgIC8vIOagueaNruiviuaWree7k+aenOaYvuekuumAmuefpQ0KICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsSXNzdWVzID0gY29uZmlnRGlhZ25vc2lzLmlzc3Vlcy5sZW5ndGggKyBzdGF0c0RpYWdub3Npcy5pc3N1ZXMubGVuZ3RoOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsV2FybmluZ3MgPSBjb25maWdEaWFnbm9zaXMud2FybmluZ3MubGVuZ3RoOw0KDQogICAgICAgICAgICAgICAgaWYgKHRvdGFsSXNzdWVzID09PSAwICYmIHRvdGFsV2FybmluZ3MgPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfov73nsonns7vnu5/or4rmlq3lrozmiJDvvJrns7vnu5/mraPluLgnLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodG90YWxJc3N1ZXMgPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfov73nsonns7vnu5/or4rmlq3lrozmiJDvvJrlj5HnjrDorablkYonLCAnd2FybmluZycpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbihg6L+957KJ57O757uf6K+K5pat5a6M5oiQ77ya5Y+R546wJHt0b3RhbElzc3Vlc33kuKrpl67pophgLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6L+957KJ57O757uf6K+K5pat5a6M5oiQJywgeyBjb25maWdEaWFnbm9zaXMsIHN0YXRzRGlhZ25vc2lzIH0pOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ6YWN572u6K+K5pat5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+mFjee9ruiviuaWreWksei0pTogJyArIGVycm9yLm1lc3NhZ2UsICdlcnJvcicpOw0KICAgICAgICAgICAgfSBmaW5hbGx5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZGlhZ25vc2UtZm9sbG93dXAnKTsNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn6YWN572u6K+K5patJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuaJq+aPj+eUqOaItw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlU2NhblVzZXJzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2Nhbi11c2VycycpOw0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAg",
        "ICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+aZuuiDveaJq+aPj+S4rS4uLic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgYXdhaXQgRm9sbG93VXBNYW5hZ2VyLnNjYW5BbmRBZGRVc2VycygpOw0KDQogICAgICAgICAgICAgICAgLy8g5omr5o+P5a6M5oiQ5ZCO5by65Yi25Yi35paw57uf6K6h5L+h5oGvDQogICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuZm9yY2VSZWZyZXNoRm9sbG93VXBTdGF0cygpOw0KICAgICAgICAgICAgICAgIH0sIDUwMCk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+aZuuiDveaJq+aPj+WujOaIkO+8jOW3suiOt+WPluaJgOacieS8muivneaVsOaNricsICdzdWNjZXNzJyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5pm66IO95omr5o+P55So5oi3JzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pm66IO95omr5o+P55So5oi35aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+aZuuiDveaJq+aPj+eUqOaIt+Wksei0pScsICdlcnJvcicpOw0KDQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXNjYW4tdXNlcnMnKTsNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5pm66IO95omr5o+P55So5oi3JzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhueri+WNs+Wbnuiuvw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlVHJpZ2dlckZvbGxvd1VwKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdHJpZ2dlci1mb2xsb3d1cCcpOw0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+Wbnuiuv+S4rS4uLic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5YWI5qOA5p+l5piv5ZCm5pyJ5b6F5Zue6K6/55So5oi3DQogICAgICAgICAgICAgICAgY29uc3QgcGVuZGluZ1VzZXJzID0g",
        "Rm9sbG93VXBSZWNvcmRNYW5hZ2VyLmdldFBlbmRpbmdVc2VycygpOw0KICAgICAgICAgICAgICAgIGlmIChwZW5kaW5nVXNlcnMubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsUmVjb3JkcyA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZSA/IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5zaXplIDogMDsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRvdGFsUmVjb3JkcyA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfml6DnlKjmiLforrDlvZXvvIzor7flhYjmiafooYwi5pm66IO95omr5o+P55So5oi3IicsICd3YXJuaW5nJyk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+W9k+WJjeaXoOW+heWbnuiuv+eUqOaIt++8jOivt+ajgOafpeWbnuiuv+adoeS7tuiuvue9ricsICd3YXJuaW5nJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBhd2FpdCBGb2xsb3dVcE1hbmFnZXIudHJpZ2dlckZvbGxvd1VwQ2hlY2soKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVGb2xsb3dVcFN0YXRzKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbihg56uL5Y2z5Zue6K6/5a6M5oiQ77yM5aSE55CG5LqGICR7cGVuZGluZ1VzZXJzLmxlbmd0aH0g5Liq55So5oi3YCwgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn56uL5Y2z5Zue6K6/JzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign56uL5Y2z5Zue6K6/5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+eri+WNs+Wbnuiuv+Wksei0pScsICdlcnJvcicpOw0KDQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRyaWdnZXItZm9sbG93dXAnKTsNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn56uL5Y2z5Zue6K6/JzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOW8uuWItuWIt+aWsOi/veeyiee7n+iuoeaVsOaNrg0KICAgICAgICAgKi8NCiAgICAgICAgZm9yY2VSZWZy",
        "ZXNoRm9sbG93VXBTdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W8gOWni+W8uuWItuWIt+aWsOi/veeyiee7n+iuoeaVsOaNricpOw0KDQogICAgICAgICAgICAgICAgLy8g5by65Yi26YeN5paw5Yqg6L296K6w5b2V5pWw5o2uDQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBGb2xsb3dVcFJlY29yZE1hbmFnZXIgIT09ICd1bmRlZmluZWQnICYmIEZvbGxvd1VwUmVjb3JkTWFuYWdlci5sb2FkUmVjb3Jkc0Zyb21TdG9yYWdlKSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIubG9hZFJlY29yZHNGcm9tU3RvcmFnZSgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCflvLrliLbph43mlrDliqDovb3ov73nsonorrDlvZXmiJDlip8nKTsNCiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAobG9hZEVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+W8uuWItumHjeaWsOWKoOi9vei/veeyieiusOW9leWksei0pScsIHsgZXJyb3I6IGxvYWRFcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6YeN572u6LCD5bqm5Zmo54q25oCBDQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBGb2xsb3dVcFNjaGVkdWxlciAhPT0gJ3VuZGVmaW5lZCcgJiYgRm9sbG93VXBTY2hlZHVsZXIucmVzZXREYWlseUNvdW50SWZOZWVkZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIEZvbGxvd1VwU2NoZWR1bGVyLnJlc2V0RGFpbHlDb3VudElmTmVlZGVkKCk7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mHjee9ruiwg+W6puWZqOavj+aXpeiuoeaVsOaIkOWKnycpOw0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChyZXNldEVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+mHjee9ruiwg+W6puWZqOavj+aXpeiuoeaVsOWksei0pScsIHsgZXJyb3I6IHJlc2V0RXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOe7n+iuoeaYvuekug0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlRm9sbG93VXBTdGF0cygpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W8uuWItuWIt+aWsOi/veeyiee7n+iuoeaVsOaNruWujOaIkCcpOw0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5by65Yi25Yi35paw6L+957KJ57uf6K6h5pWw5o2u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAg",
        "ICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWIt+aWsOi/veeyiee7n+iuoQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlUmVmcmVzaEZvbGxvd1VwU3RhdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1yZWZyZXNoLWZvbGxvd3VwLXN0YXRzJyk7DQogICAgICAgICAgICAgICAgaWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5Yi35paw5LitLi4uJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkvb/nlKjlvLrliLbliLfmlrDmlrnms5UNCiAgICAgICAgICAgICAgICBjb25zdCBzdWNjZXNzID0gdGhpcy5mb3JjZVJlZnJlc2hGb2xsb3dVcFN0YXRzKCk7DQoNCiAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+e7n+iuoeS/oeaBr+W3suWIt+aWsCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfliLfmlrDnu5/orqHlpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5Yi35paw57uf6K6hJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Yi35paw6L+957KJ57uf6K6h5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+WIt+aWsOe7n+iuoeWksei0pScsICdlcnJvcicpOw0KDQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXJlZnJlc2gtZm9sbG93dXAtc3RhdHMnKTsNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5Yi35paw57uf6K6hJzsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhua4heepuui/veeyieiusOW9lQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQ2xlYXJGb2xsb3dVcFJlY29yZHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmIChjb25m",
        "aXJtKCfnoa7lrpropoHmuIXnqbrmiYDmnInov73nsonorrDlvZXlkJfvvJ/mraTmk43kvZzkuI3lj6/mkqTplIDjgIInKSkgew0KICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIuY2xlYXJBbGxSZWNvcmRzKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlRm9sbG93VXBTdGF0cygpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+i/veeyieiusOW9leW3sua4heepuicsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfov73nsonorrDlvZXlt7LmuIXnqbonKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5riF56m66L+957KJ6K6w5b2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+a4heepuui/veeyieiusOW9leWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmo4Dmn6Xov73nsonnrqHnkIblmajliJ3lp4vljJbnirbmgIENCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0g5Yid5aeL5YyW54q25oCB5qOA5p+l57uT5p6cDQogICAgICAgICAqLw0KICAgICAgICBjaGVja0ZvbGxvd1VwTWFuYWdlcnNJbml0aWFsaXphdGlvbigpIHsNCiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHsNCiAgICAgICAgICAgICAgICBhbGxJbml0aWFsaXplZDogdHJ1ZSwNCiAgICAgICAgICAgICAgICBpc3N1ZXM6IFtdDQogICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAvLyDmo4Dmn6UgRm9sbG93VXBSZWNvcmRNYW5hZ2VyDQogICAgICAgICAgICBpZiAodHlwZW9mIEZvbGxvd1VwUmVjb3JkTWFuYWdlciA9PT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICAgICAgICByZXN1bHQuYWxsSW5pdGlhbGl6ZWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICByZXN1bHQuaXNzdWVzLnB1c2goJ0ZvbGxvd1VwUmVjb3JkTWFuYWdlcuacquWumuS5iScpOw0KICAgICAgICAgICAgfSBlbHNlIGlmICghRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZENhY2hlKSB7DQogICAgICAgICAgICAgICAgcmVzdWx0LmFsbEluaXRpYWxpemVkID0gZmFsc2U7DQogICAgICAgICAgICAgICAgcmVzdWx0Lmlzc3Vlcy5wdXNoKCdGb2xsb3dVcFJlY29yZE1hbmFnZXLnvJPlrZjmnKrliJ3lp4vljJYnKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5p+lIEZvbGxvd1VwU2NoZWR1bGVyDQogICAgICAgICAgICBpZiAodHlwZW9mIEZvbGxvd1VwU2NoZWR1bGVyID09PSAndW5kZWZpbmVkJykgew0KICAgICAgICAgICAgICAgIHJlc3VsdC5hbGxJbml0aWFsaXplZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIHJlc3VsdC5pc3N1ZXMucHVzaCgnRm9sbG93VXBTY2hlZHVs",
        "ZXLmnKrlrprkuYknKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5qOA5p+lIEZvbGxvd1VwQmxhY2tsaXN0TWFuYWdlcg0KICAgICAgICAgICAgaWYgKHR5cGVvZiBGb2xsb3dVcEJsYWNrbGlzdE1hbmFnZXIgPT09ICd1bmRlZmluZWQnKSB7DQogICAgICAgICAgICAgICAgcmVzdWx0Lmlzc3Vlcy5wdXNoKCdGb2xsb3dVcEJsYWNrbGlzdE1hbmFnZXLmnKrlrprkuYnvvIjpnZ7lhbPplK7vvIknKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw6L+957KJ57uf6K6h5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVGb2xsb3dVcFN0YXRzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+W8gOWni+abtOaWsOi/veeyiee7n+iuoeS/oeaBrycpOw0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l566h55CG5Zmo5Yid5aeL5YyW54q25oCBDQogICAgICAgICAgICAgICAgY29uc3QgaW5pdENoZWNrID0gdGhpcy5jaGVja0ZvbGxvd1VwTWFuYWdlcnNJbml0aWFsaXphdGlvbigpOw0KICAgICAgICAgICAgICAgIGlmICghaW5pdENoZWNrLmFsbEluaXRpYWxpemVkKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ566h55CG5Zmo5pyq5a6M5YWo5Yid5aeL5YyW77yM5peg5rOV5pu05paw57uf6K6hJywgeyBpc3N1ZXM6IGluaXRDaGVjay5pc3N1ZXMgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5bCd6K+V5pi+56S66ZSZ6K+v54q25oCBDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1c0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtc3RhdHVzJyk7DQogICAgICAgICAgICAgICAgICAgIGlmIChzdGF0dXNFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNFbGVtZW50LnRleHRDb250ZW50ID0gJ+WIneWni+WMluWksei0pSc7DQogICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNFbGVtZW50LnN0eWxlLmNvbG9yID0gJyNmZjZiNmInOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoaW5pdENoZWNrLmlzc3Vlcy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfov73nsonnrqHnkIblmajpg6jliIbnu4Tku7bmnKrliJ3lp4vljJYnLCB7IGlzc3VlczogaW5pdENoZWNrLmlzc3VlcyB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDojrflj5bnu5/orqHmlbDmja7vvIzmt7vliqDplJnor6/lpITnkIYNCiAgICAgICAgICAgICAgICBsZXQgc3RhdHMsIHNjaGVkdWxlclN0YXR1cywgcGVuZGluZ1VzZXJzOw0KDQogICAgICAgICAgICAgICAgdHJ5",
        "IHsNCiAgICAgICAgICAgICAgICAgICAgc3RhdHMgPSBGb2xsb3dVcFJlY29yZE1hbmFnZXIuZ2V0U3RhdHMoKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfojrflj5borrDlvZXnu5/orqHmiJDlip8nLCBzdGF0cyk7DQogICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfojrflj5borrDlvZXnu5/orqHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICBzdGF0cyA9IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsVXNlcnM6IDAsDQogICAgICAgICAgICAgICAgICAgICAgICBwZW5kaW5nVXNlcnM6IDAsDQogICAgICAgICAgICAgICAgICAgICAgICBmb2xsb3dpbmdVc2VyczogMCwNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlZFVzZXJzOiAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2tlZFVzZXJzOiAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgbGVhZHNBY3F1aXJlZFVzZXJzOiAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxGb2xsb3dVcHM6IDANCiAgICAgICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBzY2hlZHVsZXJTdGF0dXMgPSBGb2xsb3dVcFNjaGVkdWxlci5nZXRTdGF0dXMoKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfojrflj5bosIPluqblmajnirbmgIHmiJDlip8nLCBzY2hlZHVsZXJTdGF0dXMpOw0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6I635Y+W6LCD5bqm5Zmo54q25oCB5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgc2NoZWR1bGVyU3RhdHVzID0gew0KICAgICAgICAgICAgICAgICAgICAgICAgaXNSdW5uaW5nOiBmYWxzZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGlzUHJvY2Vzc2luZzogZmFsc2UsDQogICAgICAgICAgICAgICAgICAgICAgICB0b2RheVByb2Nlc3NlZENvdW50OiAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgbGFzdFJlc2V0RGF0ZTogbnVsbCwNCiAgICAgICAgICAgICAgICAgICAgICAgIG5leHRDaGVja1RpbWU6IG51bGwNCiAgICAgICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICBwZW5kaW5nVXNlcnMgPSBGb2xsb3dVcFJlY29yZE1hbmFnZXIuZ2V0UGVuZGluZ1VzZXJzKCk7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6I635Y+W5b6F5Zue6K6/55So5oi35oiQ5YqfJywgeyBjb3VudDogcGVuZGluZ1VzZXJzLmxlbmd0aCB9KTsNCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAg",
        "ICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+iOt+WPluW+heWbnuiuv+eUqOaIt+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgIHBlbmRpbmdVc2VycyA9IFtdOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOe7n+iuoeaYvuekuu+8jOa3u+WKoOabtOivpue7hueahOmUmeivr+WkhOeQhg0KICAgICAgICAgICAgICAgIGNvbnN0IHBlbmRpbmdDb3VudEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtcGVuZGluZy1jb3VudCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRvZGF5Q291bnRFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXRvZGF5LWNvdW50Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgdG90YWxDb3VudEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtdG90YWwtY291bnQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBsZWFkc0NvdW50RWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1sZWFkcy1jb3VudCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1c0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtc3RhdHVzJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6VET03lhYPntKDmmK/lkKblrZjlnKgNCiAgICAgICAgICAgICAgICBjb25zdCBtaXNzaW5nRWxlbWVudHMgPSBbXTsNCiAgICAgICAgICAgICAgICBpZiAoIXBlbmRpbmdDb3VudEVsZW1lbnQpIG1pc3NpbmdFbGVtZW50cy5wdXNoKCcjeGhzLWFpLWZvbGxvd3VwLXBlbmRpbmctY291bnQnKTsNCiAgICAgICAgICAgICAgICBpZiAoIXRvZGF5Q291bnRFbGVtZW50KSBtaXNzaW5nRWxlbWVudHMucHVzaCgnI3hocy1haS1mb2xsb3d1cC10b2RheS1jb3VudCcpOw0KICAgICAgICAgICAgICAgIGlmICghdG90YWxDb3VudEVsZW1lbnQpIG1pc3NpbmdFbGVtZW50cy5wdXNoKCcjeGhzLWFpLWZvbGxvd3VwLXRvdGFsLWNvdW50Jyk7DQogICAgICAgICAgICAgICAgaWYgKCFsZWFkc0NvdW50RWxlbWVudCkgbWlzc2luZ0VsZW1lbnRzLnB1c2goJyN4aHMtYWktZm9sbG93dXAtbGVhZHMtY291bnQnKTsNCiAgICAgICAgICAgICAgICBpZiAoIXN0YXR1c0VsZW1lbnQpIG1pc3NpbmdFbGVtZW50cy5wdXNoKCcjeGhzLWFpLWZvbGxvd3VwLXN0YXR1cycpOw0KDQogICAgICAgICAgICAgICAgaWYgKG1pc3NpbmdFbGVtZW50cy5sZW5ndGggPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfpg6jliIbnu5/orqHmmL7npLrlhYPntKDkuI3lrZjlnKgnLCB7IG1pc3NpbmdFbGVtZW50cyB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlronlhajmm7TmlrBET03lhYPntKANCiAgICAgICAgICAg",
        "ICAgICBpZiAocGVuZGluZ0NvdW50RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBwZW5kaW5nQ291bnQgPSBBcnJheS5pc0FycmF5KHBlbmRpbmdVc2VycykgPyBwZW5kaW5nVXNlcnMubGVuZ3RoIDogMDsNCiAgICAgICAgICAgICAgICAgICAgcGVuZGluZ0NvdW50RWxlbWVudC50ZXh0Q29udGVudCA9IHBlbmRpbmdDb3VudC50b1N0cmluZygpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+abtOaWsOW+heWbnuiuv+eUqOaIt+aVsOmHjycsIHsgY291bnQ6IHBlbmRpbmdDb3VudCB9KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAodG9kYXlDb3VudEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdG9kYXlDb3VudCA9IHNjaGVkdWxlclN0YXR1cy50b2RheVByb2Nlc3NlZENvdW50IHx8IDA7DQogICAgICAgICAgICAgICAgICAgIHRvZGF5Q291bnRFbGVtZW50LnRleHRDb250ZW50ID0gdG9kYXlDb3VudC50b1N0cmluZygpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+abtOaWsOS7iuaXpeWkhOeQhuaVsOmHjycsIHsgY291bnQ6IHRvZGF5Q291bnQgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHRvdGFsQ291bnRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsQ291bnQgPSBzdGF0cy50b3RhbEZvbGxvd1VwcyB8fCAwOw0KICAgICAgICAgICAgICAgICAgICB0b3RhbENvdW50RWxlbWVudC50ZXh0Q29udGVudCA9IHRvdGFsQ291bnQudG9TdHJpbmcoKTsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmm7TmlrDmgLvlm57orr/mrKHmlbAnLCB7IGNvdW50OiB0b3RhbENvdW50IH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChsZWFkc0NvdW50RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBsZWFkc0NvdW50ID0gc3RhdHMubGVhZHNBY3F1aXJlZFVzZXJzIHx8IDA7DQogICAgICAgICAgICAgICAgICAgIGxlYWRzQ291bnRFbGVtZW50LnRleHRDb250ZW50ID0gbGVhZHNDb3VudC50b1N0cmluZygpOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+abtOaWsOW3suiOt+eVmeWuoui1hOeUqOaIt+aVsCcsIHsgY291bnQ6IGxlYWRzQ291bnQgfSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHN0YXR1c0VsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgZW5hYmxlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEVuYWJsZWQnLCBmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzUnVubmluZyA9IHNjaGVkdWxlclN0YXR1cy5pc1J1bm5pbmcgfHwgZmFsc2U7DQoNCiAgICAgICAgICAgICAgICAgICAgbGV0IHN0YXR1c1RleHQsIHN0YXR1c0NvbG9yOw0KICAgICAgICAgICAgICAgICAgICBpZiAoZW5hYmxlZCAm",
        "JiBpc1J1bm5pbmcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQgPSAn6L+Q6KGM5LitJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c0NvbG9yID0gJyMyZWQ1NzMnOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQgPSAn5bey5ZCv55SoJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c0NvbG9yID0gJyNmZmE1MDInOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzVGV4dCA9ICflt7LnpoHnlKgnOw0KICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzQ29sb3IgPSAnI2ZmNmI2Yic7DQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICBzdGF0dXNFbGVtZW50LnRleHRDb250ZW50ID0gc3RhdHVzVGV4dDsNCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzRWxlbWVudC5zdHlsZS5jb2xvciA9IHN0YXR1c0NvbG9yOw0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+abtOaWsOWKn+iDveeKtuaAgScsIHsgZW5hYmxlZCwgaXNSdW5uaW5nLCBzdGF0dXNUZXh0IH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6L+957KJ57uf6K6h5L+h5oGv5pu05paw5a6M5oiQJywgew0KICAgICAgICAgICAgICAgICAgICBwZW5kaW5nOiBBcnJheS5pc0FycmF5KHBlbmRpbmdVc2VycykgPyBwZW5kaW5nVXNlcnMubGVuZ3RoIDogMCwNCiAgICAgICAgICAgICAgICAgICAgdG9kYXk6IHNjaGVkdWxlclN0YXR1cy50b2RheVByb2Nlc3NlZENvdW50IHx8IDAsDQogICAgICAgICAgICAgICAgICAgIHRvdGFsOiBzdGF0cy50b3RhbEZvbGxvd1VwcyB8fCAwLA0KICAgICAgICAgICAgICAgICAgICBsZWFkczogc3RhdHMubGVhZHNBY3F1aXJlZFVzZXJzIHx8IDAsDQogICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEVuYWJsZWQnLCBmYWxzZSksDQogICAgICAgICAgICAgICAgICAgIHJ1bm5pbmc6IHNjaGVkdWxlclN0YXR1cy5pc1J1bm5pbmcgfHwgZmFsc2UNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOi/veeyiee7n+iuoeWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgIHN0YWNrOiBlcnJvci5zdGFjaw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5Zyo5Ye66ZSZ5pe25pi+56S66ZSZ6K+v54q25oCBDQogICAgICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1m",
        "b2xsb3d1cC1zdGF0dXMnKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1c0VsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c0VsZW1lbnQudGV4dENvbnRlbnQgPSAn54q25oCB5byC5bi4JzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c0VsZW1lbnQuc3R5bGUuY29sb3IgPSAnI2ZmNmI2Yic7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6K6+572u6ZSZ6K+v54q25oCB5aSx6LSlJywgeyBlcnJvcjogZS5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yqg6L296L+957KJ6YWN572uDQogICAgICAgICAqLw0KICAgICAgICBsb2FkRm9sbG93VXBDb25maWcoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOWKoOi9veWfuuacrOmFjee9rg0KICAgICAgICAgICAgICAgIGNvbnN0IGVuYWJsZWRDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1lbmFibGVkJyk7DQogICAgICAgICAgICAgICAgY29uc3Qgc2NhbkRheXNTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtc2Nhbi1kYXlzJyk7DQogICAgICAgICAgICAgICAgY29uc3QgaW50ZXJ2YWxTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtaW50ZXJ2YWwnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBtYXhDb3VudFNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1tYXgtY291bnQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkYWlseUxpbWl0SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtZGFpbHktbGltaXQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBiYXRjaFNpemVJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1iYXRjaC1zaXplJyk7DQogICAgICAgICAgICAgICAgY29uc3QgbWFudWFsQmF0Y2hTaXplSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtbWFudWFsLWJhdGNoLXNpemUnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBtYXhFbXB0eVNjYW5zSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtbWF4LWVtcHR5LXNjYW5zJyk7DQogICAgICAgICAgICAgICAgY29uc3QgcmFuZG9tRGVsYXlDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1yYW5kb20tZGVsYXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCBtaW5EZWxheUlucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZv",
        "bGxvd3VwLW1pbi1kZWxheScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IG1heERlbGF5SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtbWF4LWRlbGF5Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgYXV0b1JlY29yZENoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWF1dG8tcmVjb3JkJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYXV0b1JlY29yZERlbGF5SW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtYXV0by1yZWNvcmQtZGVsYXknKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZU1vZGVTZWxlY3QgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtdGVtcGxhdGUtbW9kZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlc0NvbnRhaW5lciA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC10ZW1wbGF0ZXMtY29udGFpbmVyJyk7DQogICAgICAgICAgICAgICAgY29uc3QgYXBpTGVhZHNDaGVja0NoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWFwaS1sZWFkcy1jaGVjaycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHJlYWx0aW1lTGVhZHNDaGVja0NoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXJlYWx0aW1lLWxlYWRzLWNoZWNrJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVlcExlYWRzQ2hlY2tDaGVja2JveCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1kZWVwLWxlYWRzLWNoZWNrJyk7DQogICAgICAgICAgICAgICAgY29uc3QgY2FjaGVUaW1lU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWNhY2hlLXRpbWUnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChlbmFibGVkQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZENoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBFbmFibGVkJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBFbmFibGVkKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoc2NhbkRheXNTZWxlY3QpIHsNCiAgICAgICAgICAgICAgICAgICAgc2NhbkRheXNTZWxlY3QudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBTY2FuRGF5cycsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwU2NhbkRheXMpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChpbnRlcnZhbFNlbGVjdCkgew0KICAgICAgICAgICAgICAgICAgICBpbnRlcnZhbFNlbGVjdC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEludGVydmFsJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9s",
        "bG93VXBJbnRlcnZhbCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKG1heENvdW50U2VsZWN0KSB7DQogICAgICAgICAgICAgICAgICAgIG1heENvdW50U2VsZWN0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwTWF4Q291bnQnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcE1heENvdW50KTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoZGFpbHlMaW1pdElucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIGRhaWx5TGltaXRJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcERhaWx5TGltaXQnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcERhaWx5TGltaXQpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChiYXRjaFNpemVJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBiYXRjaFNpemVJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEJhdGNoU2l6ZScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwQmF0Y2hTaXplKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAobWFudWFsQmF0Y2hTaXplSW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgbWFudWFsQmF0Y2hTaXplSW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBNYW51YWxCYXRjaFNpemUnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcE1hbnVhbEJhdGNoU2l6ZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKG1heEVtcHR5U2NhbnNJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBtYXhFbXB0eVNjYW5zSW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBNYXhFbXB0eVNjYW5zJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBNYXhFbXB0eVNjYW5zKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAocmFuZG9tRGVsYXlDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICByYW5kb21EZWxheUNoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBSYW5kb21EZWxheScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwUmFuZG9tRGVsYXkpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChtaW5EZWxheUlucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIG1pbkRlbGF5SW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBNaW5EZWxheScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwTWluRGVsYXkpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChtYXhEZWxheUlucHV0KSB7DQogICAgICAgICAgICAgICAgICAgIG1heERlbGF5SW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgn",
        "Zm9sbG93VXBNYXhEZWxheScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwTWF4RGVsYXkpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChhdXRvUmVjb3JkQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgYXV0b1JlY29yZENoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBBdXRvUmVjb3JkJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBBdXRvUmVjb3JkKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoYXV0b1JlY29yZERlbGF5SW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgYXV0b1JlY29yZERlbGF5SW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBBdXRvUmVjb3JkRGVsYXknLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcEF1dG9SZWNvcmREZWxheSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5Yqg6L2955WZ5a6i6LWE5qOA5rWL6YWN572uDQogICAgICAgICAgICAgICAgaWYgKGFwaUxlYWRzQ2hlY2tDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBhcGlMZWFkc0NoZWNrQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcEFwaUxlYWRzQ2hlY2snLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcEFwaUxlYWRzQ2hlY2spOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChyZWFsdGltZUxlYWRzQ2hlY2tDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICByZWFsdGltZUxlYWRzQ2hlY2tDaGVja2JveC5jaGVja2VkID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwUmVhbHRpbWVMZWFkc0NoZWNrJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBSZWFsdGltZUxlYWRzQ2hlY2spOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChkZWVwTGVhZHNDaGVja0NoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIGRlZXBMZWFkc0NoZWNrQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdmb2xsb3dVcERlZXBMZWFkc0NoZWNrJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBEZWVwTGVhZHNDaGVjayk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGNhY2hlVGltZVNlbGVjdCkgew0KICAgICAgICAgICAgICAgICAgICBjYWNoZVRpbWVTZWxlY3QudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBMZWFkc0NhY2hlVGltZScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwTGVhZHNDYWNoZVRpbWUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWKoOi9veivneacr+aooeW8jw0KICAgICAgICAgICAgICAgIGlmICh0ZW1wbGF0ZU1vZGVTZWxlY3QpIHsNCiAgICAgICAgICAgICAgICAgICAg",
        "dGVtcGxhdGVNb2RlU2VsZWN0LnZhbHVlID0gQ29uZmlnTWFuYWdlci5nZXQoJ2ZvbGxvd1VwVGVtcGxhdGVNb2RlJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBUZW1wbGF0ZU1vZGUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWKoOi9veivneacr+aooeadvw0KICAgICAgICAgICAgICAgIGlmICh0ZW1wbGF0ZXNDb250YWluZXIpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2F2ZWRUZW1wbGF0ZXMgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBUZW1wbGF0ZXMnLCBDT05GSUcuREVGQVVMVF9TRVRUSU5HUy5mb2xsb3dVcFRlbXBsYXRlcyk7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlVGV4dGFyZWFzID0gdGVtcGxhdGVzQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy54aHMtYWktZm9sbG93dXAtdGVtcGxhdGUnKTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDloavlhYXnjrDmnInmqKHmnb8NCiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVUZXh0YXJlYXMuZm9yRWFjaCgodGV4dGFyZWEsIGluZGV4KSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2F2ZWRUZW1wbGF0ZXNbaW5kZXhdKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dGFyZWEudmFsdWUgPSBzYXZlZFRlbXBsYXRlc1tpbmRleF07DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWKoOi9veaXtumXtOeCueiuvue9rg0KICAgICAgICAgICAgICAgIGNvbnN0IHNjaGVkdWxlSG91cnMgPSBDb25maWdNYW5hZ2VyLmdldCgnZm9sbG93VXBTY2hlZHVsZUhvdXJzJywgQ09ORklHLkRFRkFVTFRfU0VUVElOR1MuZm9sbG93VXBTY2hlZHVsZUhvdXJzKTsNCiAgICAgICAgICAgICAgICBjb25zdCB0aW1lU2xvdENoZWNrYm94ZXMgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy54aHMtYWktdGltZS1zbG90cyBpbnB1dFt0eXBlPSJjaGVja2JveCJdJyk7DQogICAgICAgICAgICAgICAgdGltZVNsb3RDaGVja2JveGVzLmZvckVhY2goY2hlY2tib3ggPT4gew0KICAgICAgICAgICAgICAgICAgICBjaGVja2JveC5jaGVja2VkID0gc2NoZWR1bGVIb3Vycy5pbmNsdWRlcyhwYXJzZUludChjaGVja2JveC52YWx1ZSkpOw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw5pi+56S654q25oCBDQogICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVGb2xsb3dVcEVuYWJsZWRDaGFuZ2UoKTsNCiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZUZvbGxvd1VwUmFuZG9tRGVsYXlDaGFuZ2UoKTsNCiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZUZvbGxvd1VwQXV0b1JlY29yZENoYW5nZSgpOw0KICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlVGVtcGxhdGVNb2RlQ2hhbmdlKCk7DQogICAgICAgICAgICAg",
        "ICAgdGhpcy51cGRhdGVGb2xsb3dVcFN0YXRzKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDliJ3lp4vljJbov73nsonlkI3ljZXnrqHnkIbnm7jlhbPlj5jph48NCiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRGb2xsb3dVcFBhZ2UgPSAxOw0KICAgICAgICAgICAgICAgIHRoaXMudG90YWxGb2xsb3dVcFBhZ2VzID0gMTsNCiAgICAgICAgICAgICAgICB0aGlzLmZvbGxvd1VwU2VhcmNoVGltZW91dCA9IG51bGw7DQoNCiAgICAgICAgICAgICAgICAvLyDwn4aVIOWIneWni+WMluaJuemHj+aTjeS9nOebuOWFs+WPmOmHjw0KICAgICAgICAgICAgICAgIHRoaXMuYmF0Y2hNb2RlRW5hYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRVc2VySWRzID0gbmV3IFNldCgpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfov73nsonphY3nva7lt7LliqDovb0nKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliqDovb3ov73nsonphY3nva7lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbor53mnK/mqKHlvI/lj5jljJYNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRlbXBsYXRlTW9kZUNoYW5nZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgbW9kZVNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC10ZW1wbGF0ZS1tb2RlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVzQ29udGFpbmVyID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlcy1jb250YWluZXInKTsNCg0KICAgICAgICAgICAgICAgIGlmIChtb2RlU2VsZWN0ICYmIHRlbXBsYXRlc0NvbnRhaW5lcikgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBtb2RlID0gbW9kZVNlbGVjdC52YWx1ZTsNCg0KICAgICAgICAgICAgICAgICAgICAvLyBBSeaooeW8j+S4i+makOiXj+aooeadv+e8lui+ke+8jOWFtuS7luaooeW8j+aYvuekug0KICAgICAgICAgICAgICAgICAgICBpZiAobW9kZSA9PT0gJ2FpJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVzQ29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAnMC41JzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlc0NvbnRhaW5lci5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ25vbmUnOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVzQ29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAnMSc7DQogICAgICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZXNDb250YWluZXIuc3R5bGUucG9pbnRlckV2ZW50cyA9ICdhdXRvJzsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAg",
        "ICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6K+d5pyv5qih5byP5bey5YiH5o2iJywgeyBtb2RlIH0pOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflpITnkIbor53mnK/mqKHlvI/lj5jljJblpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmt7vliqDor53mnK/mqKHmnb8NCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUFkZFRlbXBsYXRlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtdGVtcGxhdGVzLWNvbnRhaW5lcicpOw0KICAgICAgICAgICAgICAgIGlmICghY29udGFpbmVyKSByZXR1cm47DQoNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wbGF0ZUNvdW50ID0gY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJy54aHMtYWktdGVtcGxhdGUtaXRlbScpLmxlbmd0aDsNCiAgICAgICAgICAgICAgICBjb25zdCBuZXdJbmRleCA9IHRlbXBsYXRlQ291bnQgKyAxOw0KDQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7DQogICAgICAgICAgICAgICAgdGVtcGxhdGVJdGVtLmNsYXNzTmFtZSA9ICd4aHMtYWktdGVtcGxhdGUtaXRlbSc7DQogICAgICAgICAgICAgICAgdGVtcGxhdGVJdGVtLmlubmVySFRNTCA9IGANCiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPuesrCR7bmV3SW5kZXh95qyh5Zue6K6/6K+d5pyvOjwvbGFiZWw+DQogICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlIiByb3dzPSI0Ig0KICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9Iuivt+i+k+WFpeesrCR7bmV3SW5kZXh95qyh5Zue6K6/55qE6K+d5pyv5YaF5a65Li4uIj48L3RleHRhcmVhPg0KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9Inhocy1haS1idG4geGhzLWFpLWJ0bi1zbWFsbCB4aHMtYWktcmVtb3ZlLXRlbXBsYXRlIg0KICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi10b3A6IDVweDsgYmFja2dyb3VuZDogI2ZmNmI2YjsiPuWIoOmZpDwvYnV0dG9uPg0KICAgICAgICAgICAgICAgIGA7DQoNCiAgICAgICAgICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQodGVtcGxhdGVJdGVtKTsNCg0KICAgICAgICAgICAgICAgIC8vIOe7keWumuWIoOmZpOaMiemSruS6i+S7tg0KICAgICAgICAgICAgICAgIGNvbnN0IHJlbW92ZUJ0biA9IHRlbXBsYXRlSXRlbS5xdWVyeVNlbGVjdG9yKCcueGhzLWFpLXJlbW92ZS10ZW1wbGF0ZScpOw0KICAgICAgICAgICAgICAgIHJlbW92ZUJ0bi5hZGRFdmVu",
        "dExpc3RlbmVyKCdjbGljaycsICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVJdGVtLnJlbW92ZSgpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVRlbXBsYXRlTGFiZWxzKCk7DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ivneacr+aooeadv+W3sua3u+WKoCcsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmt7vliqDor53mnK/mqKHmnb8nLCB7IG5ld0luZGV4IH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+a3u+WKoOivneacr+aooeadv+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmt7vliqDor53mnK/mqKHmnb/lpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6YeN572u6K+d5pyv5qih5p2/DQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVSZXNldFRlbXBsYXRlcygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKCFjb25maXJtKCfnoa7lrpropoHph43nva7kuLrpu5jorqTor53mnK/mqKHmnb/lkJfvvJ/lvZPliY3nmoToh6rlrprkuYnor53mnK/lsIbooqvmuIXnqbrjgIInKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgY29udGFpbmVyID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlcy1jb250YWluZXInKTsNCiAgICAgICAgICAgICAgICBpZiAoIWNvbnRhaW5lcikgcmV0dXJuOw0KDQogICAgICAgICAgICAgICAgLy8g5riF56m6546w5pyJ5qih5p2/DQogICAgICAgICAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9ICcnOw0KDQogICAgICAgICAgICAgICAgLy8g5re75Yqg6buY6K6k5qih5p2/DQogICAgICAgICAgICAgICAgY29uc3QgZGVmYXVsdFRlbXBsYXRlcyA9IENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmZvbGxvd1VwVGVtcGxhdGVzOw0KICAgICAgICAgICAgICAgIGRlZmF1bHRUZW1wbGF0ZXMuZm9yRWFjaCgodGVtcGxhdGUsIGluZGV4KSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlSXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOw0KICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZUl0ZW0uY2xhc3NOYW1lID0gJ3hocy1haS10ZW1wbGF0ZS1pdGVtJzsNCiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVJdGVtLmlubmVySFRNTCA9IGANCiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD7nrKwke2luZGV4ICsgMX3mrKHlm57orr/or53mnK86PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0",
        "ZXh0YXJlYSBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXRlbXBsYXRlIiByb3dzPSI0Ij4ke3RlbXBsYXRlfTwvdGV4dGFyZWE+DQogICAgICAgICAgICAgICAgICAgIGA7DQogICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh0ZW1wbGF0ZUl0ZW0pOw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfor53mnK/mqKHmnb/lt7Lph43nva7kuLrpu5jorqQnLCAnc3VjY2VzcycpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfor53mnK/mqKHmnb/lt7Lph43nva7kuLrpu5jorqQnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfph43nva7or53mnK/mqKHmnb/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6YeN572u6K+d5pyv5qih5p2/5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOaooeadv+agh+etvuW6j+WPtw0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlVGVtcGxhdGVMYWJlbHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC10ZW1wbGF0ZXMtY29udGFpbmVyJyk7DQogICAgICAgICAgICAgICAgaWYgKCFjb250YWluZXIpIHJldHVybjsNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlSXRlbXMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLnhocy1haS10ZW1wbGF0ZS1pdGVtJyk7DQogICAgICAgICAgICAgICAgdGVtcGxhdGVJdGVtcy5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBsYWJlbCA9IGl0ZW0ucXVlcnlTZWxlY3RvcignbGFiZWwnKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKGxhYmVsKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbC50ZXh0Q29udGVudCA9IGDnrKwke2luZGV4ICsgMX3mrKHlm57orr/or53mnK86YDsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOaooeadv+agh+etvuWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAgICAgLy8g6L+957KJ5ZCN5Y2V566h55CG55u45YWz5aSE55CG5pa55rOVDQogICAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhui/",
        "veeyieWQjeWNleWxleW8gC/mlLbotbcNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRvZ2dsZUZvbGxvd1VwTGlzdCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgY29udGVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1saXN0LWNvbnRlbnQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktdG9nZ2xlLWZvbGxvd3VwLWxpc3QnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChjb250ZW50ICYmIGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1Zpc2libGUgPSBjb250ZW50LnN0eWxlLmRpc3BsYXkgIT09ICdub25lJzsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gaXNWaXNpYmxlID8gJ25vbmUnIDogJ2Jsb2NrJzsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gaXNWaXNpYmxlID8gJ+WxleW8gCcgOiAn5pS26LW3JzsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzlsZXlvIDvvIzliJnliLfmlrDliJfooagNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1Zpc2libGUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9sbG93VXBMaXN0KCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5YiH5o2i6L+957KJ5ZCN5Y2V5pi+56S65aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG6L+957KJ5ZCN5Y2V5pCc57SiDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVGb2xsb3dVcFNlYXJjaCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g6Ziy5oqW5aSE55CGDQogICAgICAgICAgICAgICAgaWYgKHRoaXMuZm9sbG93VXBTZWFyY2hUaW1lb3V0KSB7DQogICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aGlzLmZvbGxvd1VwU2VhcmNoVGltZW91dCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgdGhpcy5mb2xsb3dVcFNlYXJjaFRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJGb2xsb3dVcExpc3QoKTsNCiAgICAgICAgICAgICAgICB9LCAzMDApOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieWQjeWNleaQnOe0ouWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhui/veeyieWQjeWNleetm+mAiQ0KICAgICAg",
        "ICAgKi8NCiAgICAgICAgaGFuZGxlRm9sbG93VXBGaWx0ZXIoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudEZvbGxvd1VwUGFnZSA9IDE7IC8vIOmHjee9ruWIsOesrOS4gOmhtQ0KICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9sbG93VXBMaXN0KCk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6L+957KJ5ZCN5Y2V562b6YCJ5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5Yi35paw6L+957KJ5ZCN5Y2VDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVSZWZyZXNoRm9sbG93VXBMaXN0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckZvbGxvd1VwTGlzdCgpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign6L+957KJ5ZCN5Y2V5bey5Yi35pawJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliLfmlrDov73nsonlkI3ljZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Yi35paw6L+957KJ5ZCN5Y2V5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhui/veeyieWQjeWNleS4iuS4gOmhtQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlRm9sbG93VXBQcmV2UGFnZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuY3VycmVudEZvbGxvd1VwUGFnZSA+IDEpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50Rm9sbG93VXBQYWdlLS07DQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9sbG93VXBMaXN0KCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieWQjeWNlee/u+mhteWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhui/veeyieWQjeWNleS4i+S4gOmhtQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlRm9sbG93VXBOZXh0UGFnZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgdG90YWxQYWdlcyA9IHRoaXMudG90YWxGb2xsb3dVcFBhZ2VzIHx8IDE7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuY3VycmVudEZvbGxvd1VwUGFnZSA8IHRvdGFsUGFnZXMpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50Rm9s",
        "bG93VXBQYWdlKys7DQogICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9sbG93VXBMaXN0KCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+i/veeyieWQjeWNlee/u+mhteWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOa4suafk+i/veeyieWQjeWNlQ0KICAgICAgICAgKi8NCiAgICAgICAgcmVuZGVyRm9sbG93VXBMaXN0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDliJ3lp4vljJbliIbpobXlj5jph48NCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuY3VycmVudEZvbGxvd1VwUGFnZSkgdGhpcy5jdXJyZW50Rm9sbG93VXBQYWdlID0gMTsNCiAgICAgICAgICAgICAgICBjb25zdCBwYWdlU2l6ZSA9IDEwOyAvLyDmr4/pobXmmL7npLoxMOS4queUqOaItw0KDQogICAgICAgICAgICAgICAgLy8g6I635Y+W5pCc57Si5ZKM562b6YCJ5p2h5Lu2DQogICAgICAgICAgICAgICAgY29uc3Qgc2VhcmNoSW5wdXQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtc2VhcmNoJyk7DQogICAgICAgICAgICAgICAgY29uc3QgZmlsdGVyU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWZpbHRlcicpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNlYXJjaFRlcm0gPSBzZWFyY2hJbnB1dCA/IHNlYXJjaElucHV0LnZhbHVlLnRyaW0oKS50b0xvd2VyQ2FzZSgpIDogJyc7DQogICAgICAgICAgICAgICAgY29uc3QgZmlsdGVyU3RhdHVzID0gZmlsdGVyU2VsZWN0ID8gZmlsdGVyU2VsZWN0LnZhbHVlIDogJ2FsbCc7DQoNCiAgICAgICAgICAgICAgICAvLyDojrflj5bmiYDmnInov73nsonorrDlvZUNCiAgICAgICAgICAgICAgICBjb25zdCBhbGxSZWNvcmRzID0gQXJyYXkuZnJvbShGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkQ2FjaGUuZW50cmllcygpKS5tYXAoKFt1c2VySWQsIHJlY29yZF0pID0+ICh7DQogICAgICAgICAgICAgICAgICAgIHVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgLi4ucmVjb3JkDQogICAgICAgICAgICAgICAgfSkpOw0KDQogICAgICAgICAgICAgICAgLy8g5bqU55So5pCc57Si5ZKM562b6YCJDQogICAgICAgICAgICAgICAgbGV0IGZpbHRlcmVkUmVjb3JkcyA9IGFsbFJlY29yZHMuZmlsdGVyKHJlY29yZCA9PiB7DQogICAgICAgICAgICAgICAgICAgIC8vIOaQnOe0oui/h+a7pA0KICAgICAgICAgICAgICAgICAgICBpZiAoc2VhcmNoVGVybSAmJiAhcmVjb3JkLnVzZXJOYW1lLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoVGVybSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAg",
        "ICAgIC8vIOeKtuaAgei/h+a7pA0KICAgICAgICAgICAgICAgICAgICBpZiAoZmlsdGVyU3RhdHVzICE9PSAnYWxsJyAmJiByZWNvcmQuc3RhdHVzICE9PSBmaWx0ZXJTdGF0dXMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g5oyJ5pyA5ZCO6IGU57O75pe26Ze05o6S5bqPDQogICAgICAgICAgICAgICAgZmlsdGVyZWRSZWNvcmRzLnNvcnQoKGEsIGIpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdGltZUEgPSBhLmxhc3RGb2xsb3dVcCB8fCBhLmZpcnN0Q29udGFjdCB8fCAwOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCB0aW1lQiA9IGIubGFzdEZvbGxvd1VwIHx8IGIuZmlyc3RDb250YWN0IHx8IDA7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0aW1lQiAtIHRpbWVBOw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgLy8g6K6h566X5YiG6aG1DQogICAgICAgICAgICAgICAgY29uc3QgdG90YWxSZWNvcmRzID0gZmlsdGVyZWRSZWNvcmRzLmxlbmd0aDsNCiAgICAgICAgICAgICAgICBjb25zdCB0b3RhbFBhZ2VzID0gTWF0aC5jZWlsKHRvdGFsUmVjb3JkcyAvIHBhZ2VTaXplKTsNCiAgICAgICAgICAgICAgICB0aGlzLnRvdGFsRm9sbG93VXBQYWdlcyA9IHRvdGFsUGFnZXM7DQoNCiAgICAgICAgICAgICAgICAvLyDnoa7kv53lvZPliY3pobXlnKjmnInmlYjojIPlm7TlhoUNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50Rm9sbG93VXBQYWdlID4gdG90YWxQYWdlcyAmJiB0b3RhbFBhZ2VzID4gMCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRGb2xsb3dVcFBhZ2UgPSB0b3RhbFBhZ2VzOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOiOt+WPluW9k+WJjemhteeahOiusOW9lQ0KICAgICAgICAgICAgICAgIGNvbnN0IHN0YXJ0SW5kZXggPSAodGhpcy5jdXJyZW50Rm9sbG93VXBQYWdlIC0gMSkgKiBwYWdlU2l6ZTsNCiAgICAgICAgICAgICAgICBjb25zdCBlbmRJbmRleCA9IHN0YXJ0SW5kZXggKyBwYWdlU2l6ZTsNCiAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50UGFnZVJlY29yZHMgPSBmaWx0ZXJlZFJlY29yZHMuc2xpY2Uoc3RhcnRJbmRleCwgZW5kSW5kZXgpOw0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw6K6h5pWw5pi+56S6DQogICAgICAgICAgICAgICAgY29uc3QgY291bnRFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWxpc3QtY291bnQnKTsNCiAgICAgICAgICAgICAgICBpZiAoY291bnRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIGNvdW50RWxlbWVudC50ZXh0Q29udGVudCA9IHRvdGFsUmVjb3JkczsNCiAgICAgICAgICAgICAgICB9",
        "DQoNCiAgICAgICAgICAgICAgICAvLyDmuLLmn5PnlKjmiLfliJfooagNCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtbGlzdC1jb250YWluZXInKTsNCiAgICAgICAgICAgICAgICBpZiAoIWNvbnRhaW5lcikgcmV0dXJuOw0KDQogICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRQYWdlUmVjb3Jkcy5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9ICc8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtbGlzdC1lbXB0eSI+5pqC5peg56ym5ZCI5p2h5Lu255qE55So5oi3PC9kaXY+JzsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gY3VycmVudFBhZ2VSZWNvcmRzLm1hcChyZWNvcmQgPT4gdGhpcy5jcmVhdGVGb2xsb3dVcFVzZXJJdGVtKHJlY29yZCkpLmpvaW4oJycpOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOe7keWumuaTjeS9nOaMiemSruS6i+S7tg0KICAgICAgICAgICAgICAgICAgICB0aGlzLmJpbmRGb2xsb3dVcFVzZXJBY3Rpb25zKGNvbnRhaW5lcik7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g8J+GlSDnu5Hlrprmibnph4/mk43kvZznm7jlhbPkuovku7YNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5iaW5kQmF0Y2hPcGVyYXRpb25FdmVudHMoY29udGFpbmVyKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDwn4aVIOabtOaWsOaJuemHj+aTjeS9nOeVjOmdoueKtuaAgQ0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlQmF0Y2hPcGVyYXRpb25VSSgpOw0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw5YiG6aG15o6n5Yi2DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVGb2xsb3dVcFBhZ2luYXRpb24odG90YWxQYWdlcyk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmuLLmn5Pov73nsonlkI3ljZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliJvlu7rov73nsonnlKjmiLfliJfooajpobkNCiAgICAgICAgICovDQogICAgICAgIGNyZWF0ZUZvbGxvd1VwVXNlckl0ZW0ocmVjb3JkKSB7DQogICAgICAgICAgICBjb25zdCBzdGF0dXNUZXh0ID0gdGhpcy5nZXRTdGF0dXNUZXh0KHJlY29yZC5zdGF0dXMpOw0KICAgICAgICAgICAgY29uc3Qgc3RhdHVzQ2xhc3MgPSByZWNvcmQuc3RhdHVzIHx8ICdwZW5kaW5nJzsNCiAgICAgICAgICAgIGNvbnN0IGZpcnN0Q29udGFjdFRpbWUgPSByZWNvcmQuZmlyc3RDb250YWN0ID8gbmV3IERhdGUocmVjb3JkLmZpcnN0Q29udGFjdCkudG9Mb2NhbGVTdHJpbmcoKSA6ICdOL0EnOw0KICAgICAgICAgICAgY29uc3QgbGFzdEZvbGxvd1Vw",
        "VGltZSA9IHJlY29yZC5sYXN0Rm9sbG93VXAgPyBuZXcgRGF0ZShyZWNvcmQubGFzdEZvbGxvd1VwKS50b0xvY2FsZVN0cmluZygpIDogJ+acquWbnuiuvyc7DQogICAgICAgICAgICBjb25zdCBpc0JsYWNrbGlzdGVkID0gRm9sbG93VXBCbGFja2xpc3RNYW5hZ2VyLmlzQmxhY2tsaXN0ZWQocmVjb3JkLnVzZXJJZCk7DQoNCiAgICAgICAgICAgIC8vIPCfhpUg5om56YeP5qCH6K6w5Yqf6IO977ya5Y+q5pyJ5Zyo5om56YeP5qih5byP5LiL5LiU5b6F5Zue6K6/5ZKM5Zue6K6/5Lit55qE55So5oi35omN5pi+56S65aSN6YCJ5qGGDQogICAgICAgICAgICBjb25zdCBjYW5NYXJrQXNWaXNpdGVkID0gKHJlY29yZC5zdGF0dXMgPT09ICdwZW5kaW5nJyB8fCByZWNvcmQuc3RhdHVzID09PSAnZm9sbG93aW5nJykgJiYgdGhpcy5iYXRjaE1vZGVFbmFibGVkOw0KDQogICAgICAgICAgICByZXR1cm4gYA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC11c2VyLWl0ZW0iIGRhdGEtdXNlci1pZD0iJHtyZWNvcmQudXNlcklkfSI+DQogICAgICAgICAgICAgICAgICAgICR7Y2FuTWFya0FzVmlzaXRlZCA/DQogICAgICAgICAgICAgICAgICAgICAgICBgPGRpdiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXVzZXItY2hlY2tib3giPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1jaGVja2JveCIgZGF0YS11c2VyLWlkPSIke3JlY29yZC51c2VySWR9IiAke3RoaXMuc2VsZWN0ZWRVc2VySWRzLmhhcyhyZWNvcmQudXNlcklkKSA/ICdjaGVja2VkJyA6ICcnfSAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+YCA6DQogICAgICAgICAgICAgICAgICAgICAgICAodGhpcy5iYXRjaE1vZGVFbmFibGVkID8gJzxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC11c2VyLWNoZWNrYm94LXBsYWNlaG9sZGVyIj48L2Rpdj4nIDogJycpDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXVzZXItaW5mbyI+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtdXNlci1uYW1lIj4ke3JlY29yZC51c2VyTmFtZX08L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC11c2VyLW1ldGEiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPummluasoeiBlOezuzogJHtmaXJzdENvbnRhY3RUaW1lfTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj7mnIDlkI7lm57orr86ICR7bGFzdEZvbGxvd1VwVGltZX08L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+5Zue6K6/5qyh5pWwOiAke3JlY29yZC5mb2xsb3dVcENvdW50IHx8IDB9PC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAg",
        "ICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtdXNlci1zdGF0dXMgJHtzdGF0dXNDbGFzc30iPiR7c3RhdHVzVGV4dH08L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLXVzZXItYWN0aW9ucyI+DQogICAgICAgICAgICAgICAgICAgICAgICAke2lzQmxhY2tsaXN0ZWQgPw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICc8YnV0dG9uIGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtYWN0aW9uLWJ0biB1bmJsYWNrbGlzdCIgZGF0YS1hY3Rpb249InVuYmxhY2tsaXN0Ij7np7vlh7rpu5HlkI3ljZU8L2J1dHRvbj4nIDoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnPGJ1dHRvbiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLWFjdGlvbi1idG4gYmxhY2tsaXN0IiBkYXRhLWFjdGlvbj0iYmxhY2tsaXN0Ij7liqDlhaXpu5HlkI3ljZU8L2J1dHRvbj4nDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgYDsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W54q25oCB5paH5pysDQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0dXNUZXh0KHN0YXR1cykgew0KICAgICAgICAgICAgY29uc3Qgc3RhdHVzTWFwID0gew0KICAgICAgICAgICAgICAgICdwZW5kaW5nJzogJ+W+heWbnuiuvycsDQogICAgICAgICAgICAgICAgJ2ZvbGxvd2luZyc6ICflm57orr/kuK0nLA0KICAgICAgICAgICAgICAgICdjb21wbGV0ZWQnOiAn5bey5a6M5oiQJywNCiAgICAgICAgICAgICAgICAnbGVhZHNfYWNxdWlyZWQnOiAn5bey6I6355WZ5a6i6LWEJywNCiAgICAgICAgICAgICAgICAnYmxvY2tlZCc6ICflt7LlsY/olL0nDQogICAgICAgICAgICB9Ow0KICAgICAgICAgICAgcmV0dXJuIHN0YXR1c01hcFtzdGF0dXNdIHx8ICfmnKrnn6UnOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDnu5Hlrprov73nsonnlKjmiLfmk43kvZzkuovku7YNCiAgICAgICAgICovDQogICAgICAgIGJpbmRGb2xsb3dVcFVzZXJBY3Rpb25zKGNvbnRhaW5lcikgew0KICAgICAgICAgICAgY29uc3QgYWN0aW9uQnV0dG9ucyA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcueGhzLWFpLWZvbGxvd3VwLWFjdGlvbi1idG4nKTsNCiAgICAgICAgICAgIGFjdGlvbkJ1dHRvbnMuZm9yRWFjaChidG4gPT4gew0KICAgICAgICAgICAgICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGFjdGlvbiA9IGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS1hY3Rpb24nKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlckl0ZW0gPSBlLnRhcmdldC5jbG9zZXN0KCcueGhzLWFpLWZvbGxvd3VwLXVzZXItaXRlbScp",
        "Ow0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySWQgPSB1c2VySXRlbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdXNlci1pZCcpOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VyTmFtZSA9IHVzZXJJdGVtLnF1ZXJ5U2VsZWN0b3IoJy54aHMtYWktZm9sbG93dXAtdXNlci1uYW1lJykudGV4dENvbnRlbnQ7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKGFjdGlvbiA9PT0gJ2JsYWNrbGlzdCcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlQWRkVG9Gb2xsb3dVcEJsYWNrbGlzdCh1c2VySWQsIHVzZXJOYW1lKTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhY3Rpb24gPT09ICd1bmJsYWNrbGlzdCcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlUmVtb3ZlRnJvbUZvbGxvd1VwQmxhY2tsaXN0KHVzZXJJZCwgdXNlck5hbWUpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw6L+957KJ5ZCN5Y2V5YiG6aG15o6n5Yi2DQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVGb2xsb3dVcFBhZ2luYXRpb24odG90YWxQYWdlcykgew0KICAgICAgICAgICAgY29uc3QgcGFnZUluZm8gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtcGFnZS1pbmZvJyk7DQogICAgICAgICAgICBjb25zdCBwcmV2QnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXByZXYtcGFnZScpOw0KICAgICAgICAgICAgY29uc3QgbmV4dEJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1uZXh0LXBhZ2UnKTsNCg0KICAgICAgICAgICAgaWYgKHBhZ2VJbmZvKSB7DQogICAgICAgICAgICAgICAgcGFnZUluZm8udGV4dENvbnRlbnQgPSBg56ysICR7dGhpcy5jdXJyZW50Rm9sbG93VXBQYWdlfSDpobXvvIzlhbEgJHt0b3RhbFBhZ2VzfSDpobVgOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAocHJldkJ0bikgew0KICAgICAgICAgICAgICAgIHByZXZCdG4uZGlzYWJsZWQgPSB0aGlzLmN1cnJlbnRGb2xsb3dVcFBhZ2UgPD0gMTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKG5leHRCdG4pIHsNCiAgICAgICAgICAgICAgICBuZXh0QnRuLmRpc2FibGVkID0gdGhpcy5jdXJyZW50Rm9sbG93VXBQYWdlID49IHRvdGFsUGFnZXM7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhua3u+WKoOWIsOWbnuiuv+m7keWQjeWNlQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQWRkVG9Gb2xsb3dVcEJsYWNrbGlzdCh1c2VySWQsIHVzZXJOYW1lKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGlmIChjb25maXJtKGDnoa7lrpropoHlsIbnlKjmiLciJHt1c2Vy",
        "TmFtZX0i5re75Yqg5Yiw5Zue6K6/6buR5ZCN5Y2V5ZCX77yfXG5cbua3u+WKoOWQjuivpeeUqOaIt+WwhuS4jeWGjeaOpeaUtuiHquWKqOWbnuiuv+a2iOaBr+OAgmApKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN1Y2Nlc3MgPSBGb2xsb3dVcEJsYWNrbGlzdE1hbmFnZXIuYWRkKHVzZXJJZCwgdXNlck5hbWUsICdtYW51YWwnKTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbihg5bey5bCGIiR7dXNlck5hbWV9Iua3u+WKoOWIsOWbnuiuv+m7keWQjeWNlWAsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckZvbGxvd1VwTGlzdCgpOyAvLyDliLfmlrDliJfooagNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9sbG93VXBCbGFja2xpc3QoKTsgLy8g5Yi35paw6buR5ZCN5Y2VDQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+a3u+WKoOWIsOWbnuiuv+m7keWQjeWNleWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+a3u+WKoOWIsOWbnuiuv+m7keWQjeWNleWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmt7vliqDliLDlm57orr/pu5HlkI3ljZXlpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5LuO5Zue6K6/6buR5ZCN5Y2V56e76ZmkDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVSZW1vdmVGcm9tRm9sbG93VXBCbGFja2xpc3QodXNlcklkLCB1c2VyTmFtZSkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoY29uZmlybShg56Gu5a6a6KaB5bCG55So5oi3IiR7dXNlck5hbWV9IuS7juWbnuiuv+m7keWQjeWNleenu+mZpOWQl++8n1xuXG7np7vpmaTlkI7or6XnlKjmiLflsIbph43mlrDmjqXmlLboh6rliqjlm57orr/mtojmga/jgIJgKSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzdWNjZXNzID0gRm9sbG93VXBCbGFja2xpc3RNYW5hZ2VyLnJlbW92ZSh1c2VySWQpOw0KICAgICAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKGDlt7LlsIYiJHt1c2VyTmFtZX0i5LuO5Zue6K6/6buR5ZCN5Y2V56e76ZmkYCwgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9sbG93VXBMaXN0KCk7IC8vIOWIt+aWsOWIl+ihqA0KICAgICAgICAgICAgICAgICAgICAgICAgdGhp",
        "cy5yZW5kZXJGb2xsb3dVcEJsYWNrbGlzdCgpOyAvLyDliLfmlrDpu5HlkI3ljZUNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5LuO5Zue6K6/6buR5ZCN5Y2V56e76Zmk5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5LuO5Zue6K6/6buR5ZCN5Y2V56e76Zmk5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+S7juWbnuiuv+m7keWQjeWNleenu+mZpOWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgICAgIC8vIPCfhpUg5om56YeP5pON5L2c55u45YWz5aSE55CG5pa55rOVDQogICAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWIh+aNouaJuemHj+aTjeS9nOaooeW8jw0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlVG9nZ2xlQmF0Y2hNb2RlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICB0aGlzLmJhdGNoTW9kZUVuYWJsZWQgPSAhdGhpcy5iYXRjaE1vZGVFbmFibGVkOw0KDQogICAgICAgICAgICAgICAgY29uc3QgYmF0Y2hPcGVyYXRpb25zR3JvdXAgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmF0Y2gtb3BlcmF0aW9ucy1ncm91cCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRvZ2dsZUJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtYmF0Y2gtbW9kZScpOw0KDQogICAgICAgICAgICAgICAgaWYgKGJhdGNoT3BlcmF0aW9uc0dyb3VwICYmIHRvZ2dsZUJ0bikgew0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5iYXRjaE1vZGVFbmFibGVkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBiYXRjaE9wZXJhdGlvbnNHcm91cC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZUJ0bi50ZXh0Q29udGVudCA9ICfpgIDlh7rmibnph48nOw0KICAgICAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQnRuLmNsYXNzTGlzdC5hZGQoJ3hocy1haS1idG4tZGFuZ2VyJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVCdG4uY2xhc3NMaXN0LnJlbW92ZSgneGhzLWFpLWJ0bi1zbWFsbCcpOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgYmF0Y2hPcGVyYXRpb25zR3JvdXAuc3R5bGUuZGlzcGxheSA9ICdub25lJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZUJ0bi50ZXh0",
        "Q29udGVudCA9ICfmibnph4/mk43kvZwnOw0KICAgICAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQnRuLmNsYXNzTGlzdC5yZW1vdmUoJ3hocy1haS1idG4tZGFuZ2VyJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVCdG4uY2xhc3NMaXN0LmFkZCgneGhzLWFpLWJ0bi1zbWFsbCcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g5riF56m66YCJ5oupDQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkVXNlcklkcy5jbGVhcigpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6YeN5paw5riy5p+T5YiX6KGo5Lul5pi+56S6L+makOiXj+WkjemAieahhg0KICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9sbG93VXBMaXN0KCk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5om56YeP5pON5L2c5qih5byP5YiH5o2iJywgeyBlbmFibGVkOiB0aGlzLmJhdGNoTW9kZUVuYWJsZWQgfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5YiH5o2i5om56YeP5pON5L2c5qih5byP5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5omn6KGM6YCJ5oup5pON5L2c77yI6YCJ5oup5pys6aG1L+WFqOmDqO+8iQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlRXhlY3V0ZVNlbGVjdCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0TW9kZSA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1zZWxlY3QtbW9kZScpOw0KICAgICAgICAgICAgICAgIGlmICghc2VsZWN0TW9kZSkgcmV0dXJuOw0KDQogICAgICAgICAgICAgICAgY29uc3QgbW9kZSA9IHNlbGVjdE1vZGUudmFsdWU7DQoNCiAgICAgICAgICAgICAgICBpZiAobW9kZSA9PT0gJ3BhZ2UnKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0Q3VycmVudFBhZ2UoKTsNCiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKG1vZGUgPT09ICdhbGwnKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0QWxsVXNlcnMoKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5omn6KGM6YCJ5oup5pON5L2c5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6YCJ5oup5b2T5YmN6aG16Z2i55qE5omA5pyJ55So5oi3DQogICAgICAgICAqLw0KICAgICAgICBzZWxlY3RDdXJyZW50UGFnZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgdXNlckNoZWNrYm94ZXMgPSB0aGlzLnBhbmVsLnF1",
        "ZXJ5U2VsZWN0b3JBbGwoJy54aHMtYWktZm9sbG93dXAtY2hlY2tib3gnKTsNCg0KICAgICAgICAgICAgICAgIHVzZXJDaGVja2JveGVzLmZvckVhY2goY2hlY2tib3ggPT4gew0KICAgICAgICAgICAgICAgICAgICBjaGVja2JveC5jaGVja2VkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gY2hlY2tib3guZ2V0QXR0cmlidXRlKCdkYXRhLXVzZXItaWQnKTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFVzZXJJZHMuYWRkKHVzZXJJZCk7DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVNlbGVjdGVkQ291bnQoKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mAieaLqeW9k+WJjemhtScsIHsgc2VsZWN0ZWRDb3VudDogdGhpcy5zZWxlY3RlZFVzZXJJZHMuc2l6ZSB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfpgInmi6nlvZPliY3pobXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpgInmi6nmiYDmnInnlKjmiLfvvIjljIXmi6zlhbbku5bpobXpnaLvvIkNCiAgICAgICAgICovDQogICAgICAgIHNlbGVjdEFsbFVzZXJzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDojrflj5bmiYDmnInov73nsonorrDlvZUNCiAgICAgICAgICAgICAgICBjb25zdCBhbGxSZWNvcmRzID0gQXJyYXkuZnJvbShGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkQ2FjaGUuZW50cmllcygpKTsNCg0KICAgICAgICAgICAgICAgIC8vIOW6lOeUqOW9k+WJjeeahOaQnOe0ouWSjOetm+mAieadoeS7tg0KICAgICAgICAgICAgICAgIGNvbnN0IHNlYXJjaElucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLXNlYXJjaCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGZpbHRlclNlbGVjdCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1maWx0ZXInKTsNCiAgICAgICAgICAgICAgICBjb25zdCBzZWFyY2hUZXJtID0gc2VhcmNoSW5wdXQgPyBzZWFyY2hJbnB1dC52YWx1ZS50cmltKCkudG9Mb3dlckNhc2UoKSA6ICcnOw0KICAgICAgICAgICAgICAgIGNvbnN0IGZpbHRlclN0YXR1cyA9IGZpbHRlclNlbGVjdCA/IGZpbHRlclNlbGVjdC52YWx1ZSA6ICdhbGwnOw0KDQogICAgICAgICAgICAgICAgY29uc3QgZmlsdGVyZWRSZWNvcmRzID0gYWxsUmVjb3Jkcy5maWx0ZXIoKFt1c2VySWQsIHJlY29yZF0pID0+IHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5bqU55So5pCc57Si5p2h5Lu2DQogICAgICAgICAgICAgICAgICAgIGlmIChzZWFyY2hUZXJtICYmICFyZWNvcmQudXNlck5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hUZXJtKSkgew0KICAgICAgICAgICAg",
        "ICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIC8vIOW6lOeUqOeKtuaAgeetm+mAiQ0KICAgICAgICAgICAgICAgICAgICBpZiAoZmlsdGVyU3RhdHVzICE9PSAnYWxsJyAmJiByZWNvcmQuc3RhdHVzICE9PSBmaWx0ZXJTdGF0dXMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOa4heepuuW9k+WJjemAieaLqQ0KICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRVc2VySWRzLmNsZWFyKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDpgInmi6nmiYDmnInnrKblkIjmnaHku7bnmoTnlKjmiLcNCiAgICAgICAgICAgICAgICBmaWx0ZXJlZFJlY29yZHMuZm9yRWFjaCgoW3VzZXJJZCwgcmVjb3JkXSkgPT4gew0KICAgICAgICAgICAgICAgICAgICAvLyDlj6rpgInmi6nlvoXlm57orr/lkozlm57orr/kuK3nmoTnlKjmiLfvvIjkuI7mibnph4/moIforrDlip/og73kv53mjIHkuIDoh7TvvIkNCiAgICAgICAgICAgICAgICAgICAgaWYgKHJlY29yZC5zdGF0dXMgPT09ICdwZW5kaW5nJyB8fCByZWNvcmQuc3RhdHVzID09PSAnZm9sbG93aW5nJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFVzZXJJZHMuYWRkKHVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIC8vIOabtOaWsOW9k+WJjemhtemdoueahOWkjemAieahhueKtuaAgQ0KICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJDaGVja2JveGVzID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yQWxsKCcueGhzLWFpLWZvbGxvd3VwLWNoZWNrYm94Jyk7DQogICAgICAgICAgICAgICAgdXNlckNoZWNrYm94ZXMuZm9yRWFjaChjaGVja2JveCA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJJZCA9IGNoZWNrYm94LmdldEF0dHJpYnV0ZSgnZGF0YS11c2VyLWlkJyk7DQogICAgICAgICAgICAgICAgICAgIGNoZWNrYm94LmNoZWNrZWQgPSB0aGlzLnNlbGVjdGVkVXNlcklkcy5oYXModXNlcklkKTsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU2VsZWN0ZWRDb3VudCgpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6YCJ5oup5YWo6YOo55So5oi3Jywgew0KICAgICAgICAgICAgICAgICAgICB0b3RhbEZpbHRlcmVkOiBmaWx0ZXJlZFJlY29yZHMubGVuZ3RoLA0KICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZENvdW50OiB0aGlzLnNlbGVjdGVkVXNlcklkcy5zaXplDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6YCJ5oup5YWo6YOo55So",
        "5oi35aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5om56YeP5qCH6K6w5bey5Zue6K6/DQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBoYW5kbGVCYXRjaE1hcmtWaXNpdGVkKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5zZWxlY3RlZFVzZXJJZHMuc2l6ZSA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ivt+WFiOmAieaLqeimgeagh+iusOeahOeUqOaItycsICd3YXJuaW5nJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RlZENvdW50ID0gdGhpcy5zZWxlY3RlZFVzZXJJZHMuc2l6ZTsNCiAgICAgICAgICAgICAgICBjb25zdCBjb25maXJtTWVzc2FnZSA9IGDnoa7lrpropoHlsIbpgInkuK3nmoQgJHtzZWxlY3RlZENvdW50fSDkuKrnlKjmiLfmoIforrDkuLrlt7Llm57orr/lkJfvvJ9cblxu5q2k5pON5L2c5bCG77yaXG4tIOiuvue9ruacgOWQjuWbnuiuv+aXtumXtOS4uuW9k+WJjeaXtumXtFxuLSDlop7liqDlm57orr/mrKHmlbBcbi0g5qC55o2u6YWN572u5pu05paw55So5oi354q25oCBYDsNCg0KICAgICAgICAgICAgICAgIGlmICghY29uZmlybShjb25maXJtTWVzc2FnZSkpIHsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGNvbnN0IGJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1iYXRjaC1tYXJrLXZpc2l0ZWQnKTsNCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IHRydWU7DQogICAgICAgICAgICAgICAgICAgIGJ0bi50ZXh0Q29udGVudCA9ICfmoIforrDkuK0uLi4nOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGxldCBzdWNjZXNzQ291bnQgPSAwOw0KICAgICAgICAgICAgICAgIGxldCBmYWlsdXJlQ291bnQgPSAwOw0KICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkVXNlckFycmF5ID0gQXJyYXkuZnJvbSh0aGlzLnNlbGVjdGVkVXNlcklkcyk7DQoNCiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHVzZXJJZCBvZiBzZWxlY3RlZFVzZXJBcnJheSkgew0KICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6I635Y+W55So5oi36K6w5b2VDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZWNvcmQgPSBGb2xsb3dVcFJlY29yZE1hbmFnZXIucmVjb3JkQ2FjaGUuZ2V0KHVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXJlY29yZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfmibnph4/moIforrDvvJrnlKjm",
        "iLforrDlvZXkuI3lrZjlnKgnLCB7IHVzZXJJZCB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWlsdXJlQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8g6LCD55SocmVjb3JkRm9sbG93VXDmlrnms5XmoIforrDlm57orr8NCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRlbXBsYXRlID0gJ+aJi+WKqOagh+iusOW3suWbnuiuvyc7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdWNjZXNzID0gRm9sbG93VXBSZWNvcmRNYW5hZ2VyLnJlY29yZEZvbGxvd1VwKA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWNvcmQudXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjb3JkLmNvbnZlcnNhdGlvbklkLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRydWUNCiAgICAgICAgICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2Vzc0NvdW50Kys7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+aJuemHj+agh+iusO+8mueUqOaIt+agh+iusOaIkOWKnycsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiB1c2VySWQuc3Vic3RyaW5nKDAsIDEwKSArICcuLi4nLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyTmFtZTogcmVjb3JkLnVzZXJOYW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhaWx1cmVDb3VudCsrOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgZmFpbHVyZUNvdW50Kys7DQogICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aJuemHj+agh+iusO+8muWkhOeQhueUqOaIt+Wksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pi+56S657uT5p6cDQogICAgICAgICAgICAgICAgaWYgKHN1Y2Nlc3NDb3VudCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9u",
        "KGDmiJDlip/moIforrAgJHtzdWNjZXNzQ291bnR9IOS4queUqOaIt+S4uuW3suWbnuiuvyR7ZmFpbHVyZUNvdW50ID4gMCA/IGDvvIwke2ZhaWx1cmVDb3VudH0g5Liq5aSx6LSlYCA6ICcnfWAsICdzdWNjZXNzJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5riF56m66YCJ5oup5bm26YCA5Ye65om56YeP5qih5byPDQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRVc2VySWRzLmNsZWFyKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuYmF0Y2hNb2RlRW5hYmxlZCA9IGZhbHNlOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWIt+aWsOeVjOmdog0KICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckZvbGxvd1VwTGlzdCgpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUZvbGxvd1VwU3RhdHMoKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oYOaJuemHj+agh+iusOWksei0pe+8jCR7ZmFpbHVyZUNvdW50fSDkuKrnlKjmiLflpITnkIblpLHotKVgLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmgaLlpI3mjInpkq7nirbmgIENCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5qCH6K6w5bey5Zue6K6/JzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5om56YeP5qCH6K6w5bey5Zue6K6/5a6M5oiQJywgeyBzdWNjZXNzQ291bnQsIGZhaWx1cmVDb3VudCB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmibnph4/moIforrDlt7Llm57orr/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5om56YeP5qCH6K6w5pON5L2c5aSx6LSlJywgJ2Vycm9yJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDmgaLlpI3mjInpkq7nirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmF0Y2gtbWFyay12aXNpdGVkJyk7DQogICAgICAgICAgICAgICAgaWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+agh+iusOW3suWbnuiuvyc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbmibnph4/liKDpmaTnlKjmiLcNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIGhhbmRsZUJhdGNoRGVsZXRlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAg",
        "ICBpZiAodGhpcy5zZWxlY3RlZFVzZXJJZHMuc2l6ZSA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+ivt+WFiOmAieaLqeimgeWIoOmZpOeahOeUqOaItycsICd3YXJuaW5nJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3RlZENvdW50ID0gdGhpcy5zZWxlY3RlZFVzZXJJZHMuc2l6ZTsNCiAgICAgICAgICAgICAgICBjb25zdCBjb25maXJtTWVzc2FnZSA9IGDimqDvuI8g56Gu5a6a6KaB5Yig6Zmk6YCJ5Lit55qEICR7c2VsZWN0ZWRDb3VudH0g5Liq55So5oi35ZCX77yfXG5cbuatpOaTjeS9nOWwhu+8mlxuLSDku47ov73nsonlkI3ljZXkuK3msLjkuYXliKDpmaTov5nkupvnlKjmiLdcbi0g5Yig6Zmk5omA5pyJ55u45YWz55qE5Zue6K6/6K6w5b2VXG4tIOatpOaTjeS9nOS4jeWPr+aSpOmUgFxuXG7or7fosKjmhY7mk43kvZzvvIFgOw0KDQogICAgICAgICAgICAgICAgaWYgKCFjb25maXJtKGNvbmZpcm1NZXNzYWdlKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5LqM5qyh56Gu6K6kDQogICAgICAgICAgICAgICAgaWYgKCFjb25maXJtKCfmnIDlkI7noa7orqTvvJrnnJ/nmoTopoHliKDpmaTov5nkupvnlKjmiLflkJfvvJ/mraTmk43kvZzkuI3lj6/mkqTplIDvvIEnKSkgew0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJhdGNoLWRlbGV0ZScpOw0KICAgICAgICAgICAgICAgIGlmIChidG4pIHsNCiAgICAgICAgICAgICAgICAgICAgYnRuLmRpc2FibGVkID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+WIoOmZpOS4rS4uLic7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgbGV0IHN1Y2Nlc3NDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgbGV0IGZhaWx1cmVDb3VudCA9IDA7DQogICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRVc2VyQXJyYXkgPSBBcnJheS5mcm9tKHRoaXMuc2VsZWN0ZWRVc2VySWRzKTsNCg0KICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdXNlcklkIG9mIHNlbGVjdGVkVXNlckFycmF5KSB7DQogICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAvLyDojrflj5bnlKjmiLforrDlvZXvvIjnlKjkuo7ml6Xlv5fvvIkNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlY29yZCA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5nZXQodXNlcklkKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJOYW1lID0gcmVjb3JkID8gcmVjb3JkLnVzZXJOYW1lIDogJ+acquefpeeUqOaItyc7",
        "DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOS7jue8k+WtmOS4reWIoOmZpA0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVsZXRlZCA9IEZvbGxvd1VwUmVjb3JkTWFuYWdlci5yZWNvcmRDYWNoZS5kZWxldGUodXNlcklkKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRlbGV0ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5om56YeP5Yig6Zmk77ya55So5oi35Yig6Zmk5oiQ5YqfJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6IHVzZXJJZC5zdWJzdHJpbmcoMCwgMTApICsgJy4uLicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJOYW1lOiB1c2VyTmFtZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWlsdXJlQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5om56YeP5Yig6Zmk77ya55So5oi36K6w5b2V5LiN5a2Y5ZyoJywgeyB1c2VySWQgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBmYWlsdXJlQ291bnQrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5om56YeP5Yig6Zmk77ya5aSE55CG55So5oi35aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJJZDogdXNlcklkLnN1YnN0cmluZygwLCAxMCkgKyAnLi4uJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZQ0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDlkIzmraXliLDlrZjlgqgNCiAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzc0NvdW50ID4gMCkgew0KICAgICAgICAgICAgICAgICAgICBGb2xsb3dVcFJlY29yZE1hbmFnZXIuc3luY1RvU3RvcmFnZUlmTmVlZGVkKCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5pi+56S657uT5p6cDQogICAgICAgICAgICAgICAgaWYgKHN1Y2Nlc3NDb3VudCA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKGDmiJDlip/liKDpmaQgJHtzdWNjZXNzQ291bnR9IOS4queUqOaItyR7ZmFpbHVyZUNvdW50ID4gMCA/IGDvvIwke2ZhaWx1cmVDb3VudH0g5Liq5aSx6LSlYCA6ICcnfWAsICdzdWNjZXNzJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5riF56m66YCJ5oup5bm26YCA5Ye65om56YeP5qih5byPDQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2Vs",
        "ZWN0ZWRVc2VySWRzLmNsZWFyKCk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuYmF0Y2hNb2RlRW5hYmxlZCA9IGZhbHNlOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWIt+aWsOeVjOmdog0KICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckZvbGxvd1VwTGlzdCgpOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUZvbGxvd1VwU3RhdHMoKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oYOaJuemHj+WIoOmZpOWksei0pe+8jCR7ZmFpbHVyZUNvdW50fSDkuKrnlKjmiLflpITnkIblpLHotKVgLCAnZXJyb3InKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmgaLlpI3mjInpkq7nirbmgIENCiAgICAgICAgICAgICAgICBpZiAoYnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJ0bi5kaXNhYmxlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBidG4udGV4dENvbnRlbnQgPSAn5om56YeP5Yig6ZmkJzsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5om56YeP5Yig6Zmk5a6M5oiQJywgeyBzdWNjZXNzQ291bnQsIGZhaWx1cmVDb3VudCB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmibnph4/liKDpmaTlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5om56YeP5Yig6Zmk5pON5L2c5aSx6LSlJywgJ2Vycm9yJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDmgaLlpI3mjInpkq7nirbmgIENCiAgICAgICAgICAgICAgICBjb25zdCBidG4gPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmF0Y2gtZGVsZXRlJyk7DQogICAgICAgICAgICAgICAgaWYgKGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBidG4uZGlzYWJsZWQgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gJ+aJuemHj+WIoOmZpCc7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIblj5bmtojmibnph4/pgInmi6kNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZUNhbmNlbEJhdGNoU2VsZWN0aW9uKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDmuIXnqbrmiYDmnInpgInmi6kNCiAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkVXNlcklkcy5jbGVhcigpOw0KDQogICAgICAgICAgICAgICAgLy8g5Y+W5raI5omA5pyJ5aSN6YCJ5qGG55qE6YCJ5Lit54q25oCBDQogICAgICAgICAgICAgICAgY29uc3QgdXNlckNoZWNrYm94ZXMgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy54aHMtYWktZm9sbG93dXAtY2hlY2tib3gnKTsNCiAgICAgICAgICAg",
        "ICAgICB1c2VyQ2hlY2tib3hlcy5mb3JFYWNoKGNoZWNrYm94ID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY2hlY2tib3guY2hlY2tlZCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgIH0pOw0KDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZWxlY3RlZENvdW50KCk7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W3suWPlua2iOaJgOacieaJuemHj+mAieaLqScpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WPlua2iOaJuemHj+mAieaLqeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOe7keWumuaJuemHj+aTjeS9nOebuOWFs+S6i+S7tg0KICAgICAgICAgKi8NCiAgICAgICAgYmluZEJhdGNoT3BlcmF0aW9uRXZlbnRzKGNvbnRhaW5lcikgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuYmF0Y2hNb2RlRW5hYmxlZCkgcmV0dXJuOw0KDQogICAgICAgICAgICAgICAgY29uc3QgdXNlckNoZWNrYm94ZXMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLnhocy1haS1mb2xsb3d1cC1jaGVja2JveCcpOw0KICAgICAgICAgICAgICAgIHVzZXJDaGVja2JveGVzLmZvckVhY2goY2hlY2tib3ggPT4gew0KICAgICAgICAgICAgICAgICAgICBjaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoZSkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlcklkID0gZS50YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLXVzZXItaWQnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLnRhcmdldC5jaGVja2VkKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZFVzZXJJZHMuYWRkKHVzZXJJZCk7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRVc2VySWRzLmRlbGV0ZSh1c2VySWQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTZWxlY3RlZENvdW50KCk7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+e7keWumuaJuemHj+aTjeS9nOS6i+S7tuWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOaJuemHj+aTjeS9nOeVjOmdoueKtuaAgQ0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlQmF0Y2hPcGVyYXRpb25VSSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYmF0Y2hPcGVyYXRpb25z",
        "R3JvdXAgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktYmF0Y2gtb3BlcmF0aW9ucy1ncm91cCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRvZ2dsZUJ0biA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS10b2dnbGUtYmF0Y2gtbW9kZScpOw0KDQogICAgICAgICAgICAgICAgaWYgKGJhdGNoT3BlcmF0aW9uc0dyb3VwKSB7DQogICAgICAgICAgICAgICAgICAgIGJhdGNoT3BlcmF0aW9uc0dyb3VwLnN0eWxlLmRpc3BsYXkgPSB0aGlzLmJhdGNoTW9kZUVuYWJsZWQgPyAnYmxvY2snIDogJ25vbmUnOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICh0b2dnbGVCdG4pIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuYmF0Y2hNb2RlRW5hYmxlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQnRuLnRleHRDb250ZW50ID0gJ+mAgOWHuuaJuemHjyc7DQogICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVCdG4uY2xhc3NMaXN0LmFkZCgneGhzLWFpLWJ0bi1kYW5nZXInKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZUJ0bi5jbGFzc0xpc3QucmVtb3ZlKCd4aHMtYWktYnRuLXNtYWxsJyk7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0b2dnbGVCdG4udGV4dENvbnRlbnQgPSAn5om56YeP5pON5L2cJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRvZ2dsZUJ0bi5jbGFzc0xpc3QucmVtb3ZlKCd4aHMtYWktYnRuLWRhbmdlcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdG9nZ2xlQnRuLmNsYXNzTGlzdC5hZGQoJ3hocy1haS1idG4tc21hbGwnKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlU2VsZWN0ZWRDb3VudCgpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOaJuemHj+aTjeS9nOeVjOmdoueKtuaAgeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOabtOaWsOmAieS4reaVsOmHj+aYvuekug0KICAgICAgICAgKi8NCiAgICAgICAgdXBkYXRlU2VsZWN0ZWRDb3VudCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRDb3VudEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc2VsZWN0ZWQtY291bnQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBiYXRjaE1hcmtWaXNpdGVkQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJhdGNoLW1hcmstdmlzaXRlZCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGJhdGNoRGVsZXRlQnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWJhdGNoLWRl",
        "bGV0ZScpOw0KDQogICAgICAgICAgICAgICAgaWYgKHNlbGVjdGVkQ291bnRFbGVtZW50KSB7DQogICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkQ291bnRFbGVtZW50LnRleHRDb250ZW50ID0gdGhpcy5zZWxlY3RlZFVzZXJJZHMuc2l6ZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBoYXNTZWxlY3Rpb24gPSB0aGlzLnNlbGVjdGVkVXNlcklkcy5zaXplID4gMDsNCiAgICAgICAgICAgICAgICBpZiAoYmF0Y2hNYXJrVmlzaXRlZEJ0bikgew0KICAgICAgICAgICAgICAgICAgICBiYXRjaE1hcmtWaXNpdGVkQnRuLmRpc2FibGVkID0gIWhhc1NlbGVjdGlvbjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgaWYgKGJhdGNoRGVsZXRlQnRuKSB7DQogICAgICAgICAgICAgICAgICAgIGJhdGNoRGVsZXRlQnRuLmRpc2FibGVkID0gIWhhc1NlbGVjdGlvbjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5pu05paw6YCJ5Lit5pWw6YeP5pi+56S65aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KDQoNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAgICAgLy8g5Zue6K6/6buR5ZCN5Y2V566h55CG55u45YWz5aSE55CG5pa55rOVDQogICAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhuWbnuiuv+m7keWQjeWNleWxleW8gC/mlLbotbcNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVRvZ2dsZUZvbGxvd1VwQmxhY2tsaXN0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1jb250ZW50Jyk7DQogICAgICAgICAgICAgICAgY29uc3QgYnRuID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLXRvZ2dsZS1mb2xsb3d1cC1ibGFja2xpc3QnKTsNCg0KICAgICAgICAgICAgICAgIGlmIChjb250ZW50ICYmIGJ0bikgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1Zpc2libGUgPSBjb250ZW50LnN0eWxlLmRpc3BsYXkgIT09ICdub25lJzsNCiAgICAgICAgICAgICAgICAgICAgY29udGVudC5zdHlsZS5kaXNwbGF5ID0gaXNWaXNpYmxlID8gJ25vbmUnIDogJ2Jsb2NrJzsNCiAgICAgICAgICAgICAgICAgICAgYnRuLnRleHRDb250ZW50ID0gaXNWaXNpYmxlID8gJ+WxleW8gCcgOiAn5pS26LW3JzsNCg0KICAgICAgICAgICAgICAgICAgICAvLyDlpoLmnpzlsZXlvIDvvIzliJnliLfmlrDpu5HlkI3ljZUNCiAgICAgICAgICAgICAgICAgICAgaWYgKCFpc1Zpc2libGUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyRm9s",
        "bG93VXBCbGFja2xpc3QoKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliIfmjaLlm57orr/pu5HlkI3ljZXmmL7npLrlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbliLfmlrDlm57orr/pu5HlkI3ljZUNCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZVJlZnJlc2hGb2xsb3dVcEJsYWNrbGlzdCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJGb2xsb3dVcEJsYWNrbGlzdCgpOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Zue6K6/6buR5ZCN5Y2V5bey5Yi35pawJywgJ3N1Y2Nlc3MnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfliLfmlrDlm57orr/pu5HlkI3ljZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRoaXMuc2hvd05vdGlmaWNhdGlvbign5Yi35paw5Zue6K6/6buR5ZCN5Y2V5aSx6LSlJywgJ2Vycm9yJyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhua4heepuuWbnuiuv+m7keWQjeWNlQ0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlQ2xlYXJGb2xsb3dVcEJsYWNrbGlzdCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgaWYgKGNvbmZpcm0oJ+ehruWumuimgea4heepuuaJgOacieWbnuiuv+m7keWQjeWNleWQl++8n1xuXG7mraTmk43kvZzkuI3lj6/mkqTplIDvvIzmuIXnqbrlkI7miYDmnInnlKjmiLflsIbph43mlrDmjqXmlLboh6rliqjlm57orr/mtojmga/jgIInKSkgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzdWNjZXNzID0gRm9sbG93VXBCbGFja2xpc3RNYW5hZ2VyLmNsZWFyKCk7DQogICAgICAgICAgICAgICAgICAgIGlmIChzdWNjZXNzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+Wbnuiuv+m7keWQjeWNleW3sua4heepuicsICdzdWNjZXNzJyk7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckZvbGxvd1VwQmxhY2tsaXN0KCk7IC8vIOWIt+aWsOm7keWQjeWNlQ0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJGb2xsb3dVcExpc3QoKTsgLy8g5Yi35paw6L+957KJ5ZCN5Y2VDQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dOb3RpZmljYXRpb24oJ+a4heepuuWbnuiuv+m7keWQjeWNleWksei0pScsICdlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAg",
        "ICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+a4heepuuWbnuiuv+m7keWQjeWNleWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uKCfmuIXnqbrlm57orr/pu5HlkI3ljZXlpLHotKUnLCAnZXJyb3InKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5riy5p+T5Zue6K6/6buR5ZCN5Y2VDQogICAgICAgICAqLw0KICAgICAgICByZW5kZXJGb2xsb3dVcEJsYWNrbGlzdCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgYmxhY2tsaXN0ID0gRm9sbG93VXBCbGFja2xpc3RNYW5hZ2VyLmdldEFsbCgpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNvdW50RWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtY291bnQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LWNvbnRhaW5lcicpOw0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw6K6h5pWwDQogICAgICAgICAgICAgICAgaWYgKGNvdW50RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBjb3VudEVsZW1lbnQudGV4dENvbnRlbnQgPSBibGFja2xpc3QubGVuZ3RoOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICghY29udGFpbmVyKSByZXR1cm47DQoNCiAgICAgICAgICAgICAgICAvLyDmuLLmn5Ppu5HlkI3ljZXliJfooagNCiAgICAgICAgICAgICAgICBpZiAoYmxhY2tsaXN0Lmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgICAgICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gJzxkaXYgY2xhc3M9Inhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtZW1wdHkiPuaaguaXoOWbnuiuv+m7keWQjeWNleeUqOaItzwvZGl2Pic7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9IGJsYWNrbGlzdC5tYXAoaXRlbSA9PiB0aGlzLmNyZWF0ZUZvbGxvd1VwQmxhY2tsaXN0SXRlbShpdGVtKSkuam9pbignJyk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g57uR5a6a56e76Zmk5oyJ6ZKu5LqL5Lu2DQogICAgICAgICAgICAgICAgICAgIHRoaXMuYmluZEZvbGxvd1VwQmxhY2tsaXN0QWN0aW9ucyhjb250YWluZXIpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmuLLmn5Plm57orr/pu5HlkI3ljZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDliJvlu7rlm57orr/pu5HlkI3ljZXliJfo",
        "oajpobkNCiAgICAgICAgICovDQogICAgICAgIGNyZWF0ZUZvbGxvd1VwQmxhY2tsaXN0SXRlbShpdGVtKSB7DQogICAgICAgICAgICBjb25zdCBhZGRlZFRpbWUgPSBuZXcgRGF0ZShpdGVtLmFkZGVkQXQpLnRvTG9jYWxlU3RyaW5nKCk7DQogICAgICAgICAgICBjb25zdCByZWFzb25UZXh0ID0gaXRlbS5yZWFzb24gPT09ICdtYW51YWwnID8gJ+aJi+WKqOa3u+WKoCcgOiAn6Ieq5Yqo5re75YqgJzsNCg0KICAgICAgICAgICAgcmV0dXJuIGANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LWl0ZW0iIGRhdGEtdXNlci1pZD0iJHtpdGVtLnVzZXJJZH0iPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LWluZm8iPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1uYW1lIj4ke2l0ZW0udXNlck5hbWV9PC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ4aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LW1ldGEiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7YWRkZWRUaW1lfSDCtyAke3JlYXNvblRleHR9DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9Inhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtcmVtb3ZlIiBkYXRhLXVzZXItaWQ9IiR7aXRlbS51c2VySWR9Ij7np7vpmaQ8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIGA7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOe7keWumuWbnuiuv+m7keWQjeWNleaTjeS9nOS6i+S7tg0KICAgICAgICAgKi8NCiAgICAgICAgYmluZEZvbGxvd1VwQmxhY2tsaXN0QWN0aW9ucyhjb250YWluZXIpIHsNCiAgICAgICAgICAgIGNvbnN0IHJlbW92ZUJ1dHRvbnMgPSBjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLnhocy1haS1mb2xsb3d1cC1ibGFja2xpc3QtcmVtb3ZlJyk7DQogICAgICAgICAgICByZW1vdmVCdXR0b25zLmZvckVhY2goYnRuID0+IHsNCiAgICAgICAgICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySWQgPSBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdXNlci1pZCcpOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VySXRlbSA9IGUudGFyZ2V0LmNsb3Nlc3QoJy54aHMtYWktZm9sbG93dXAtYmxhY2tsaXN0LWl0ZW0nKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlck5hbWUgPSB1c2VySXRlbS5xdWVyeVNlbGVjdG9yKCcueGhzLWFpLWZvbGxvd3VwLWJsYWNrbGlzdC1uYW1lJykudGV4dENvbnRlbnQ7DQoNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5oYW5kbGVSZW1vdmVG",
        "cm9tRm9sbG93VXBCbGFja2xpc3QodXNlcklkLCB1c2VyTmFtZSk7DQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw6IGa5YWJ6L+b57q/57uf6K6h5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVTcG90bGlnaHRTdGF0cygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc3RhdHMgPSBTcG90bGlnaHRMZWFkUHJvY2Vzc29yLmdldFN0YXRzKCk7DQoNCiAgICAgICAgICAgICAgICBjb25zdCBwcm9jZXNzZWRDb3VudEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc3BvdGxpZ2h0LXByb2Nlc3NlZC1jb3VudCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHN0YXR1c0VsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktc3BvdGxpZ2h0LXN0YXR1cycpOw0KDQogICAgICAgICAgICAgICAgaWYgKHByb2Nlc3NlZENvdW50RWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBwcm9jZXNzZWRDb3VudEVsZW1lbnQudGV4dENvbnRlbnQgPSBzdGF0cy5wcm9jZXNzZWRDb3VudDsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBzdGF0dXNFbGVtZW50LnRleHRDb250ZW50ID0gc3RhdHMuZW5hYmxlZCA/ICflt7LlkK/nlKgnIDogJ+W3suemgeeUqCc7DQogICAgICAgICAgICAgICAgICAgIHN0YXR1c0VsZW1lbnQuc3R5bGUuY29sb3IgPSBzdGF0cy5lbmFibGVkID8gJyMyZWQ1NzMnIDogJyNmZjQ3NTcnOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6IGa5YWJ6L+b57q/57uf6K6h5L+h5oGv5bey5pu05pawJywgc3RhdHMpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+abtOaWsOiBmuWFiei/m+e6v+e7n+iuoeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAgICAgLy8g6ZSZ6K+v5o6o6YCB5Yqf6IO955u45YWz5pa55rOVDQogICAgICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWKoOi9vemUmeivr+aOqOmAgemFjee9rg0KICAgICAgICAgKi8NCiAgICAgICAgbG9hZEVycm9yTm90aWZpY2F0aW9uQ29uZmlnKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBlbmFibGVkQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWVuYWJsZWQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBhcGlLZXlJbnB1dCA9IHRo",
        "aXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1ub3RpZmljYXRpb24tYXBpLWtleScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGNoYW5uZWxzU2VsZWN0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1jaGFubmVscycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHJhdGVMaW1pdElucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLXJhdGUtbGltaXQnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBkZWR1cGxpY2F0aW9uQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItZGVkdXBsaWNhdGlvbicpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGRlZHVwbGljYXRpb25XaW5kb3dJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1kZWR1cGxpY2F0aW9uLXdpbmRvdycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHRlc3RNb2RlQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItdGVzdC1tb2RlJyk7DQogICAgICAgICAgICAgICAgY29uc3QgdGVtcGxhdGVUZXh0YXJlYSA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci10ZW1wbGF0ZScpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGluY2x1ZGVLZXl3b3Jkc0lucHV0ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLWluY2x1ZGUta2V5d29yZHMnKTsNCiAgICAgICAgICAgICAgICBjb25zdCBleGNsdWRlS2V5d29yZHNJbnB1dCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1leGNsdWRlLWtleXdvcmRzJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDplJnor6/nuqfliKvlpI3pgInmoYYNCiAgICAgICAgICAgICAgICBjb25zdCBlcnJvckNoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLWxldmVsLWVycm9yJyk7DQogICAgICAgICAgICAgICAgY29uc3Qgd2FybkNoZWNrYm94ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLWxldmVsLXdhcm4nKTsNCiAgICAgICAgICAgICAgICBjb25zdCBpbmZvQ2hlY2tib3ggPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItbGV2ZWwtaW5mbycpOw0KDQogICAgICAgICAgICAgICAgLy8g5Yqg6L295Z+65pys6YWN572uDQogICAgICAgICAgICAgICAgaWYgKGVuYWJsZWRDaGVja2JveCkgew0KICAgICAgICAgICAgICAgICAgICBlbmFibGVkQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkVuYWJsZWQnLCBmYWxzZSk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlRXJyb3JOb3RpZmljYXRpb25FbmFibGVkQ2hhbmdlKCk7IC8vIOinpuWPkeaYvuekui/pmpDol4/pgLvovpENCiAgICAgICAgICAgICAgICB9DQoN",
        "CiAgICAgICAgICAgICAgICBpZiAoYXBpS2V5SW5wdXQpIHsNCiAgICAgICAgICAgICAgICAgICAgYXBpS2V5SW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25BcGlLZXknLCAnJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGNoYW5uZWxzU2VsZWN0KSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGNoYW5uZWxzID0gQ29uZmlnTWFuYWdlci5nZXQoJ2Vycm9yTm90aWZpY2F0aW9uQ2hhbm5lbHMnLCAnV1hfTVAnKS5zcGxpdCgnLCcpOw0KICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKGNoYW5uZWxzU2VsZWN0Lm9wdGlvbnMpLmZvckVhY2gob3B0aW9uID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbi5zZWxlY3RlZCA9IGNoYW5uZWxzLmluY2x1ZGVzKG9wdGlvbi52YWx1ZSk7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChyYXRlTGltaXRJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICByYXRlTGltaXRJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvblJhdGVMaW1pdCcsIDUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChkZWR1cGxpY2F0aW9uQ2hlY2tib3gpIHsNCiAgICAgICAgICAgICAgICAgICAgZGVkdXBsaWNhdGlvbkNoZWNrYm94LmNoZWNrZWQgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25EZWR1cGxpY2F0aW9uJywgdHJ1ZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKGRlZHVwbGljYXRpb25XaW5kb3dJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBkZWR1cGxpY2F0aW9uV2luZG93SW5wdXQudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25EZWR1cGxpY2F0aW9uV2luZG93JywgMTApOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICh0ZXN0TW9kZUNoZWNrYm94KSB7DQogICAgICAgICAgICAgICAgICAgIHRlc3RNb2RlQ2hlY2tib3guY2hlY2tlZCA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvblRlc3RNb2RlJywgZmFsc2UpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICh0ZW1wbGF0ZVRleHRhcmVhKSB7DQogICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVGV4dGFyZWEudmFsdWUgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25UZW1wbGF0ZScsIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmVycm9yTm90aWZpY2F0aW9uVGVtcGxhdGUpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChpbmNsdWRlS2V5d29yZHNJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBpbmNsdWRlS2V5d29yZHNJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdl",
        "cnJvck5vdGlmaWNhdGlvbktleXdvcmRzJywgJycpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmIChleGNsdWRlS2V5d29yZHNJbnB1dCkgew0KICAgICAgICAgICAgICAgICAgICBleGNsdWRlS2V5d29yZHNJbnB1dC52YWx1ZSA9IENvbmZpZ01hbmFnZXIuZ2V0KCdlcnJvck5vdGlmaWNhdGlvbkV4Y2x1ZGVLZXl3b3JkcycsICcnKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDliqDovb3plJnor6/nuqfliKvphY3nva4NCiAgICAgICAgICAgICAgICBjb25zdCBsZXZlbHMgPSBDb25maWdNYW5hZ2VyLmdldCgnZXJyb3JOb3RpZmljYXRpb25MZXZlbHMnLCAnZXJyb3InKS5zcGxpdCgnLCcpOw0KICAgICAgICAgICAgICAgIGlmIChlcnJvckNoZWNrYm94KSBlcnJvckNoZWNrYm94LmNoZWNrZWQgPSBsZXZlbHMuaW5jbHVkZXMoJ2Vycm9yJyk7DQogICAgICAgICAgICAgICAgaWYgKHdhcm5DaGVja2JveCkgd2FybkNoZWNrYm94LmNoZWNrZWQgPSBsZXZlbHMuaW5jbHVkZXMoJ3dhcm4nKTsNCiAgICAgICAgICAgICAgICBpZiAoaW5mb0NoZWNrYm94KSBpbmZvQ2hlY2tib3guY2hlY2tlZCA9IGxldmVscy5pbmNsdWRlcygnaW5mbycpOw0KDQogICAgICAgICAgICAgICAgLy8g5pu05paw57uf6K6h5L+h5oGvDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVFcnJvck5vdGlmaWNhdGlvblN0YXRzKCk7DQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVFcnJvck5vdGlmaWNhdGlvbkhpc3RvcnkoKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6ZSZ6K+v5o6o6YCB6YWN572u5bey5Yqg6L29Jyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5Yqg6L296ZSZ6K+v5o6o6YCB6YWN572u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5pu05paw6ZSZ6K+v5o6o6YCB57uf6K6h5L+h5oGvDQogICAgICAgICAqLw0KICAgICAgICB1cGRhdGVFcnJvck5vdGlmaWNhdGlvblN0YXRzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBzdGF0cyA9IEVycm9yTm90aWZpY2F0aW9uTWFuYWdlci5nZXRTdGF0cygpOw0KDQogICAgICAgICAgICAgICAgY29uc3QgdG90YWxQdXNoZXNFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLXRvdGFsLXB1c2hlcycpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHB1c2hlczI0aEVsZW1lbnQgPSB0aGlzLnBhbmVsLnF1ZXJ5U2VsZWN0b3IoJyN4aHMtYWktZXJyb3ItcHVzaGVzLTI0aCcpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHB1c2hlczFoRWxlbWVudCA9IHRoaXMucGFuZWwucXVlcnlTZWxlY3RvcignI3hocy1haS1lcnJvci1wdXNoZXMtMWgnKTsNCiAgICAgICAgICAgICAgICBjb25z",
        "dCBzdGF0dXNFbGVtZW50ID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1zdGF0dXMnKTsNCg0KICAgICAgICAgICAgICAgIGlmICh0b3RhbFB1c2hlc0VsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgdG90YWxQdXNoZXNFbGVtZW50LnRleHRDb250ZW50ID0gc3RhdHMudG90YWxQdXNoZXM7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHB1c2hlczI0aEVsZW1lbnQpIHsNCiAgICAgICAgICAgICAgICAgICAgcHVzaGVzMjRoRWxlbWVudC50ZXh0Q29udGVudCA9IHN0YXRzLnB1c2hlc0xhc3QyNGg7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgaWYgKHB1c2hlczFoRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBwdXNoZXMxaEVsZW1lbnQudGV4dENvbnRlbnQgPSBzdGF0cy5wdXNoZXNMYXN0SG91cjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzRWxlbWVudCkgew0KICAgICAgICAgICAgICAgICAgICBsZXQgc3RhdHVzVGV4dCA9ICflt7LnpoHnlKgnOw0KICAgICAgICAgICAgICAgICAgICBsZXQgc3RhdHVzQ29sb3IgPSAnI2ZmNDc1Nyc7DQoNCiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXRzLmVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGF0cy50ZXN0TW9kZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c1RleHQgPSAn5rWL6K+V5qih5byPJzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNDb2xvciA9ICcjZmZhNTAyJzsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzVGV4dCA9ICflt7LlkK/nlKgnOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c0NvbG9yID0gJyMyZWQ1NzMnOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgc3RhdHVzRWxlbWVudC50ZXh0Q29udGVudCA9IHN0YXR1c1RleHQ7DQogICAgICAgICAgICAgICAgICAgIHN0YXR1c0VsZW1lbnQuc3R5bGUuY29sb3IgPSBzdGF0dXNDb2xvcjsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+mUmeivr+aOqOmAgee7n+iuoeS/oeaBr+W3suabtOaWsCcsIHN0YXRzKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmm7TmlrDplJnor6/mjqjpgIHnu5/orqHlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmm7TmlrDplJnor6/mjqjpgIHljoblj7LorrDlvZUNCiAgICAgICAgICovDQogICAgICAgIHVwZGF0ZUVycm9yTm90aWZpY2F0aW9uSGlz",
        "dG9yeSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgaGlzdG9yeSA9IEVycm9yTm90aWZpY2F0aW9uTWFuYWdlci5nZXRQdXNoSGlzdG9yeSgxMCk7IC8vIOiOt+WPluacgOi/kTEw5p2h6K6w5b2VDQogICAgICAgICAgICAgICAgY29uc3QgY29udGFpbmVyID0gdGhpcy5wYW5lbC5xdWVyeVNlbGVjdG9yKCcjeGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1oaXN0b3J5Jyk7DQoNCiAgICAgICAgICAgICAgICBpZiAoIWNvbnRhaW5lcikgcmV0dXJuOw0KDQogICAgICAgICAgICAgICAgaWYgKGhpc3RvcnkubGVuZ3RoID09PSAwKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSAnPGRpdiBjbGFzcz0ieGhzLWFpLWhpc3RvcnktZW1wdHkiPuaaguaXoOaOqOmAgeiusOW9lTwvZGl2Pic7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLmlubmVySFRNTCA9IGhpc3RvcnkubWFwKHJlY29yZCA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0aW1lID0gbmV3IERhdGUocmVjb3JkLnRpbWVzdGFtcCkudG9Mb2NhbGVTdHJpbmcoJ3poLUNOJyk7DQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Inhocy1haS1lcnJvci1ub3RpZmljYXRpb24taGlzdG9yeS1pdGVtIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGhzLWFpLWVycm9yLW5vdGlmaWNhdGlvbi1oaXN0b3J5LXRpbWUiPiR7dGltZX08L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWhpc3RvcnktbGV2ZWwgJHtyZWNvcmQubGV2ZWx9Ij4ke3JlY29yZC5sZXZlbC50b1VwcGVyQ2FzZSgpfTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ4aHMtYWktZXJyb3Itbm90aWZpY2F0aW9uLWhpc3RvcnktbWVzc2FnZSI+JHtyZWNvcmQubWVzc2FnZX08L3NwYW4+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgYDsNCiAgICAgICAgICAgICAgICAgICAgfSkuam9pbignJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfplJnor6/mjqjpgIHljoblj7LorrDlvZXlt7Lmm7TmlrAnLCB7IGNvdW50OiBoaXN0b3J5Lmxlbmd0aCB9KTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfmm7TmlrDplJnor6/mjqjpgIHljoblj7LlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0p",
        "Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfTsNCg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgLy8g5Li75bqU55So57G7DQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICBjbGFzcyBYSFNBdXRvUmVwbHlBcHAgew0KICAgICAgICBjb25zdHJ1Y3RvcigpIHsNCiAgICAgICAgICAgIHRoaXMuaXNSdW5uaW5nID0gZmFsc2U7DQogICAgICAgICAgICB0aGlzLm1lc3NhZ2VPYnNlcnZlciA9IG51bGw7DQogICAgICAgICAgICB0aGlzLnByb2Nlc3NlZE1lc3NhZ2VzID0gbmV3IFNldCgpOw0KICAgICAgICAgICAgdGhpcy5jdXJyZW50VXNlciA9IG51bGw7DQogICAgICAgICAgICB0aGlzLnBhZ2VFbGVtZW50cyA9IG51bGw7DQoNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCflsI/nuqLkuaZBSeiHquWKqOWbnuWkjeW3peWFt+WIneWni+WMlicpOw0KICAgICAgICB9DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWIneWni+WMluW6lOeUqA0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaW5pdCgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g5qOA5p+l6aG16Z2i5piv5ZCm5q2j56GuDQogICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNoZWNrUGFnZSgpKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCflvZPliY3pobXpnaLkuI3mmK/lsI/nuqLkuabnp4Hkv6HnrqHnkIbpobXpnaInKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCflvIDlp4vliJ3lp4vljJblupTnlKguLi4nKTsNCg0KICAgICAgICAgICAgICAgIC8vIOetieW+hemhtemdouWKoOi9veWujOaIkA0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMud2FpdEZvclBhZ2VSZWFkeSgpOw0KDQogICAgICAgICAgICAgICAgLy8g5qOA5p+l6aG16Z2i5YWD57SgDQogICAgICAgICAgICAgICAgdGhpcy5wYWdlRWxlbWVudHMgPSBQYWdlRWxlbWVudE1hbmFnZXIuY2hlY2tQYWdlRWxlbWVudHMoKTsNCg0KICAgICAgICAgICAgICAgIGlmICghdGhpcy5wYWdlRWxlbWVudHMuYWxsVmFsaWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfpobXpnaLlhbPplK7lhYPntKDnvLrlpLHvvIzml6Dms5XmraPluLjov5DooYwnKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOWQr+WKqOa2iOaBr+ebkeWQrOWZqA0KICAgICAgICAgICAgICAgIE1lc3NhZ2VMaXN0ZW5lci5zdGFydCgpOw0KDQogICAgICAgICAgICAgICAgLy8g5Yid5aeL5YyW6buR5ZCN5Y2V566h55CG5ZmoDQogICAgICAgICAgICAgICAgQmxhY2tsaXN0TWFuYWdlci5pbml0KCk7DQoNCiAgICAgICAgICAgICAgICAvLyDliJ3lp4vljJbooqvmi4npu5Hmo4DmtYvlmagNCiAgICAgICAgICAgICAg",
        "ICBCbG9ja2VkVXNlckRldGVjdG9yLmluaXQoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWIneWni+WMluWDteWwuOacquivu+euoeeQhuWZqA0KICAgICAgICAgICAgICAgIFpvbWJpZVVucmVhZE1hbmFnZXIuaW5pdCgpOw0KDQogICAgICAgICAgICAgICAgLy8g5Yid5aeL5YyWU2VsbGVyIElE5o+Q5Y+W5ZmoDQogICAgICAgICAgICAgICAgU2VsbGVySWRFeHRyYWN0b3IuaW5pdCgpOw0KDQogICAgICAgICAgICAgICAgLy8g5re75Yqg5YWo5bGA5rWL6K+V5Ye95pWw77yI5pa55L6/6LCD6K+V77yJDQogICAgICAgICAgICAgICAgd2luZG93LnRlc3RTZWxsZXJJZEV4dHJhY3Rpb24gPSAoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfwn6eqIOW8gOWni+a1i+ivlXNlbGxlcl9pZOaPkOWPluWKn+iDvS4uLicpOw0KICAgICAgICAgICAgICAgICAgICBTZWxsZXJJZEV4dHJhY3Rvci50ZXN0RXh0cmFjdGlvbigpOw0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICB3aW5kb3cuZGVidWdTZWxsZXJJZEV4dHJhY3RvciA9ICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgU2VsbGVySWRFeHRyYWN0b3IuZGVidWcoKTsNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgd2luZG93LnJlZnJlc2hTZWxsZXJJZEV4dHJhY3RvciA9ICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgU2VsbGVySWRFeHRyYWN0b3IuZm9yY2VSZWZyZXNoKCk7DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIC8vIOa3u+WKoOiHquWKqOS/ruWkjea1i+ivleWHveaVsA0KICAgICAgICAgICAgICAgIHdpbmRvdy50ZXN0U2VsbGVySWRBdXRvUmVwYWlyID0gKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn8J+UpyDlvIDlp4vmtYvor5VTZWxsZXIgSUToh6rliqjkv67lpI3lip/og70uLi4nKTsNCiAgICAgICAgICAgICAgICAgICAgU2VsbGVySWRFeHRyYWN0b3Iuc3RhcnRBdXRvUmVwYWlyKCk7DQogICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgIHdpbmRvdy5nZXRTZWxsZXJJZFN0YXR1cyA9ICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzID0gU2VsbGVySWRFeHRyYWN0b3IuZ2V0U3RhdHVzUmVwb3J0KCk7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfwn5OKIFNlbGxlciBJROeKtuaAgeaKpeWRijonLCBzdGF0dXMpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3RhdHVzOw0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAvLyDmt7vliqDlg7XlsLjmnKror7vlpITnkIbmtYvor5Xlh73mlbDvvIjmlrnkvr/osIPor5XvvIkNCiAgICAgICAgICAgICAgICB3aW5kb3cudGVzdFpvbWJpZVVucmVhZERldGVjdGlvbiA9ICh1c2VyTmFtZSA9ICfmtYvor5XnlKjmiLcnLCBtZXNzYWdlUHJldmlldyA9ICflr7nmlrnpgJrov4fjgIzmtYvor5Xor77nqIvjgI3ov5vl",
        "haXnp4Hkv6HvvIzlv6vljrvogZTns7vlkKcnKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfwn6efIOW8gOWni+a1i+ivleWDteWwuOacquivu+ajgOa1i+WKn+iDvS4uLicpOw0KDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IGRldGVjdGlvbiA9IFpvbWJpZVVucmVhZE1hbmFnZXIuZGV0ZWN0Wm9tYmllVW5yZWFkKA0KICAgICAgICAgICAgICAgICAgICAgICAgdXNlck5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICBudWxsLCAvLyDml6Dmtojmga/lhoXlrrkNCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VQcmV2aWV3LA0KICAgICAgICAgICAgICAgICAgICAgICAgdHJ1ZSAgLy8g5bey5Y+R6YCB5Li75Yqo6K+d5pyvDQogICAgICAgICAgICAgICAgICAgICk7DQoNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+ajgOa1i+e7k+aenDonLCBkZXRlY3Rpb24pOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChkZXRlY3Rpb24uaXNab21iaWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvb2xkb3duU3RhdHVzID0gWm9tYmllVW5yZWFkTWFuYWdlci5jaGVja0Nvb2xkb3duKHVzZXJOYW1lLCBkZXRlY3Rpb24uZmluZ2VycHJpbnQpOw0KICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+WGt+WNtOeKtuaAgTonLCBjb29sZG93blN0YXR1cyk7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghY29vbGRvd25TdGF0dXMuaW5Db29sZG93bikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIFpvbWJpZVVucmVhZE1hbmFnZXIucmVjb3JkWm9tYmllUHJvY2Vzcyh1c2VyTmFtZSwgZGV0ZWN0aW9uLmZpbmdlcnByaW50KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn4pyFIOW3suiusOW9leWDteWwuOacquivu+WkhOeQhicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3RhdHMgPSBab21iaWVVbnJlYWRNYW5hZ2VyLmdldFN0YXRzKCk7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfnu5/orqHkv6Hmga86Jywgc3RhdHMpOw0KICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICB3aW5kb3cuZGVidWdab21iaWVVbnJlYWRNYW5hZ2VyID0gKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn8J+nnyDlg7XlsLjmnKror7vnrqHnkIblmajosIPor5Xkv6Hmga86Jyk7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfnvJPlrZjlpKflsI86JywgWm9tYmllVW5yZWFkTWFuYWdlci5jYWNoZS5zaXplKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+e7n+iuoeS/oeaBrzonLCBab21iaWVVbnJlYWRNYW5hZ2VyLmdldFN0YXRzKCkpOw0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5omA5pyJ6K6w5b2VOicsIEFycmF5",
        "LmZyb20oWm9tYmllVW5yZWFkTWFuYWdlci5jYWNoZS5lbnRyaWVzKCkpKTsNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgd2luZG93LmNsZWFyWm9tYmllVW5yZWFkUmVjb3JkcyA9ICgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgWm9tYmllVW5yZWFkTWFuYWdlci5yZXNldCgpOw0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn8J+nnyDlg7XlsLjmnKror7vorrDlvZXlt7LmuIXnqbonKTsNCiAgICAgICAgICAgICAgICB9Ow0KDQogICAgICAgICAgICAgICAgLy8g5Yid5aeL5YyW5Lya6K+d6K6w5b+G566h55CG5ZmoDQogICAgICAgICAgICAgICAgQ2hhdFNlc3Npb25NYW5hZ2VyLmluaXQoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOWIneWni+WMlui/veeyieeuoeeQhuWZqA0KICAgICAgICAgICAgICAgIEZvbGxvd1VwTWFuYWdlci5pbml0KCk7DQoNCiAgICAgICAgICAgICAgICAvLyDliJ3lp4vljJbnlKjmiLfnlYzpnaINCiAgICAgICAgICAgICAgICBVSU1hbmFnZXIuaW5pdCgpOw0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W6lOeUqOWIneWni+WMluWujOaIkCcpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+W6lOeUqOWIneWni+WMluWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog5ZCv5Yqo6Ieq5Yqo5Zue5aSNDQogICAgICAgICAqLw0KICAgICAgICBzdGFydCgpIHsNCiAgICAgICAgICAgIC8vIOajgOafpeacjeWKoeerr+aYr+WQpuWFgeiuuOiEmuacrOi/kOihjA0KICAgICAgICAgICAgaWYgKCFTZXJ2ZXJNYW5hZ2VyLmlzU2NyaXB0QWxsb3dlZCgpKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ/Cfmqsg6ISa5pys5bey6KKr5pyN5Yqh56uv56aB55So77yM5peg5rOV5ZCv5YqoJyk7DQogICAgICAgICAgICAgICAgR01fbm90aWZpY2F0aW9uKHsNCiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IENPTkZJRy5BUFBfTkFNRSwNCiAgICAgICAgICAgICAgICAgICAgdGV4dDogJ+iEmuacrOW3suiiq+W8gOWPkeiAheemgeeUqO+8jOaXoOazleWQr+WKqCcsDQogICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDUwMDANCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmICh0aGlzLmlzUnVubmluZykgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCfoh6rliqjlm57lpI3lt7LlnKjov5DooYwnKTsNCiAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgQ29uZmlnTWFuYWdlci5zZXQoJ2VuYWJsZWQnLCB0cnVlKTsNCiAgICAgICAgICAgICAgICB0aGlzLmlzUnVubmluZyA9IHRydWU7DQoNCiAgICAg",
        "ICAgICAgICAgICAvLyDliJ3lp4vljJblhYPntKDnrqHnkIblmagNCiAgICAgICAgICAgICAgICBFbGVtZW50TWFuYWdlci5pbml0KCk7DQoNCiAgICAgICAgICAgICAgICAvLyDlkK/liqjmtojmga/nm5HlkKwNCiAgICAgICAgICAgICAgICBpZiAoIU1lc3NhZ2VMaXN0ZW5lci5pc0xpc3RlbmluZykgew0KICAgICAgICAgICAgICAgICAgICBNZXNzYWdlTGlzdGVuZXIuc3RhcnQoKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6Ieq5Yqo5Zue5aSN5bey5ZCv5Yqo77yI5bey5ZCv55SoRE9N56iz5a6a5oCn5LyY5YyW77yJJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDnq4vljbPmo4Dmn6XkuIDmrKHmlrDmtojmga8NCiAgICAgICAgICAgICAgICB0aGlzLmNoZWNrRm9yTmV3TWVzc2FnZXMoKTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WQr+WKqOiHquWKqOWbnuWkjeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgdGhpcy5pc1J1bm5pbmcgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZW5hYmxlZCcsIGZhbHNlKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlgZzmraLoh6rliqjlm57lpI0NCiAgICAgICAgICovDQogICAgICAgIHN0b3AoKSB7DQogICAgICAgICAgICBpZiAoIXRoaXMuaXNSdW5uaW5nKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+iHquWKqOWbnuWkjeacquWcqOi/kOihjCcpOw0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZW5hYmxlZCcsIGZhbHNlKTsNCiAgICAgICAgICAgICAgICB0aGlzLmlzUnVubmluZyA9IGZhbHNlOw0KDQogICAgICAgICAgICAgICAgLy8g5YGc5q2i5raI5oGv55uR5ZCsDQogICAgICAgICAgICAgICAgTWVzc2FnZUxpc3RlbmVyLnN0b3AoKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfoh6rliqjlm57lpI3lt7LlgZzmraInKTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WBnOatouiHquWKqOWbnuWkjeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG5paw5raI5oGv77yI55SxTWVzc2FnZUxpc3RlbmVy6LCD55So77yJDQogICAgICAgICAqIEBwYXJhbSB7QXJyYXl9IGVsZW1lbnRzIOWMheWQq+aWsOa2iOaBr+eahOWFg+e0oOWIl+ihqA0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgaGFuZGxlTmV3TWVzc2FnZXMoZWxlbWVudHMpIHsNCiAgICAgICAgICAgIC8vIOajgOafpeacjeWKoeer",
        "r+aYr+WQpuWFgeiuuOiEmuacrOi/kOihjA0KICAgICAgICAgICAgaWYgKCFTZXJ2ZXJNYW5hZ2VyLmlzU2NyaXB0QWxsb3dlZCgpKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ/Cfmqsg6ISa5pys5bey6KKr5pyN5Yqh56uv56aB55So77yM5YGc5q2i5aSE55CG5raI5oGvJyk7DQogICAgICAgICAgICAgICAgdGhpcy5zdG9wKCk7IC8vIOiHquWKqOWBnOatouiEmuacrA0KICAgICAgICAgICAgICAgIHJldHVybjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKCF0aGlzLmlzUnVubmluZyB8fCAhQ29uZmlnTWFuYWdlci5nZXQoJ2VuYWJsZWQnKSkgew0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6Ieq5Yqo5Zue5aSN5pyq5ZCv55So77yM6Lez6L+H5aSE55CGJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBMb2dnZXIuaW5mbygn5pS25Yiw5paw5raI5oGv6YCa55+lJywgeyBjb3VudDogZWxlbWVudHMubGVuZ3RoIH0pOw0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGF3YWl0IE1lc3NhZ2VQcm9jZXNzb3IucHJvY2Vzc05ld01lc3NhZ2VzKGVsZW1lbnRzKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflpITnkIbmlrDmtojmga/lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOaJi+WKqOajgOafpeaWsOa2iOaBrw0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgY2hlY2tGb3JOZXdNZXNzYWdlcygpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgY29udGFjdHNXaXRoTWVzc2FnZXMgPSBQYWdlRWxlbWVudE1hbmFnZXIuZ2V0Q29udGFjdHNXaXRoTmV3TWVzc2FnZXMoKTsNCiAgICAgICAgICAgICAgICBpZiAoY29udGFjdHNXaXRoTWVzc2FnZXMubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5omL5Yqo5qOA5p+l5Y+R546w5paw5raI5oGvJywgeyBjb3VudDogY29udGFjdHNXaXRoTWVzc2FnZXMubGVuZ3RoIH0pOw0KICAgICAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmhhbmRsZU5ld01lc3NhZ2VzKGNvbnRhY3RzV2l0aE1lc3NhZ2VzLm1hcChjID0+IGMuZWxlbWVudCkpOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5omL5Yqo5qOA5p+l5pyq5Y+R546w5paw5raI5oGvJyk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aJi+WKqOajgOafpeaWsOa2iOaBr+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAvKioNCiAgICAg",
        "ICAgICog5qOA5p+l5b2T5YmN6aG16Z2iDQogICAgICAgICAqIEByZXR1cm5zIHtib29sZWFufQ0KICAgICAgICAgKi8NCiAgICAgICAgY2hlY2tQYWdlKCkgew0KICAgICAgICAgICAgY29uc3QgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7DQogICAgICAgICAgICBjb25zdCBpc0NvcnJlY3RQYWdlID0gdXJsLmluY2x1ZGVzKCdwcm8ueGlhb2hvbmdzaHUuY29tL2ltL211bHRpQ3VzdG9tZXJTZXJ2aWNlJyk7DQoNCiAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn6aG16Z2i5qOA5p+lJywgew0KICAgICAgICAgICAgICAgIHVybCwNCiAgICAgICAgICAgICAgICBpc0NvcnJlY3RQYWdlLA0KICAgICAgICAgICAgICAgIHRpdGxlOiBkb2N1bWVudC50aXRsZQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIHJldHVybiBpc0NvcnJlY3RQYWdlOw0KICAgICAgICB9DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOetieW+hemhtemdouWHhuWkh+Wwsee7qg0KICAgICAgICAgKi8NCiAgICAgICAgYXN5bmMgd2FpdEZvclBhZ2VSZWFkeSgpIHsNCiAgICAgICAgICAgIExvZ2dlci5pbmZvKCfnrYnlvoXpobXpnaLlhYPntKDliqDovb0uLi4nKTsNCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDnrYnlvoXlhbPplK7lhYPntKDlh7rnjrANCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy53YWl0Rm9yRWxlbWVudChDT05GSUcuU0VMRUNUT1JTLmNvbnRhY3RMaXN0LCAxNTAwMCk7DQoNCiAgICAgICAgICAgICAgICAvLyDpop3lpJbnrYnlvoXnoa7kv53pobXpnaLlrozlhajliqDovb0NCiAgICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgyMDAwKTsNCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfpobXpnaLliqDovb3lrozmiJAnKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfpobXpnaLliqDovb3otoXml7YnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHRocm93IGVycm9yOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPlumhtemdoueKtuaAgeS/oeaBrw0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0UGFnZVN0YXR1cygpIHsNCiAgICAgICAgICAgIGNvbnN0IGNvbnRhY3RzV2l0aE1lc3NhZ2VzID0gUGFnZUVsZW1lbnRNYW5hZ2VyLmdldENvbnRhY3RzV2l0aE5ld01lc3NhZ2VzKCk7DQogICAgICAgICAgICBjb25zdCBpbnB1dEJveCA9IFBhZ2VFbGVtZW50TWFuYWdlci5nZXRNZXNzYWdlSW5wdXRCb3goKTsNCiAgICAgICAgICAgIGNvbnN0IHNlbmRCdXR0b24gPSBQYWdlRWxlbWVudE1hbmFnZXIuZ2V0U2VuZEJ1dHRvbigpOw0KDQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIGlzT25Db3JyZWN0UGFnZTogdGhpcy5jaGVja1BhZ2UoKSwNCiAgICAg",
        "ICAgICAgICAgICBoYXNOZXdNZXNzYWdlczogY29udGFjdHNXaXRoTWVzc2FnZXMubGVuZ3RoID4gMCwNCiAgICAgICAgICAgICAgICBuZXdNZXNzYWdlQ291bnQ6IGNvbnRhY3RzV2l0aE1lc3NhZ2VzLmxlbmd0aCwNCiAgICAgICAgICAgICAgICBjYW5TZW5kTWVzc2FnZTogISEoaW5wdXRCb3ggJiYgc2VuZEJ1dHRvbiksDQogICAgICAgICAgICAgICAgY29udGFjdHNXaXRoTWVzc2FnZXMNCiAgICAgICAgICAgIH07DQogICAgICAgIH0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5bqU55So57uf6K6h5L+h5oGvDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBnZXRTdGF0cygpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgYXBwOiB7DQogICAgICAgICAgICAgICAgICAgIHZlcnNpb246IENPTkZJRy5WRVJTSU9OLA0KICAgICAgICAgICAgICAgICAgICBpc1J1bm5pbmc6IHRoaXMuaXNSdW5uaW5nLA0KICAgICAgICAgICAgICAgICAgICB1cHRpbWU6IERhdGUubm93KCkgLSAodGhpcy5zdGFydFRpbWUgfHwgRGF0ZS5ub3coKSkNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIHBhZ2U6IHRoaXMuZ2V0UGFnZVN0YXR1cygpLA0KICAgICAgICAgICAgICAgIHByb2Nlc3NvcjogTWVzc2FnZVByb2Nlc3Nvci5nZXRTdGF0cygpLA0KICAgICAgICAgICAgICAgIGxpc3RlbmVyOiB7DQogICAgICAgICAgICAgICAgICAgIGlzTGlzdGVuaW5nOiBNZXNzYWdlTGlzdGVuZXIuaXNMaXN0ZW5pbmcsDQogICAgICAgICAgICAgICAgICAgIGxhc3RDaGVja1RpbWU6IE1lc3NhZ2VMaXN0ZW5lci5sYXN0Q2hlY2tUaW1lDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBkZWR1cGxpY2F0b3I6IE1lc3NhZ2VEZWR1cGxpY2F0b3IuZ2V0U3RhdHMoKSwNCiAgICAgICAgICAgICAgICBjb25maWc6IENvbmZpZ01hbmFnZXIuZ2V0QWxsKCkNCiAgICAgICAgICAgIH07DQogICAgICAgIH0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog5a+85Ye66YWN572uDQogICAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9DQogICAgICAgICAqLw0KICAgICAgICBleHBvcnRDb25maWcoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IGNvbmZpZyA9IENvbmZpZ01hbmFnZXIuZ2V0QWxsKCk7DQogICAgICAgICAgICAgICAgLy8g56e76Zmk5pWP5oSf5L+h5oGvDQogICAgICAgICAgICAgICAgY29uc3QgZXhwb3J0Q29uZmlnID0geyAuLi5jb25maWcgfTsNCiAgICAgICAgICAgICAgICBkZWxldGUgZXhwb3J0Q29uZmlnLmFwaUtleTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShleHBvcnRDb25maWcsIG51bGwsIDIpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WvvOWHuumFjee9ruWksei0pScsIHsgZXJyb3I6IGVycm9y",
        "Lm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog5a+85YWl6YWN572uDQogICAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb25maWdKc29uIOmFjee9rkpTT07lrZfnrKbkuLINCiAgICAgICAgICogQHJldHVybnMge2Jvb2xlYW59DQogICAgICAgICAqLw0KICAgICAgICBpbXBvcnRDb25maWcoY29uZmlnSnNvbikgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBjb25zdCBjb25maWcgPSBKU09OLnBhcnNlKGNvbmZpZ0pzb24pOw0KDQogICAgICAgICAgICAgICAgLy8g6aqM6K+B6YWN572u5qC85byPDQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb25maWcgIT09ICdvYmplY3QnKSB7DQogICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcign6YWN572u5qC85byP5peg5pWIJyk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5a+85YWl6YWN572u77yI5o6S6Zmk5pWP5oSf5L+h5oGv77yJDQogICAgICAgICAgICAgICAgT2JqZWN0LmtleXMoY29uZmlnKS5mb3JFYWNoKGtleSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGlmIChrZXkgIT09ICdhcGlLZXknICYmIENPTkZJRy5ERUZBVUxUX1NFVFRJTkdTLmhhc093blByb3BlcnR5KGtleSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIENvbmZpZ01hbmFnZXIuc2V0KGtleSwgY29uZmlnW2tleV0pOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6YWN572u5a+85YWl5oiQ5YqfJyk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5a+85YWl6YWN572u5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAvKioNCiAgICAgICAgICog6YeN5ZCv5bqU55SoDQogICAgICAgICAqLw0KICAgICAgICByZXN0YXJ0KCkgew0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+mHjeWQr+W6lOeUqC4uLicpOw0KDQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOWBnOatouaJgOacieacjeWKoQ0KICAgICAgICAgICAgICAgIHRoaXMuc3RvcCgpOw0KICAgICAgICAgICAgICAgIE1lc3NhZ2VMaXN0ZW5lci5zdG9wKCk7DQoNCiAgICAgICAgICAgICAgICAvLyDmuIXnkIbnirbmgIENCiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3NlZE1lc3NhZ2VzLmNsZWFyKCk7DQogICAgICAgICAgICAgICAgTWVzc2FnZURlZHVwbGljYXRvci5jbGVhcigpOw0KDQogICAgICAgICAgICAgICAgLy8g6YeN572u6Ieq5Yqo5L+u5aSN57O757ufDQogICAgICAgICAgICAgICAg",
        "QXV0b1JlcGFpclN5c3RlbS5yZXNldCgpOw0KDQogICAgICAgICAgICAgICAgLy8g6YeN5paw5Yid5aeL5YyWDQogICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuaW5pdCgpOw0KICAgICAgICAgICAgICAgIH0sIDEwMDApOw0KDQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6YeN5ZCv5bqU55So5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlpITnkIbnvZHnu5zmgaLlpI0NCiAgICAgICAgICovDQogICAgICAgIGhhbmRsZU5ldHdvcmtSZXN0b3JlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn5aSE55CG572R57uc5oGi5aSN5LqL5Lu2Jyk7DQoNCiAgICAgICAgICAgICAgICAvLyDph43mlrDlkK/nlKjnm5HmjqcNCiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaXNSdW5uaW5nKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhcnQoKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDmo4Dmn6XlvoXlpITnkIbnmoTmtojmga8NCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGVja0Zvck5ld01lc3NhZ2VzKCk7DQogICAgICAgICAgICAgICAgfSwgMjAwMCk7DQoNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflpITnkIbnvZHnu5zmgaLlpI3lpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhue9kee7nOaWreW8gA0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlTmV0d29ya0xvc3MoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCflpITnkIbnvZHnu5zmlq3lvIDkuovku7YnKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaaguWBnOiHquWKqOWkhOeQhu+8jOS9huS4jeWujOWFqOWBnOatog0KICAgICAgICAgICAgICAgIHRoaXMucGF1c2VBdXRvUHJvY2Vzc2luZyA9IHRydWU7DQoNCiAgICAgICAgICAgICAgICAvLyDmmL7npLrnvZHnu5zmlq3lvIDpgJrnn6UNCiAgICAgICAgICAgICAgICBpZiAoVUlNYW5hZ2VyICYmIFVJTWFuYWdlci5zaG93Tm90aWZpY2F0aW9uKSB7DQogICAgICAgICAgICAgICAgICAgIFVJTWFuYWdlci5zaG93Tm90aWZpY2F0aW9uKCfnvZHnu5zov57mjqXlt7Lmlq3lvIDvvIzoh6rliqjlm57lpI3lt7LmmoLlgZwnLCAnd2FybmluZycpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WkhOeQhue9kee7",
        "nOaWreW8gOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOe9kee7nOivt+axguebkeaOp+WZqCAtIOWinuW8uueJiOmdnuS+teWFpeW8j+ebkeaOpw0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgTmV0d29ya01vbml0b3IgPSB7DQogICAgICAgIHJlcXVlc3RzOiBbXSwNCiAgICAgICAgbWF4UmVxdWVzdHM6IDEwMCwNCiAgICAgICAgZW5hYmxlZDogdHJ1ZSwNCiAgICAgICAgb3JpZ2luYWxYSFI6IG51bGwsDQogICAgICAgIG9yaWdpbmFsRmV0Y2g6IG51bGwsDQoNCiAgICAgICAgLy8gQVBJ55m95ZCN5Y2VIC0g6L+Z5LqbQVBJ5LiN5Lya6KKr5bmy5omwDQogICAgICAgIGFwaVdoaXRlbGlzdDogWw0KICAgICAgICAgICAgJy9mYWFzL3Byb3RvLycsDQogICAgICAgICAgICAnL2pzb24tdG8tcHJvdG8tanNvbi10by1wcm90by8nLA0KICAgICAgICAgICAgJy9hcGkvc25zL3dlYi8nLA0KICAgICAgICAgICAgJy9hcGkvc3RvcmUvanBkLycsDQogICAgICAgICAgICAnL3Bob2VuaXgvYXBpLycNCiAgICAgICAgXSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5Yid5aeL5YyW572R57uc55uR5o6nDQogICAgICAgICAqLw0KICAgICAgICBpbml0KCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICAvLyDkv53lrZjljp/lp4vlh73mlbDlvJXnlKgNCiAgICAgICAgICAgICAgICB0aGlzLm9yaWdpbmFsWEhSID0gd2luZG93LlhNTEh0dHBSZXF1ZXN0Ow0KICAgICAgICAgICAgICAgIHRoaXMub3JpZ2luYWxGZXRjaCA9IHdpbmRvdy5mZXRjaDsNCg0KICAgICAgICAgICAgICAgIHRoaXMuc2V0dXBOb25JbnRydXNpdmVYSFJNb25pdG9yaW5nKCk7DQogICAgICAgICAgICAgICAgdGhpcy5zZXR1cE5vbkludHJ1c2l2ZUZldGNoTW9uaXRvcmluZygpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5aKe5by654mI572R57uc55uR5o6n5Zmo5bey5Yid5aeL5YyWJyk7DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign572R57uc55uR5o6n5Zmo5Yid5aeL5YyW5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICB0aGlzLmVuYWJsZWQgPSBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5p+lVVJM5piv5ZCm5Zyo55m95ZCN5Y2V5LitDQogICAgICAgICAqLw0KICAgICAgICBpc1doaXRlbGlzdGVkKHVybCkgew0KICAgICAgICAgICAgaWYgKCF1cmwpIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIHJldHVybiB0aGlzLmFwaVdoaXRlbGlzdC5zb21lKHBhdHRlcm4gPT4gdXJsLmluY2x1ZGVzKHBhdHRlcm4pKTsNCiAgICAgICAgfSwNCg0K",
        "ICAgICAgICAvKioNCiAgICAgICAgICog6Z2e5L615YWl5byPWE1MSHR0cFJlcXVlc3Tnm5HmjqcNCiAgICAgICAgICovDQogICAgICAgIHNldHVwTm9uSW50cnVzaXZlWEhSTW9uaXRvcmluZygpIHsNCiAgICAgICAgICAgIGNvbnN0IHNlbGYgPSB0aGlzOw0KICAgICAgICAgICAgY29uc3QgT3JpZ2luYWxYSFIgPSB0aGlzLm9yaWdpbmFsWEhSOw0KDQogICAgICAgICAgICAvLyDkvb/nlKhQcm94eeS7o+eQhuiAjOS4jeaYr+ebtOaOpeabv+aNog0KICAgICAgICAgICAgd2luZG93LlhNTEh0dHBSZXF1ZXN0ID0gbmV3IFByb3h5KE9yaWdpbmFsWEhSLCB7DQogICAgICAgICAgICAgICAgY29uc3RydWN0KHRhcmdldCwgYXJncykgew0KICAgICAgICAgICAgICAgICAgICBjb25zdCB4aHIgPSBuZXcgdGFyZ2V0KC4uLmFyZ3MpOw0KDQogICAgICAgICAgICAgICAgICAgIC8vIOWPquWvuemdnueZveWQjeWNlUFQSei/m+ihjOebkeaOpw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBvcmlnaW5hbE9wZW4gPSB4aHIub3BlbjsNCiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxTZW5kID0geGhyLnNlbmQ7DQoNCiAgICAgICAgICAgICAgICAgICAgeGhyLm9wZW4gPSBmdW5jdGlvbihtZXRob2QsIHVybCwgLi4ub3BlbkFyZ3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3hoc01vbml0b3IgPSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiBtZXRob2QsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnRUaW1lOiBEYXRlLm5vdygpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzV2hpdGVsaXN0ZWQ6IHNlbGYuaXNXaGl0ZWxpc3RlZCh1cmwpDQogICAgICAgICAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsT3Blbi5hcHBseSh0aGlzLCBbbWV0aG9kLCB1cmwsIC4uLm9wZW5BcmdzXSk7DQogICAgICAgICAgICAgICAgICAgIH07DQoNCiAgICAgICAgICAgICAgICAgICAgeGhyLnNlbmQgPSBmdW5jdGlvbihkYXRhKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtb25pdG9yID0gdGhpcy5feGhzTW9uaXRvcjsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1vbml0b3IgJiYgIW1vbml0b3IuaXNXaGl0ZWxpc3RlZCAmJiBzZWxmLmVuYWJsZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDlj6rlr7npnZ7nmb3lkI3ljZVBUEnmt7vliqDnm5HmjqcNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBsb2FkZW5kSGFuZGxlciA9IGZ1bmN0aW9uKCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZW5kVGltZSA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
        "ICBjb25zdCBkdXJhdGlvbiA9IGVuZFRpbWUgLSBtb25pdG9yLnN0YXJ0VGltZTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1vbml0b3IudXJsICYmIG1vbml0b3IudXJsLmluY2x1ZGVzKCd4aWFvaG9uZ3NodS5jb20nKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYucmVjb3JkUmVxdWVzdCh7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogbW9uaXRvci5tZXRob2QsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogbW9uaXRvci51cmwsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiBkdXJhdGlvbiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogdGhpcy5zdGF0dXMgPj0gMjAwICYmIHRoaXMuc3RhdHVzIDwgMzAwLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdYSFInLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGl0ZWxpc3RlZDogZmFsc2UNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdYSFLnm5HmjqforrDlvZXlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignbG9hZGVuZCcsIGxvYWRlbmRIYW5kbGVyLCB7IG9uY2U6IHRydWUgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbFNlbmQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsNCiAgICAgICAgICAgICAgICAgICAgfTsNCg0KICAgICAgICAgICAgICAgICAgICByZXR1cm4geGhyOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDpnZ7kvrXlhaXlvI9GZXRjaOebkeaOpw0KICAgICAgICAgKi8NCiAgICAgICAgc2V0dXBOb25JbnRydXNpdmVGZXRjaE1vbml0b3JpbmcoKSB7DQogICAgICAgICAgICBjb25zdCBzZWxmID0g",
        "dGhpczsNCiAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsRmV0Y2ggPSB0aGlzLm9yaWdpbmFsRmV0Y2g7DQoNCiAgICAgICAgICAgIHdpbmRvdy5mZXRjaCA9IG5ldyBQcm94eShvcmlnaW5hbEZldGNoLCB7DQogICAgICAgICAgICAgICAgYXBwbHkodGFyZ2V0LCB0aGlzQXJnLCBhcmdzKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnN0IFt1cmwsIG9wdGlvbnMgPSB7fV0gPSBhcmdzOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGFydFRpbWUgPSBEYXRlLm5vdygpOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1doaXRlbGlzdGVkID0gc2VsZi5pc1doaXRlbGlzdGVkKHVybCk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5a+555m95ZCN5Y2VQVBJ55u05o6l6LCD55So5Y6f5aeLZmV0Y2jvvIzkuI3mt7vliqDku7vkvZXnm5HmjqcNCiAgICAgICAgICAgICAgICAgICAgaWYgKGlzV2hpdGVsaXN0ZWQgfHwgIXNlbGYuZW5hYmxlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldC5hcHBseSh0aGlzQXJnLCBhcmdzKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQuYXBwbHkodGhpc0FyZywgYXJncykNCiAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBlbmRUaW1lID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZHVyYXRpb24gPSBlbmRUaW1lIC0gc3RhcnRUaW1lOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh1cmwgJiYgdXJsLmluY2x1ZGVzKCd4aWFvaG9uZ3NodS5jb20nKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5yZWNvcmRSZXF1ZXN0KHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6IG9wdGlvbnMubWV0aG9kIHx8ICdHRVQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiBkdXJhdGlvbiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiByZXNwb25zZS5vaywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCksDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ0ZldGNoJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aGl0ZWxpc3RlZDogZmFsc2UNCiAgICAgICAgICAgICAgICAgICAgICAg",
        "ICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ0ZldGNo55uR5o6n6K6w5b2V5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7DQogICAgICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBlbmRUaW1lID0gRGF0ZS5ub3coKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZHVyYXRpb24gPSBlbmRUaW1lIC0gc3RhcnRUaW1lOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh1cmwgJiYgdXJsLmluY2x1ZGVzKCd4aWFvaG9uZ3NodS5jb20nKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5yZWNvcmRSZXF1ZXN0KHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2Q6IG9wdGlvbnMubWV0aG9kIHx8ICdHRVQnLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogdXJsLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogMCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogZHVyYXRpb24sDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdGZXRjaCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpdGVsaXN0ZWQ6IGZhbHNlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKHJlY29yZEVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdGZXRjaOmUmeivr+ebkeaOp+iusOW9leWksei0pScsIHsgZXJyb3I6IHJlY29yZEVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cg",
        "ZXJyb3I7DQogICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K6w5b2V6K+35rGCDQogICAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSByZXF1ZXN0SW5mbyDor7fmsYLkv6Hmga8NCiAgICAgICAgICovDQogICAgICAgIHJlY29yZFJlcXVlc3QocmVxdWVzdEluZm8pIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgdGhpcy5yZXF1ZXN0cy5wdXNoKHJlcXVlc3RJbmZvKTsNCg0KICAgICAgICAgICAgICAgIC8vIOmZkOWItuiusOW9leaVsOmHjw0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnJlcXVlc3RzLmxlbmd0aCA+IHRoaXMubWF4UmVxdWVzdHMpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXF1ZXN0cy5zaGlmdCgpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOiusOW9leWksei0peeahOivt+axgu+8iOS9huS4jeiusOW9leeZveWQjeWNlUFQSeeahOWksei0pe+8iQ0KICAgICAgICAgICAgICAgIGlmICghcmVxdWVzdEluZm8uc3VjY2VzcyAmJiAhcmVxdWVzdEluZm8ud2hpdGVsaXN0ZWQpIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+e9kee7nOivt+axguWksei0pScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC4uLnJlcXVlc3RJbmZvLA0KICAgICAgICAgICAgICAgICAgICAgICAgbm90ZTogJ+mdnueZveWQjeWNlUFQSeivt+axguWksei0pScNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+iusOW9leivt+axguS/oeaBr+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiOt+WPluivt+axgue7n+iuoQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0U3RhdHMoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHRvdGFsID0gdGhpcy5yZXF1ZXN0cy5sZW5ndGg7DQogICAgICAgICAgICAgICAgY29uc3Qgc3VjY2Vzc2Z1bCA9IHRoaXMucmVxdWVzdHMuZmlsdGVyKHIgPT4gci5zdWNjZXNzKS5sZW5ndGg7DQogICAgICAgICAgICAgICAgY29uc3QgZmFpbGVkID0gdG90YWwgLSBzdWNjZXNzZnVsOw0KICAgICAgICAgICAgICAgIGNvbnN0IHdoaXRlbGlzdGVkID0gdGhpcy5yZXF1ZXN0cy5maWx0ZXIociA9PiByLndoaXRlbGlzdGVkKS5sZW5ndGg7DQogICAgICAgICAgICAgICAgY29uc3QgYXZnRHVyYXRpb24gPSB0b3RhbCA+IDAgPw0KICAgICAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3RzLnJlZHVjZSgoc3VtLCByKSA9PiBzdW0gKyByLmR1cmF0aW9uLCAwKSAvIHRvdGFs",
        "IDogMDsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsLA0KICAgICAgICAgICAgICAgICAgICBzdWNjZXNzZnVsLA0KICAgICAgICAgICAgICAgICAgICBmYWlsZWQsDQogICAgICAgICAgICAgICAgICAgIHdoaXRlbGlzdGVkLA0KICAgICAgICAgICAgICAgICAgICBzdWNjZXNzUmF0ZTogdG90YWwgPiAwID8gKHN1Y2Nlc3NmdWwgLyB0b3RhbCAqIDEwMCkudG9GaXhlZCgyKSArICclJyA6ICcwJScsDQogICAgICAgICAgICAgICAgICAgIGF2Z0R1cmF0aW9uOiBNYXRoLnJvdW5kKGF2Z0R1cmF0aW9uKSArICdtcycsDQogICAgICAgICAgICAgICAgICAgIHJlY2VudFJlcXVlc3RzOiB0aGlzLnJlcXVlc3RzLnNsaWNlKC0xMCksDQogICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IHRoaXMuZW5hYmxlZA0KICAgICAgICAgICAgICAgIH07DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6I635Y+W57uf6K6h5L+h5oGv5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICByZXR1cm4geyBlcnJvcjogJ+e7n+iuoeS/oeaBr+iOt+WPluWksei0pScgfTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5aSx6LSl55qE6K+35rGCDQogICAgICAgICAqIEByZXR1cm5zIHtBcnJheX0NCiAgICAgICAgICovDQogICAgICAgIGdldEZhaWxlZFJlcXVlc3RzKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZXF1ZXN0cy5maWx0ZXIociA9PiAhci5zdWNjZXNzICYmICFyLndoaXRlbGlzdGVkKTsNCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfojrflj5blpLHotKXor7fmsYLlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgICAgIHJldHVybiBbXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5ZCv55SoL+emgeeUqOebkeaOpw0KICAgICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGVuYWJsZWQg5piv5ZCm5ZCv55SoDQogICAgICAgICAqLw0KICAgICAgICBzZXRFbmFibGVkKGVuYWJsZWQpIHsNCiAgICAgICAgICAgIHRoaXMuZW5hYmxlZCA9IGVuYWJsZWQ7DQogICAgICAgICAgICBMb2dnZXIuaW5mbyhg572R57uc55uR5o6n5beyJHtlbmFibGVkID8gJ+WQr+eUqCcgOiAn56aB55SoJ31gKTsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5oGi5aSN5Y6f5aeL572R57uc5Ye95pWwDQogICAgICAgICAqLw0KICAgICAgICByZXN0b3JlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5vcmlnaW5hbFhIUikgew0KICAgICAgICAgICAgICAgICAgICB3aW5kb3cuWE1MSHR0cFJlcXVl",
        "c3QgPSB0aGlzLm9yaWdpbmFsWEhSOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAodGhpcy5vcmlnaW5hbEZldGNoKSB7DQogICAgICAgICAgICAgICAgICAgIHdpbmRvdy5mZXRjaCA9IHRoaXMub3JpZ2luYWxGZXRjaDsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+e9kee7nOebkeaOp+W3suaBouWkjeWOn+Wni+eKtuaAgScpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+aBouWkjeWOn+Wni+e9kee7nOWHveaVsOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiviuaWree9kee7nOeKtuaAgQ0KICAgICAgICAgKiBAcmV0dXJucyB7T2JqZWN0fQ0KICAgICAgICAgKi8NCiAgICAgICAgZGlhZ25vc2UoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IHN0YXRzID0gdGhpcy5nZXRTdGF0cygpOw0KICAgICAgICAgICAgICAgIGNvbnN0IGZhaWxlZFJlcXVlc3RzID0gdGhpcy5nZXRGYWlsZWRSZXF1ZXN0cygpOw0KICAgICAgICAgICAgICAgIGNvbnN0IHJlY2VudEVycm9ycyA9IGZhaWxlZFJlcXVlc3RzLnNsaWNlKC01KTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHMuZmFpbGVkID4gMCA/ICd3YXJuaW5nJyA6ICdoZWFsdGh5JywNCiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogc3RhdHMuZmFpbGVkID4gMCA/DQogICAgICAgICAgICAgICAgICAgICAgICBg5qOA5rWL5YiwJHtzdGF0cy5mYWlsZWR95Liq5aSx6LSl6K+35rGCYCA6ICfnvZHnu5znirbmgIHmraPluLgnLA0KICAgICAgICAgICAgICAgICAgICBzdGF0cywNCiAgICAgICAgICAgICAgICAgICAgcmVjZW50RXJyb3JzLA0KICAgICAgICAgICAgICAgICAgICByZWNvbW1lbmRhdGlvbnM6IHRoaXMuZ2V0UmVjb21tZW5kYXRpb25zKHN0YXRzLCBmYWlsZWRSZXF1ZXN0cykNCiAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+e9kee7nOiviuaWreWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIHsgc3RhdHVzOiAnZXJyb3InLCBtZXNzYWdlOiAn6K+K5pat5aSx6LSlJyB9Ow0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bkv67lpI3lu7rorq4NCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IHN0YXRzIOe7n+iuoeS/oeaBrw0KICAgICAgICAgKiBAcGFyYW0ge0FycmF5fSBmYWlsZWRSZXF1ZXN0cyDlpLHotKXor7fmsYINCiAgICAgICAgICogQHJldHVybnMge0FycmF5fQ0KICAgICAgICAgKi8NCiAgICAgICAgZ2V0",
        "UmVjb21tZW5kYXRpb25zKHN0YXRzLCBmYWlsZWRSZXF1ZXN0cykgew0KICAgICAgICAgICAgY29uc3QgcmVjb21tZW5kYXRpb25zID0gW107DQoNCiAgICAgICAgICAgIGlmIChzdGF0cy5mYWlsZWQgPiA1KSB7DQogICAgICAgICAgICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+ajgOa1i+WIsOWkmuS4que9kee7nOivt+axguWksei0pe+8jOW7uuiuruajgOafpee9kee7nOi/nuaOpScpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoZmFpbGVkUmVxdWVzdHMuc29tZShyID0+IHIuc3RhdHVzID09PSA0MDApKSB7DQogICAgICAgICAgICAgICAgcmVjb21tZW5kYXRpb25zLnB1c2goJ+ajgOa1i+WIsDQwMOmUmeivr++8jOWPr+iDveaYr+ivt+axguWPguaVsOmXrumimCcpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAoZmFpbGVkUmVxdWVzdHMuc29tZShyID0+IHIuc3RhdHVzID09PSAwKSkgew0KICAgICAgICAgICAgICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKCfmo4DmtYvliLDnvZHnu5zov57mjqXplJnor6/vvIzlu7rorq7mo4Dmn6XpmLLngavlopnorr7nva4nKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgaWYgKHN0YXRzLmF2Z0R1cmF0aW9uID4gNTAwMCkgew0KICAgICAgICAgICAgICAgIHJlY29tbWVuZGF0aW9ucy5wdXNoKCfnvZHnu5zor7fmsYLlk43lupTovoPmhaLvvIzlu7rorq7mo4Dmn6XnvZHnu5zotKjph48nKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgcmV0dXJuIHJlY29tbWVuZGF0aW9uczsNCiAgICAgICAgfQ0KICAgIH07DQoNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIC8vIOWinuW8uueJiOWFqOWxgOmUmeivr+WkhOeQhuWSjOWFvOWuueaAp+euoeeQhg0KICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQogICAgY29uc3QgR2xvYmFsRXJyb3JIYW5kbGVyID0gew0KICAgICAgICBlcnJvckNvdW50OiAwLA0KICAgICAgICBtYXhFcnJvcnM6IDUwLA0KICAgICAgICBjaHJvbWVFeHRlbnNpb25FcnJvcnM6IDAsDQoNCiAgICAgICAgaW5pdCgpIHsNCiAgICAgICAgICAgIHRoaXMuc2V0dXBFcnJvckhhbmRsaW5nKCk7DQogICAgICAgICAgICB0aGlzLnNldHVwQ2hyb21lRXh0ZW5zaW9uQ29tcGF0aWJpbGl0eSgpOw0KICAgICAgICAgICAgdGhpcy5zZXR1cE5ldHdvcmtFcnJvckhhbmRsaW5nKCk7DQogICAgICAgICAgICBMb2dnZXIuZGVidWcoJ+WinuW8uueJiOWFqOWxgOmUmeivr+WkhOeQhuWZqOW3suWIneWni+WMlicpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorr7nva7ln7rnoYDplJnor6/lpITnkIYNCiAgICAgICAgICovDQogICAgICAgIHNldHVwRXJyb3JIYW5kbGluZygpIHsNCiAgICAgICAgICAgIC8vIOaNleiOt+acquWkhOeQhueahOmUmeivrw0KICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgKGV2ZW50KSA9PiB7",
        "DQogICAgICAgICAgICAgICAgdGhpcy5lcnJvckNvdW50Kys7DQoNCiAgICAgICAgICAgICAgICAvLyDljLrliIbohJrmnKzplJnor6/lkozpobXpnaLplJnor68NCiAgICAgICAgICAgICAgICBjb25zdCBpc1NjcmlwdEVycm9yID0gZXZlbnQuZmlsZW5hbWUgJiYNCiAgICAgICAgICAgICAgICAgICAgKGV2ZW50LmZpbGVuYW1lLmluY2x1ZGVzKCd1c2VyLmpzJykgfHwgZXZlbnQuZmlsZW5hbWUuaW5jbHVkZXMoJ3RhbXBlcm1vbmtleScpKTsNCg0KICAgICAgICAgICAgICAgIGlmIChpc1NjcmlwdEVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign6ISa5pys6ZSZ6K+vJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogZXZlbnQubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGVuYW1lOiBldmVudC5maWxlbmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVubzogZXZlbnQubGluZW5vLA0KICAgICAgICAgICAgICAgICAgICAgICAgY29sbm86IGV2ZW50LmNvbG5vLA0KICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGV2ZW50LmVycm9yID8gZXZlbnQuZXJyb3Iuc3RhY2sgOiBudWxsLA0KICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3NjcmlwdCcNCiAgICAgICAgICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgICAgICAgICAgLy8g6ISa5pys6ZSZ6K+v5LiN6Zi75q2i6aG16Z2i6L+Q6KGMDQogICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+mhtemdoumUmeivr++8iOmdnuiEmuacrO+8iScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGV2ZW50Lm1lc3NhZ2UsDQogICAgICAgICAgICAgICAgICAgICAgICBmaWxlbmFtZTogZXZlbnQuZmlsZW5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAncGFnZScNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOaNleiOt+acquWkhOeQhueahFByb21pc2Xmi5Lnu50NCiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd1bmhhbmRsZWRyZWplY3Rpb24nLCAoZXZlbnQpID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLmVycm9yQ291bnQrKzsNCg0KICAgICAgICAgICAgICAgIC8vIOajgOafpeaYr+WQpuaYr+iEmuacrOebuOWFs+eahFByb21pc2Xmi5Lnu50NCiAgICAgICAgICAgICAgICBjb25zdCBpc1NjcmlwdFByb21pc2UgPSBldmVudC5yZWFzb24gJiYNCiAgICAgICAgICAgICAgICAgICAgKGV2ZW50LnJlYXNvbi5zdGFjayAmJiBldmVudC5yZWFzb24uc3RhY2suaW5jbHVkZXMoJ3VzZXIuanMnKSk7DQoNCiAgICAgICAgICAgICAgICBpZiAoaXNTY3JpcHRQcm9taXNlKSB7DQogICAgICAgICAgICAgICAgICAgIExv",
        "Z2dlci5lcnJvcign6ISa5pysUHJvbWlzZeaLkue7nScsIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlYXNvbjogZXZlbnQucmVhc29uLA0KICAgICAgICAgICAgICAgICAgICAgICAgcHJvbWlzZTogZXZlbnQucHJvbWlzZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzY3JpcHQtcHJvbWlzZScNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7DQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLndhcm4oJ+mhtemdolByb21pc2Xmi5Lnu53vvIjpnZ7ohJrmnKzvvIknLCB7DQogICAgICAgICAgICAgICAgICAgICAgICByZWFzb246IGV2ZW50LnJlYXNvbiA/IGV2ZW50LnJlYXNvbi50b1N0cmluZygpIDogJ1Vua25vd24nLA0KICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3BhZ2UtcHJvbWlzZScNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIENocm9tZeaJqeWxleWFvOWuueaAp+WkhOeQhg0KICAgICAgICAgKi8NCiAgICAgICAgc2V0dXBDaHJvbWVFeHRlbnNpb25Db21wYXRpYmlsaXR5KCkgew0KICAgICAgICAgICAgLy8g5qOA5rWLQ2hyb21l5omp5bGV546v5aKDDQogICAgICAgICAgICBpZiAodHlwZW9mIGNocm9tZSAhPT0gJ3VuZGVmaW5lZCcgJiYgY2hyb21lLnJ1bnRpbWUpIHsNCiAgICAgICAgICAgICAgICAvLyDlpITnkIZydW50aW1lLmxhc3RFcnJvcg0KICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsU2VuZE1lc3NhZ2UgPSBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZTsNCiAgICAgICAgICAgICAgICBpZiAob3JpZ2luYWxTZW5kTWVzc2FnZSkgew0KICAgICAgICAgICAgICAgICAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gb3JpZ2luYWxTZW5kTWVzc2FnZS5hcHBseSh0aGlzLCBhcmdzKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOajgOafpXJ1bnRpbWUubGFzdEVycm9yDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaHJvbWUucnVudGltZS5sYXN0RXJyb3IpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdsb2JhbEVycm9ySGFuZGxlci5jaHJvbWVFeHRlbnNpb25FcnJvcnMrKzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci53YXJuKCdDaHJvbWXmianlsZXplJnor68nLCB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IGNocm9t",
        "ZS5ydW50aW1lLmxhc3RFcnJvci5tZXNzYWdlLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdjaHJvbWUtZXh0ZW5zaW9uJw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCAwKTsNCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcignQ2hyb21l5omp5bGV5raI5oGv5Y+R6YCB5aSx6LSlJywgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Nocm9tZS1leHRlbnNpb24tc2VuZCcNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDnm5HlkKzmianlsZXmtojmga8NCiAgICAgICAgICAgICAgICBpZiAoY2hyb21lLnJ1bnRpbWUub25NZXNzYWdlKSB7DQogICAgICAgICAgICAgICAgICAgIGNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcigobWVzc2FnZSwgc2VuZGVyLCBzZW5kUmVzcG9uc2UpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g56Gu5L+d5LiN5bmy5omw5YW25LuW5omp5bGV55qE5raI5oGvDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1lc3NhZ2UgJiYgbWVzc2FnZS5zb3VyY2UgPT09ICd4aHMtYXV0by1yZXBseScpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmRlYnVnKCfmlLbliLDmianlsZXmtojmga8nLCB7IG1lc3NhZ2UsIHNlbmRlciB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyDkuI3lpITnkIbvvIzorqnlhbbku5bnm5HlkKzlmajlpITnkIYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcign5aSE55CG5omp5bGV5raI5oGv5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAg",
        "IC8qKg0KICAgICAgICAgKiDnvZHnu5zplJnor6/lpITnkIYNCiAgICAgICAgICovDQogICAgICAgIHNldHVwTmV0d29ya0Vycm9ySGFuZGxpbmcoKSB7DQogICAgICAgICAgICAvLyDnm5HlkKznvZHnu5znirbmgIHlj5jljJYNCiAgICAgICAgICAgIGlmICgnb25MaW5lJyBpbiBuYXZpZ2F0b3IpIHsNCiAgICAgICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignb25saW5lJywgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn572R57uc6L+e5o6l5bey5oGi5aSNJyk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlTmV0d29ya1Jlc3RvcmUoKTsNCiAgICAgICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvZmZsaW5lJywgKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign572R57uc6L+e5o6l5bey5pat5byAJyk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlTmV0d29ya0xvc3MoKTsNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5aSE55CG572R57uc5oGi5aSNDQogICAgICAgICAqLw0KICAgICAgICBoYW5kbGVOZXR3b3JrUmVzdG9yZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgLy8g6YeN5paw5ZCv55So572R57uc55uR5o6nDQogICAgICAgICAgICAgICAgaWYgKE5ldHdvcmtNb25pdG9yICYmICFOZXR3b3JrTW9uaXRvci5lbmFibGVkKSB7DQogICAgICAgICAgICAgICAgICAgIE5ldHdvcmtNb25pdG9yLnNldEVuYWJsZWQodHJ1ZSk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g6YCa55+l5bqU55So572R57uc5bey5oGi5aSNDQogICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5YSFNBdXRvUmVwbHkgJiYgd2luZG93LlhIU0F1dG9SZXBseS5oYW5kbGVOZXR3b3JrUmVzdG9yZSkgew0KICAgICAgICAgICAgICAgICAgICB3aW5kb3cuWEhTQXV0b1JlcGx5LmhhbmRsZU5ldHdvcmtSZXN0b3JlKCk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WkhOeQhue9kee7nOaBouWkjeWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOWkhOeQhue9kee7nOaWreW8gA0KICAgICAgICAgKi8NCiAgICAgICAgaGFuZGxlTmV0d29ya0xvc3MoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOaaguWBnOe9kee7nOebkeaOpw0KICAgICAgICAgICAgICAgIGlmIChOZXR3b3JrTW9uaXRvciAmJiBOZXR3b3JrTW9uaXRvci5lbmFibGVkKSB7DQogICAgICAgICAgICAgICAgICAgIE5ldHdvcmtNb25pdG9yLnNldEVuYWJsZWQoZmFs",
        "c2UpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIC8vIOmAmuefpeW6lOeUqOe9kee7nOW3suaWreW8gA0KICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuWEhTQXV0b1JlcGx5ICYmIHdpbmRvdy5YSFNBdXRvUmVwbHkuaGFuZGxlTmV0d29ya0xvc3MpIHsNCiAgICAgICAgICAgICAgICAgICAgd2luZG93LlhIU0F1dG9SZXBseS5oYW5kbGVOZXR3b3JrTG9zcygpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflpITnkIbnvZHnu5zmlq3lvIDlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDojrflj5bplJnor6/nu5/orqENCiAgICAgICAgICogQHJldHVybnMge09iamVjdH0NCiAgICAgICAgICovDQogICAgICAgIGdldEVycm9yU3RhdHMoKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIHRvdGFsRXJyb3JzOiB0aGlzLmVycm9yQ291bnQsDQogICAgICAgICAgICAgICAgY2hyb21lRXh0ZW5zaW9uRXJyb3JzOiB0aGlzLmNocm9tZUV4dGVuc2lvbkVycm9ycywNCiAgICAgICAgICAgICAgICBuZXR3b3JrT25saW5lOiBuYXZpZ2F0b3Iub25MaW5lLA0KICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpDQogICAgICAgICAgICB9Ow0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDph43nva7plJnor6/orqHmlbANCiAgICAgICAgICovDQogICAgICAgIHJlc2V0RXJyb3JDb3VudCgpIHsNCiAgICAgICAgICAgIHRoaXMuZXJyb3JDb3VudCA9IDA7DQogICAgICAgICAgICB0aGlzLmNocm9tZUV4dGVuc2lvbkVycm9ycyA9IDA7DQogICAgICAgICAgICBMb2dnZXIuaW5mbygn6ZSZ6K+v6K6h5pWw5bey6YeN572uJyk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDoh6rliqjkv67lpI3lkozor4rmlq3ns7vnu58NCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KICAgIGNvbnN0IEF1dG9SZXBhaXJTeXN0ZW0gPSB7DQogICAgICAgIHJlcGFpckF0dGVtcHRzOiAwLA0KICAgICAgICBtYXhSZXBhaXJBdHRlbXB0czogMywNCiAgICAgICAgbGFzdFJlcGFpclRpbWU6IDAsDQogICAgICAgIHJlcGFpckNvb2xkb3duOiAzMDAwMCwgLy8gMzDnp5LlhrfljbTml7bpl7QNCg0KICAgICAgICAvKioNCiAgICAgICAgICog5qOA5rWL5bm25L+u5aSN572R57uc6Zeu6aKYDQogICAgICAgICAqLw0KICAgICAgICBhc3luYyBkZXRlY3RBbmRSZXBhaXIoKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7DQogICAgICAgICAgICAgICAgaWYgKG5vdyAtIHRoaXMubGFzdFJlcGFp",
        "clRpbWUgPCB0aGlzLnJlcGFpckNvb2xkb3duKSB7DQogICAgICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5L+u5aSN57O757uf5Ya35Y205Lit77yM6Lez6L+H5qOA5rWLJyk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICBjb25zdCBkaWFnbm9zaXMgPSBOZXR3b3JrTW9uaXRvci5kaWFnbm9zZSgpOw0KICAgICAgICAgICAgICAgIGlmIChkaWFnbm9zaXMuc3RhdHVzID09PSAnd2FybmluZycgfHwgZGlhZ25vc2lzLnN0YXR1cyA9PT0gJ2Vycm9yJykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5qOA5rWL5Yiw572R57uc6Zeu6aKY77yM5bCd6K+V6Ieq5Yqo5L+u5aSNJywgZGlhZ25vc2lzKTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucGVyZm9ybVJlcGFpcihkaWFnbm9zaXMpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+iHquWKqOS/ruWkjeajgOa1i+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDmiafooYzkv67lpI3mk43kvZwNCiAgICAgICAgICogQHBhcmFtIHtPYmplY3R9IGRpYWdub3NpcyDor4rmlq3nu5PmnpwNCiAgICAgICAgICovDQogICAgICAgIGFzeW5jIHBlcmZvcm1SZXBhaXIoZGlhZ25vc2lzKSB7DQogICAgICAgICAgICBpZiAodGhpcy5yZXBhaXJBdHRlbXB0cyA+PSB0aGlzLm1heFJlcGFpckF0dGVtcHRzKSB7DQogICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCfkv67lpI3lsJ3or5XmrKHmlbDlt7Lovr7kuIrpmZDvvIzliIfmjaLliLDlronlhajmqKHlvI8nKTsNCiAgICAgICAgICAgICAgICB0aGlzLmVuYWJsZVNhZmVNb2RlKCk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICB0aGlzLnJlcGFpckF0dGVtcHRzKys7DQogICAgICAgICAgICB0aGlzLmxhc3RSZXBhaXJUaW1lID0gRGF0ZS5ub3coKTsNCg0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbyhg5byA5aeL56ysJHt0aGlzLnJlcGFpckF0dGVtcHRzfeasoeS/ruWkjeWwneivlWApOw0KDQogICAgICAgICAgICAgICAgLy8g5L+u5aSN562W55WlMe+8mumHjee9rue9kee7nOebkeaOpw0KICAgICAgICAgICAgICAgIGlmIChkaWFnbm9zaXMuc3RhdHMuZmFpbGVkID4gNSkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6YeN572u572R57uc55uR5o6n5ZmoJyk7DQogICAgICAgICAgICAgICAgICAgIE5ldHdvcmtNb25pdG9yLnNldEVuYWJsZWQoZmFsc2UpOw0KICAgICAg",
        "ICAgICAgICAgICAgICBhd2FpdCBVdGlscy5kZWxheSgxMDAwKTsNCiAgICAgICAgICAgICAgICAgICAgTmV0d29ya01vbml0b3Iuc2V0RW5hYmxlZCh0cnVlKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAvLyDkv67lpI3nrZbnlaUy77ya5riF55CG6ZSZ6K+v54q25oCBDQogICAgICAgICAgICAgICAgaWYgKEdsb2JhbEVycm9ySGFuZGxlci5lcnJvckNvdW50ID4gMTApIHsNCiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+mHjee9rumUmeivr+iuoeaVsCcpOw0KICAgICAgICAgICAgICAgICAgICBHbG9iYWxFcnJvckhhbmRsZXIucmVzZXRFcnJvckNvdW50KCk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgLy8g5L+u5aSN562W55WlM++8mumHjeWQr+W6lOeUqOaguOW/g+WKn+iDvQ0KICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuWEhTQXV0b1JlcGx5ICYmICF3aW5kb3cuWEhTQXV0b1JlcGx5LmlzUnVubmluZykgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbygn6YeN5ZCv5bqU55So5qC45b+D5Yqf6IO9Jyk7DQogICAgICAgICAgICAgICAgICAgIGF3YWl0IHdpbmRvdy5YSFNBdXRvUmVwbHkucmVzdGFydCgpOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIExvZ2dlci5pbmZvKCfkv67lpI3mk43kvZzlrozmiJAnKTsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCg0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+S/ruWkjeaTjeS9nOWksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDlkK/nlKjlronlhajmqKHlvI8NCiAgICAgICAgICovDQogICAgICAgIGVuYWJsZVNhZmVNb2RlKCkgew0KICAgICAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign5ZCv55So5a6J5YWo5qih5byPJyk7DQoNCiAgICAgICAgICAgICAgICAvLyDnpoHnlKjnvZHnu5znm5HmjqcNCiAgICAgICAgICAgICAgICBOZXR3b3JrTW9uaXRvci5zZXRFbmFibGVkKGZhbHNlKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaBouWkjeWOn+Wni+e9kee7nOWHveaVsA0KICAgICAgICAgICAgICAgIE5ldHdvcmtNb25pdG9yLnJlc3RvcmUoKTsNCg0KICAgICAgICAgICAgICAgIC8vIOaYvuekuuWuieWFqOaooeW8j+mAmuefpQ0KICAgICAgICAgICAgICAgIGlmIChVSU1hbmFnZXIgJiYgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24pIHsNCiAgICAgICAgICAgICAgICAgICAgVUlNYW5hZ2VyLnNob3dOb3RpZmljYXRpb24oDQogICAgICAgICAgICAgICAgICAgICAgICAn5bey5ZCv55So5a6J5YWo5qih5byP77yM572R57uc55uR5o6n5bey56aB55So77yMQUnlm57lpI3lip/og73ku43lj6/mraPluLjkvb/n",
        "lKgnLA0KICAgICAgICAgICAgICAgICAgICAgICAgJ3dhcm5pbmcnDQogICAgICAgICAgICAgICAgICAgICk7DQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+WuieWFqOaooeW8j+W3suWQr+eUqCcpOw0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIuZXJyb3IoJ+WQr+eUqOWuieWFqOaooeW8j+Wksei0pScsIHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOmHjee9ruS/ruWkjeeKtuaAgQ0KICAgICAgICAgKi8NCiAgICAgICAgcmVzZXQoKSB7DQogICAgICAgICAgICB0aGlzLnJlcGFpckF0dGVtcHRzID0gMDsNCiAgICAgICAgICAgIHRoaXMubGFzdFJlcGFpclRpbWUgPSAwOw0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+iHquWKqOS/ruWkjeezu+e7n+W3sumHjee9ricpOw0KICAgICAgICB9DQogICAgfTsNCg0KICAgIGNvbnN0IFBlcmZvcm1hbmNlTW9uaXRvciA9IHsNCiAgICAgICAgbWV0cmljczogew0KICAgICAgICAgICAgYXBpQ2FsbHM6IDAsDQogICAgICAgICAgICBhcGlTdWNjZXNzUmF0ZTogMCwNCiAgICAgICAgICAgIGF2ZXJhZ2VSZXNwb25zZVRpbWU6IDAsDQogICAgICAgICAgICBtZXNzYWdlc1Byb2Nlc3NlZDogMCwNCiAgICAgICAgICAgIGVycm9yc0NvdW50OiAwDQogICAgICAgIH0sDQoNCiAgICAgICAgc3RhcnRUaW1lOiBEYXRlLm5vdygpLA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorrDlvZVBUEnosIPnlKgNCiAgICAgICAgICogQHBhcmFtIHtib29sZWFufSBzdWNjZXNzIOaYr+WQpuaIkOWKnw0KICAgICAgICAgKiBAcGFyYW0ge251bWJlcn0gcmVzcG9uc2VUaW1lIOWTjeW6lOaXtumXtA0KICAgICAgICAgKi8NCiAgICAgICAgcmVjb3JkQVBJQ2FsbChzdWNjZXNzLCByZXNwb25zZVRpbWUpIHsNCiAgICAgICAgICAgIHRoaXMubWV0cmljcy5hcGlDYWxscysrOw0KICAgICAgICAgICAgaWYgKHN1Y2Nlc3MpIHsNCiAgICAgICAgICAgICAgICB0aGlzLm1ldHJpY3MuYXZlcmFnZVJlc3BvbnNlVGltZSA9DQogICAgICAgICAgICAgICAgICAgICh0aGlzLm1ldHJpY3MuYXZlcmFnZVJlc3BvbnNlVGltZSArIHJlc3BvbnNlVGltZSkgLyAyOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aGlzLm1ldHJpY3MuZXJyb3JzQ291bnQrKzsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgdGhpcy5tZXRyaWNzLmFwaVN1Y2Nlc3NSYXRlID0NCiAgICAgICAgICAgICAgICAoKHRoaXMubWV0cmljcy5hcGlDYWxscyAtIHRoaXMubWV0cmljcy5lcnJvcnNDb3VudCkgLyB0aGlzLm1ldHJpY3MuYXBpQ2FsbHMpICogMTAwOw0KICAgICAgICB9LA0KDQogICAgICAgIC8qKg0KICAgICAgICAgKiDorrDlvZXmtojmga/lpITnkIYNCiAgICAgICAgICovDQogICAgICAgIHJlY29yZE1lc3NhZ2VQcm9j",
        "ZXNzZWQoKSB7DQogICAgICAgICAgICB0aGlzLm1ldHJpY3MubWVzc2FnZXNQcm9jZXNzZWQrKzsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6K6w5b2V572R57uc6ZSZ6K+vDQogICAgICAgICAqLw0KICAgICAgICByZWNvcmROZXR3b3JrRXJyb3IoKSB7DQogICAgICAgICAgICB0aGlzLm1ldHJpY3MuZXJyb3JzQ291bnQrKzsNCiAgICAgICAgfSwNCg0KICAgICAgICAvKioNCiAgICAgICAgICog6I635Y+W5oCn6IO95oql5ZGKDQogICAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9DQogICAgICAgICAqLw0KICAgICAgICBnZXRSZXBvcnQoKSB7DQogICAgICAgICAgICBjb25zdCB1cHRpbWUgPSBEYXRlLm5vdygpIC0gdGhpcy5zdGFydFRpbWU7DQogICAgICAgICAgICBjb25zdCBuZXR3b3JrU3RhdHMgPSBOZXR3b3JrTW9uaXRvci5nZXRTdGF0cygpOw0KICAgICAgICAgICAgY29uc3QgZXJyb3JTdGF0cyA9IEdsb2JhbEVycm9ySGFuZGxlci5nZXRFcnJvclN0YXRzKCk7DQoNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgdXB0aW1lOiBNYXRoLmZsb29yKHVwdGltZSAvIDEwMDApLCAvLyDnp5INCiAgICAgICAgICAgICAgICAuLi50aGlzLm1ldHJpY3MsDQogICAgICAgICAgICAgICAgbWVzc2FnZXNQZXJIb3VyOiBNYXRoLmZsb29yKCh0aGlzLm1ldHJpY3MubWVzc2FnZXNQcm9jZXNzZWQgLyB1cHRpbWUpICogMzYwMDAwMCksDQogICAgICAgICAgICAgICAgbmV0d29ya1N0YXRzLA0KICAgICAgICAgICAgICAgIGVycm9yU3RhdHMsDQogICAgICAgICAgICAgICAgaGVhbHRoU2NvcmU6IHRoaXMuY2FsY3VsYXRlSGVhbHRoU2NvcmUoKSwNCiAgICAgICAgICAgICAgICBhdXRvUmVwYWlyQXR0ZW1wdHM6IEF1dG9SZXBhaXJTeXN0ZW0ucmVwYWlyQXR0ZW1wdHMNCiAgICAgICAgICAgIH07DQogICAgICAgIH0sDQoNCiAgICAgICAgLyoqDQogICAgICAgICAqIOiuoeeul+WBpeW6t+WIhuaVsA0KICAgICAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSAwLTEwMOeahOWBpeW6t+WIhuaVsA0KICAgICAgICAgKi8NCiAgICAgICAgY2FsY3VsYXRlSGVhbHRoU2NvcmUoKSB7DQogICAgICAgICAgICBsZXQgc2NvcmUgPSAxMDA7DQoNCiAgICAgICAgICAgIC8vIEFQSeaIkOWKn+eOh+W9seWTjQ0KICAgICAgICAgICAgaWYgKHRoaXMubWV0cmljcy5hcGlDYWxscyA+IDApIHsNCiAgICAgICAgICAgICAgICBzY29yZSAtPSAoMTAwIC0gdGhpcy5tZXRyaWNzLmFwaVN1Y2Nlc3NSYXRlKSAqIDAuMzsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g6ZSZ6K+v5pWw6YeP5b2x5ZONDQogICAgICAgICAgICBpZiAodGhpcy5tZXRyaWNzLmVycm9yc0NvdW50ID4gMTApIHNjb3JlIC09IDIwOw0KICAgICAgICAgICAgaWYgKEdsb2JhbEVycm9ySGFuZGxlci5lcnJvckNvdW50ID4gMTApIHNjb3JlIC09IDE1Ow0KDQogICAgICAgICAgICAvLyDkv67lpI3lsJ3or5XlvbHlk40NCiAgICAgICAgICAgIGlm",
        "IChBdXRvUmVwYWlyU3lzdGVtLnJlcGFpckF0dGVtcHRzID4gMCkgew0KICAgICAgICAgICAgICAgIHNjb3JlIC09IEF1dG9SZXBhaXJTeXN0ZW0ucmVwYWlyQXR0ZW1wdHMgKiA1Ow0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDnvZHnu5znirbmgIHlvbHlk40NCiAgICAgICAgICAgIGlmICghbmF2aWdhdG9yLm9uTGluZSkgc2NvcmUgLT0gMzA7DQoNCiAgICAgICAgICAgIHJldHVybiBNYXRoLm1heCgwLCBNYXRoLm1pbigxMDAsIE1hdGgucm91bmQoc2NvcmUpKSk7DQogICAgICAgIH0NCiAgICB9Ow0KDQogICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCiAgICAvLyDlupTnlKjlkK/liqgNCiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQogICAgLy8g5Yid5aeL5YyW5YWo5bGA6ZSZ6K+v5aSE55CG5ZKM5oCn6IO955uR5o6nDQogICAgR2xvYmFsRXJyb3JIYW5kbGVyLmluaXQoKTsNCiAgICBQZXJmb3JtYW5jZU1vbml0b3Iuc3RhcnRUaW1lID0gRGF0ZS5ub3coKTsNCg0KICAgIC8vIOWIneWni+WMlumUmeivr+aOqOmAgeeuoeeQhuWZqA0KICAgIEVycm9yTm90aWZpY2F0aW9uTWFuYWdlci5pbml0KCk7DQoNCiAgICAvLyDliJ3lp4vljJbnvZHnu5znm5HmjqflmagNCiAgICBOZXR3b3JrTW9uaXRvci5pbml0KCk7DQoNCiAgICAvLyDliJvlu7rlhajlsYDlupTnlKjlrp7kvosNCiAgICB3aW5kb3cuWEhTQXV0b1JlcGx5ID0gbmV3IFhIU0F1dG9SZXBseUFwcCgpOw0KICAgIHdpbmRvdy5YSFNBdXRvUmVwbHkudWkgPSBVSU1hbmFnZXI7DQogICAgd2luZG93LlhIU0F1dG9SZXBseS5wZXJmb3JtYW5jZSA9IFBlcmZvcm1hbmNlTW9uaXRvcjsNCiAgICB3aW5kb3cuWEhTQXV0b1JlcGx5LnN0YXJ0VGltZSA9IERhdGUubm93KCk7DQoNCiAgICAvLyDmt7vliqDlhajlsYDlv6vmjbfplK7mlK/mjIENCiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHsNCiAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgIC8vIEN0cmwrU2hpZnQrWCDliIfmjaLpnaLmnb/mmL7npLoNCiAgICAgICAgICAgIGlmIChlLmN0cmxLZXkgJiYgZS5zaGlmdEtleSAmJiBlLmtleSA9PT0gJ1gnKSB7DQogICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOw0KICAgICAgICAgICAgICAgIFVJTWFuYWdlci50b2dnbGUoKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8gQ3RybCtTaGlmdCtTIOW/q+mAn+WQr+WKqC/lgZzmraINCiAgICAgICAgICAgIGlmIChlLmN0cmxLZXkgJiYgZS5zaGlmdEtleSAmJiBlLmtleSA9PT0gJ1MnKSB7DQogICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOw0KICAgICAgICAgICAgICAgIFVJTWFuYWdlci5oYW5kbGVUb2dnbGUoKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8gQ3RybCtTaGlmdCtSIOmHjeWQr+W6lOeUqA0KICAgICAgICAgICAgaWYgKGUuY3RybEtleSAmJiBlLnNoaWZ0S2V5",
        "ICYmIGUua2V5ID09PSAnUicpIHsNCiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7DQogICAgICAgICAgICAgICAgaWYgKGNvbmZpcm0oJ+ehruWumuimgemHjeWQr+W6lOeUqOWQl++8nycpKSB7DQogICAgICAgICAgICAgICAgICAgIHdpbmRvdy5YSFNBdXRvUmVwbHkucmVzdGFydCgpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8gQ3RybCtTaGlmdCtEIOWIh+aNouiwg+ivleaooeW8jw0KICAgICAgICAgICAgaWYgKGUuY3RybEtleSAmJiBlLnNoaWZ0S2V5ICYmIGUua2V5ID09PSAnRCcpIHsNCiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7DQogICAgICAgICAgICAgICAgY29uc3QgZGVidWdNb2RlID0gIUNvbmZpZ01hbmFnZXIuZ2V0KCdkZWJ1Z01vZGUnKTsNCiAgICAgICAgICAgICAgICBDb25maWdNYW5hZ2VyLnNldCgnZGVidWdNb2RlJywgZGVidWdNb2RlKTsNCiAgICAgICAgICAgICAgICBMb2dnZXIuaW5mbyhg6LCD6K+V5qih5byP5beyJHtkZWJ1Z01vZGUgPyAn5byA5ZCvJyA6ICflhbPpl60nfWApOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflv6vmjbfplK7lpITnkIblpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICB9DQogICAgfSk7DQoNCiAgICAvLyDpobXpnaLliqDovb3lrozmiJDlkI7liJ3lp4vljJYNCiAgICBjb25zdCBpbml0QXBwID0gYXN5bmMgKCkgPT4gew0KICAgICAgICB0cnkgew0KICAgICAgICAgICAgYXdhaXQgd2luZG93LlhIU0F1dG9SZXBseS5pbml0KCk7DQoNCiAgICAgICAgICAgIC8vIOWwhlVJTWFuYWdlcuiuvuS4uuWFqOWxgOWPr+iuv+mXrg0KICAgICAgICAgICAgd2luZG93LlVJTWFuYWdlciA9IFVJTWFuYWdlcjsNCg0KICAgICAgICAgICAgLy8g5Yid5aeL5YyW5pyN5Yqh56uv566h55CG5ZmoDQogICAgICAgICAgICBTZXJ2ZXJNYW5hZ2VyLmluaXQoKTsNCg0KICAgICAgICAgICAgLy8g5pi+56S65qyi6L+O5L+h5oGvDQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+OiSDlsI/nuqLkuaZBSeiHquWKqOWbnuWkjeW3peWFt+W3suWwsee7qu+8gScsIHsNCiAgICAgICAgICAgICAgICB2ZXJzaW9uOiBDT05GSUcuVkVSU0lPTiwNCiAgICAgICAgICAgICAgICBzZXJ2ZXJVcmw6IENPTkZJRy5TRVJWRVIuYmFzZVVybCwNCiAgICAgICAgICAgICAgICB1c2VySWQ6IFNlcnZlck1hbmFnZXIudXNlcklkLA0KICAgICAgICAgICAgICAgIHNob3J0Y3V0czogew0KICAgICAgICAgICAgICAgICAgICAnQ3RybCtTaGlmdCtYJzogJ+WIh+aNoumdouadvycsDQogICAgICAgICAgICAgICAgICAgICdDdHJsK1NoaWZ0K1MnOiAn5ZCv5YqoL+WBnOatoicsDQogICAgICAgICAgICAgICAgICAgICdDdHJsK1NoaWZ0K1InOiAn6YeN5ZCv5bqU55SoJywNCiAgICAgICAgICAgICAgICAgICAgJ0N0cmwrU2hpZnQrRCc6",
        "ICfosIPor5XmqKHlvI8nDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOajgOafpemFjee9ruWujOaVtOaApw0KICAgICAgICAgICAgY29uc3QgYXBpS2V5ID0gQ29uZmlnTWFuYWdlci5nZXQoJ2FwaUtleScpOw0KICAgICAgICAgICAgaWYgKCFhcGlLZXkpIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4pqg77iPIOivt+WFiOmFjee9rkFQSeWvhumSpeaJjeiDveS9v+eUqOiHquWKqOWbnuWkjeWKn+iDvScpOw0KICAgICAgICAgICAgICAgIFVJTWFuYWdlci50b2dnbGUoKTsgLy8g6Ieq5Yqo5pi+56S66YWN572u6Z2i5p2/DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC8vIOW7tui/n+iOt+WPluWFrOWRiu+8jOmBv+WFjeS4juWIneWni+WMluWGsueqgQ0KICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7DQogICAgICAgICAgICAgICAgU2VydmVyTWFuYWdlci5nZXRBbm5vdW5jZW1lbnRzKCk7DQogICAgICAgICAgICB9LCA1MDAwKTsNCg0KICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflupTnlKjliJ3lp4vljJblpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICB9DQogICAgfTsNCg0KICAgIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSAnbG9hZGluZycpIHsNCiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGluaXRBcHApOw0KICAgIH0gZWxzZSB7DQogICAgICAgIGluaXRBcHAoKTsNCiAgICB9DQoNCiAgICAvLyDlrprmnJ/mm7TmlrBVSeeKtuaAgeWSjOaAp+iDveebkeaOpw0KICAgIHNldEludGVydmFsKCgpID0+IHsNCiAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgIGlmIChVSU1hbmFnZXIuaXNWaXNpYmxlICYmIFVJTWFuYWdlci5wYW5lbCkgew0KICAgICAgICAgICAgICAgIFVJTWFuYWdlci51cGRhdGVVSSgpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAvLyDmr4/liIbpkp/orrDlvZXkuIDmrKHmgKfog73mlbDmja4NCiAgICAgICAgICAgIGlmIChEYXRlLm5vdygpICUgNjAwMDAgPCA1MDAwKSB7DQogICAgICAgICAgICAgICAgY29uc3QgcmVwb3J0ID0gUGVyZm9ybWFuY2VNb25pdG9yLmdldFJlcG9ydCgpOw0KICAgICAgICAgICAgICAgIExvZ2dlci5kZWJ1Zygn5oCn6IO95oql5ZGKJywgcmVwb3J0KTsNCg0KICAgICAgICAgICAgICAgIC8vIOWBpeW6t+WIhuaVsOi/h+S9juaXtuinpuWPkeiHquWKqOS/ruWkjQ0KICAgICAgICAgICAgICAgIGlmIChyZXBvcnQuaGVhbHRoU2NvcmUgPCA2MCkgew0KICAgICAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign57O757uf5YGl5bq35YiG5pWw6L+H5L2O77yM6Kem5Y+R6Ieq5Yqo5L+u5aSNJywgeyBoZWFsdGhTY29yZTogcmVwb3J0LmhlYWx0aFNjb3JlIH0pOw0KICAgICAgICAgICAgICAgICAgICBBdXRvUmVwYWlyU3lzdGVtLmRldGVjdEFuZFJlcGFpcigp",
        "Ow0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLy8g5q+PMzDnp5Lmo4DmtYvkuIDmrKHnvZHnu5zpl67popgNCiAgICAgICAgICAgIGlmIChEYXRlLm5vdygpICUgMzAwMDAgPCA1MDAwKSB7DQogICAgICAgICAgICAgICAgQXV0b1JlcGFpclN5c3RlbS5kZXRlY3RBbmRSZXBhaXIoKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgTG9nZ2VyLmVycm9yKCflrprmnJ/mm7TmlrDlpLHotKUnLCB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0pOw0KICAgICAgICB9DQogICAgfSwgNTAwMCk7DQoNCiAgICAvLyDpobXpnaLljbjovb3ml7bmuIXnkIYNCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignYmVmb3JldW5sb2FkJywgKCkgPT4gew0KICAgICAgICB0cnkgew0KICAgICAgICAgICAgaWYgKHdpbmRvdy5YSFNBdXRvUmVwbHkgJiYgd2luZG93LlhIU0F1dG9SZXBseS5pc1J1bm5pbmcpIHsNCiAgICAgICAgICAgICAgICB3aW5kb3cuWEhTQXV0b1JlcGx5LnN0b3AoKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIE1lc3NhZ2VMaXN0ZW5lci5zdG9wKCk7DQoNCiAgICAgICAgICAgIC8vIOa4heeQhuacjeWKoeerr+euoeeQhuWZqA0KICAgICAgICAgICAgU2VydmVyTWFuYWdlci5kZXN0cm95KCk7DQoNCiAgICAgICAgICAgIC8vIOa4heeQhlVJ6LWE5rqQDQogICAgICAgICAgICBpZiAoVUlNYW5hZ2VyLm1pbmlGbG9hdCkgew0KICAgICAgICAgICAgICAgIFVJTWFuYWdlci5yZW1vdmVNaW5pRmxvYXQoKTsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgTG9nZ2VyLmluZm8oJ+W6lOeUqOW3sua4heeQhicpOw0KICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgY29uc29sZS5lcnJvcign5riF55CG5aSx6LSlOicsIGVycm9yKTsNCiAgICAgICAgfQ0KICAgIH0pOw0KDQogICAgTG9nZ2VyLmluZm8oJ/CfmoAg5bCP57qi5LmmQUnoh6rliqjlm57lpI3lt6XlhbfohJrmnKzliqDovb3lrozmiJAnLCB7DQogICAgICAgIHZlcnNpb246IENPTkZJRy5WRVJTSU9OLA0KICAgICAgICBsb2FkVGltZTogRGF0ZS5ub3coKSAtIFBlcmZvcm1hbmNlTW9uaXRvci5zdGFydFRpbWUgKyAnbXMnLA0KICAgICAgICBmZWF0dXJlczogew0KICAgICAgICAgICAgbmV0d29ya01vbml0b3Jpbmc6IE5ldHdvcmtNb25pdG9yLmVuYWJsZWQsDQogICAgICAgICAgICBhdXRvUmVwYWlyOiB0cnVlLA0KICAgICAgICAgICAgY2hyb21lRXh0ZW5zaW9uQ29tcGF0aWJpbGl0eTogdHJ1ZSwNCiAgICAgICAgICAgIGFwaVdoaXRlbGlzdDogTmV0d29ya01vbml0b3IuYXBpV2hpdGVsaXN0Lmxlbmd0aCwNCiAgICAgICAgICAgIHNlcnZlckludGVncmF0aW9uOiBDT05GSUcuU0VSVkVSLmVuYWJsZWQsDQogICAgICAgICAgICBzZXJ2ZXJVcmw6IENPTkZJRy5TRVJWRVIuYmFzZVVybA0KICAgICAgICB9DQogICAgfSk7DQoNCiAgICAvLyDmiafooYzl",
        "kK/liqjlkI7nmoTns7vnu5/mo4Dmn6UNCiAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgdHJ5IHsNCiAgICAgICAgICAgIGNvbnN0IGRpYWdub3NpcyA9IE5ldHdvcmtNb25pdG9yLmRpYWdub3NlKCk7DQogICAgICAgICAgICBjb25zdCBoZWFsdGhTY29yZSA9IFBlcmZvcm1hbmNlTW9uaXRvci5jYWxjdWxhdGVIZWFsdGhTY29yZSgpOw0KDQogICAgICAgICAgICBMb2dnZXIuaW5mbygn8J+UjSDns7vnu5/lkK/liqjmo4Dmn6XlrozmiJAnLCB7DQogICAgICAgICAgICAgICAgbmV0d29ya1N0YXR1czogZGlhZ25vc2lzLnN0YXR1cywNCiAgICAgICAgICAgICAgICBoZWFsdGhTY29yZTogaGVhbHRoU2NvcmUsDQogICAgICAgICAgICAgICAgbmV0d29ya01vbml0b3JFbmFibGVkOiBOZXR3b3JrTW9uaXRvci5lbmFibGVkLA0KICAgICAgICAgICAgICAgIGF1dG9SZXBhaXJSZWFkeTogdHJ1ZQ0KICAgICAgICAgICAgfSk7DQoNCiAgICAgICAgICAgIC8vIOWmguaenOWBpeW6t+WIhuaVsOi/h+S9ju+8jOaPkOekuueUqOaItw0KICAgICAgICAgICAgaWYgKGhlYWx0aFNjb3JlIDwgNzApIHsNCiAgICAgICAgICAgICAgICBMb2dnZXIud2Fybign4pqg77iPIOezu+e7n+WBpeW6t+WIhuaVsOi+g+S9ju+8jOW7uuiurui/kOihjOiviuaWreajgOafpScsIHsNCiAgICAgICAgICAgICAgICAgICAgaGVhbHRoU2NvcmU6IGhlYWx0aFNjb3JlLA0KICAgICAgICAgICAgICAgICAgICBzdWdnZXN0aW9uOiAn5oyJIEN0cmwrU2hpZnQrWCDmiZPlvIDmjqfliLbpnaLmnb/vvIzngrnlh7si6aG16Z2i6K+K5patIuaMiemSricNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgIExvZ2dlci5lcnJvcign5ZCv5Yqo5qOA5p+l5aSx6LSlJywgeyBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTsNCiAgICAgICAgfQ0KICAgIH0sIDMwMDApOw0KDQp9KSgpOw0K"
    ];
    
    // 组装编码数据
    var encodedData = encodedChunks.join('');
    
    // 解码并执行
    try {
        console.log('🔓 开始UTF-8安全解码...');
        var decodedCode = _decode(encodedData);
        
        // 基本验证
        if (!decodedCode || decodedCode.length < 100) {
            throw new Error('解码失败或结果过短');
        }
        
        console.log('✅ UTF-8解码成功，代码长度:', decodedCode.length);
        
        // 验证中文字符是否正确
        if (decodedCode.indexOf('全局配置') > -1) {
            console.log('✅ 中文字符解码正确');
        } else {
            console.warn('⚠️ 中文字符可能解码异常');
        }
        
        // 检查代码开头
        var trimmedCode = decodedCode.trim();
        if (trimmedCode.startsWith('(function()')) {
            console.log('✅ 代码结构正确');
        } else {
            console.warn('⚠️ 代码结构异常，开头:', JSON.stringify(trimmedCode.substring(0, 50)));
        }
        
        // 执行代码
        eval(decodedCode);
        
        console.log('✅ 脚本执行成功');
        
    } catch(e) {
        console.error('❌ 脚本执行失败:', e);
        
        // 详细调试信息
        if (typeof decodedCode === 'string') {
            console.log('📊 解码结果统计:');
            console.log('  - 长度:', decodedCode.length);
            console.log('  - 前100字符:', JSON.stringify(decodedCode.substring(0, 100)));
            console.log('  - 后100字符:', JSON.stringify(decodedCode.substring(decodedCode.length - 100)));
            
            // 检查UTF-8字符
            var chineseChars = decodedCode.match(/[\u4e00-\u9fff]/g);
            if (chineseChars) {
                console.log('  - 中文字符数量:', chineseChars.length);
                console.log('  - 中文字符示例:', chineseChars.slice(0, 10));
            }
            
            // 尝试语法检查
            try {
                new Function(decodedCode);
                console.log('  - 语法检查: 通过');
            } catch(syntaxError) {
                console.log('  - 语法检查失败:', syntaxError.message);
            }
        }
    }
})();